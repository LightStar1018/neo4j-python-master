doi,title,abstract,publication_date
10.1007/s00236-012-0160-4,An algorithmic study of switch graphs,We derive a variety of results on the algorithmics of switch graphs. On the negative side we prove hardness of the following problems: Given a switch graph  does it possess a bipartite/planar/triangle-free/Eulerian configuration? On the positive side we design fast algorithms for several connectivity problems in undirected switch graphs  and for recognizing acyclic configurations in directed switch graphs.,2012-03-20
10.1007/s00236-007-0065-9,Management of interval probabilistic data,In this paper we present a data model for uncertain data  where uncertainty is represented using interval probabilities. The theory introduced in the paper can be applied to different specific data models  because the entire approach has been developed independently of the kind of manipulated objects  like XML documents  relational tuples  or other data types. As a consequence  our theory can be used to extend existing data models with the management of uncertainty. In particular  the data model we obtain as an application to XML data is the first proposal that combines XML  interval probabilities and a powerful query algebra with selection  projection  and cross product. The cross product operator is not based on assumptions of independence between XML trees from different collections. Being defined with a possible worlds semantics  our operators are proper extensions of their traditional counterparts  and reduce to them when there is no uncertainty. The main practical result of the paper is a set of equivalences that can be used to compare or rewrite algebraic queries on interval probabilistic data  in particular XML and relational.,2012-03-20
10.1007/s002360050129,Nonfinite axiomatizability of the equational theory of shuffle,"Abstract. We consider language structures 
${\bf L}_\Sigma = (P_\Sigma \cdot \otimes + 1 0)$  where 
$P_\Sigma$ consists of all subsets of the free monoid 
$\Sigma^*$; the binary operations 
$\cdot$  
$\otimes$ and 
$+$ are concatenation  shuffle product and union  respectively  and where the constant 0 is the empty set and the constant 1 is the singleton set containing the empty word. We show that the variety Lang generated by the structures 
${\bf L}_\Sigma$ has no finite axiomatization. In fact we establish a stronger result: The variety Lang has no finite axiomatization over the variety of ordered algebras 
${\bf Lg}_\leq$ generated by the structures 
$(P_\Sigma \cdot \otimes 1 \subseteq)$  where 
$\subseteq$ denotes set inclusion.",2013-03-20
10.1007/BF00292115,Optimal worst case trees,SummaryDesign and analysis of sorting and searching algorithms lead to the study of rooted trees with information stored either at the leaves or at all vertices. We consider the problem of minimising the maximum search cost when n items must be stored. Trees which achieve this minimum are almost regular and can usually be found in constant time. If regular trees are used  the maximum cost for a search is nearly best possible. If information is stored at all vertices  the root degree of large optimum trees take on one of two adjacent values  and both usually occur infinitely often for linear cost.,2020-03-20
10.1007/BF00289161,Continuous reductions among combinatorial optimization problems,SummaryMany reductions among combinatorial problems are known in the context of NP-completeness. These reductions preserve the optimality of solutions. However  they may change the “relative error” of approximative solutions dramatically. In this paper  we apply a new type of reductions  called continuous reductions. When one problem is continuously reduced to another  any approximation algorithm for the latter problem can be transformed into an approximation algorithm for the former. Moreover  the performance ratio is preserved up to a constant factor. We relate the problem “Minimum Number of Inverters in CMOS-Circuits”  which arises in the context of logic synthesis  to several “classical” combinatorial problems such as “Maximum Independent Set” and “Deletion of a Minimum Number of Vertices (Edges) in Order to Obtain a Bipartite (Partial) Subgraph”.,2011-03-20
10.1007/s002360050081,On the system of word equations xi1xi2…xim=yi1yi2…yin (i=1  2  …) in a free monoid,Abstract. It is proved that the system of word equations xi1=yi1yi2…yin  i=1  2 …  ⌈n/2⌉ +1  has only cyclic solutions. Some sharpenings concerning the cases n=5  7 and n≥9 are derived as well as results concerning the general system of equations xi1xi2…xim=yi1yi2…yin  i=1  2 … . Applications to test sets of certain bounded languages are considered.,2011-03-20
10.1007/s002360050155,Towards a theory of consistency enforcement,Abstract. State oriented specifications with invariants occur in almost all formal specification languages. Hence the problem is to prove the consistency of the specified operations with respect to the invariants. Whilst the problem seems to be easily solvable in predicative specifications  it usually requires sophisticated verification efforts  when specifications in the style of Dijkstra's guarded commands as e.g. in the specification language B are used. As an alternative consistency enforcement will be discussed in this paper. The basic idea is to replace inconsistent operations by new consistent ones preserving at the same time the intention of the old one. More precisely  this can be formalized by consistent spezializations  where specialization is a specific partial order on operations defined via predicate transformers. It will be shown that greatest consistent specializations (GCSs) always exist and are compatible with conjunctions of invariants. Then under certain mild restrictions the general construction of such GCSs is possible. Precisely  given the GCSs of simple basic assignments the GCS of a complex operation results from replacing involved assignments by their GCSs and the investigation of a guard. In general  GCS construction can be embedded in refinement calculi and therefore strengthens the systematic development of correct programs.,2017-03-20
10.1007/s00236-009-0096-5,The maximum gain of increasing the number of preemptions in multiprocessor scheduling,We consider the optimal makespan C(P  m  i) of an arbitrary set P of independent jobs scheduled with i preemptions on a multiprocessor with m identical processors. We compare the ratio for such makespans for i and j preemptions  respectively  where i < j. This ratio depends on P  but we are interested in the P that maximizes this ratio  i.e. we calculate a formula for the worst case ratio G(m  i  j) defined as $${G(m i j)=\max \frac{C(P m i)}{C(P m j)} }$$ where the maximum is taken over all sets P of independent jobs.,2018-03-20
10.1007/s00236-008-0072-5,Applying relation algebra and RelView to solve problems on orders and lattices,Relation algebra is well suited for dealing with many problems on ordered sets. Introducing lattices via order relations  this suggests to apply it and tools for its mechanization for lattice-theoretical problems  too. We combine relation algebra and the BDD-based specific purpose Computer Algebra system RelView to solve some algorithmic problems on orders and lattices and to visualize their solutions.,2017-03-20
10.1007/BF00264291,The programming language pascal,SummaryA programming language called Pascal is described which was developed on the basis ofAlgol 60. Compared toAlgol 60  its range of applicability is considerably increased due to a variety of data structuring facilities. In view of its intended usage both as a convenient basis to teach programming and as an efficient tool to write large programs  emphasis was placed on keeping the number of fundamental concepts reasonably small  on a simple and systematic language structure  and on efficient implementability. A one-pass compiler has been constructed for the CDC 6000 computer family; it is expressed entirely in terms of Pascal itself.,2017-03-20
10.1007/BF00289311,Best Huffman trees,SummaryGiven a sequence of positive weights  W=w1≧...≧wn>0  there is a Huffman tree  T↑ (“T-up”) which minimizes the following functions: max{d(wi)}; Σd(wi); Σf(d(wi)) wi(here d(wi) represents the distance of a leaf of weight wi to the root and f is a function defined for nonnegative integers having the property that g(x) = f(x + 1) − f(x) is monotone increasing) over the set of all trees for W having minimal expected length. Minimizing the first two functions was first done by Schwartz [5]. In the case of codes where W is a sequence of probabilities  this implies that the codes based on T↑ have all their absolute central moments minimal. In particular  they are the least variance codes which were also described by Kou [3]. Furthermore  there exists a Huffman tree T↓  (“T-down”) which maximizes the functions considered above.However  if g(x) is monotone decreasing  T↑ and T↓  respectively maximize and minimize Σf(d(wi) wi) over the set of all trees for W having minimal expected length. In addition  we derive a number of interesting results about the distribution of labels within Huffman trees. By suitable modifications of the usual Huffman tree construction  (see [1]) T↑ and T↓ can also be constructed in time O(n log n).,2018-03-20
10.1007/BF00288961,A fast algorithm for Steiner trees,SummaryGiven an undirected distance graph G=(V  E  d) and a set S  where V is the set of vertices in G  E is the set of edges in G  d is a distance function which maps E into the set of nonnegative numbers and S⊑V is a subset of the vertices of V  the Steiner tree problem is to find a tree of G that spans S with minimal total distance on its edges. In this paper  we analyze a heuristic algorithm for the Steiner tree problem. The heuristic algorithm has a worst case time complexity of O(¦S¦¦V¦2) on a random access computer and it guarantees to output a tree that spans S with total distance on its edges no more than 2(1−1/l) times that of the optimal tree  where l is the number of leaves in the optimal tree.,2011-03-20
10.1007/BF00267044,On the algebraic specification of infinite objects — ordered and continuous models of algebraic types,SummaryThe concept of algebraic types is adapted to allow axiomatic characterizations of ordered and continuous algebras; infinite objects are then limit points in the carriers of certain continuous algebras. We mainly study implicative types  i.e.  types the axioms of which are conditional inequations describing partial orders. The isomorphism classes of termgenerated ordered models of an implicative type are shown to form a complete lattice under the homomorphism ordering; this includes the wellknown initiality results for equational and conditional types as special cases. For types whose axioms specify strictness of the operations  the initial models are shown to correspond to flat domains.As a special kind of continuous algebras we consider inductively generated algebras  viz. the ideal completions of term-generated ordered algebras. For an inequational type  i.e.  an implicative type where all axiom premises are empty  the completion of models always yields models again  whereas for implicative types this holds only in restricted cases. One such case is provided by hierarchic types which are complete and consistent relative to their primitive parts  and which satisfy certain conditions about limit points.Examples of algebras that can be specified by such types include those of finite and infinite streams  of sets of atoms under the Egli-Milner ordering  Milner's synchronisation trees  and that of a simple functional language over the natural numbers.,2011-03-20
10.1007/BF01178920,Object inheritance beyond subtyping,A categorial semantic domain for objects is presented in order to clarify both aggregation and specialization. Three kinds of specialization are discussed: (1) subtyping (specialization with no side effects and no non-monotonic overriding); (2) monotonic specialization (possibly with side effects but still only with monotonic overriding); and (3) non-monotonic specialization (possibly with side effects and non-monotonic overriding). A sequence of three categories of objects differing only in the morphisms is presented. The first one is used to explain object aggregation (respecting locality through a frame constraint) and the strictest form of specialization (subtyping). The second category is shown to be adequate for explaining specialization with side effects (by relaxing the frame constraint). Finally  the third category supports also non-monotonic overriding  by adopting as morphisms suitable partial morphisms of the second one. All these categories are complete and cocomplete. Colimits are used for explaining the semantics of aggregation and multiple inheritance.,2013-03-20
10.1007/BF00263577,Rational index of Vector Addition Systems languages,SummaryThe rational index ρL of a non-empty language L is a function of ℕ into ℕ  whose asymptotic behavior can be used to classify languages. We prove that the languages associated to Vector Addition System or Petri nets have rational indexes bounded by polynomials. This situation should be contrasted with the case of context-free languages. Indeed some context-free languages like the Greibach's languages have rational indexes bounded by polynomials. But some other context-free languages have rational indexes in exp Θ n and the generators of the rational cone of context-free languages have rational indexes in exp Θ n2/ln n. We give an upper bound and a lower bound on the rational index of each term of an infinite sequence of V.A.S. languages  such that any V.A.S. language can be obtained as the image by a rational transduction of one of these languages.,2015-03-20
10.1007/s00236-009-0091-x,A theory of structural stationarity in the π-Calculus,Automata-theoretic representations have proven useful in the automatic and exact analysis of computing systems. We propose a new semantical mapping of π-Calculus processes into place/transition Petri nets. Our translation exploits the connections created by restricted names and can yield finite nets even for processes with unbounded name and unbounded process creation. The property of structural stationarity characterises the processes mapped to finite nets. We provide exact conditions for structural stationarity using novel characteristic functions. As application of the theory  we identify a rich syntactic class of structurally stationary processes  called finite handler processes. Our Petri net translation facilitates the automatic verification of a case study modelled in this class.,2015-03-20
10.1007/s00236-015-0247-9,Optimal covers in the relational database model,The problem of finding an optimal cover which has possible fewest attributes is NP-complete. It is shown here that an optimal cover can be found  using the notion of mini cover. The minimum Boolean expression of the first Delobel–Casey transform of a set of functional dependencies can be converted into corresponding mini cover  refining classic canonical cover. The relationship between optimal cover and Boolean expression minimization is built  and all theory of Boolean expression minimization can be used to find an optimal cover.,2017-03-20
10.1007/BF00290735,A lower time bound for the knapsack problem on random access machines,SummaryWe consider random access machines which read the input integer by integer (not bit by bit). For this computational model we prove a quadratic lower bound for the n-dimensional knapsack problem. For this purpose  we combine a method due to Paul and Simon [1] to apply decision tree arguments to random access machines (with indirect storage access!) and a method due to Dobkin and Lipton [2] who proved the same lower bound for linear decision trees.,2020-03-20
10.1007/BF01191722,Models for reactivity,A hierarchy of models that capture realistic aspects of reactive  real-time  and hybrid systems is introduced. On the most abstract level  the qualitative (non-quantitative) model ofreactive systems captures the temporal precedence aspect of time. A more refined model is that ofreal-time systems  which represents the metric aspect of time. The third and most detailed model is that ofhybrid systems  which allows the incorporation ofcontinuous components into a reactive system.For each of the three levels  we present a computational model  a requirement specification language based on extensions of temporal logic  system description languages based on Statecharts and a textual programming language  proof rules for proving validity of properties  and examples of such proofs.,2011-03-20
10.1007/BF00288535,Applications of efficient mergeable heaps for optimization problems on trees,SummaryIt is shown how to use efficient mergeable heaps to improve the running time of two algorithms that solve optimization problems on trees.,2020-03-20
10.1007/s00236-007-0058-8,Optimal semi-online algorithms for preemptive scheduling problems with inexact partial information,In semi-online scheduling problems  we always assume that some partial additional information is exactly known in advance. This may not be true in some application. This paper considers semi-online problems on identical machines with inexact partial information. Three problems are considered  where we know in advance that the optimal value  or the largest job size are in given intervals  respectively  while their exact values are unknown. We give both lower bounds of the problems and competitive ratios of algorithms as functions of a so-called disturbance parameter r ∈[1  ∞). We establish for which r the inexact partial information is useful to improve the performance of a semi-online algorithm with respect to its pure online problem. Optimal preemptive semi-online algorithms are then obtained.,2014-03-20
10.1007/BF00289511,Bounds on algorithms for string generation,SummaryThe well-known lower bound of log2n! on the number of comparisons required to sort n items is extended to cover algorithms  such as replacement selection  which produce a sorted string whose length is a random variable. The case of algorithms which produce several strings is also discussed and these results are then applied to obtain an upper bound on the length of strings produced by a class of string generation algorithms.,2014-03-20
10.1007/BF00289411,Two-symbol DOS systems generating regular languages,SummaryWe prove that it is decidable whether a two-symbol DOS system generates a regular language.,2020-03-20
10.1007/BF01177745,Efficient algorithms for checking the atomicity of a run of read and write operations,LetX1 ... Xc be variables shared by a number of processorsP1 ... Pq that operate in a totally asynchronous and wait-free manner. An operation by a processor is either a write to one of the variables or a read of the values ofall variables. Operations arenot assumed to be instantaneous and may arbitrarily overlap in time. A succession of possibly overlapping operationsa1 ... an (i.e.  a run) is said to be atomic  if these operations can be serialized in a way compatible with any existing precedences among them and so that any read operation returns for each variable the value of the most recent — with respect to the serialization — write operation on this variable. This paper examines the complexity of the combinatorial problem of testing a run for atomicity. First  it is pointed out that when there is only one shared variable or when only one processor is allowed to write to each variable  known theorems lead to polynomial-time algorithms for checking the atomicity of a run (the variable of the time-complexity function is the number of operations in the run). It is then proved that checking atomicity has polynomial-time complexity in the general case of more than one variables and with all processors allowed to read and write each variable. For the proof  the atomicity problem is reduced to the problem of consecutive 1s in matrices. The reduction entails showing a combinatorial result that might be interesting on its own.,2014-03-20
10.1007/BF00289577,Finite state relational programs,SummaryWe introduce a new class of programs  called Finite Relational Linear Programs (FRLP)  capable of modeling simple data processing applications. We analyze these programs with respect to tradeoffs between features they possess including the problems of equivalence and optimization. Algorithmic solutions are given to the two latter problems and others. Extensions are discussed in which a (part of) algorithmic solvability is lost. A unifying concept for this and previous work is presented.,2014-03-20
10.1007/s00236-008-0082-3,On decidability of LTL model checking for process rewrite systems,"AbstractWe establish a decidability boundary of the model checking problem for infinite-state
systems defined by Process Rewrite Systems (PRS) or weakly extended Process Rewrite Systems (wPRS)  and properties described by basic fragments of action-based Linear Temporal Logic (LTL) with both future and past operators. It is known that the problem for general LTL properties is decidable for Petri nets and for pushdown processes  while it is undecidable for PA processes.We show that the problem is decidable for wPRS if we consider properties defined by LTL formulae with only modalities strict eventually  strict always  and their past counterparts. Moreover  we show that the problem remains undecidable for PA processes even with respect to the LTL fragment with the only modality until or the fragment with modalities next and infinitely often.",2011-03-20
10.1007/s00236-014-0212-z,Letter from the Managing Editor,In June 2000 a meeting took place in the grand old building of the Technical University of Munich between Manfred Broy  Managing Editor of Acta Informatica since 1982  Hans Wossner from Springer-Verlag  and myself. We agreed that from August 2000 onward  I would take over the task of being the Managing Editor of Acta Informatica from Manfred Broy. It was of course an exciting and partially unknown task for me. A continuous stream of submissions from various topics had to be directed to suitable reviewers or other members of the Editorial Board in order to be evaluated for their quality. Finally  the positive or negative decisions had to be communicated to the authors. From the beginning I have been nicely supported by my secretary Andrea Goken  who held the initial contact to authors upon submission  kept files of all submissions  and contacted the production department of Springer-Verlag once the papers were accepted. I thank her very much! Hans Wossner and later Alfred Hofmann from Springer-Verlag kindly helped to arrange high-level organisational issues. Also  our cooperation with the production department  at first in Heidelberg and later in India  went very smooth throughout all these years inspite of changing contact persons. The quality of the papers was always the guiding principle in all our decisions. The active members of the Editorial Board helped a lot in shaping the profile of Acta Informatica  reflecting their varied research interests. Many thanks for their continuing support! Of course  nothing would have been achieved without the voluntary work of so many reviewers. Their names are acknowledged in the last issue of each Acta volume. I am pleased to say that Acta Informatica stays in demand for authors despite many competing publication venues. It is their high-quality contributions that have made up each of the Acta issues over the years. However  since I have been increasingsly called upon to take up other duties  I have decided that after 14years in office it is time for me to step down from my post as Managing Editor by the end of 2014. I shall stay on as ordinary member of the Editorial Board.,2018-03-20
10.1007/s002360050003,Accepting Zeno words: a way toward timed refinements,Abstract. Timed models were introduced to describe the behaviors of real-time systems and they were usually required to produce only executions with divergent sequences of times. However  when some physical phenomena are represented by convergent executions  Zeno words appear in a natural way. Moreover  time can progress if such an infinite execution can be followed by other ones.Therefore  in a first part  we extend the definition of timed automata  allowing to generate sequences of infinite convergent executions  while keeping good properties for the verification of systems: emptiness is still decidable.In a second part  we define a new notion of refinement for timed systems  in which actions are replaced by recognizable Zeno (timed) languages. We study the properties of these timed refinements and we prove that the class of transfinite timed languages is the closure of the usual one (languages accepted by Muller or Büchi timed automata) under refinement.,2015-03-20
10.1007/BF00263195,An alternative implementation of an insertion-only recovery technique,SummaryIn an earlier paper [7] Fischer  Milton and Quiring developed algorithms for insertion-only error recovery. In related work [3] a simple factorisation lemma for error repairs was developed; by applying this lemma to the work of Fischer  Milton and Quiring their implementation is simplified and storage requirements reduced though there may be a small penalty in the execution time of the algorithm. In addition some flaws in their theoretical analyses are corrected and an alternative to the “immediate error detection property” is proposed.,2017-03-20
10.1007/BF01210597,Infinitary parallelism without unbounded nondeterminism in CSP,The theory of CSP is extended to include an infinitary parallel composition operator. The presence of such an operator allows us to write programs where infinitely many agents compute concurrently. We show that this operator can be modelled within the failures-divergences model of Brookes and Roscoe. The operator is continuous in each of its arguments  and in fact preserves the limits of almost all chains in the infinitary product c.p.o. We also demonstrate that this operator adds to the expressive power of CSP. A comparison of this operator with that defined by Barrett [1] is also provided.,2014-03-20
10.1007/s002360050074,"Decidability of model checking for infinite-state concurrent systems 
",Abstract.We study the decidability of the model checking problem for linear and branching time logics  and two models of concurrent computation  namely Petri nets and Basic Parallel Processes.,2019-03-20
10.1007/BF00289413,On the semantics of polymorphism,SummaryA semantic characterization is given of the terms of a simple applicative language which it can be assigned a (monomorphic or polymorphic) type. Moreover a strong completeness result is proved for a (nontrivial) subset of terms (corresponding to the normal forms of a lambda-calculus plus constants). Completeness does not hold in general.,2014-03-20
10.1007/BF00289146,Expected behaviour of B+-trees under random insertions,SummaryFringe analysis is used to study the behaviour of B+-trees (B-trees where all the records are stored in the leaves) under random insertions. We obtain bounds for the expected memory utilization and the expected number of accesses to secondary memory per insertion of trees built using the usual insertion algorithm  the B* overflow handling technique  and other techniques derived from the latter. Several other performance measures are also derived  such as bounds for the number of index nodes  the expected height  the expected number of splits per insertion  and the probabilities of 0  1 and 2 or more splits per insertion. Special emphasis is placed on 2–3 trees. A technique for concurrency in B+-trees is also analyzed.,2013-03-20
10.1007/BF00288964,Hex ist PSPACE-vollständig,SummaryThere are a number of board games such as Checkers [2]  Go [5]  and Gobang [8]  which are known to be PSPACE-hard. This means that the problem to determine the player having a winning strategy in a given situation on an n×n board of one of these games is as hard to solve as everything computable in polynomial space. PSPACE-completeness has been previously proven for some combinatorial games played on graphs or by logical formulas [1  9].In this paper we will show that the same holds for the game of Hex. The crucial point of the proof is to establish PSPACE-hardness for a generalization of Hex played on planar graphs. This will be done by showing that the problem  whether a given quantified Boolean formula in conjunctive normal form is true  is polynomial time-reducible to the decision problem for generalized Hex. In order to do this we will use methods  which were also used to prove PSPACE-completeness of planar Geography in [5]. Therefore our proof is quite different from the proof provided by Even and Tarjan [1]  who showed PSPACE-completeness of generalized Hex played on arbitrary graphs. Since it is easy to see that the decision problem for Hex is in PS PACE  the decision problem for Hex is PSPACE-complete.,2013-03-20
10.1007/BF00288934,A model of a time sharing virtual memory system solved using equivalence and decomposition methods,SummaryA queueing network model of a time-sharing multiprogramming virtual memory system is presented including the effect of memory sharing among processes. An approximate explicit solution is obtained using equivalence and decomposition methods.The influence of system and program behaviour parameters on system performance (mean response time and CPU utilization) is illustrated in the results obtained. The efficiency of controlling the degree of multiprogramming in order to prevent thrashing is also studied using a similar model.,2013-03-20
10.1007/BF00283329,Toward formal development of programs from algebraic specifications: Implementations revisited,SummaryThe program development process is viewed as a sequence of implementation steps leading from a specification to a program. Based on an elementary notion of refinement  two notions of implementation are studied: constructor implementations which involve a construction “on top of” the implementing specification  and abstractor implementations which additionally provide for abstraction from some details of the implemented specification. These subsume most formal notions of implementation in the literature. Both kinds of implementations satisfy a vertical composition and a (modified) horizontal composition property. All the definitions and results are shown to generalise to the framework of an arbitrary institution  and a way of changing institutions during the implementation process is introduced. All this is illustrated by means of simple concrete examples.,2013-03-20
10.1007/BF00289114,Constructing maximal slicings from geometry,SummaryWe present an optimal algorithm to determine whether a placement of N isothetic non-overlapping rectangles (macros) can be represented by a slicing tree  and if so  to find a representation of minimal height. A slicing is a recursive partition of the overall bounding rectangle  by straight horizontal or vertical cuts  into rectangular regions  each one containing exactly one macro. The algorithm first determines a representation of the empty space of the placement by means of maximally extended horizontal and vertical channels. A second phase then generates a maximal slicing tree (an ordered tree with unbounded degree and maximal branching  i.e.  minimal height) in a top-down fashion. The complexity of each phase is O(N log N). The problem arises in steps (1) and (2) of our top-down approach to VLSI custom chip design  which consists of (1) floorplanning by slicing  (2) hierarchicial global wiring  and (3) detailed layout of macros.,2013-03-20
10.1007/BF00264614,Simulation output analysis for local area computer networks,SummaryThis paper develops discrete event simulation methods for local area computer networks. We restrict attention to local network simulations with an underlying stochastic process that can be represented as a generalized semi-Markov process. Using a “geometric trials” criterion for recurrence  we establish a regenerative process structure for passage times in this setting. This leads to an estimation procedure for delay characteristics of ring and bus networks.,2017-03-20
10.1007/BF00263579,Analytic models for the primary site approach to fault-tolerance,SummaryA common approach for supporting fault tolerance against node failures is the primary site approach. In this approach the service to be made fault-tolerant is replicated at many nodes  one of which is designated as primary and the others as backups. All the requests for the service are sent to the primary site. The primary site periodically checkpoints its state on the backups. If the primary fails  one of the backups takes over as primary  and to maintain consistency  it first re-executes all the requests performed by the previous primary since the last checkpoint. Two important issues that effect performance of this approach are the frequency of checkpointing and the degree of replication of the service. If the checkpointing interval is decreased the overhead of reexecuting old requests decreases  but the overhead for checkpointing increases. If the degree of replication increases  on the one hand  the availability of the system for user services increases since the reliability of the system increases. On the other hand  the checkpointing time increases  which reduces the availability of the system. In this paper  we present an analytic model to study the optimum checkpointing interval  and a queuing model to study the optimum degree of replication for a service in a primary site system. The reliability of a primary site system is also studied.,2013-03-20
10.1007/BF00290730,Three measures for synchronic dependence in Petri nets,SummaryThree notions of distance for measuring the synchronic dependence of transition firings in Petri nets are studied. For the first two notions we present algorithms for obtaining a basis of the linear space of weight vectors for which the distance is finite  and methods for computing the distance for any given weight vector by examining a finite set of vectors obtained a priori. For the third notion of distance  the problem of deciding whether a given weight vector yields a finite distance is shown to be equivalent to the reachability problem. Finally it is shown that a basis of the linear space of weight vectors for which the weighted sum of token counts is bounded over all reachable markings can be obtained effectively. Also some complexity results are given.,2020-03-20
10.1007/BF00289044,Functional behavior in data spaces,SummaryIn order to verify that a nondeterministic sequential program is partially correct it is sufficient to establish the conjunction of two constituent properties: “weak” partial correctness and functional  that is reproducible  behavior. It is possible to continue this divide-and-conquer strategy for the concept of functional behavior. If the nondeterministic sequential program is derived from a set of interacting parallel processes then the functional behavior of the former can be expressed in terms of two weaker complementary properties of the latter: weak functional behavior and input/output liveness. The only remaining issue is input/output dependability: the absence of input/output livelock. The theoretical framework of data spaces is used to derive closure theorems for these constituent properties. For instance  it is shown that a system of weakly functional processes is again weakly functional.,2018-03-20
10.1007/BF00268138,A model of a virtual memory system,SummaryWe present a queueing network model of a virtual memory computer system including the effect of memory sharing among processes. Page fault and file request system overheads are explicitly taken into account. The fact that some memory pages have to be saved in the secondary memory at the moment of a page fault  is also taken into consideration. We obtain an approximate solution using an equivalence and decomposition approach. The effect of system and program behavior parameters (primary memory size  drum and disk characteristics  program locality  input-output rates and different pages ratios) as well as that of the total number of processes  are examined for two different system organizations. In the first one  all the processes share real core; in the second  processes having issued a file request lose their memory space until the I/O is performed.,2013-03-20
10.1007/BF00289062,The ‘Hoare logic’ of concurrent programs,SummaryHoare's logical system for specifying and proving partial correctness properties of sequential programs is generalized to concurrent programs. The basic idea is to define the assertion {P} S {Q} to mean that if execution is begun anywhere in S with P true  then P will remain true until S terminates  and Q will be true if and when S terminates. The predicates P and Q may depend upon program control locations as well as upon the values of variables. A system of inference rules and axiom schemas is given  and a formal correctness proof for a simple program is outlined. We show that by specifying certain requirements for the unimplemented parts  correctness properties can be proved without completely implementing the program. The relation to Pnueli's temporal logic formalism is also discussed.,2016-03-20
10.1007/s00236-004-0140-4,Trajectory-based codes,Abstract.The notion of shuffle on trajectories is a natural generalization of many word operations considered in the literature. For a set of trajectories T  we define the notion of a T-code and examine its properties. Particular instances of T-codes are prefix-  suffix-  infix-  outfix- and hyper-codes  as well as other classes studied in the literature.,2015-03-20
10.1007/BF00263745,Inherently nonplanar automata,SummaryIt is shown that for every finite-state automaton there exists an equivalent nondeterministic automaton with a planar state graph. However there exist finite-state automata with no equivalent deterministic automaton with a planar state graph.,2014-03-20
10.1007/BF00264015,Formal derivation of strongly correct concurrent programs,SummaryA method is described for deriving concurrent programs which are consistent with the problem specifications and free from deadlock and from starvation. The programs considered are expressed by nondeterministic repetitive selections of pairs of synchronizing conditions and subsequent actions. An iterative  convergent calculus is developed for synthesizing the invariant and synchronizing conditions which guarantee strong correctness. These conditions are constructed as limits of recurrences associated with the specifications and the actions. An alternative method for deriving starvationfree programs by use of auxiliary variables is also given. The applicability of the techniques presented is discussed through various examples; their use for verification purposes is illustrated as well.,2013-03-20
10.1007/BF00264294,General predicate transformer and the semantics of a programming language with go to statement,SummaryDijkstra's predicate transformer for specifying the semantics of guarded commands set and proving the total correcness of a program is generalized to a programming language with the go to statement. The concept of general predicate transformer and its properties are introduced. We explore the approach of proving the correctness — preserving property of some common program transformations that are used in the compiling process.,2020-03-20
10.1007/BF00276183,Extended directed graphs  a formalism for structured data and data structures,SummaryThis paper concerns the problem of definition and description of structured data. A formalism based on the notion of the extended directed graph is developed. Operations and data structure classes are defined. Properties of data structures are studied; in particular  the definition of a data structure by means of its operations is investigated.,2018-03-20
10.1007/s00236-008-0074-3,The fibers and range of reduction graphs in ciliates,The biological process of gene assembly transforms a nucleus (the MIC) into a functionally and physically different nucleus (the MAC). For each gene in the MIC (the input)  recombination operations transform the gene to its MAC form (the output). Here we characterize which inputs obtain the same output  and moreover characterize the possible forms of the outputs. We do this in the abstract and more general setting of so-called legal strings.,2015-03-20
10.1007/BF01185565,Expressibility of output equals input,We examine the common and seemingly simple specification that the output stream equals the input stream. We show that this is not in full generality expressible in first-order or temporal logic by an infinite set of sentences or a recursive specification  but requires certain extra assumptions  such as the existence of a clock or discrete input values.The main negative results are stated for first-order expressibility and have direct corollaries for inexpressibility in first-order temporal logic: output equals input with arbitrary delay is not expressible by a (perhaps infinite) theory (Theorems 2 and 3)  even with a timestamp (Theorem 8)  and is not expressible for an ω timeline by a sentence  even with a timestamp (Theorem 10). Output equals input with constant delay cannot be expressed for ω timeline by a sentence with extra unary predicates over the timeline.As an example of the positive results  we show output equals input can be expressed by a sentence in the language with a (weak) clock if the base model contains either an extra function (Theorem 14)  or arithmetic (Theorem 15).,2020-03-20
10.1007/BF02983373,Proof theory for exception handling in a tasking environment,SummaryIn this paper  we develop a syntax-directed proof system for a fragment of Ada consisting of the essential features of tasking and exception handling. The proof system is based on a correctness formula for therobust specification of single-entry-multiple-exit structures that provides a unified framework for exception handling mechanisms in the presence of nondeterminism  concurrency and communication. The proof system uses the technique ofco-operating proofs  which was developed for proving the correctness of communicating sequential processes [AFD80] and extended to a concurrent fragment of Ada in [GD84]. We build upon the latter. The soundness and completeness are established formally in [Lod87]. The proof rules are structured so that exceptions can be used as a structured escape mechanism in accordance with the design objectives of Ada. Examples are given to show how the rules highlight the annotation required for establishing the robustness of Ada programs.,2012-03-20
10.1007/BF01191723,Querying datalog programs with temporal logic,Temporal logic queries on Datalog and negated Datalog programs are studied  and their relationship to Datalog queries on these programs is explored. It is shown that  in general  temporal logic queries have more expressive power than Datalog queries on Datalog and negated Datalog programs. It is also shown that anexistential domain-independent fragment of temporal logic queries has the same expressive power as Datalog queries on negated Datalog programs with inflationary semantics. This means that for finite structures this class of queries has the power of the fixpoint logic.,2014-03-20
10.1007/s00236-002-0097-0,Gray visiting Motzkins,Abstract. We present the first Gray code for Motzkin words and their generalizations: k colored Motzkin words and Schröder words. The construction of these Gray codes is based on the observation that a k colored Motzkin word is the shuffle of a Dyck word by a k-ary variation on a trajectory which is a combination. In the final part of the paper we give some algorithmic considerations and other possible applications of the techniques introduced here.,2015-03-20
10.1007/BF00288533,Variance reduction techniques for the simulation of Markov process,"AbstractLet Xn  n≧0 be an irreducible  aperiodic  Markov chain with finite state space E  transition matrix P  and stationary distribution π. Let f be a real valued function on E and define r = πf. A method of reducing the variance of simulation estimates for r is presented. The method combines the techniques of numerical analysis and simulation by partially solving an appropriate system of linear equations using some matrix iterative procedure and then estimating the difference between the true and partial solutions via simulation. After k iterations of the iterative procedure  functions fν ν = 0  ...  k are defined so that r = πfgn for each ν. Let 
$$\hat x_v (N) = \sum\limits_{n = 0}^N {f_v (x_n )/(N + 1)} $$
 and 
$$\hat x_\beta (N) = \sum\limits_{v = 0}^k {\beta (v)\hat x_v (N)} $$
 where 
$$\sum\limits_{v = 0}^k {\beta (v) = 1} $$
. Then 
$$\hat x_\beta (N) \to r$$
 a.s. as N → ∞ and β is chosen to minimize the asymptotic variance of 
$$\hat x_\beta (N)$$
. Numerical results for a simple queueing model are presented.",2015-03-20
10.1007/BF00271640,A fair calculus of communicating systems,SummaryIn this paper we are concerned with an operational approach to fairness  the problem of defining and generating the fair execution sequences of a concurrent language. One solution invokes two semantic levels: one level (the positive) prescribes the finite and infinite execution sequences without regard to their fairness while the other (the negative) filters out the unfair ones. The first level is given as a set of generative rules whereas the second is encoded as a definition of fair execution sequence. Entirely positive approaches have been proposed which appeal to random assignment. Here we offer an alternative positive approach for a subset of Milner's CCS. We show that rules can be given for generating just the fair sequences which avoid random assignment.,2018-03-20
10.1007/BF00259471,Proving relative lower bounds for incremental algorithms,SummaryA general method that permits simple proofs of relative lower bounds for incremental update algorithms is presented. This method is applied to classify functions by relative lower bounds. We demonstrate our technique by bounding a number of incremental algorithms drawn from various domains. The method described expands upon work by Paull  Berman  and Cheng [PCB] and generalizes a result of Even and Gazit [EG]. Our results have interesting implications with respect to the optimality of an incremental algorithm previously developed by Ryder in [R  RP2]. Perhaps most importantly  the proof method and function classification suggest which types of problems are likely to yield good incremental algorithms (i.e.  of lower complexity) and which cannot be improved by an incremental approach.,2015-03-20
10.1007/BF00264357,Recognition and selection of idioms for code optimization,SummaryIdioms are frequently occurring expressions that programmers use for logically primitive operations for which no primitive construct is available in the language. For example  in ALGOL-60 the expression abs(X − X ÷ 2 × 2) is idiomatic for parity of X. With optimization as a motive  two problems  idiom recognition and selection  are defined. Recognition is solved in O(n log n) time (worst case)  O(n) time (average case) on a uniform cost RAM. Selection is solved in O(n) time. Ambiguity is solved in O(n2) time and is related to resolution theorem proving.,2012-03-20
10.1007/BF01178684,Postorder trees and Eulerian numbers,Binary search trees built from the postorder traversal sequence of other binary search trees are characterized in terms of their binary tree structure. A connection is established between this structure and the Eulerian numbers. This yields considerable information concerning the “average” binary search tree with a given number of nodes. Periodicity is established for the process of repeatedly taking postorder sequences and building binary search trees. Finally  the average depth of a node in a postorder tree withn nodes is determined.,2017-03-20
10.1007/BF00289591,A characterization of context-free string languages by directed node-label controlled graph grammars,SummaryDirected node-label controlled graph grammars (DNLC grammars) are sequential graph rewriting systems. In a direct derivation step of a DNLC grammar a single node is rewritten. Both the rewriting of a node and the embedding of a “daughter graph” in a “host graph” are controlled by the labels of nodes only. We study the use of those grammars to define string languages. In particular we provide a characterization of the class of context-free string languages in terms of DNLC grammars.,2020-03-20
10.1007/BF00265220,Probabilistic models of computer systems—Part I (exact results),SummaryThis paper is a survey of certain known results concerning networks of queues. The choice of the topics presented has been made with special emphasis on mathematical results which can be applied to the analysis and synthesis of mathematical or simulation models of complex computer systems in which an ensemble of resources is shared among a set of user programs. The subjects covered include the Jackson  and Gordon and Newell theorems; the work-rate theorems of Chang  Lavenberg and Traiger; the Baskett  Chandy  Muntz  Palacios results. We also discuss in a unified manner problems related to Poisson processes in queueing networks. Companion papers (Parts II  III) will present results concerning approximations to queueing networks and some of their applications to computer system performance evaluation.,2016-03-20
10.1007/BF00260922,The algebraic specification of abstract data types,SummaryThere have been many recent proposals for embedding abstract data types in programming languages. In order to reason about programs using abstract data types  it is desirable to specify their properties at an abstract level  independent of any particular implementation. This paper presents an algebraic technique for such specifications  develops some of the formal properties of the technique  and shows that these provide useful guidelines for the construction of adequate specifications.,2011-03-20
10.1007/BF01185406,Parallel integer sorting using small operations,We consider the problem of sortingn integers in the range [0 nc-1]  wherec is a constant. It has been shown by Rajasekaran and Sen [14] that this problem can be solved “optimally” inO(logn) steps on an EREW PRAM withO(n) n∈-bit operations  for any constant ∈>O. Though the number of operations is optimal  each operation is very large. In this paper  we show thatn integers in the range [0 nc-1] can be sorted inO(logn) time withO(nlogn)O(1)-bit operations andO(n) O(logn)-bit operations. The model used is a non-standard variant of an EREW PRAMtthat permits processors to have word-sizes ofO(1)-bits and Θ(logn)-bits. Clearly  the speed of the proposed algorithm is optimal. Considering that the input to the problem consists ofO (n logn) bits  the proposed algorithm performs an optimal amount of work  measured at the bit level.,2014-03-20
10.1007/BF01237234,Properties of data flow frameworks,SummaryA comprehensive overview of data flow frameworks and their characterizing properties is presented  to clarify property definitions and demonstrate their interrelation. Properties ensuring the existence of a solution are differentiated from those guaranteeing particular convergence behavior for specific solution procedures. Examples illustrate the orthogonality of these precision and convergence properties. In addition  several data flow problems are categorized with respect to these properties.,2016-03-20
10.1007/s002360050089,"Implementing Daubechies wavelet transform with weighted finite automata
","Abstract.We show that the compactly supported wavelet functions 
$W_2  W_4  W_6  \ldots$ discovered by Daubechies [6] can be computed by weighted finite automata (WFA) introduced by Culik and Karhumäki [2]. Furthermore  for 1-D case  a fixed WFA with 
$2^n + n(N-2)$ states can implement any linear combination of dilations and translations of a basic wavelet 
$W_N$ at resolution 
$2^n$. The coefficients of the wavelet transform specify the initial weights in the corresponding states of the WFA. An algorithm to simplify this WFA is presented and can be employed to compress data. It works especially well for smooth and fractal-like data.",2014-03-20
10.1007/BF00290336,A practical general method for constructing LR(k) parsers,SummaryThe paper presents in detail the case for k=1 of a practical general method for constructing LR(k) parsers. For k=1 this method is of rival efficiency to the previous general algorithm described by the author in [21]. The method involves combining the states of an LR(k) parser as they are generated  reducing to a fraction  in the process  the number of configurations that need actually be evaluated  or for which space must be assigned — compared to such general methods as those of [1  11  12  17]. The criteria of compatibility introduced for this purpose are such that the parser obtained is in practice identical in size to  or negligibly larger than  that obtained by resolving the inadequacies of an LR(o) parser (as is done for various subsets of the LR(k) grammars in [5  8  14  20]).,2012-03-20
10.1007/BF00290729,Inferring multivalued dependencies from functional and join dependencies,SummaryWe describe an algorithm to test whether a multivalued dependency is implied by a set of functional and join dependencies. The worst case running time of the algorithm is O(nm)  where n is the length of the input and m is the number of the attributes in the universe. We also apply the algorithm to test implication of embedded multivalued dependencies  lossless join dependencies  acyclic join dependencies  first order hierarchical decompositions  and functional dependencies. The worst case running time of the algorithm for all these problems is still polynomial in the length of the input.,2018-03-20
10.1007/BF00265221,LR-parsing of extended context free grammars,SummaryTo improve the readability of a grammar it is common to use extended context free grammars (ECFGs) which are context free grammars (CFGs) extended with the repetition operator (*)  the alternation operator (¦) and parentheses to express the right hand sides of the productions. The topic treated here is LR-parsing of ECFGs. The LR(k) concept is generalized to ECFGs  a set of LR-preserving transformations from ECFGs to CFGs is given and finally it is shown how to construct LR-parsers directly from ECFGs.,2018-03-20
10.1007/s00236-008-0075-2,Inference rules for proving the equivalence of recursive procedures,Inspired by Hoare’s rule for recursive procedures  we present three proof rules for the equivalence between recursive programs. The first rule can be used for proving partial equivalence of programs; the second can be used for proving their mutual termination; the third rule can be used for proving the equivalence of reactive programs. There are various applications to such rules  such as proving equivalence of programs after refactoring and proving backward compatibility.,2020-03-20
10.1007/BF01218405,On two families of forests,An alphabetic cone is a family of forests stable under alphabetic tree transductions  whereas we call REC-closed each family of forests closed under the operations of union  top-catenation a-product anda-star; the sheaves are families having both the above properties.For a given sheaf of forests ℱ  both the families of languages (ℱ) and yield (ℱ) (of branches and yields of ℱ respectively) constitute full AFL's.Further we show that the familyK-REC of forests supporting recognizable formal power series on trees is a sheaf and so is the family OCF of behaviors of one counter treeautomata.On the contrary  restricted one counter forests (ROCF) constitute an alphabetic cone which fails to be a sheaf; ROCFN (restricted one counter forests over alphabets with degree ≦N) is alphabetically principal generated by the Lukasiewicz forest of rankN.,2016-03-20
10.1007/s00236-012-0166-y,On the power of enzymatic numerical P systems,We study the computing power of a class of numerical P systems introduced in the framework of autonomous robot control  namely enzymatic numerical P systems. Three ways of using the evolution programs are investigated: sequential  all-parallel and one-parallel (with the same variable used in all programs or in only one  respectively); moreover  both deterministic and non-deterministic systems are considered. The Turing universality of some of the obtained classes of numerical P systems is proved (for polynomials with the smallest possible degree  one  also introducing a new proof technique in this area  namely starting the universality proof from the characterization of computable sets of numbers by means of register machines). The power of many other classes remains to be investigated.,2020-03-20
10.1007/BF00263295,Some techniques for geometric searching with implicit set representations,SummaryThere are many efficient ways of searching a set when all its elements can be represented in memory. Often  however  the domain of the search is too large to have each element stored separately  and some implicit representation must be used. Whether it is still possible to search efficiently in these conditions is the underlying theme of this paper. We look at several occurrences of this problem in computational geometry and we propose various lines of attack. In the course of doing so  we improve the solutions of several specific problems; for example  computing order statistics  performing polygonal range searching  testing algebraic predicates  etc.,2019-03-20
10.1007/PL00013322,Correctness of dataflow and systolic algorithms using algebras of streams,Abstract. We present two case studies which illustrate the use of second–order algebra as a formalism for specification and verification of hardware algorithms. In the first case study we specify a systolic algorithm for convolution and formally verify its correctness using second–order equational logic. The second case study demonstrates the expressive power of second–order algebraic specifications by presenting a non–constructive specification of the Hamming stream problem. A dataflow algorithm for computing the Hamming stream is then specified and the correctness of this algorithm is verified by semantical methods. Both case studies illustrate aspects of the metatheory of second-order equational logic.,2013-03-20
10.1007/BF00289238,Characterization of all optimal networks for a simultaneous computation of AND and NOR,SummaryWe characterize the optimal networks for a simultaneous computation of AND and NOR over the base of all 16 Boolean operators. We show that the optimal networks for AND and NOR are precisely the networks that consist of a disjoint union of an optimal network for AND with an optimal network for NOR.,2017-03-20
10.1007/BF00290736,Parallel language recognition in constant time by cellular automata,SummaryIt is proved that the set of all languages accepted within a fixed  language dependent number of steps by deterministic one dimensional cellular acceptors is a proper subset of the set of all regular languages.A combinatorial condition is stated which is necessary and sufficient for a language to be recognizable in constant time by a deterministic one dimensional cellular automaton.It is shown that the question of whether or not the language generated by a given context-sensitive grammar is recognizable in constant time is algorithmically unsolvable. The question becomes solvable if a regular grammar is given.Finally it is proved that the set of all languages that can be accepted by non-deterministic one dimensional cellular acceptors is equal to the set of all regular languages.In conclusion some generalizations to n-dimensional languages and array languages are mentioned.,2011-03-20
10.1007/BF00288767,Analysis of a prioritized CSMA protocol based on staggered delays,SummaryCarrier sense multiple access (CSMA) protocols were originally conceived for use in digital radio communication. Such protocols are  however  quite applicable in a variety of distributed computing and local networking configurations based on a shared bus. The CSMA protocols are characterized by the fact that message collisions can occur only in a very small time window whose duration corresponds to the propagation delay of the bus. They are further characterized by the technique used to subsequently serialize the transmission of the colliding messages. In this paper we analyze the situation wherein colliding messages are serialized by using a set of staggered ‘retry’ delays which are associated with the sources that may generate the colliding messages. Our analysis produces both path throughput (utilization) curves and message delay curves  as a function of message generation rate. These curves show that the protocol is in a sense self stabalizing  serve to quantify its behaviour  and indicate loading levels which result in unacceptable message delays.,2013-03-20
10.1007/BF00261259,The clean termination of iterative programs,SummaryThe paper is devoted to a program-correctness concept which captures partial correctness  termination (nonlooping) and clean termination (nonabortion). The underlying proof method offers a one-stage proof of all the three properties. This method is proved consistent and algebraically complete. It is first discussed for the general case of arbitrary possibly nondeterministic iterative programs. Next  this case is restricted to arbitrary deterministic iterative programs and finally to structured programs. The presented approach is compared with partial correctness  total correctness and weakest precondition methods. The concluding example shows the verification of an arithmetical program in machine-bounded arithmetics. As a side effect of the verification procedure one finds input boundary conditions which guarantee clean termination.,2013-03-20
10.1007/BF00288534,An algorithmic and complexity analysis of interpolation search,We begin with a brief survey of the literature concerning the Interpolation Search algorithm  then provide a detailed description of the algorithm and how to implement it to search a particular table or file. We next analyze the complexity of the search method by investigating the moments of the distribution of the number of table accesses needed to locate a given record. For a table containing n entries  we find that the expected value of the number of accesses is log2 log2n+O(1) and that the variance is O(log2 log2n). Lastly we provide some approximations for the expected value for the successful and unsuccessful search in such a table.,2016-03-20
10.1007/BF00288970,Formes de langages et de grammaires,SummaryThis paper is devoted to the study of context-free languages over infinite alphabets. This work can be viewed as a new attempt to study families of grammars  replacing the usual “grammar forms” and giving a new point of view on these questions. A language over an infinite alphabet or I-language appears as being a model for a family of usual languages; an interpretation is an homomorphism from the infinite alphabet to any finite alphabet. Using this notion of interpretation we can associate to each family of I-languages an image  called its shadow  which is a family of usual languages.The closure properties of families  generalizing to infinite alphabets the family of context-free languages  lead to define rational transductions between infinite alphabets or I-transductions  and then  families of I-languages closed under I-transductions  or I-cones. We study here relations between the closure properties of a family of I-languages and these of its shadow. As a result  we obtain that any union closed rational cone of context-free languages  principal or not  is the shadow of a principal I-cone.This work leads to new results about the classical theory of context-free languages. For instance  we prove that any principal rational cone of context-free languages can be generated by a context-free language  whose grammar has only 6 variables. This work also leads to more general considerations about the adequacy of some generating devices to the generated languages. It appears that the context-free grammars are fair  in a sense that we define  for generating context-free languages but that non-expansive context-free grammars are not for generating non-expansive context-free languages. This point of view raises a number of questions.,2015-03-20
10.1007/BF00288960,The characterization of parallel ultralinear grammars by rational power series,SummaryGiven a reduced context-free grammar G  the following statements are equivalent:(i)G is parallel ultralinear (ii)G is parallel nonterminal bounded (iii)PL(G)  the parallel label language  is regular (iv)fG(y  z)  the generating function counting height and length of the yield of the derivation trees of G  is rational.,2015-03-20
10.1007/BF00289497,Files d'attente exponentielles ayant des parametres non-stationnaires dans le temps@@@Exponential Queueing Systems with non-stationary parameters,,2012-03-20
10.1007/BF00264435,Further analysis of code generation for a single register machine,SummaryThis paper presents a systematic development of the analysis of code generation for the single register machine  from linear to exponential time algorithms. A class of expressions with common subexpressions is introduced which can be optimally coded in quadratic time. A heuristic based on this development is shown to produce code size better than 5/4 that of an optimal coding  for any expression. A method is proposed which would improve this bound  but the most straightforward implementation is shown to require exponential time. Finally  a new analysis of the exponential time bound is presented which more closely describes the complexity of the task of producing optimal code.,2018-03-20
10.1007/s00236-015-0236-z,Guiding Craig interpolation with domain-specific abstractions,Craig interpolation is a standard method to construct and refine abstractions in model checking. To obtain abstractions that are suitable for the verification of software programs or hardware designs  model checkers rely on theorem provers to find the right interpolants  or interpolants containing the right predicates  in a generally infinite lattice of interpolants for any given interpolation problem. We present a semantic and solver-independent framework for systematically exploring interpolant lattices  based on the notion of interpolation abstraction. We discuss how interpolation abstractions can be constructed for a variety of logics  and how they can be applied in the context of software model checking.,2020-03-20
10.1007/BF01178508,Sorting multisets stably in minimum space,"AbstractWe consider the problem of sorting a multiset of sizen containingm distinct elements  where theith distinct element appearsni times. Under the assumption that our model of computation allows only the operations of comparing elements and moving elements in the memory Ω(n logn − ∑i=1mni logni +n) is known to be a lower bound for the computational complexity of the sorting problem. In this paper we present aminimum space algorithm that sortsstably a multiset in asymptoticallyOptimal worst-case time. A Quicksort type approach is used  where at each recursive step the median is chosen as the partitioning element. To obtain a stable minimum space implementation  we develop linear-time in-place algorithms for the following problems  which have interest of their own:
Stable unpartitioning: Assume that ann-element arrayA is stably partitioned into two subarraysA0 andA1. The problem is to recoverA from its constitutentsA0 andA1. The information available is the partitioning element used and a bit array of sizen indicating whether an element ofA0 orA1 was originally in the corresponding position ofA.
Stable selection: The task is to find thekth smallest element in a multiset ofn elements such that the relative order of identical elements is retained.",2020-03-20
10.1007/s002360050051,Algebraic models of microprocessors architecture and organisation,We present an algebraic method for modeling microprocessors at different levels of abstraction  and for expressing the relationships between each level. We consider microprocessors at levels of abstraction determined by time and details of construction. The algebraic models isolate features of the scientific structure of microprocessor computation  providing: (i) a basis for modular decomposition of the description of microprocessors  including correctness criteria; and (ii) equational specification and verification techniques for the design of microprocessors relevant to a range of specification languages and theorem provers. Our specifications are iterated maps that decompose the modeling of the computer into easily understood  equationally specified stages  represented by algebras. We illustrate our algebraic tools with an example of a simple computer.,2015-03-20
10.1007/s00236-010-0130-7,New bounds for the query complexity of an algorithm that learns DFAs with correction and equivalence queries,In this note  we show that the number of equivalence queries asked by an algorithm proposed in Becerra-Bonache et al. (Proceedings of the 8th International Colloquium on Grammatical Inference (ICGI ’06)  Lecture Notes in Artificial Intelligence  Springer-Verlag  Berlin 2006) that learns deterministic finite automata with correction and equivalence queries is at most the injectivity degree of the target language  a notion that corresponds to the number of repetitions among the correcting words of all the elements in the quotient of that language by the Myhill-Nerode equivalence. Further  we propose a tight upper bound for the number of correction queries as a function which depends on the index of the target language  the length of the longest counterexample returned by the teacher and the injectivity degree of the target language. However  the bounds obtained here for the number of CQs are optimal for the LCA algorithm  and they do not represent a tight upper bound for DFA learning with EQs and CQs in general.,2017-03-20
10.1007/BF00289521,Optimal merging of 2 elements with n elements,The problem is to determine the linear ordering of their union (i.e.  to merge A m and B~) by means of a sequence of pairwise comparisons between an element of Am and an element of B~. Given any algorithm s to solve this problem  which we refer to as the (m  n) problem  let K s (m  n) denote the maximum number of comparisons required and E s (m  n) the expected number of comparisons required to merge Am and B~ using s  assuming that all possible initial orderings of A m w B~ are equally likely. An algorithm s is said to be M-optimal if K s (m  n) = K (m  n)  where K (m  n) = min K x (m  n)  and E-optimal if E s (m  n) = E (m  n)  where E (m  n) = miu E (m  ~).,2020-03-20
10.1007/s002360050147,Asymptotic expansions of the mergesort recurrences,Abstract. This note provides exact formulae for the mean and variance of the cost of top-down recursive mergesort. These formulae improve upon earlier results of Flajolet and Golin.,2015-03-20
10.1007/BF00264561,Interactive graphics on intelligent terminals in a time-sharing environment,SummaryInteractive graphics in a time-sharing environment should be organized in such a way that the user's activities are locally processed in order to avoid unacceptably long response times — especially if only low-speed communication links are available. On the other hand  the host computer must be kept informed about the user's actions and  conversely  the display file in the terminal has to be updated whenever the execution of the application program cases a change in the visual representation. In order to avoid the transmission of redundancy  we decompose the display file into two intersecting parts such that the part in the host computer and the other in the terminal contains only the locally required information. The necessary communication between both parts is maintained by an information module generated on the base of a low-low-level intermediate language (L4) and exchanged between computer and terminal. This leads to the notion of an abstract terminal whose “machine language” is L4  facilitating the implementation and portability of graphic programming systems. The L4 concept and our experiences with its implementation is discussed.,2019-03-20
10.1007/s002360050079,"Using graph coloring in an algebraic compiler
","Abstract.An algebraic compiler allows incremental development of the source program and builds its target image by composing the target images of the program components. In this paper we describe the general structure of an algebraic compiler focusing on compositional code generation. We show that the mathematical model for register management by an algebraic compiler is a graph coloring problem in which an optimally colored graph is obtained by composing optimally colored subgraphs. More precisely  we define the clique-composition of graphs 
$G_1$ and 
$G_2$ as the graph obtained by joining all the vertices in a clique in 
$G_1$ with all the vertices in a clique in 
$G_2$ and show that optimal register management by an algebraic compiler is achieved by performing clique-composition operations. Thus  an algebraic compiler provides automatically adequate clique separation of the global register management graph. We present a linear-time algorithm that takes as input optimally colored graphs 
$G_1$ and 
$G_2$ and constructs an optimal coloring of any clique-composition of 
$G_1$ and 
$G_2$. Motivated by the operation of clique-composition  we define the class of clique-composable graphs as those graphs that can be iteratively built from single vertices using the clique-composition operation. We show that the class of clique-composable graphs coincides with the well-known class of chordal graphs.",2011-03-20
10.1007/BF00268076,Acceptable functional programming systems,SummaryIn this paper we present a self-contained treatment of the theory of computable functions using acceptable functional programming systems. We construct a particular acceptable functional programming system. Within the framework of this system we prove two main theorems to show that  when working with substitution operators  the fixed point function defined by the mechanism of the system and the fixed point function defined by the recursion theorem are both equal to the least fixed point. Furthermore we show that the programs defined by the mechanism of the system are easier and faster than the ones defined by the recursion theorem. We make some suggestions about how to implement the system using a suitable environment. We also formulate a natural question: what is the relationship between substitution operators and computable operators?,2018-03-20
10.1007/s00236-005-0161-7,Optimal recovery schemes in fault tolerant distributed computing,Abstract.Clusters and distributed systems offer fault tolerance and high performance through load sharing. When all n computers are up and running  we would like the load to be evenly distributed among the computers. When one or more computers break down  the load on these computers must be redistributed to other computers in the system. The redistribution is determined by the recovery scheme. The recovery scheme is governed by a sequence of integers modulo n. Each sequence guarantees minimal load on the computer that has maximal load even when the most unfavorable combinations of computers go down. We calculate the best possible such recovery schemes for any number of crashed computers by an exhaustive search  where brute force testing is avoided by a mathematical reformulation of the problem and a branch-and-bound algorithm. The search nevertheless has a high complexity. Optimal sequences  and thus a corresponding optimal bound  are presented for a maximum of twenty one computers in the distributed system or cluster.,2016-03-20
10.1007/BF00288472,Synchronizable deterministic pushdown automata and the decidability of their equivalence,SummaryThe notion of synchronized and synchronizable deterministic pushdown automata (DPDA's) is introduced. It is shown that the equivalence of two synchronized and even of synchronizable DPDA's can be tested. It is conjectured that every two equivalent DPDA's are synchronizable. It is also shown that the equivalence of two deterministic pushdown transducers whose underlying DPDA's are synchronized can be tested.,2011-03-20
10.1007/BF00259469,Duality in specification languages: a lattice-theoretical approach,SummaryA very general lattice-based language of commands  based on the primitive operations of substitution and test for equality  is constructed. This base language permits unbounded nondeterminism  demonic and angelic nondeterminism. A dual language permitting miracles is constructed. Combining these two languages yields an extended base language which is complete  in the sense that all monotonic predicate tranformers can be constructed in it. The extended base language provides a unifying framework for various specification languages; we show how two Dijkstra-style specification languages can be embedded in it.,2011-03-20
10.1007/s00236-004-0152-0,Limit laws for terminal nodes in random circuits with restricted fan-out: a family of graphs generalizing binary search trees,Abstract.We introduce a family of graphs C(n i s a) that generalizes the binary search tree. The graphs represent logic circuits with fan-in i  restricted fan-out s  and arising by n progressive additions of random gates to a starting circuit of a isolated nodes. We show via martingales that a suitably normalized version of the number of terminal nodes in binary circuits converges in distribution to a normal random variate.,2017-03-20
10.1007/BF00264280,Is text compression by prefixes and suffixes practical?,SummaryOne approach to text compression is to replace high-frequency variable-length fragments of words by fixed-length codes pointing to a compression table containing these high-frequency fragments. It is shown that the problem of optimal fragment compression is NP-hard even if the fragments are restricted to prefixes and suffixes. This seems to be a simplest fragment compression problem which is NP-hard  since a polynomial algorithm for compressing by prefixes only (or suffixes only) has been found recently. Various compression heuristics based on using both prefixes and suffixes have been tested on large Hebrew and English texts. The best of these heuristics produce a net compression of some 37% for Hebrew and 45% for English using a prefix/suffix compression table of size 256.,2020-03-20
10.1007/BF00289415,Hiérarchie et fermeture de certaines classes de tag-systèmes,ResuméNous définissons des ensembles de mots infinis engendrés par différentes classes de tag-systèmes. Nous montrons que tout mot infini engendré par tag-système étendu peut être engendré par tag-système ɛ-free. Nous en déduisons un graphe complet d'inclusion et diverses propriétés de fermeture pour les ensembles de mots infinis considérés.SummaryWe define sets of infinite words generated by various classes of tag-systems. We show that every infinite word generated by extended tag-system can also be generated by ɛ-free tag-system. We give a full inclusion graph and several closure properties for the sets of infinite words under study.,2020-03-20
10.1007/BF00268320,A method for transforming grammars into LL(k) form,SummaryA new method for transforming grammars into equivalent LL(k) grammars is studied. The applicability of the transformation is characterized by defining a subclass of LR(k) grammars  called predictive LR(k) grammars  with the property that a grammar is predictive LR(k) if and only if the corresponding transformed grammar is LL(k). Furthermore  it is shown that deterministic bottom-up parsing of a predictive LR(k) grammar can be done by the LL(k) parser of the transformed grammar. This parsing method is possible since the transformed grammar always ‘left-to-right covers’ the original grammar. The class of predictive LR(k) grammars strictly includes the class of LC(k) grammars (the grammars that can be parsed deterministically in the left-corner manner). Thus our transformation is more powerful than the one previously available  which transforms LC(k) grammars into LL(k) form.,2012-03-20
10.1007/BF00288689,Inhibitionsfelder,SummaryThe neurons in the retina of mammals are linked by a system of circuit  such that they influence one another (lateral interaction). The great majority of circuits has got an inhibitory character. F. Ratliff and others have given describing equations for such a system  which by installation of thresholds essentially become non-linear. We shall discuss the characteristics resulting from the describing equations. We are especially interested in the stability characteristics. Naturally  we are mainly interested in the non-linear part of the theory. With respect to stability  we are able to show that stability conditions are the same as with linear systems.,2014-03-20
10.1007/s00236-002-0085-4,Formal properties of XML grammars and languages,Abstract. We consider XML documents described by a document type definition (DTD). An XML-grammar is a formal grammar that captures the syntactic features of a DTD. We investigate properties of this family of grammars. We show that every XML-language basically has a unique XML-grammar. We give two characterizations of languages generated by XML-grammars  one is set-theoretic  the other is by a kind of saturation property. We investigate decidability problems and prove that some properties that are undecidable for general context-free languages become decidable for XML-languages. We also characterize those XML-grammars that generate regular XML-languages.Résumé. Nous considérons des documents XML décrits par une définition de type de document (DTD). Une grammaire XML est une grammaire formelle qui retient les aspects syntaxiques d'une DTD. Nous étudions les propriétés de cette famille de grammaires. Nous montrons qu'un langage XML a essentiellement une seule grammaire XML. Nous donnons deux caractérisations des langages engendrés par les grammaires XML  la première est ensembliste  la deuxième est par une propriété de saturation. Nous examinons des problèmes de décision et nous prouvons que certaines propriétés qui sont indécidables pour les langages context-free généraux deviennent décidables pour les langages XML. Nous caractérisons également les grammaires XML qui engendrent des langages rationnels.,2020-03-20
10.1007/BF01261655,Greed in resource scheduling,We examine the worst-case performance of a class of heuristic scheduling algorithms commonly referred to as priority-driven or list-scheduling algorithms. It is well known that these algorithms have anomalous  unpredictable performance when used to schedule nonpreemptive tasks with precedence constraints. We present a general method for deriving the worst-case performance of these algorithms. This method is easy to use  yet powerful enough to yield tight performance bounds for many classes of scheduling problems. We demonstrate the method for several problems to show it has wide applicability. We also present several task systems for which list-scheduling algorithms exhibit unavoidable worst-case performance and discuss the general characteristics of these task systems. These task systems are sometimes overlooked in simulation studies; consequently  the results of these studies may be overly optimistic.,2013-03-20
10.1007/s00236-008-0088-x,Hardness of equivalence checking for composed finite-state systems,Computational complexity of comparing behaviours of systems composed from interacting finite-state components is considered. The main result shows that the respective problems are EXPTIME-hard for all relations between bisimulation equivalence and trace preorder  as conjectured by Rabinovich (Inf Comput 139(2):111–129  1997). The result is proved for a specific model of parallel compositions where the components synchronize on shared actions but it can be easily extended to other similar models    to labelled 1-safe Petri nets. Further hardness results are shown for special cases of acyclic systems.,2019-03-20
10.1007/s00236-016-0281-2,Sparsification and subexponential approximation,Instance sparsification is well-known in the world of exact computation since it is very closely linked to the Exponential Time Hypothesis. In this paper  we extend the concept of sparsification in order to capture subexponential time approximation. We develop a new tool for inapproximability  called approximation preserving sparsification  and use it in order to get strong inapproximability results in subexponential time for several fundamental optimization problems such as min dominating set   min feedback vertex set   min set cover  min feedback arc set  and others.,2014-03-20
10.1007/BF00289073,Proving programs correct through refinement,Program proving must be made applicable to all stages of program development. In particular  in the design phase  proving could prevent a program development based on erroneous or inconsistent design decisions  with its associated high cost of debugging. Furthermore  the proving activity itself would benefit from an early application in the development cycle of a program  because the proof of a program design seems to be simpler than the proof of the final  perhaps optimized  program. The Fisher-Galler algorithm will be used as an example for demonstrating the proof of a program design. An algebraic specification technique is used for describing the design. Details of the proof will be discussed.,2014-03-20
10.1007/BF02915443,The formal development of a parallel program performing LU-decomposition,SummaryThe development of a new parallel algorithm performing the LU-decomposition of a regular matrix is given. The algorithm is developed using formal techniques that rely on the use of invariants that express the properties of parallel processes (like in the Gries-Owicki approach) and ordered sets that define the communications between them. Special attention is given to the new notion of a parallel invariant: it is made clear that many invariants contain too many implicit sequential constraints  which makes them inferior to other ones. Also considered are the efficiency  both in communications and in computations  and the correctness. It is shown that the algorithm suggested in this paper has better efficiency than algorithms that use a partitioning of the matrix into rows  columns  or blocks. The programming techniques used are evaluated against the programming demands posed by the specific problem considered.,2013-03-20
10.1007/BF00268078,On the average internal path length of m-ary search trees,"SummaryConsider an m-ary tree constructed from a random permutation of size n. When all permutations are equally likely  the average internal path length  which may be considered as a cost measure for searching the tree  is shown to be (n+1)Hn/(Hm−1)+cn+O(nβ) β<1  with 
$$c = c(m) = - m/(m - 1) - (H_m - 1)^{ - 1} + A_1^{(m)} $$
  where Hkis the kth harmonic number and A1(m)is a coefficient obtained by solving a linear system of equations. This result tells us that the average cost of searching unbalanced m-ary trees is essentially the same as that of searching other popular variants of m-ary trees like B-trees and B+-trees where sophisticated methods are used for balancing.",2018-03-20
10.1007/BF00289712,Deadlock-freedom in resource contentions,SummaryThe paper establishes two necessary and sufficient conditions for the absence of deadlock in resource contentions under the expedient allocation policy. Their equivalence is proved. One of these was discovered independently by Ibaraki and Kameda. The conditions are essentially the condition of the König-Hall Theorem for the existence of a system of distinct representatives. If there are no multiple resources the conditions simplify to the condition for acyclicity of hypergraphs.,2011-03-20
10.1007/BF00264024,Constructing LR parsers for regular right part grammars,SummaryRegular right part (RRP) grammars differ from context free (CF) grammars by virtue of the fact that the production right parts are nondeterministic finite automatons (FAs). LR(k) parsers for RRP grammars are linear time parsers which can determine the right end of each handle by considering at most k terminal symbols to its right and the left end (after the right end has been found) by considering at most one parse stack state to its left. This paper is concerned with the construction of a class of LR(k) parsers for RRP grammars which makes use of FAs for determining both the right and left ends of the handle.,2018-03-20
10.1007/BF00264312,Information theoretic analysis for a general queueing system at equilibrium with application to queues in tandem,SummaryIn this paper  information theoretic inference methology for system modeling is applied to estimate the probability distribution for the number of customers in a general  single server queueing system with infinite capacity utilized by an infinite customer population. Limited to knowledge of only the mean number of customers and system equilibrium  entropy maximization is used to obtain an approximation for the number of customers in the G¦ G¦1 queue. This maximum entropy approximation is exact for the case of G=M  i.e.  the M¦M¦1 queue. Subject to both independent and dependent information  an estimate for the joint customer distribution for queueing systems in tandem is presented. Based on the simulation of two queues in tandem  numerical comparisons of the joint maximum entropy distribution is given. These results serve to establish the validity of the inference technique and as an introduction to information theoretic approximation to queueing networks.,2018-03-20
10.1007/BF00264568,A note on degrees of context-sensitivity,SummaryFurther insight into the relation: complexity of general context-sensitivity versus complexity of weak-context-sensitivity  is offered by the following result:The structure of deterministic 3-degrees of context-sensitivity is complex enough to allow an isomorphic embedding of any countable partial ordering.,2019-03-20
10.1007/BF00289495,Generation of efficient LALR parsers for regular right part grammars,SummaryA method for building small fast LALR parsers for regular right part grammars is given. No grammar transformation is required. No extra state of the LALR parser for the recognition of strings generated by a right part is required. At some reduce states the parser may refer to lookback states (states in which the parser may be restarted after the reduction). An optimizing algorithm to reduce these references is also given.,2017-03-20
10.1007/BF00265681,A priority queue with interruptions of service permitted after a time quantum,SummaryThe queueing theory is applied to analyse a model of a multiprogramming operating system in which preemptive priorities are used for scheduling the service of concurrent streams of requests. Preemptions are permitted at the end of each service quantum. Mean waiting times and higher statistical moments in the M/G/1 system analysed are computed.,2018-03-20
10.1007/s00236-015-0217-2,On constructibility and unconstructibility of LTS operators from other LTS operators,An LTS operator can be constructed from a set of LTS operators up to an equivalence if and only if there is an LTS expression that only contains operators from the set and whose result is equivalent to the result of the operator. In this publication this idea is made precise in the context where each LTS has an alphabet of its own and the operators may depend on the alphabets. Then the extent to which LTS operators are constructible is studied. Most  if not all  established LTS operators have the property that each trace of the result arises from the execution of no more than one trace of each of its argument LTSs  and similarly for infinite traces. All LTS operators that have this property and satisfy some other rather weak regularity properties can be constructed from parallel composition and hiding up to the equivalence that compares the alphabets  traces  and infinite traces of the LTSs. Furthermore  a collection of other miscellaneous constructibility and unconstructibility results is presented.,2014-03-20
10.1007/BF00264257,A survey of normal form covers for context free grammars,SummaryAn overview is given of cover results for normal forms of context-free grammars. The emphasis in this paper is on the possibility of constructing ɛ-free grammars  non-left-recursive grammars and grammars in Greibach normal form. Among others it is proved that any ɛ-free context-free grammar can be right covered with a context-free grammar in Greibach normal form.All the cover results concerning the ɛ-free grammars  the non-left-recursive grammars and the grammars in Greibach normal form are listed  with respect to several types of covers  in a cover-table.,2017-03-20
10.1007/BF00265218,A new approach to parallel computing,SummaryThis paper presents a model of parallel computing. Six examples illustrate the method of programming. An implementation scheme for programs is also presented.,2016-03-20
10.1007/s00236-012-0173-z,Compositional type checking of delta-oriented software product lines,Delta-oriented programming is a compositional approach to flexibly implementing software product lines. A product line is represented by a code base and a product line declaration. The code base consists of a set of delta modules specifying modifications to object-oriented programs. A particular product in a delta-oriented product line is generated by applying the modifications contained in the suitable delta modules to the empty program. The product-line declaration provides the connection of the delta modules with the product features. This separation increases the reusability of delta modules. In this paper  we provide a foundation for compositional type checking of delta-oriented product lines of Java programs by presenting a minimal core calculus for delta-oriented programming. The calculus is equipped with a constraint-based type system that allows analyzing each delta module in isolation  such that the results of the analysis can be reused. By relying only on the analysis results for the delta modules and on the product line declaration  it is possible to establish whether all the products of the product line are well typed according to the fragment of the Java type system modeled by the calculus.,2011-03-20
10.1007/BF00289522,Congruences et Automorphismes des Automates Finis,"SummaryWe study a class of congruences of strongly connected finite automata  called the group congruences  which may be defined in this way: every element fixing any class of the congruence induces a permutation on this class. These congruences form an ideal of the lattice of all congruences of the automaton 
$$\mathfrak{A}$$
 and we study the group associated with the maximal group congruence (maximal induced group) with respect to the Suschkevitch group of the transition monoid of 
$$\mathfrak{A}$$
. The transitivity equivalence of the subgroups of the automorphism group of 
$$\mathfrak{A}$$
 are found to be the group congruences associated with regular groups  which form also in ideal of the lattice of congruences of 
$$\mathfrak{A}$$
. We then characterize the automorphism group of 
$$\mathfrak{A}$$
 with respect to the maximal induced group. As an application  we show that  given a group G and an automaton 
$$\mathfrak{A}$$
  there exists an automaton whose automorphism group is isomorphic to G and such that the quotient by the automorphism congruence is 
$$\mathfrak{A}$$
.",2019-03-20
10.1007/BF00265682,Short proofs for tricky formulas,SummaryThe object of this paper is to demonstrate how certain tricky mathematical arguments can be encoded as short formal proofs for the propositional tautologies representing the mathematical statements. Using resolution as a base proof system for the propositional calculus  we exhibit these short proofs under resolution augmented by one of two principles: the principle of extension  originally suggested by Tseitin  and the principle of symmetry  introduced in this paper. These short proofs illustrate the power of extension and symmetry in theorem proving.The principle of extension allows the introduction of auxiliary variables to represent intermediate formulas so that the length of a proof can be significantly reduced by manipulating these variables instead of the formulas that they stand for. Symmetry  on the other hand  allows one to recognize that a tautology remains invariant under certain permutations of variable names  and use that information to avoid repeated independent derivations of intermediate formulas that are merely permutational variants of one another.First we show that a number of inductive arguments can be encoded as short formal proofs using either extension or symmetry. We provide the details for the tautologies derived by encoding the statement  “An acyclic digraph on n vertices must have a source.” We then consider the familiar checkerboard puzzle which asserts that a checkerboard  two of whose diagonally opposite corner squares are removed  cannot be perfectly covered with dominoes. We demonstrate short proofs for the tautologies derived from the above assertion  using extension to mimic the tricky informal argument. Finally  we consider statements asserting the Ramsey property of numbers much larger than the critical Ramsey numbers. We show that the proof of Ramsey's theorem can be imitated using the principle of symmetry to yield short proofs for these tautologies.The main theme of the paper is that both extension and symmetry are very powerful augmentations to resolution. We leave open whether either extension or symmetry can polynomially simulate the other.,2019-03-20
10.1007/BF00289070,Opérations de cylindre et applications séquentielles gauches inverses,RésuméDans cet article  on étudie les rapports entre la principauté d'une famille de langages en tant que cylindre et en tant que famille fermée par application séquentielle gauche (gsm) inverse. Pour cela on considère les familles de langages closes pour les opérations de cylindre et les gsm inverses. On montre qu'une telle famille est principale en tant que cylindre seulement si elle est principale vis à vis des gsm inverses  mais que l'inverse n'est pas vrai. Cependant  si l'on se restreint aux familles de langages vérifiant une propriété de clôture que l'on explicite  on obtient cette réciproque.AbstractIn this paper  the relations between the principality of a family of languages as a cylinder and its principality as family closed under inverse gsm mappings are studied. For that purpose  the families of languages closed under the operations of cylinder and under inverse gsm mappings are considered. It is shown that such a family is a principal cylinder only if it is principal through the operation of inverse gsm mapping  but that the converse is not true. However  the converse is true for the families satisfying a closure property given here.,2019-03-20
10.1007/s00236-007-0052-1,Distributed Consensus  revisited,We provide a novel model to formalize a well-known algorithm  by Chandra and Toueg  that solves Consensus among asynchronous distributed processes in the presence of a particular class of failure detectors (◊$$\mathcal{S}$$ or  equivalently  Ω)  under the hypothesis that only a minority of processes may crash. The model is defined as a global transition system that is unambigously generated by local transition rules. The model is syntax-free in that it does not refer to any form of programming language or pseudo code. We use our model to formally prove that the algorithm is correct.,2018-03-20
10.1007/s002360050041,Modeling data-intensive reactive systems with relational transition systems,In this paper  the formalism of Relational Transition Systems (RTSes) is used to model data-intensive reactive systems  and four RTS models of reactive systems based on temporal logic programming  production systems  recurrence equations  and Petri nets are presented. The paper also describes different methods of comparison of the expressive powers of various RTSes in terms of the trajectories they can generate and carries out this comparison for the four RTS formalisms. It is shown that these formalisms have the same expressive power in the deterministic case. The paper also compares expressive powers of non-deterministic production systems and non-deterministic temporal logic programming systems. It is shown that  although the two formalisms are incomparable in the general case  their restricted versions are isomorphic to each other.,2020-03-20
10.1007/BF00264160,Space efficient algorithms for some graph theoretical problems,SummaryWe present space-efficient-O(log2n)-deterministic algorithms for some graph theoretical problems such as planarity testing  producing a plane embedding  finding minimum cost spanning trees  obtaining the connected  biconnected and triconnected components of a graph. Previous planarity algorithms used Ω(n) space. Several algorithms are based on a space-efficient matrix inversion method. The same bounds hold for uniform circuit depth.,2014-03-20
10.1007/BF01178908,IEH graphs,We propose a new family of interconnection topology that can be used to design communication architecture for distributed systems with an arbitrary number of computing nodes. The design is based on a novel generalization of the well known hypercube graphs. The proposed topology is shown to be incrementally extensible in steps of 1 (cost of restructuring or adding edges is very low)  optimally fault tolerant and its diameter is logarithmic in the number of nodes. Moreover  for any given number of nodes  the difference of the maximum and the minimum degree of a node in the graph is ≤1  i.e.  the graph is almost regular. A shortest routing algorithm for the proposed family of graphs has been developed.,2012-03-20
10.1007/BF01185561,Elementary transition systems and refinement,Elementary transition systems are-in a strong categorical sense-the transition system version of a basic system model of net theory called elementary net systems. The structural notion of a region associated with elementary transition systems captures the intuitive idea of a local state as modelled by the conditions of an elementary net system. In this paper we equip elementary transition systems with a refinement operation over the local states (regions). We then show our operation satisfies a number of interesting properties. In particular  this operation supports compositional reasoning. It is very hard if not impossible to define a corresponding operation at the level of nets which enjoys similar properties. This is due to the concrete choice of conditions used to enforce intended behaviour. Thus our results show that the more abstract-but essentially equivalent-model of elementary transition systems is the appropriate framework for theoretical studies concerning refinement operations for elementary net systems.,2019-03-20
10.1007/BF00276022,Modeling splits in file structures,SummaryWe analyze the expected behaviour of file structures where splits are used to handle overflows. Two cases are analyzed. The first model is of a file with an index on top of the data structure. We analyze the effect of unbalanced splits  and the effect of splitting in more than two buckets. The second model is of an ideal hash file  in which the probability of insertion remains the same for every bucket  regardless of how many times the bucket has been split. The result is an upper bound in any dynamic hashing method that uses splitting and does not allow overflow records. In both cases  the effect of using partial expansions is included.,2018-03-20
10.1007/s002360050144,M-nets: An algebra of high-level Petri nets  with an application to the semantics of concurrent programming languages,"Abstract. This paper describes a high-level Petri net model called M-nets (for modular multilabelled nets). A distinctive feature of this model is that it allows both: unfolding  as do most other high-level net models; and composition – in particular  synchronisation – in a process algebraic style  turning the set of M-nets into an algebraic domain. It turns out that the composition operations of this domain have various algebraic properties. Moreover  the model is such that composition operations are coherent with unfolding  in the sense that the unfolding of a composite high-level net is the composition of the unfoldings of its components. One of the motivations for M-nets is that they be a vehicle for giving semantics of concurrent programming languages. To illustrate their capability for that  the compositional semantics of 
$B(PN)^2$– a simple  expressive concurrent programming language – is given. An associated low-level net semantics is described  and the coherence of these high-level and low-level semantics is proved.",2018-03-20
10.1007/BF00264475,New lower bounds on the formula size of Boolean functions,SummaryIn this paper we investigate the method of Nechiporuk [3] for deriving lower bounds on the formula size of Boolean functions. At first we prove non-linear lower bounds for functions which are related to the existence of a k-clique or a k-circle in a graph. Furthermore we determine the formula size of the “disjoint disjunction” of the outputs of the Boolean matrix product. Finally we show how useful the method may be in the case of monotone functions if the length of the prime implicants is bounded.,2014-03-20
10.1007/s002360050135,Converting untyped formulas to typed ones,"Abstract. We observe that every first-order logic formula over the untyped version of some many-sorted vocabulary is equivalent to a union of many-sorted formulas over that vocabulary. This result has as direct corollary a theorem by Hull and Su on the expressive power of active-domain quantification in the relational calculus.
",2012-03-20
10.1007/BF01186644,A compositional dataflow semantics for Petri nets,We give a semantics for place/transition nets  which describes the input/out-put behaviour using fixed point techniques. The semantics is shown to be compositional w.r.t. the net operators parallel composition  feedback and output merging. We prove consistency with the step sequence semantics and thus give an equivalent operational semantics.,2012-03-20
10.1007/s00236-013-0177-3,Conjunctive grammars and alternating pushdown automata,In this paper we introduce a variant of alternating pushdown automata  synchronized alternating pushdown automata  which accept the same class of languages as those generated by conjunctive grammars.,2011-03-20
10.1007/BF01213081,Local Hausdorff dimension,We define the notion of local size-measure in metric spaces and derive general properties of local size-measures. Special cases include the local Hausdorff dimension  the local entropy  and the local Kolmogorov complexity. For the case of finite-state and closed ω-languages we exhibit an algorithm for the approximate calculation of the local Hausdorff dimension using the fact that  in this case  the local Hausdorff dimension and the local entropy coincide.,2018-03-20
10.1007/BF01185403,Optimization of a subclass of conjunctive queries,The optimization problem for a subclass of conjunctive queries which is formed by the union of the class of fan-out free queries and a subclass of typed fan-out queries is investigated. The typed fan-out queries in this class are obtained from simple tableaux by allowing atmost one attribute to violate the simple-tablau property. The optimization problem for several restricted subsets of typed fan-out queries is already known to be NP-hard. It is shown that the queries under consideration possess several useful properties which are then used to obtain an O(n2) optimization algorithm based on the implication graph technique. The optimization of typed fan-out queries  obtained from simple tableaux by allowing atmost two attributes to violate the simple tableau property  is shown to be NP-hard. The optimization of simple tableaux in the presence of functional dependencies is also investigated and is shown to be NP-hard.,2013-03-20
10.1007/BF00266048,Regenerative simulation of response times in networks of queues with multiple job types,We have previously discussed the simulation of networks of queues for general characteristics of passage times of a single job type  using the regenerative method for simulation and the idea of tracking a distinguished job through the network. We consider here  from a somewhat different point ov view  passage time simulation in closed networks of queues having multiple job types. Our results provide a means of obtaining  from a single replication  point and interval estimates for passage times of the several job types. They also yield a statistically more efficient estimation procedure for passage times of a single job type.,2015-03-20
10.1007/s00236-003-0129-4,Providing view synchrony for group communication services,Abstract.Building applications in a distributed computing environment is a complex process involving reasoning about message ordering  system failures  link failures etc. Group communication services attempt to make this task easier by providing building blocks to be used in assembling such systems and by defining properties that are guaranteed by these services. One such property is VS (view synchrony) which imposes restrictions on when messages can be delivered  guaranteeing that processors who share the same view of the distributed environment receive either the same set of messages or prefixes of the set received by one processor. This paper provides a precise description of an algorithm (based on ideas of Cristian and Schmuck) and a proof that this algorithm provides VS. The contributions of this paper are to show that VS is implementable and to provide an actual algorithm to implement it. We also show conditional timing properties of the algorithm  giving timebounds for group formation under certain stability conditions.,2017-03-20
10.1007/s00236-006-0026-8,On the tree-transformation power of XSLT,XSLT is a standard rule-based programming language for expressing transformations of XML data. The language is currently in transition from version 1.0 to 2.0. In order to understand the computational consequences of this transition  we restrict XSLT to its pure tree-transformation capabilities. Under this focus  we observe that XSLT 1.0 was not yet a computationally complete tree-transformation language: every 1.0 program can be implemented in exponential time  using a DAG representation of trees. A crucial new feature of version 2.0  however  which allows node sets over temporary trees  yields completeness. We provide a formal operational semantics for XSLT programs  and establish confluence for this semantics.,2017-03-20
10.1007/BF00289076,On the complexity of formal grammars,SummaryThe time and space complexity of the class of languages generated in linear time by context-sensitive grammars is investigated. Among other results it is shown that the membership question for languages in the class is NP-complete.,2020-03-20
10.1007/BF00291052,Specification and verification of database dynamics,SummaryA framework is proposed for the structured specification and verification of database dynamics. In this framework  the conceptual model of a database is a many sorted first order linear tense theory whose proper axioms specify the update and the triggering behaviour of the database. The use of conceptual modelling approaches for structuring such a theory is analysed. Semantic primitives based on the notions of event and process are adopted for modelling the dynamic aspects. Events are used to model both atomic database operations and communication actions (input/output). Nonatomic operations to be performed on the database (transactions) are modelled by processes in terms of trigger/reaction patterns of behaviour. The correctness of the specification is verified by proving that the desired requirements on the evolution of the database are theorems of the conceptual model. Besides the traditional data integrity constraints  requirements of the form “Under condition W  it is guaranteed that the database operation Z will be successfully performed” are also considered. Such liveness requirements have been ignored in the database literature  although they are essential to a complete definition of the database dynamics.,2019-03-20
10.1007/BF00264566,A decidability criterion for van Wijngaarden grammars,SummaryVan Wijngaarden grammars are a very useful instrument for syntactically describing even the most complex languages. This is illuminated specifically by describing the language of valid formulas of first order logic by a van Wijngaarden grammar.Normal forms of van Wijngaarden grammars and restrictions which guarantee decidability are discussed and ALGOL 68 is considered under these views.,2013-03-20
10.1007/s00236-002-0106-3,On Gurevich's theorem on sequential algorithms,Abstract. Abstract-State Machines have been introduced as “a computation model that is more powerful and more universal than standard computation models”  by Yuri Gurevich in 1985. ASM gained much attention as a specification method  in particular for the description of the semantics of programming languages  communication protocols  distributed algorithms  etc. Gurevich proved recently that a sequential algorithm must only meet a few liberal requirements to be representable as an ASM. We critically examine Gurevich's requirements for sequential algorithms  as well as the semantics of ASM-programs and the proof of his main theorem. A couple of examples support and explain intuition and motivation of ASM.,2016-03-20
10.1007/BF01463946,Branching processes of Petri nets,SummaryThe notion of a branching process is introduced  as a formalization of an initial part of a run of a Petri net  including nondeterministic choices. This generalizes the notion of a process in a natural way. It is shown that the set of branching processes of a Petri net is a complete lattice  with respect to the natural notion of partial order. The largest element of this lattice is the unfolding of the Petri net.,2014-03-20
10.1007/s00236-006-0016-x,Compositional Analysis of C/C++ Programs with VeriSoft,This paper describes how the state space exploration ool VeriSoft can be used to analyze parallel C/C++ programs compositionally. VeriSoft is employed for two analyses: transition traceanalysis and assume/guarantee reasoning. Both analyses are compositional in the sense that the behaviour of a parallel program is determined in terms of the behaviour of its constituent processes. While both analyses have traditionally been carried out with “pencil and paper”  the paper demonstrates how VeriSoft can be used to automate them. In the context of transition trace analysis  the question whether a given program can exhibit a given trace is addressed with VeriSoft. To implement assume/guarantee reasoning  VeriSoft is used to determine whether a given program satisfies a given assume/guarantee specification. Since VeriSoft’s state space exploration is bounded and thus not complete in general  our proposed analyses are only meant to complement standard reasoning about parallel programs using traces or assume/guarantee specifications. For instance  a successful analysis does not always imply the general correctness of an assume/guarantee specification. However  it increases the confidence in the verification effort. On the other hand  an unsuccessful analysis always produces a counterexample which can be used to correct the specification or the program. VeriSoft’s optimization and visualization techniques make the analyses relatively efficient and effective.,2016-03-20
10.1007/s00236-016-0289-7,Characteristic bisimulation for higher-order session processes,For higher-order (process) languages  characterising contextual equivalence is a long-standing issue. In the setting of a higher-order $$\pi $$π-calculus with session types  we develop characteristic bisimilarity  a typed bisimilarity which fully characterises contextual equivalence. To our knowledge  ours is the first characterisation of its kind. Using simple values inhabiting (session) types  our approach distinguishes from untyped methods for characterising contextual equivalence in higher-order processes: we show that observing as inputs only a precise finite set of higher-order values suffices to reason about higher-order session processes. We demonstrate how characteristic bisimilarity can be used to justify optimisations in session protocols with mobile code communication.,2017-03-20
10.1007/s00236-009-0108-5,Automata-based verification of programs with tree updates,This paper describes a verification framework for Hoare-style pre- and post-conditions of programs manipulating balanced tree-like data structures. Since the considered verification problem is undecidable  we appeal to the standard semi-algorithmic approach in which the user has to provide loop invariants  which are then automatically checked  together with the program pre- and post-conditions. We specify sets of program states  representing tree-like memory configurations  using Tree Automata with Size Constraints (TASC). The main advantage of this new class of tree automata is that they recognise tree languages based on arithmetic reasoning about the lengths of various (possibly all) paths in trees  like  e.g.  in AVL trees or red–black trees. TASCs are closed under union  intersection  and complement  and their emptiness problem is decidable. Thus we obtain a class of automata which are an interesting theoretical contribution by itself. Further  we show that  under few restrictions  one can automatically compute the effect of tree-updating program statements on the set of configurations represented by a TASC  which makes TASC a practical verification tool. We tried out our approach on the insertion procedure for red–black trees  for which we verified that the output on an arbitrary balanced red–black tree is also a balanced red–black tree.,2020-03-20
10.1007/s002360050176,On the generalization of Higman and Kruskal's theorems to regular languages and rational trees,"Abstract. In this paper we give new extensions and generalizations of the Higman and Kruskal theorems. We start with an alphabet 
$A$ equipped by a well quasi-order (wqo) 
$\leq$ and prove that a natural extension of this order to the family of regular languages over 
$A$ is a wqo. A similar extension is given for rational trees with labels in 
$A$  proving that also in this case one obtains a wqo. We prove that the above wqo's are effectively computable  that is  for any two regular languages (rational trees) one can decide whether they are comparable in the given wqo.",
10.1007/BF00625279,Two notions of correctness and their relation to testing,SummaryWe consider two interpretations for what it means for test data to demonstrate correctness. For each interpretation  we examine under what conditions data sufficient to demonstrate correctness exists  and whether it can be automatically detected and/or generated. We establish the relation between these questions and the problem of deciding equivalence of two programs.,2013-03-20
10.1007/s00236-015-0221-6,CCS: It’s not fair!,In the process algebra community it is sometimes suggested that  on some level of abstraction  any distributed system can be modelled in standard process-algebraic specification formalisms like CCS. This sentiment is strengthened by results testifying that CCS  like many similar formalisms  is Turing powerful and provides a mechanism for interaction. This paper counters that sentiment by presenting a simple fair scheduler—one that in suitable variations occurs in many distributed systems—of which no implementation can be expressed in CCS  unless CCS is enriched with a fairness assumption. Since Dekker’s and Peterson’s mutual exclusion protocols implement fair schedulers  it follows that these protocols cannot be rendered correctly in CCS without imposing a fairness assumption. Peterson expressed this algorithm correctly in pseudocode without resorting to a fairness assumption  so it furthermore follows that CCS lacks the expressive power to accurately capture such pseudocode.,2011-03-20
10.1007/s00236-003-0112-0,Coincidental extension of scattered context languages,Abstract. For a symbol  #  and a string  x = a1a2...an - 1an  any string of the form #ia1#ia2#i...#ian - 1#ian#i  where 0  is a coincidental #-extension of x. A language  K  is a coincidental #-extension of L if every string of K represents a coincidental extension of a string in L and the deletion of all #s in K results in L. This paper proves that for every recursively enumerable language  E  there exists a propagating scattered context language that represents a coincidental extension of E.,2018-03-20
10.1007/PL00013317,On the tree inclusion problem,"Abstract. We consider the following problem: Given ordered labeled trees S and T can S be obtained from T by deleting nodes? Deletion of the root node u of a subtree with children 
$(T_1  \ldots T_n)$ means replacing the subtree by the trees 
$T_1  \ldots T_n$. For the tree inclusion problem  there can generally be exponentially many ways to obtain the included tree. P. Kilpelinen and H. Mannila [5 7] gave an algorithm based on dynamic programming requiring 
$O(\mid S\mid.\mid T \mid)$ time and space in the worst case and also on the average for solving this problem. We give an algorithm whose idea is similar to that of [5 7] but which improves the previous one and on the average breaks the 
$\mid S\mid.\mid T \mid$ barrier.",2011-03-20
10.1007/s002360050001,Querying sequence databases with transducers,Abstract. This paper develops a database query language called Transducer Datalog motivated by the needs of a new and emerging class of database applications. In these applications  such as text databases and genome databases  the storage and manipulation of long character sequences is a crucial feature. The issues involved in managing this kind of data are not addressed by traditional database systems  either in theory or in practice. To address these issues  we recently introduced a new machine model called a generalized sequence transducer. These generalized transducers extend ordinary transducers by allowing them to invoke other transducers as “subroutines.” This paper establishes the computational properties of Transducer Datalog  a query language based on this new machine model. In the process  we develop a hierarchy of time-complexity classes based on the Ackermann function. The lower levels of this hierarchy correspond to well-known complexity classes  such as polynomial time and hyper-exponential time. We establish a tight relationship between levels in this hierarchy and the depth of subroutine calls within Transducer Datalog programs. Finally  we show that Transducer Datalog programs of arbitrary depth express exactly the sequence functions computable in primitive-recursive time.,2018-03-20
10.1007/PL00013298,Class hierarchy specialization,"Abstract. Many class libraries are designed with an emphasis on generality and extensibility. Applications often exercise only part of a library's functionality. As a result  the objects created by an application may contain unused (user-specified or compiler-generated) members. Redundant members in objects are undesirable because they increase an application's memory usage.We present an algorithm for specializing a class hierarchy with respect to its usage in a program 
$\cal P$. That is  the algorithm analyzes the member access patterns for 
$\cal P$'s variables  and creates distinct classes for variables that access different members. The algorithm addresses the inheritance mechanisms of C++ in their full generality  including multiple inheritance and virtual (shared) inheritance.Class hierarchy specialization reduces object size  and can be viewed as a space optimization. However  execution time may also be reduced through reduced object creation or destruction time  and caching and paging effects. Class hierarchy specialization may also create new opportunities for existing optimizations such as call devirtualization and inlining. In addition  specialization may be useful in tools for software maintenance and program understanding.",2018-03-20
10.1007/BF00289115,Graph theoretic closure properties of the family of boundary NLC graph languages,"SummaryNode label controlled (NLC) grammars are graph grammars (operating on node labeled undirected graphs) which rewrite single nodes only and establish connections between the embedded graph and the neighbors of the rewritten node on the basis of the labels of the involved nodes only. They define (possibly infinite) languages of undirected node labeled graphs (or  if we just omit the labels  languages of unlabeled graphs). Boundary NLC (BNLC) grammars are NLC grammars with the property that whenever — in a graph already generated — two nodes may be rewritten  then these nodes are not adjacent. The graph languages generated by this type of grammars are called BNLC languages.
The present paper continues the investigations of basic properties of BNLC grammars and languages where the central question is the following: “If L is a BNLC language and P is a graph theoretic property  is the set of all graphs from L satisfying P again a BNLC language?” We demonstrate that the class of BNLC languages is very “stable” in the sense that for almost all properties we consider the resulting languages are BNLC. In particular  the above question gets an affirmative answer  if the property P is: being k-colorable  being connected  having a subgraph homeomorphic to a given graph  and being nonplanar.",2015-03-20
10.1007/BF00268844,The nearest common ancestor in a dynamic tree,SummaryWe consider the problem of determining the nearest common ancestor of two given nodes x and y (denoted by nca(x  y)) in a dynamic arbitrary tree T. We present an implementation of T by a pointer machine which needs linear space  performs m arbitrary insertions and deletions in the initially empty tree T in time O(m) and a query about nca(x  y) can be answered on-line in time O(log(min{depth(x)  depth(y))+α(k k))}  where the second factor is amortized over k queries  α is a functional inverse of Ackermann's function and depth(x) the distance from node x to the root of T.,2011-03-20
10.1007/BF00289148,A family of NP-complete data aggregation problems,SummaryWe consider a family of general aggregation problems and prove each of its members to be NP-complete in the strong sense. These problems require that we partition a set of objects into “aggregates”. The goal is to minimize the expected cost of satisfying an anticipated collection of requests for subsets of the objects  where the cost of satisfying a request includes both the number and the sizes of the aggregates which must be retrieved. The aggregation problems are viewed as very basic versions of important database optimization problems  including: the partitioning of data items into record types  the clustering of records into physical blocks of storage  and the partitioning of a database into granules to support locking. The NP-completeness results demonstrate that such optimization problems are intractable  even when simplified to the extreme. The fact that the problems are NP-complete in the strong sense also rules out pseudopolynomial time solutions  unless P = NP.,2015-03-20
10.1007/BF00264285,On the valuedness of finite transducers,SummaryWe investigate the valuedness of finite transducers in connection with their inner structure. We show: The valuedness of a finite-valued nondeterministic generalized sequential machine (NGSM) M with n states and output alphabet Δ is at most the maximum of (1-⌊1/#Δ⌋) · (2k1· k3)n· nn·#Δn3·k4/3 and ⌊1/#Δ⌋·(2k2·k3·(1+k4))n·nn where k1≦6.25 and k2≦11.89 are constants and k3≧1 and k4≧0 are local structural parameters of M. There are two simple criteria which characterize the infinite valuedness of an NGSM. By these criteria  it is decidable in polynomial time whether or not an NGSM is infinite-valued. In both cases  #Δ > 1 and #Δ = 1  the above upper bound for the valuedness is almost optimal. By reduction  all results can be easily generalized to normalized finite transducers.,2012-03-20
10.1007/s00236-009-0111-x,Symmetry and partial order reduction techniques in model checking Rebeca,Rebeca is an actor-based language with formal semantics which is suitable for modeling concurrent and distributed systems and protocols. Due to its object model  partial order and symmetry detection and reduction techniques can be efficiently applied to dynamic Rebeca models. We present two approaches for detecting symmetry in Rebeca models: One that detects symmetry in the topology of inter-connections among objects and another one which exploits specific data structures to reflect internal symmetry in the internal structure of an object. The former approach is novel in that it does not require any input from the modeler and can deal with the dynamic changes of topology. This approach is potentially applicable to a wide range of modeling languages for distributed and reactive systems. We have also developed a model checking tool that implements all of the above-mentioned techniques. The evaluation results show significant improvements in model size and model-checking time.,2012-03-20
10.1007/BF01178504,Context-free hypergraph grammars have the same term-generating power as attribute grammars,Context-free hypergraph grammars and attribute grammars generate the same class of term languages. Extending the context-free hypergraph grammar with a context-free grammar and a semantic domain  a syntax-directed translation device is obtained that is equivalent to the attribute grammar.,2018-03-20
10.1007/BF00288653,Normal forms for context-sensitive grammars,SummaryIn this paper  we mainly study the relation between scattered context grammars  which are an example for regulated context-free rewriting devices  and context-sensitive grammars. Emphasis is laid upon both normal form characterizations of context-sensitive grammars and an argument in how far scattered context grammars are stronger  with respect to generative capacity than unordered scattered context grammars.,2018-03-20
10.1007/BF00289160,Iterated GSMs and Co-CFL,SummaryWe study the infinite words generated by an iterated gsm. The motivation was two fold. The first one was given by the apparent similarity between the iterated gsm and the iterated morphism. However contrary to the appearences almost all questions become undecidable. The second one was to disprove the following conjecture of Berstel: The language of coprefixes of an infinite word w is context free iff w is generated by an iterated gsm. We use for that the infinite word: w = abca2ba2bca4ba4ba2ba4bc ... (a2nb)2nc .... We prove also that the degree of the ambiguity problem for coprefixes of iterated gsm is Π1-complete in the Kleene hierarchy. This result fills the gap between the degree of this problem for iterated morphisms which is Π0 and for arbitrary context-free grammars which is Π2-complete.,2014-03-20
10.1007/S00236-003-0123-X,A distributed QoS-Aware multicast routing protocol,This paper discusses the multicast routing problem with QoS constraints  and describes a network model that is suitable to research such routing problem. The paper mainly presents a distributed QoS-aware multicast routing protocol (QMRP). The QMRP can operate on top of the unicast routing protocol. It only requires the local state information of the link (or the node)  but does not require any global network state to be maintained. The QMRP can significantly reduce the overhead for constructing a multicast tree with QoS constraints. In QMRP  a multicast group member can join or leave the multicast session dynamically  which can support dynamic membership. The protocol can search multiple feasible tree branches  and select the optimal or near-optimal branch for connecting the new receiver to the multicast tree if it exists. In this paper  the proof of correctness and complexity analysis of the QMRP are given  and the performance measures of the protocol are evaluated using simulation. The study shows that QMRP provides an available approach to multicast routing with QoS constraints and dynamic membership support.,2013-03-20
10.1007/BF00264230,Drawing plane graphs nicely,SummaryThis paper presents two efficient algorithms for drawing plane graphs nicely. Both draw all edges of a graph as straight line segments without crossing lines. The first draws a plane graph “convex” if possible  that is  in a way that every inner face and the complement of the outer face are convex polygons. The second  using the first  produces a pleasing drawing of a given plane graph that satisfies the following property as far as possible: the complements of 3-connected components  together with inner faces and the complement of the outer face  are convex polygons. The running time and storage space of both algorithms are linear in the number of vertices of the graph.,2012-03-20
10.1007/BF00289095,A useful lemma for context-free programmed grammars,We show that all quasi-realtime one-way multi-counter languages can be generated by a context-free ɛ-free programmed grammar (even under the free interpretation). The result can be used to obtain a new and almost trivial proof of the fundamental theorem that arbitrary context-free programmed grammars can generate all recursively enumerable languages. The proof of our result also yields the following  interesting characterization: the quasi-realtime one-way multi-counter languages are precisely the ɛ-limited homomorphic images of (free) context-free programmed production languages. It follows that the (free) derivation languages of context-free or even context-free programmed grammars  which were known to be context-sensitive  are in fact contained in the family of context-free ɛ-free programmed languages.,2012-03-20
10.1007/s00236-013-0190-6,Visibly rational expressions,Regular expressions (RE) are an algebraic formalism for expressing regular languages  widely used in string search and as a specification language in verification. In this paper  we introduce and investigate visibly rational expressions (VRE)  an extension of RE for the class of visibly pushdown languages (VPL). We show that VRE capture precisely the class of VPL. Moreover  we identify an equally expressive fragment of VRE which admits a quadratic time compositional translation into the automata acceptors of VPL. We also prove that  for this fragment  universality  inclusion and language equivalence are EXPTIME-complete. Finally  we provide an extension of VRE for VPL over infinite words.,2011-03-20
10.1007/s00236-008-0071-6,Relational structures model of concurrency,The paper deals with the foundations of concurrency theory. We show how structurally complex concurrent behaviours can be modelled by relational structures $${(X  \diamondsuit  \sqsubset)}$$   where X is a set (of event occurrences)  and $${\diamondsuit}$$ (interpreted as commutativity) and $${\sqsubset}$$ (interpreted as weak causality) are binary relations on X. The paper is a continuation of the approach initiated in Gaifman and Pratt (Proceedings of LICS’87  pp 72–85  1987)  Lamport (J ACM 33:313–326  1986)  Abraham et al. (Semantics for concurrency  workshops in computing. Springer  Heidelberg  pp 311–323  1990) and Janicki and Koutny (Lect Notes Comput Sci 506:59–74  1991)  substantially developed in Janicki and Koutny (Theoretical Computer Science 112:5–52  1993) and Janicki and Koutny (Acta Informatica 34:367–388  1997)  and recently generalized in Guo and Janicki (Lect Notes Comput Sci 2422:178–191  2002) and Janicki (Lect Notes Comput Sci 3407:84–98  2005). For the first time the full model for the most general case is given.,2014-03-20
10.1007/BF00288976,Metatheorems for decision problems on hyperedge replacement graph languages,SummaryIf a graph-theoretical property is compatible with the derivation process of hyperedge replacement graph grammars in a certain way  the property turns out to be decidable for the corresponding graph languages. More exactly speaking  we consider two questions:(1)Is there a graph in the generated language having the property?(2)Do all graphs in the generated language have the property?In both cases  we get decidability for all hyperedge replacement graph grammars as inputs. Colorability  Hamiltonicity  and planarity are shown to be compatible so that our decidability results apply to them.,2014-03-20
10.1007/s002360100072,Tree-systems of morphisms,Abstract. Starting from the idea of determinism in membrane systems  we introduce a language generating device consisting of morphisms placed in the nodes of a tree. Initial strings are given in the leaves; by iteratively applying the morphisms to them  we produce new strings  which are collected in the root of the tree. Such a device is called a tree-system of morphisms (in short  a T system). We investigate here the power of T systems  both in the extended (a terminal alphabet is considered and only strings over it are accepted) and non-extended case  mainly in comparison with classes of languages in Lindenmayer hierarchy.,2014-03-20
10.1007/s00236-004-0145-z,Approximation schemes for the Min-Max Starting Time Problem,Abstract.We consider the off-line scheduling problem of minimizing the maximal starting time. The input to this problem is a sequence of n jobs and m identical machines. The goal is to assign the jobs to the machines so that the first time at which all jobs have already started running is minimized  under the restriction that the processing of the jobs on any given machine must respect their original order. Our main result is a polynomial time approximation scheme (PTAS) for this problem in the case where m is considered as part of the input. As the input to this problem is a sequence of jobs  rather than a set of jobs where the order is insignificant  we present techniques that are designed to handle order constraints imposed by the sequence. Those techniques are combined with common techniques of assignment problems in order to yield a PTAS for this problem. We also show that when m is a constant  the problem admits a fully polynomial time approximation scheme. Finally  we show that the makespan problem in the linear hierarchical model may be reduced to the min-max starting time problem  thus concluding that the former problem also admits a PTAS.,2019-03-20
10.1007/BF01178563,On parallel integer sorting,We present an optimal algorithm for sortingn integers in the range [1 nc] (for any constantc) for the EREW PRAM model where the word length isnε  for any ε>0. Using this algorithm  the best known upper bound for integer sorting on the (O(logn) word length) EREW PRAM model is improved. In addition  a novel parallel range reduction algorithm which results in a near optimal randomized integer sorting algorthm is presented. For the case when the keys are uniformly distributed integers in an arbitrary range  we give an algorithm whose expected running time is optimal.,2011-03-20
10.1007/s002360000046,Demonic  angelic and unbounded probabilistic choices in sequential programs,Abstract. Probabilistic predicate transformers extend standard predicate transformers by adding probabilistic choice to (transformers for) sequential programs; demonic nondeterminism is retained. For finite state spaces  the basic theory is set out elsewhere [17]  together with a presentation of the probabilistic ‘healthiness conditions’ that generalise the ‘positive conjunctivity’ of ordinary predicate transformers.Here we expand the earlier results beyond ordinary conjunctive transformers  investigating the structure of the transformer space more generally: as Back and von Wright [1] did for the standard (non-probabilistic) case  we nest deterministic  demonic and demonic/angelic transformers  showing how each subspace can be constructed from the one before. We show also that the results hold for infinite state spaces.In the end we thus find characteristic healthiness conditions for the hierarchies of a system in which deterministic  demonic  probabilistic and angelic choices all coexist.,2011-03-20
10.1007/BF00289066,The clean termination of Pascal programs,The axiomatic definition of PASCAL takes no account of the finite bounds of real computers. It is proposed that the bounds of differing machines may be accounted for in the PASCAL definition by the use of an axiom schema with machine dependent parameters. If these parameters are available to the program prover and to the program it is possible to prove the clean termination of a program on a particular bounded machine. The use of a parameterised definition for all PASCAL machines  means that clean termination can be guaranteed over a range of machines. In particular a programmer may prove his program against a set of bounds chosen for ease of proof  as long as the implemented machine is “larger”.,2015-03-20
10.1007/s00236-010-0129-0,Avoidable binary patterns in partial words,The problem of classifying all the avoidable binary patterns in (full) words has been completely solved (see Chap. 3 of M. Lothaire  Algebraic Combinatorics on Words  Cambridge University Press  2002). In this paper  we classify all the avoidable binary patterns in partial words  or sequences that may have some undefined positions called holes. In particular we show that  if we do not substitute any variable of the pattern by a partial word consisting of only one hole  the avoidability index of the pattern remains the same as in the full word case.,2018-03-20
10.1007/BF00263927,Storage utilization in B*-trees with a generalized overflow technique,SummaryWe analyze storage utilization in random B*-trees (trees  where all data are stored in the leaf nodes). Extending a proposal of Bayer and McCreight  in case of insertion into a full node  up to m}-1 adjacent nodes are scanned for empty space. If this search is successful  entries are shifted on leaf level to gain free space for the new one; otherwise  the entries of the m nodes scanned are distributed as uniformly as possible over m}+1 nodes. Using iterative models it is shown that for large trees of high order storage utilization converges to m · ln((m}+1)/m).,2016-03-20
10.1007/BF00288658,An alternative approach to the improvement of LR(k) parsers,SummaryThe methods of improving LR(k) parsers proposed by DeRemer and Korenjak are shown to be based on a single concept — that of modifying the contextual information on which parsing decisions are made. This concept is then used to derive a straightforward algorithm for eliminating unit productions from an LR parser.,2018-03-20
10.1007/BF00263990,Efficient LL(1) error correction and recovery using only insertions,An LL(1)-based error-corrector which operates by insertion-only is studied. The corrector is able to correct and parse any input string. It is efficient (linear in space and time requirements) and chooses least-cost insertions (as defined by the user) in correcting syntax errors. Moreover  the error-corrector can be generated automatically from the grammar and a table of terminal symbol insertion costs. This method is also very well suited for use as an automatic error-recovery technique in LL(1) parsers. The class of LL(1) grammars correctable by this method contains (with minor modifications) grammars used to specify most common programming languages. Preliminary results suggest that this method can be used to advantage in LL(1)-driven compilers.,2011-03-20
10.1007/s00236-014-0211-0,Richer interface automata with optimistic and pessimistic compatibility,Modal transition systems are a popular semantic underpinning of interface theories  such as Nyman et al.’s IOMTS and Bauer et al.’s MIO  which facilitate component-based reasoning for concurrent systems. Our interface theory MIA repaired a compositional flaw of IOMTS-refinement and introduced a conjunction operator. In this paper  we first modify MIA to properly deal with internal computations including internal must-transitions  which were largely ignored already in IOMTS. We then study a MIA variant that adopts MIO’s pessimistic—rather than IOMTS’ optimistic—view on component compatibility and define  for the first-time in a pessimistic  non-deterministic setting  conjunction and disjunction on interfaces. For both the optimistic and pessimistic MIA variant  we also discuss mechanisms for extending alphabets when refining interfaces  which is a desired feature for perspective-based specification. We illustrate our advancements via a small example.,2011-03-20
10.1007/s002360050042,Bounded delay for a free address,The problem is to let n processes concurrently and repeatedly search for free addresses in a range of m addresses. The search must be wait-free: a searching process finds an address in a bounded number of steps. Three solutions are presented. The first one has large atomic actions. The second one is only correct if m ≧ (r + 1) · n where r is the maximum number of used addresses. The third solution is always partially correct. It is wait-free if m > r + 2 · n. This solution has a worst-case waiting time quadratic in n and an amortized waiting time linear in n  even linear in the number of active processes.,
10.1007/BF00290709,Generalized theory of serializability,SummaryAn interleaved execution of transactions in a database system is serializable if the effect of the execution is equivalent to that of some serial execution of the transactions. Several notions of serializability have been defined in the literature. They differ with respect to whether the effect is equivalent regarding the values read by the transactions or the final database state  that is  the values read by the fictitious final transaction. We introduce a generalized notion called S-serializability  where the subset S of transactions read the same values as in some serial execution. We also introduce C-serializability where the final values for the subset C of data items are the same as in some serial execution. By combining these two notions  we get (S + C)-serializability. We give simple and intuitive characterizations for all these notions of serializability.,2013-03-20
10.1007/s00236-016-0286-x,A new bound for the D0L language equivalence problem,We study the language equivalence problem for smooth and loop-free D0L systems. We show that the number of initial terms in the associated D0L sequences we have to consider to decide language equivalence depends only on the cardinality of the underlying alphabet.,2015-03-20
10.1007/PL00013302,Semantics analysis through elementary meanings,Abstract. Thesaurus is a collection of words classified according to some relatedness measures among them. In this paper  we lay the theoretical foundations of thesaurus construction through elementary meanings of words. The concept of elementary meanings has been advocated and utilized in compiling Webster's Collegiate Thesaurus. If each word is supplied with elementary meanings so that all its meanings are covered by them in a standard fashion  we can define various similarity measures for a given set of words. Here we take an axiomatic way to analyze semantic structure of word groups. Assuming an abstract semantic world  we deduce closed sets as generalized synonym sets. That is  we show that under certain natural axioms  we only need to consider closed sets as far as the semantics are concerned. We also show that the set of generalized synonyms described as a certain pair of closed sets has a lattice structure. In order to have a flexible thesaurus  we also analyze structure changes corresponding to three basic environmental changes: A new word-meaning relation is added  a new word or a new meaning is included with its word-meaning relations. Actually we give algorithms to have updated lattice structure from previous one for the three operations.,2014-03-20
10.1007/BF00264355,On parsing arithmetic expressions in a multiprocessing environment,SummarySome decomposition of the parsing of the sentences of context-free grammars into sequences of independant sub-tasks is proposed. An example of grammar is presented  for which this decomposition provides an efficient parser for a multiprocessing environment. The average speed-up resulting from the parallelization of the parser of an arithmetic infix grammar is evaluated by means of probabilistic models and real world measurements.,2016-03-20
10.1007/s00236-006-0021-0,Representing the integers with powers of 2 and 3,The Collatz sequence (n0 n1 ...) is defined by nk+1 = 3nk + 1 or nk/2 depending on nk being odd or even  respectively. The Collatz conjecture (one of the most challenging open problems in Number Theory) states then that nk = 1 for some k depending on n0. This conjecture can be reformulated in a variety of ways  some of them seemingly more amenable to the methods of discrete mathematics. In this paper  we derive one such equivalent formulation involving exponential Diophantine equations. It follows that if the Collatz conjecture is true  then any number can be represented as sums of positive powers of 2 and negative powers of 3.,2013-03-20
10.1007/BF00291053,Cooperative distributed dynamic load balancing,SummaryThis paper explores and applies the concept of cooperation to the load balancing problem in a computer network. We discuss an analytical model and propose a scheme which can be classified as distributed  dynamic  and stochastic. In the case of a homogeneous network  we guarantee that the load is balanced and no communication cost or information exchange is necessary.,2019-03-20
10.1007/BF00264227,On scheduling tasks with exponential service times and in-tree precedence constraints,SummaryIn this paper we extend the work of Chandy and Reynolds in which they considered the problem of scheduling tasks on two identical processors. The processing times of the tasks are independent  identically distributed exponential random variables. The tasks are subject to in-tree precedence constraints. Chandy and Reynolds have shown that the expected value of the makespan is minimized if and only if the scheduling policy is Highest-Level-First (HLF). We extend their result by showing that a policy maximizes the probability that all tasks finish by some time t≧0 if and only if the policy is HLF. Additionally  we show that a policy maximizes the probability that the sum of the finishing times of all the tasks is less than some value s≧0 if and only if the policy is HLF.,2011-03-20
10.1007/BF00289416,A three-stage construction for multiconnection networks,SummaryA multiconnection network of size N is a switching network with N inputs and N outputs which realizes multiconnections  i.e.  connections between the N inputs and N outputs in such a way that every output is connected to exactly one input  but an input can be connected to an arbitrary number of outputs. That network is complete if it can realize all NN multiconnections. This structure generalizes the permutation network. We consider here the design of multiconnection networks by a three-stage Clos network using complete substitution networks as its building cells and we show that the resulting multiconnection network is complete if and only if the cells in the middle stage have size 2. Moreover  we describe the control algorithm for such a network. This leads to the design of cellular multiconnection networks of arbitrary size with a relatively simple control algorithm.,2011-03-20
10.1007/BF00264353,Deleting the root of a heap,SummaryThe average behavior of the familiar algorithm for root deletion is considered  when every heap has the same probability to occur. The analysis centers around the notion of a viable path in the tree representation  i.e. such a path the label which replaces the label of the root may be allowed to travel when the heap is reconstructed. In case the size of the heap is a power of 2 it is shown that both the expected number of comparisons and of interchanges are asymptotically equal to the respective numbers in the worst case.,2020-03-20
10.1007/BF02915449,High level tree transducers and iterated pushdown tree transducers,Summaryn-level tree transducers (n≧0) combine the features ofn-level tree grammars and of top-down tree transducers in the sense that the derivations of the tree grammars are syntax-directed by input trees. For runningn  the sequence ofn-level tree transducers starts with top-down tree transducers (n=0) and macro tree transducers (n=1). In this paper the class of tree-to-tree translations computed byn-level tree transducers is characterized byn-iterated pushdown tree transducers. Such a transducer can be considered as a regular tree grammar of which the derivations are syntax-directed byn-iterated pushdowns of trees; ann-iterated pushdown of trees is a pushdown of pushdowns of ... of pushdowns (n times) of trees. In particular  we investigate the total deterministic case  which is relevant for syntax-directed semantics of programming languages.,2017-03-20
10.1007/s00236-003-0118-7,Sticky-free and overhang-free DNA languages,Abstract.An essential step of any DNA computation is encoding the input data on single or double DNA strands. Due to the biochemical properties of DNA  complementary single strands can bind to one another forming double-stranded DNA. Consequently  data-encoding DNA strands can sometimes interact in undesirable ways when used in computations. It is crucial thus to analyze properties that guard against such phenomena and study sets of sequences that ensure that no unwanted bindings occur during any computation. This paper formalizes and investigates properties of DNA languages that guarantee their robusteness during computations. After defining and investigating several types of DNA languages possessing good encoding properties  such as sticky-free and overhang-free languages  we give algorithms for deciding whether regular DNA languages are invariant under bio-operations. We also give a method for constructing DNA languages that  in addition to being invariant and sticky-free  possess error-detecting properties. Finally  we present the results of running tests that check whether several known gene languages (the set of genes of a given organism) as well as the input DNA languages used in Adleman’s DNA computing experiment  have the defined properties.,2018-03-20
10.1007/BF00283332,The complexity of reachability in distributed communicating processes,SummaryA crucial problem in the analysis of communicating processes is the detection of program statements that are unreachable due to communication deadlocks. In this paper  we consider the computational complexity of the reachability problem for various models of communicating processes. We obtain these models by making simplifying assumptions about the behavior of message queues and program control  with the hope that reachability may become easier to decide. Depending on the assumptions made  we show that reachability is undecidable  requires nearly exponential space infinitely often  or is NP-complete. In obtaining these results  we demonstrate a very close relationship between the decidable models and Petri nets and Habermann's path expressions  respectively.,2015-03-20
10.1007/s002360050108,Unconditional transfer in regulated rewriting,"Abstract. In this paper  we investigate the concept of unconditional transfer within various forms of regulated grammars like programmed grammars  matrix grammars  grammars with regular control  grammars controlled by bicoloured digraphs  periodically time-variant grammars and variants thereof  especially regarding their descriptive capacity. In this way  we solve some problems from the literature. Furthermore  we correct a construction from the literature. Most of the results of the present paper have been announced in [11].
",2017-03-20
10.1007/s002360050133,On finite automata with limited nondeterminism,"Abstract. We develop a new algorithm for determining if a given nondeterministic finite automaton is limited in nondeterminism. From this  we show that the number of nondeterministic moves of a finite automaton  if limited  is bounded by 
$2^{n} - 2$ where 
$n$ is the number of states. If the finite automaton is over a one-letter alphabet  using Gohon's result the number of nondeterministic moves  if limited  is less than 
$n^{2}$. In both cases  we present families of finite automata demonstrating that the upper bounds obtained are almost tight. We also show that the limitedness problem of the number of nondeterministic moves of finite automata is PSPACE-hard. Since the problem is already known to be in PSPACE  it is therefore PSPACE-complete.
",2012-03-20
10.1007/BF00263581,Complexity of distributed commit protocols,SummaryImplementation of atomic actions in a distributed system in the presence of fail-stop failures is investigated. Worst case time and message complexities of the protocols realizing this are studied on complete graphs  rings  trees  and arbitrary graphs. Two modes of communication are considered — point-to-point and broadcast. Individual lower and upper bounds on time and messages are presented and the simultaneous achievability of the optimum message and time bounds is shown impossible in all the interesting cases.,2016-03-20
10.1007/BF00266047,COSY — a system specification language based on paths and processes,SummaryA new notation for specifying systems of concurrent processes sharing distributed systems of resources is introduced and the utility of the notation is demonstrated by defining novel  highly concurrent and distributed algorithms performing important operating system functions. The notation permits a clear and logical development of the algorithms from an analysis of its component notions; such as various buffer types  as well as non-priority and priority resource management strategies; without any reference to implementation detail. This property of the notation facilitates both the validation of the algorithms as well as their novel  highly concurrent and distributed implementation.,2014-03-20
10.1007/BF03036461,A kernel language for programmed rewriting of (hyper)graphs,The paper presents a formalism for rewriting (hyper)graphs in a controlled manner. This formalism is essentially a simple programming language with productions  that is rewriting rules  playing the role of basic instructions. Programs in this language are built from productions by means of rather standard constructors  including a parallel composition. They may contain parameters to point to specific elements of graphs to which they are supposed to be applied. Programs are intended to describe how to transform a graph and a valuation of parameters in this graph in order to reach a resulting graph and a resulting valuation of parameters.,2012-03-20
10.1007/s00236-017-0292-7,Special issue: Selected papers from the 26th International Conference on Concurrency Theory (CONCUR 2015),The February  April and June 2017 issues of Acta Informatica are devoted to presenting carefully refereed  full versions of selected papers from CONCUR 2015  the 26th International Conference on Concurrency Theory  whose program committee we had the pleasure of co-chairing. The conference was held in the period 1–4 September 2015 at the Facultad de Matemáticas  Universidad Complutense de Madrid  and was co-located with the 12th International Conference on Quantitative Evaluation of SysTems (QEST 2015)  the 13th International Conference on Formal Modeling and Analysis of Timed Systems (FORMATS 2015)  the 10th International Symposium on Trustworthy Global Computing (TGC 2015)  the International SymposiumonWebServices  FormalMethods andBehavioural Types (WS-FM/BEAT 2015)  and seven workshops. The eight papers that appear in this issue and the two following ones were selected based on the referee reports we received on their conference versions and on the ensuing discussion among the program committee members. They witness the high quality of the scientific program of CONCUR 2015 and reflect current trends in research in concurrency theory. The February 2017 issue of Acta Informatica  which you are currently reading  contains three papers dealing with games and the role they play in the synthesis of computing systems from their specifications. The contribution by Hunter  Pérez and Raskin deals with the syn-,2013-03-20
10.1007/BF00264293,On hierarchies of abstract data types,SummaryHierarchical abstract data types are algebraic specifications of computation structures where certain sorts  function symbols  and axioms are designated as being primitive. On hierarchical abstract data types additional structure is imposed. An algebraic specification is thus decomposed into several well-separated levels  such that both the understanding and the independent implementation of the levels is supported. This paper provides both model-theoretic and deduction-oriented conditions guaranteeing the soundness of a hierarchical specification. Furthermore necessary and sufficient conditions for the existence of initial and terminal models are investigated  and their close connection to the soundness of a hierarchy is demonstrated. In order to provide freedom and flexibility for specifications a wide class of axioms — namely universal-existential formulas — are admitted.,2013-03-20
10.1007/BF00625277,Some modified algorithms for Dijkstra's longest upsequence problem,SummaryUsing the techniques of “specification and transformation by parts”  algorithms are derived for the longest upsequence problem. First Dijkstra's algorithm and then two new modified merge algorithms are derived and presented in detail. The merge algorithms take advantage of natural runs in the input sequence and have a worst caseO(n logn) time complexity when appropriate merging techniques are used  but can be linear if long runs are present in the sequence. The first merge algorithm is logically equivalent to Dijkstra's algorithm; the second algorithm is based on the first one but uses a different merging technique. Expository remarks describe related results which evolved out of our work in programming by transformation; in particular  parallels are drawn between algorithms for the longest upsequence problem and algorithms for sorting.,2017-03-20
10.1007/BF00276185,EOL forms,SummaryIn this paper the notions of “L form” and its “interpretations” are introduced to define families of structurally similar L systems. The families of L systems thus defined are studied from a number of different points of view. It is felt that this novel approach will shed new light on many questions concerning L systems.,2018-03-20
10.1007/BF01186646,Iterative weighted finite transductions,We investigate 2-tape weighted finite automata called weighted finite transducers (WFT) and their applications to image processing. We show that probabilistic mutually recursive function systems (PMRFS) can be simulated by iterative weighted fimite transductions. We conjecture that iterative WFT are stronger than PMRFS and give examples of WFT that support this conjecture. We also show that the family of images defined by iterative WFT is closed under continuous invertible WFT relations which include invertible affine transformations as a special case. We give examples of iterative WFT which can compute mathematical functions given by a Taylor series with “regular” coefficients which cannot be computed by WFA. We discuss the implementation of an efficient image manipulation system which includes the implementation of efficient algorithms for the application of a WFT to an image in either pixel or WFA representation and for composition of WFT. The system also includes the Culik-Kari recursive WFA inference algorithm as a conversion from pixel representation to WFA representation.,2019-03-20
10.1007/BF00268498,Another polynomial homomorphism,SummaryThe current proposals for applying the so called “fast” O(N logaN) algorithms to multivariate polynomials is that the univariate methods be applied recursively  much in the way more conventional algorithms are used. Since the size of the problems is rather large for which a “fastrd algorithm is more efficient than a classical one  the recursive approach compounds this size completely out of any practical range”.The degree homomorphism is proposed here as an alternative to this recursive approach. It is argued that methods based on the degree homomorphism and a “fast” algorithm may be viable alternatives to more conventional algorithms for certain multivariate problems in the setting of algebraic manipulation. Several such problems are discussed including: polynomial multiplication  powering  division (both exact and with remainder)  greatest common divisors and factoring.,2015-03-20
10.1007/s002360050070,"A direct complement construction for 
$LR(1)$ grammars
","Abstract.The traditional complement construction for 
$LR(1)$ grammars is long and tedious and causes all of the structure of the original grammar to be lost. A new construction method is introduced which produces a complement grammar that is closely related to the original grammar and therefore amenable to further analysis. The method is demonstrated by means of a nontrivial example.",2014-03-20
10.1007/BF00264436,Verification of programs with procedure-type parameters,SummaryA verification system is developed for proving the correctness of programs containing procedures with procedure-type parameters. The system  which reduces programs and their specifications to assertions to be proved in ordinary logic  is shown to be logically sound. The reduction process is controlled by the syntax of the program and is completely mechanical  requiring no human intervention. The resulting assertions involve higher-order predicates  but they engender no significant difficulties which are not already present in ordinary first-order theories.Our system views the intermediate objects in the reduction process as extended programs  thereby making verification a much less abstruse process. Treating logical assertions as commands appeals strongly to a programmer's intuition.,2018-03-20
10.1007/s00236-017-0299-0,Special issue: Synthesis and SYNT 2014,The ubiquity of computation in modern machines and devices imposes a need to assert the correctness of their behavior. Especially in the case of safety-critical systems  their designers need to take measures that enforce their safe operation. Formal methods has emerged as a research field that addresses this challenge: by rigorously proving that all system executions adhere to their specifications  the correctness of an implementation under concern can be assured. To achieve this goal  a plethora of techniques are nowadays available  all of which are optimized for different system types and application domains. But formal methods do not stop at the idea to verify a system to be correct after it has been constructed. Already in the early years of computer science  the desire to automate the system engineering process to the greatest possible extent was formulated. For reactive systems  this is commonly referred to as Church’s problem: given a specification over some set of propositions  and a partitioning of the propositions into outputs that the system to be designed can set  and inputs that it cannot  the question is to algorithmically determine if there exists a suitable implementation  and to compute onewhenever there exists one. Starting from the definition of the problem in the 60s and the first principal solutions to the problem by Büchi  Clarke  Emerson  Rabin  Pnueli  and Rosner  the field of reactive synthesis made substantial progress on increasing the scalability of the synthesis process. Meanwhile  the research area of software synthesis emerged from the desire to automate parts of the modern software development process. The focus in this case is slightly different than in reactive synthesis: rather than synthesizing non-terminating designs  most software synthesis methods aim at the automatic derivation of moderately sized terminating code fragments. The focus here is to help the software designer with writing themost difficult parts of a program  and only requiring a formal specification of such parts. Again  a multitude of,2019-03-20
10.1007/s00236-015-0241-2,A life dedicated to informatics: an obituary for Prof. Friedrich L. Bauer,On Thursday  the 26th April 2015  Friedrich L. Bauer  Professor emeritus at the Faculty of Informatics at the TechnischenUniversitatMunchen  passed away at the age of 90 following a prolonged illness. Informatics inGermany looses one of itsmost influential pioneers.With his contributions  Friedrich L. Bauer decisively influenced over several stages the development of a discipline that shaped our world like no other in the last 50years. After WW2 and a short period of being a prisoner of war  Friedrich Bauer started his studies in mathematics and physics. He worked towards his Ph.D. under the supervision Prof. Fritz Bopp  the successor of Arnold Sommerfeld at the chair of Theoretical Physics at the Ludwig-Maximilians-Universitat Munchen. Already after 3years  he obtained his doctoral degree. Inspired by a report of the Swiss professor Heinz Rutishauser on the topic of electrical computers  Bauer studiedClaude Shannon’s switching algebra aswell as thework of John von Neumann. Bauer’s attention was drawn to a confidential seminar of mathematician Robert Sauer  professor for Mathematics for Engineers at the Technischen Universitat Munchen ,2013-03-20
10.1007/BF00277387,Referential transparency  definiteness and unfoldability,SummaryThe term “referential transparency” is frequently used to indicate that a programming language has certain useful substitution properties. We observe  however  that the formal and informal definitions given in the literature are not equivalent and we investigate their relationships. To this end  we study the definitions in the context of a simple expression language and show that in the presence of non-determinism  the differences between the definitions are manifest. We propose a definition of “referential transparency”  based on Quine's  as well as of the related notions: definiteness and unfoldability. We demonstrate that these notions are useful to characterize programming languages.,2018-03-20
10.1007/s002360050136,Polytime model checking for timed probabilistic computation tree logic,"Abstract. We consider the model checking problem for Timed Probabilistic Computation Tree Logic (TPCTL) introduced by H.A. Hansson and D. Jonsson  and studied in a recent book by H.A. Hansson [Han94]. The semantics of TPCTL is defined in terms of probabilistic transition systems. It is shown in [Han94] that model checking for TPCTL has exponential time complexity  the latter being measured in terms of the size of formula  the size of transition system and the value of explicit time that appears in the formula. Besides that  [Han94] describes some polytime decidable classes  the proofs being rather voluminous. We show  by a short proof  that this model checking problem is polytime decidable in the general case. The proof is essentially based on results on the complexity of Markov decision processes.
",2012-03-20
10.1007/BF01193577,Unbalanced multiway trees improved by partial expansions,Unbalanced multiway trees are generally impractical external data structures because of their poor space performance. In order to avoid this handicap  we have adapted the technique of partial expansions to these trees. Compared to partially expandedB+-trees in terms of average performance  the method proposed is faster  has more compact indexes  and shows the same almostoptimal asymptotic space performance at the data bucket level.,2012-03-20
10.1007/s00236-016-0271-4,A general account of coinduction up-to,Bisimulation up-to enhances the coinductive proof method for bisimilarity  providing efficient proof techniques for checking properties of different kinds of systems. We prove the soundness of such techniques in a fibrational setting  building on the seminal work of Hermida and Jacobs. This allows us to systematically obtain up-to techniques not only for bisimilarity but for a large class of coinductive predicates modeled as coalgebras. The fact that bisimulations up to context can be safely used in any language specified by GSOS rules can also be seen as an instance of our framework  using the well-known observation by Turi and Plotkin that such languages form bialgebras. In the second part of the paper  we provide a new categorical treatment of weak bisimilarity on labeled transition systems and we prove the soundness of up-to context for weak bisimulations of systems specified by cool rule formats  as defined by Bloom to ensure congruence of weak bisimilarity. The weak transition systems obtained from such cool rules give rise to lax bialgebras  rather than to bialgebras. Hence  to reach our goal  we extend the categorical framework developed in the first part to an ordered setting.,2015-03-20
10.1007/s00236-016-0277-y,Model-checking iterated games,We propose a logic for the definition of the collaborative power of groups of agents to enforce different temporal objectives. The resulting temporal cooperation logic (TCL) extends ATL by allowing for successive definition of strategies for agents and agencies. Different to previous logics with similar aims  our extension cuts a fine line between extending the power and maintaining a low complexity: model checking TCL sentences is EXPTIME complete in the logic  and NL complete in the model. This advancement over nonelementary logics is bought by disallowing a too close entanglement between the cooperation and competition. We show how allowing such an entanglement immediately leads to a nonelementary complexity. We have implemented a model checker for the logic and shown the feasibility of model checking on a few benchmarks.,2011-03-20
10.1007/BF00289240,A characterization of systolic binary tree automata and applications,SummaryThis paper has two main contributions. The first is a natural and useful characterization of systolic binary tree automata (BTA's) in terms of a simple class of Turing machines. The second is a proof technique for showing that a language is not accepted by a BTA. Various closure properties of languages accepted by BTA's are easily obtained from these two results.,2015-03-20
10.1007/s00236-007-0044-1,A criterion for atomicity revisited,Concurrent and reactive programs are specified by their behaviours in the presence of a nondeterministic environment. In a natural way  this gives a specification (ARW) of an atomic variable in the style of Abadi and Lamport. Several implementations of atomic variables by lower level primitives are known. A few years ago  we formulated a criterion to prove the correctness of such implementations. The proof of correctness of the criterion itself was based on Lynch’s definition of atomicity by serialization points. Here  this criterion is reformulated as a specification HRW in the formal sense. Simulations from HRW to ARW and vice versa are constructed. These now serve as a constructive proof of correctness of the criterion. Eternity variables are used in the simulation from HRW to ARW. We propose so-called gliding simulations to deal with the problems that appear when occasionally the concrete implementation needs fewer steps than the abstract specification.,2018-03-20
10.1007/PL00013315,A construction of distributed reference counting,Abstract. Distributed reference counting is a general purpose technique  which may be used  e.g.  to detect termination of distributed programs or to implement distributed garbage collection. We present a distributed reference counting algorithm and a mechanical proof of correctness carried out using the proof assistant Coq. The algorithm is formalised by an abstract machine  and its correctness has two different facets. The safety property ensures that if there exists a reference to a resource  then its reference counter will be strictly positive. Liveness guarantees that if all references to a resource are deleted  its reference counter will eventually become null.,
10.1007/s00236-002-0091-6,Generalized normal form for rewriting P systems,Abstract. P systems  introduced by Gh. Păun [9] as a new theoretical model for molecular computations  are based on the notion of membrane structure. Several variants of P systems have been proposed and shown to be computationally universal. One of such variant is the rewriting P systems  where we consider string-objects and process them using rewriting rules. Particular cases of normal forms for rewriting P systems were proposed in [11–13]. In this work we introduce the generalized normal form for rewriting P systems which take into consideration the depth of the membrane structure and the number of rewriting rules present in each membrane. Such generalized normal forms are given for rewriting P systems with priorities  and for partially parallel rewriting P systems. In this way  several results from the literature are generalized and improved.,2018-03-20
10.1007/s002360050118,Conceptual classes and system classes in object databases,"Abstract. In this paper  formal relationships between classes of objects based on semantic data models (i.e. conceptual classes) and classes of objects based on object models (i.e system classes)  are established. The proposed method starts from conceptual classes and generates system classes. This method can be employed to implement semantic data models on top of currently available object oriented database systems. As a consequence  the database applications can be specified with the flexibility of a conceptual schema while the obtained implementation exploits the efficiency of an object-oriented database system. Both the correctness and the completeness of our method are demonstrated and a discussion on its complexity is provided.
",2018-03-20
10.1007/s00236-015-0232-3,Analysis of dual-hop and multiple relays cooperative truncated ARQ with relay selection in WSNs,The dual-hop truncated ARQ (DHT-ARQ) and multiple relays cooperative truncated ARQ (MRCT-ARQ) with relay selection in wireless sensor networks are analytically analyzed in this paper. A three-state discrete time Markov chain method is proposed  which is then used to derive the steady state distribution and throughput expressions. Furthermore  the number of retransmission of the two protocols is truncated  and the average packet transmission delay is solved. Finally  considering the power consumptions of source node  relay node and destination node  the energy efficiency expressions are obtained. Numerical simulation results show that the throughput and delay performance of the latter is better than the former. When the channel environment becomes poor  using the DHT-ARQ protocol is more advantageous to reduce system overhead.,2019-03-20
10.1007/s00236-004-0144-0,On best transitive approximations to simple graphs,Abstract.In this paper  we investigate both combinatorial and complexity aspects of the problem of finding best transitive approximations to simple graphs. These problems are addressed in an interlocked way. We provide new and simple proofs of known results and in addition prove some new theorems.,2012-03-20
10.1007/BF01185560,Deterministic sequential functions,The simple rational partial functions accepted by generalized sequential machines are shown to coincide with the compositions ℋ ℋP−1 ℋ  where ℋP consists of the prefix codings. The rational functions accepted by generalized sequential machines are proved to coincide with the compositions ℋ ℳℋP−1 ℛ ℋ   where ℳ is the family of endmarkers and ℛ is the family of removals of endmarkers. (The compositions are read from left to right). We also show that ℳ ℋℋP−1 ℋ is the family of the subsequential functions.,2016-03-20
10.1007/BF00289094,The average number of registers needed to evaluate a binary tree optimally,"SummaryIn this paper we determine the number of binary trees with n leaves which can be evaluated optimally with less than or equal to k registers. Furthermore we obtain the result that this number is equal to the number of the binary trees with n leaves  using for traversal a maximum size of stack less than or equal to 2k+1−1. This fact is only a connection between the numbers of the trees and not between the sets of the trees. We compute also the average number ¯R(n) of registers needed to evaluate a binary tree optimally. We get for all ɛ>0: 
$$\bar R(n + 1) = 1d(\sqrt {n)} + C + F(n) + O(n^{ - 0.5 + \varepsilon } )$$
where C = 0.82574... is a constant and F(n) is a function with F(n) = F(4n) for all n>0 and −0.574",2020-03-20
10.1007/BF00279950,On generating database schemes bounded or constant-time-maintainable by extensibility,SummaryUnder the weak instance model  determining whether a class of database schemes is bounded (with respect to dependencies or with respect to consistency) is fundamental for the analysis of the behavior of the class of database schemes with respect to query processing and updates. However  proving that a class of database schemes is bounded seems to be very difficult even for restricted cases. To resolve this problem  we need to develop techniques or to explore other ideas for characterizing bounded database schemes. In particular  the idea of generating bounded database schemes is completely unexplored. In this paper  we give a formal methodology for the generation of bounded database schemes using a new technique called extensibility. This methodology can also be used to generate constant-time-maintainable database schemes.,2018-03-20
10.1007/s00236-004-0156-9,Preemptive online algorithms for scheduling with machine cost,Abstract.For most scheduling problems the set of machines is fixed initially and remains unchanged. Recently Imreh and Noga proposed adding the concept of machine cost to scheduling problems and considered the so-called List Model problem. For this problem  we are given a sequence of independent jobs with positive sizes  which must be processed non-preemptively on a machine. No machines are initially provided  and when a job is revealed the algorithm has the option to purchase new machines. The objective is to minimize the sum of the makespan and cost of machines. In this paper  a modified model of List Model is presented where preemption is allowed. For this model  it is shown that better performance is possible. We present an online algorithm with a competitive ratio of $(2\sqrt{6} + 2)/5\approx 1.3798$ while the lower bound is 4/3. For the semi-online problem with decreasing sizes  we design an optimal algorithm with a competitive ratio of 4/3  which improves the known upper bound of 3/2. The algorithm does not introduce any preemption  and hence is also an optimal semi-online algorithm for the non-preemptive semi-online problem. For the semi-online problem with known largest size  we present an optimal algorithm with a competitive ratio of 4/3.,2019-03-20
10.1007/BF01178261,Lazy structure sharing for query optimization,We studylazy structure sharing as a tool for optimizing equivalence testing on complex data types. We investigate a number of strategies for implementing lazy structure sharing and provide upper and lower bounds on their performance (how quickly they effect ideal configurations of our data structure). In most cases when the strategies are applied to a restricted case of the problem  the bounds provide nontrivial improvements over the naïve linear-time equivalence-testing strategy that employs no optimization. Only one strategy  however  which employs path compression  seems promising for the most general case of the problem.,2015-03-20
10.1007/s002360050157,Semantic foundations of 4NF in relational database design,Abstract. The issue of providing a formal justification for the use of fourth normal form (4NF) in relational database design is investigated. The motivation and formal definitions for three goals of database design are presented. These goals are the elimination of: redundancy  key-based update anomalies and fact-based replacement anomalies. It is then shown that  depending on the type of constraints permitted  either Boyce-Codd normal form (BCNF) or 4NF are the exact conditions needed to ensure most of the design goals. However  it is also shown that the conditions required to ensure the absence of a particular class of key-based update anomaly are new normal forms which have not previously been identified. In particular  for the case where the only constraints are functional dependencies (FDs)  it is shown that the required normal form is a new normal form that is stronger than third normal form (3NF) yet weaker than BCNF. Similarly  in the more general case where both FD and multivalued dependencies (MVDs) are present  the required normal form is a new normal form that is weaker than 4NF.,2014-03-20
10.1007/s002360050047,Timing and causality in process algebra,There has been considerable controversy in concurrency theory between the ‘interleaving’ and ‘true concurrency’ schools. The former school advocates associating a transition system with a process which captures concurrent execution via the interleaving of occurrences; the latter adopts more complex semantic structures to avoid reducing concurrency to interleaving.In this paper we show that the two approaches are not irreconcilable. We define a timed process algebra where occurrences are associated with intervals of time  and give it a transition system semantics. This semantics has many of the advantages of the interleaving approach; the algebra admits an expansion theorem  and bisimulation semantics can be used as usual. Our transition systems  however  incorporate timing information  and this enables us to express concurrency: merely adding timing appropriately generalises transition systems to asynchronous transition systems  showing that time gives a link between true concurrency and interleaving. Moreover  we can provide a complete axiomatisation of bisimulation for our algebra; a result that is often problematic in a timed setting.Another advantage of incorporating timing information into the calculus is that it allows a particularly simple definition of action refinement; this we present. The paper concludes with a comparison of the equivalence we present with those in the literature  and an example system specification in our formalism.,2012-03-20
10.1007/BF01177744,Parallel tree contraction and prefix computations on a large family of interconnection topologies,The derivation of the prefixes of a given sequence (prefix computation) and the fast reduction of a tree to a single node (tree contraction) are two useful primitives for many applications on parallel computers. It is well known that certain special cases of the two problems can be solved efficiently on the hypercube. Here we extend this result to a large family of parallel computers. The family of parallel computers are based on a novel interconnection scheme called thegeneralized Fibonacci cube that encompasses both the hypercube and the second-order Fibonacci cube in [8]. Specifically  we show that thek-th order Fibonacci tree of sizeN can be reduced to a single node inO(logN) steps on ak-th order Fibonacci cube withN nodes (processors). Assuming thatO(logN) data items are on each of theN processors  we also show that the prefixes can be computed inO(logN) steps on thek-th order Fibonacci cube.,2019-03-20
10.1007/BF00264469,LAR: A logic of algorithmic reasoning,SummaryReasoning about programs involves some logical framework which seems to go beyond classical predicate logic. LAR is an extension of predicate logic by additional concepts which are to formalize our “natural” reasoning about algorithms. Semantically  this extension introduces an underlying “time scale” on which formulas are considered and “time shifting” connectives. Besides a full model-theoretic treatment  a consistent and complete formal system for LAR is given. The pure logical system can serve as a basis for various theories. As an example  a theory of “while program schemes” is developed which contains Hoare's correctness proof system.,2017-03-20
10.1007/BF00288971,Representation of graphs,SummaryGiven a formulation of a problem  a compact representation is required both for theoretical purposes — measuring the complexity of algorithms  and for practical purposes — data compression.The adjacency lists method for representing graphs is compared to the information theoretic lower bounds  and it is shown to be optimal in many instances. For n-vertex labeled planar graphs the adjacency lists method requires 3nlogn + O(n) bits  a linear algorithm is presented to obtain a 3/2nlogn + O(n) representation while nlogn + O(n) is shown to be the minimum.,2015-03-20
10.1007/s00236-006-0010-3,Abstractions of data types,The use of abstraction in the context of abstract data types  is investigated. Properties to be checked are formulas in a first order logic under Kleene's 3-valued interpretation. Abstractions are defined as pairs consisting of a congruence and a predicate interpretation. Three types of abstractions are considered ∀∀  ∀∃ and ∃0 1∀  and for each of them corresponding property preservation results are established. An abstraction refinement property is also obtained. It shows how one can pass from an existing abstraction to a (less) finer one. Finally  equationally specified abstractions in the context of equationally specified abstract data types are discussed and exemplified.,2017-03-20
10.1007/BF00271342,Some comments on “concurrent readers and writers”,SummaryA more compact and efficient algorithm for synchronization of concurrent readers and writers is presented  and which grants writers effective priority over readers.A synchronization primitive P*  which only decrements a semaphore value by one  is also described.,2018-03-20
10.1007/BF00299634,Maximum entropy two-station cyclic queues with multiple general servers,SummaryThe efficient implementation and extension of various approximate methods for general queueing networks require the study of two-station cyclic queues. In this paper maximum entropy formalism is used to analyse two-station cyclic queues with multiple general servers and a fixed number of jobs. New robust “one step” recursions for the queue length distribution are derived and asymptotic connections to infinite capacity queues are established. Links with Birth-Death and global balance solutions are determined and extensions to load dependent servers with Bernoulli feedback are presented. Numerical examples provide useful information on how critically system behaviour is affected by the distributional form of service times and simple bounds for typical performance measures such as throughout and mean queue length are defined. Moreover  the utility of the work as a “building block” for the approximate analysis of a general central server model is demonstrated.,2013-03-20
10.1007/BF00264284,Tableau-based model checking in the propositional mu-calculus,SummaryThis paper describes a procedure  based around the construction of tableau proofs  for determining whether finite-state systems enjoy properties formulated in the propositional mu-calculus. It presents a tableau-based proof system for the logic and proves it sound and complete  and it discusses techniques for the efficient construction of proofs that states enjoy properties expressed in the logic. The approach is the basis of an ongoing implementation of a model checker in the Concurrency Workbench  an automated tool for the analysis of concurrent systems.,2017-03-20
10.1007/BF00289061,Correctness of the compiling process based on axiomatic semantics,SummaryA language that includes computed gotos and parameterized procedures is defined and its semantics are given axiomatically. A number of program transformations are described and proved correct. Taken collectively and applied repeatedly these transformations compile the full language into a low level subset.,2011-03-20
10.1007/BF00263746,Transformational methods and their application to complexity problems,"SummaryThe following results are proved by the use of transformabilities.1.NTAPE (log n)=TAPE (log n)⇔There exists a j such that every language accepted by a nondeterministic one-way one-counter automaton is contained in Dj. (Dj is the family of all languages accepted by deterministic j-head two-way finite automata.)2.NTAPE (n) =TAPE (n)⇔ There exists a j such that every language L ∉ {1}* accepted by a nondeterministic 5-head two-way finite automaton is contained in Dj.3.
$$\mathop U\limits_d$$
 TIME (nd=TAPE (log n)⇔ There exists a j such that every language accepted by a deterministic 1-head two-way pushdown automaton is contained in Dj.4.f
$$\mathop U\limits_d$$
 TIME (dn)=TAPE (n)⇔There exists a j such that every language L ⊂{1}* accepted by a deterministic 1-head two-way pushdown automaton is contained in Dj.5.Dj ≨ Dj+1 for all j ε εN.",2015-03-20
10.1007/s00236-008-0087-y,The time complexity of typechecking tree-walking tree transducers,Tree-walking tree transducers can be typechecked in double exponential time. More generally  compositions of k tree-walking tree transducers can be typechecked in (k + 1)-fold exponential time. Consequently k-pebble tree transducers  which form a model of XML transformations and XML queries  can be typechecked in (k + 2)-fold exponential time. The results hold for both ranked and unranked trees.,2017-03-20
10.1007/BF00264318,On removing the machine from the language,SummaryMany of the problems in programming languages today are a result of the model of computation offered by our machines. Structured programming combats these problems by restricting flow of control and storage references to a relatively safe set of control and data structures. Some current research attempts to aid programming reliability by enforcing such restrictions in the programming language. This paper proposes a simpler view of some basic language elements (variable  assignment  parameter)  not based on our machines  that is safe without restriction. Structuring is then defined independently of what is being structured. A single  simple structure  applied to both values and assignments  yields equivalents for the “safe set” of data and control structures.,2017-03-20
10.1007/BF00264597,A synthesis of several sorting algorithms,SummaryWe synthesise versions of six well known sorting algorithms from a common specification using program transformation techniques. On the way to the sorting algorithms we synthesise three algorithms for generating permutations thus building up a family tree for the sorts exposing certain relationships between them.,2019-03-20
10.1007/s00236-016-0275-0,Stateless model checking for TSO and PSO,We present a technique for efficient stateless model checking of programs that execute under the relaxed memory models TSO and PSO. The basis for our technique is a novel representation of executions under TSO and PSO  called chronological traces. Chronological traces induce a partial order relation on relaxed memory executions  capturing dependencies that are needed to represent the interaction via shared variables. They are optimal in the sense that they only distinguish computations that are inequivalent under the widely-used representation by Shasha and Snir. This allows an optimal dynamic partial order reduction algorithm to explore a minimal number of executions while still guaranteeing full coverage. We apply our techniques to check  under the TSO and PSO memory models  LLVM assembly produced for C/pthreads programs. Our experiments show that our technique reduces the verification effort for relaxed memory models to be almost that for the standard model of sequential consistency. This article is an extended version of Abdulla et al. (Tools and algorithms for the construction and analysis of systems  Springer  New York  pp 353–367  2015)  appearing in TACAS 2015.,2016-03-20
10.1007/BF00264251,Optimal divide-and-conquer to compute measure and contour for a set of iso-rectangles,SummaryWe reconsider two geometrical problems that have been solved previously by line-sweep algorithms: the measure problem and the contour problem. Both problems involve determining some property of the union of a set of rectangles  namely the size and the contour (boundary) of the union. We devise essentially a single time-optimal divide-and-conquer algorithm to solve both problems. This can be seen as a step towards comparing the power of the line-sweep and the divide-and-conquer paradigms. The surprisingly efficient divide-and-conquer algorithm is obtained by using a new technique called “separational representation”  which extends the applicability of divide-and-conquer to orthogonal planar objects.,2011-03-20
10.1007/s00236-008-0078-z,Regular autodense languages,A regular component is either autodense or anti-autodense. Characterizations of a regular component being a pure autodense language and being a pure autodense code are obtained. A relationship between intercodes and anti-autodense languages is that for an intercode L of index m  Ln is an anti-autodense language for every n > m.,2017-03-20
10.1007/BF00289268,Persistence of vector replacement systems is decidable,SummaryIn a persistent vector replacement system (VRS) or Petri net  an enabled transition can become disabled only by firing itself. Here  an algorithm is presented which allows to decide whether an arbitrary VRS is persistent or not  and if so  to construct a semilinear representation of the set of states reachable in the system.,2017-03-20
10.1007/BF00263763,Worst-case analysis for region and partial region searches in multidimensional binary search trees and balanced quad trees,SummaryGiven a file of N records each of which has k keys  the worst-case analysis for the region and partial region queries in multidimensional binary search trees and balanced quad trees are presented. It is shown that the search algorithms proposed in [1  3] run in time O(k·N1−1/k) for region queries in both tree structures. For partial region queries with s keys specified  the search algorithms run at most in time O(s·N1−1/k) in both structures.,2015-03-20
10.1007/BF00289159,Supercube: An optimally fault tolerant network architecture,SummaryA new class of interconnection network topology is proposed for parallel and distributed processing. The attractive features of this class include (a) the network can be constructed for any number of computing nodes  (b) the network is incrementally expandable  i.e.  a new node can easily be added to the existing network  (c) it has good fault-tolerant characteristics (measured by the connectivity of the network graph) and (d) it has small delay characteristics (measured by the diameter of the network graph). The node connectivity of the network is equal to the minimum node degree. In this sense the network is optimally fault-tolerant.,2013-03-20
10.1007/BF00288882,Program analysis and optimization through kernel-control decomposition,SummaryThe decomposition of a program into a control part  which is concerned only with determining the flow of control  and a kernel part  which is concerned only with computing output values  is proposed. It is shown that such a kernel-control decomposition is easily made and forms a useful and intuitive basis for analyzing and optimizing programs. A sequence of four progressively more abstract formal models of programs is developed  based on the concept of kernel-control decomposition. The application of these models to the study of program equivalence  termination  and optimization is outlined. The most general of the formal models  that of a set of programs forming a control structure class  formalizes a broad notion of equivalence of control structures.,2011-03-20
10.1007/BF00289586,A characterization of database graphs admitting a simple locking protocol,SummaryA simple locking protocol is presented for transactions executing concurrently in a database. The locking protocol is not two-phase  but each entity in the database may be locked at most once by any transaction. The database is modeled by a directed graph whose vertices correspond to the entities  and whose arcs correspond to certain locking restrictions. Necessary and sufficient conditions which assure serializability and deadlock-freedom in the absence of a concurrency control are derived.,2014-03-20
10.1007/s002360050035,Kinded type inference for parameteric overloading,Parameteric overloading refers to the combination of parameteric polymorphism and overloading of polymorphic operators. The formal basis for parametric overloading  proposed by Kaes and extended by Wadler and Blott  is based on type predicates. In this paper another approach to type-checking for parameteric overloading is proposed. The resulting type system loosens some of the restrictions required of overload instance types for type-checking  while also providing fresh insight into type-checking for parameteric overloading. In this system  the kind for a type variable characterizes the set of closed type expressions which may be substituted for that variable. A theory of equality and subkinding for this system is presented  and algorithms for emptiness-checking  subkinding and intersection are provided. This kind system is used as the basis for an extension of Milner’s W algorithm for ML-style type inference to kinded type inference. Finally the kinded type system is verified to be sound and complete with respect to the system of type predicates proposed by Wadler and Blott.,2016-03-20
10.1007/s00236-002-0102-7,Bin stretching revisited,Abstract. We study three on-line models of bin stretching on two machines. For the case where the machines are identical and the jobs arrive sorted by non-increasing sizes  we show a tight bound of 10/9 on the competitive ratio. For two related machines  we show a preemptive algorithm with competitive ratio 1 for any speed ratio  and two new non-preemptive algorithms. We prove that the upper bound on the competitive ratio achieved by the non-preemptive algorithms is optimal for almost any speed ratio  and close to optimal for all other speed ratios.,2020-03-20
10.1007/BF00263925,An optimality theory of concurrency control for databases,SummaryA concurrency control mechanism (or a scheduler) is the component of a database system that safeguards the consistency of the database in the presence of interleaved accesses and update requests. We formally show that the performance of a scheduler  i.e.  the amount of parallelism that it supports  depends explicitly upon the amount of information that is available to the scheduler. We point out that most previous work on concurrency control is simply concerned with specific points of this basic trade-off between performance and information. In fact  several of these approaches are shown to be optimal for the amount of information that they use.,2013-03-20
10.1007/s002360050181,On the cost–effectiveness of PRAMs,Abstract. We introduce a formalism which allows to treat computer architecture as a formal optimization problem. We apply this to the design of shared memory parallel machines. While present parallel computers of this type only support the programming model of a shared memory but often process simultaneous access by several processors to the shared memory sequentially  theoretical computer science offers solutions for this problem that are provably fast and asymptotically optimal. But the constants in these constructions seemed to be too large to let them be competitive. We modify these constructions under engineering aspects and improve the price/performance ratio by roughly a factor of 6. The resulting machine has surprisingly good price/performance ratio even if compared with distributed memory machines. For almost all access patterns of all processors into the shared memory  access is as fast as the access of only a single processor.,2019-03-20
10.1007/s00236-005-0001-9,Embedding linear orders in grids,A grid (or a mesh) is a two-dimensional permutation: an m× n-grid of size mn is an m× n-matrix where the entries run through the elements {1 2  …  mn}. We prove that if δ1 and δ2 are any two linear orders on {1 2  …  N}  then they can be simultaneously embedded (in a well defined sense) into a unique grid having the smallest size.,2017-03-20
10.1007/s00236-011-0133-z,Testing for refinement in Circus,Circus combines constructs to define complex data operations and interactions; it integrates Z and CSP  and  distinctively  it is a language for refinement that can describe programs as well as specification and design models. The semantics is based on the unifying theories of programming (UTP). Most importantly  Circus is representative of a class of refinement-oriented languages that combines facilities to specify abstract data types in a model-based style and patterns of interaction. What we present here is the Circus testing theory; this work is relevant as a foundation for sound test-generation techniques for a plethora of state-rich reactive languages. To cater for data operations  we define symbolic tests and exhaustive test sets. They are the basis for test-generation techniques that can combine coverage criteria for data and transition models. The notion of correctness is Circus refinement  a UTP-based generalisation of failures-divergences refinement that considers data modelling. Proof of exhaustivity exploits the correspondence between the operational and denotational semantics.,2015-03-20
10.1007/BF02983375,A characterization of set representable labeled partial 2-structures through decompositions,SummaryThe notion of the product of (initialized) labeled partial 2-structures is introduced  and then set representable (initialized) labeled partial 2-structures are characterized in terms of products of binary switches which are “very simple” (initialized) labeled partial 2-structures.,2012-03-20
10.1007/BF00264439,Lower bounds for on-line two-dimensional packing algorithms,SummaryMany problems  such as cutting stock problems and the scheduling of tasks with a shared resource  can be viewed as two-dimensional bin packing problems. Using the two-dimensional packing model of Baker  Coffman  and Rivest  a finite list L of rectangles is to be packed into a rectangular bin of finite width but infinite height  so as to minimize the total height used. An algorithm which packs the list in the order given without looking ahead or moving pieces already packed is called an on-line algorithm. Since the problem of finding an optimal packing is NP-hard  previous work has been directed at finding approximation algorithms. Most of the approximation algorithms which have been studied are on-line except that they require the list to have been previously sorted by height or width. This paper examines lower bounds for the worst-case performance of on-line algorithms for both non-preordered lists and for lists preordered by increasing or decreasing height or width.,2012-03-20
10.1007/s00236-016-0270-5,Efficient and secure attribute-based signature for monotone predicates,Attribute-based signature (ABS) is a novel cryptographic primitive  which can make the signing party sign a message with fine-grained control over identifying information. ABS only reveals the fact that the verified message must be signed by a user with a set of attributes satisfying a predicate. Thus  ABS can hide any identifying information and make fine-grained control on signing. Presently  many attribute-based signature schemes have been proposed  but most of them are not very efficient. Maji et al. recently presented a complete definition and construction about ABS for monotone predicates and showed three instantiations under their framework for ABS. Although the most practical one of their instantiations is efficient  the instantiation is constructed in the generic group model and has been proved to be insecure. Then  Okamoto et al. proposed an attribute-based signature scheme in the standard model  which can support generalized non-monotone predicates over access structure. However  their scheme is not efficient in practice. In this paper  we present a framework for ABS and show a detailed security model for ABS. Under our framework  we present an attribute-based signature scheme for monotone predicates in the standard model  where we choose the Waters’ signature scheme as the prototype of our attribute-based signature scheme. Compared with the Maji’s scheme in the generic group model  the proposed scheme is constructed in the standard model. Furthermore  compared with the Okamoto’s scheme  the proposed scheme is more efficient by decreasing the computation cost.,2017-03-20
10.1007/s00236-009-0094-7,A theory of ultimately periodic languages and automata with an application to time granularity,In this paper  we develop a theory of regular ω-languages that consist of ultimately periodic words only and we provide it with an automaton-based characterization. The resulting class of automata  called ultimately periodic automata (UPA)  is a subclass of the class of Büchi automata and inherits some properties of automata over finite words (NFA). Taking advantage of the similarities among UPA  Büchi automata  and NFA  we devise efficient solutions to a number of basic problems for UPA  such as the inclusion  the equivalence  and the size optimization problems. The original motivation for developing a theory of ultimately periodic languages and automata was to represent and to reason about sets of time granularities in knowledge-based and database systems. In the last part of the paper  we show that UPA actually allow one to represent (possibly infinite) sets of granularities  instead of single ones  in a compact and suitable to algorithmic manipulation way. In particular  we describe an application of UPA to a concrete time granularity scenario taken from clinical medicine.,2016-03-20
10.1007/BF00265993,A linear space algorithm for the LCS problem,SummaryThe LCS problem is to determine the longest common subsequence (LCS) of two strings. A new linear-space algorithm to solve the LCS problem is presented. The only other algorithm with linear-space complexity is by Hirschberg and has runtime complexity O(mn). Our algorithm  based on the divide and conquer technique  has runtime complexity O(n(m-p))  where p is the length of the LCS.,2011-03-20
10.1007/BF00265767,Validation of a computer performance model of the exponential queuing network family,SummaryThe applicability and accuracy of a general queuing network approach to the modeling of computer performance was tested in an actual production environment. The validation exercise established that such an approach had both sufficient flexibility and precision to be of use in long range planning efforts. The accuracy of the results further suggests that these techniques may be successfully extended to a wide range of uses.,2018-03-20
10.1007/s00236-015-0218-1,Observable liveness of Petri nets,Whereas  for Petri nets  the traditional liveness property guarantees that each transition of a Petri net can always occur again  observable liveness requires that  from any reachable marking  each observable transition can be forced to fire by choosing appropriate controllable transitions; hence it is defined for Petri nets with distinguished observable and controllable transitions. We introduce observable liveness and show that this new notion generalizes traditional liveness in various ways. In particular  liveness of a 1-bounded Petri net implies observable liveness  provided the only conflicts that can appear are between controllable transitions. This assumption refers to applications where the uncontrollable part models a deterministic machine (or several deterministic machines)  whereas the user of the machine is modeled by the controllable part and can behave arbitrarily.,2018-03-20
10.1007/BF00289246,Rules of inference for procedure calls,"SummaryThe semantics of procedures and parameters were formalized by Hoare [2] in terms of axioms and rules of inference. Igarashi et al. [4] reformulated Hoare's system. This paper extends their rule of inference for procedure calls to allowi)actual variable parameters to occur in actual value parameters;ii)the body of a procedure to contain global variables that do not occur in assignment positions;iii)post-conditions and “internal” assertions of a procedure to refer to the initial values of variable parameters.
None of these are allowed in Hoare's system or the system of Igarashi  London and Luckham. An attractive feature of these extensions is that they do not increase the complexity of the rules of inference.",2019-03-20
10.1007/s00236-002-0093-4,On the complexity of the identification problem in Hamming spaces,Abstract. A binary code $C \subseteq \{0 1\}^n$ is called w-identifying if the sets $B_w(x)\cap C$ for $x \in \{0 1\}^n$ are all nonempty and no two are the same. Here $B_w(x)$ denotes the set of all vectors in $\{0  1\}^n$ within Hamming distance w from x. We show that the problem of deciding  whether or not a given code C is w-identifying  is co-NP-complete.,2019-03-20
10.1007/s00236-006-0005-0,Deep pushdown automata,This paper introduces and discusses deep pushdown automata as a generalization of the classical pushdown automata. This generalization consists in allowing them to make expansions deeper in the pushdown. Based on the expansion depth  the present paper establishes an infinite hierarchy of language families that coincides with the hierarchy resulting from the n-limited state grammars  so the deep pushdown automata actually represent the automaton counterpart to these grammars. In its conclusion  this paper suggests some open problem areas.,2011-03-20
10.1007/s002360050138,Priority conflict-free Petri nets,"Abstract. A number of problems concerning priority conflict-free Petri nets are investigated in this paper. We show the reachability problem for such Petri nets to be NP-complete. (Using a similar technique  the NP-completeness result applies to the class of priority BPP-nets as well.) As for the boundedness problem  an NP-completeness result is demonstrated for priority conflict-free Petri nets with two types of prioritized transitions. (In contrast  the problem is known to be P-complete for conflict-free Petri nets without priorities.) We also investigate the home state problem  i.e.  the problem of determining whether home states exist in a given a Petri net  for conflict-free Petri nets with and without priorities. As it turns out  home states always exist for bounded conflict-free Petri nets without priorities. If an additional liveness constraint is imposed  such Petri nets are guaranteed to be ‘reversible’ (i.e.  their initial states are home states). For priority conflict-free Petri nets  being bounded and live is sufficient for the existence of home states. However  if the liveness assumption is dropped  the existence of home states is no longer guaranteed.
",2013-03-20
10.1007/BF00269807,Binary search trees in secondary memory,SummaryBinary search trees are shown to be reasonable alternatives to multiway trees for files stored in magnetic bubble memory. An algorithm for maintaining AVL trees is shown to be by far the most efficient of eight algorithms considered  when applied to secondary memory. A simplified model for analyzing the AVL algorithm is developed. A practical AVL algorithm for secondary memory is presented. Simulation results showing the performance of the AVL algorithm and a basic nonbalancing algorithm are given.,2012-03-20
10.1007/BF00268142,On proving that certain languages are not ETOL,SummaryIn this paper a partial characterization for a subclass of ETOL languages is obtained. The main result binds together the number of occurrences (in words of a given ETOL language) of letters  from a given set  with their distribution. It provides a very helpful tool to prove that certain languages are not ETOL.,2016-03-20
10.1007/BF01213207,Information theoretic approximations for theM/G/1 retrial queue,In this paper we present information theoretic approximations for theM/G/1 queue with retrials. Various approximations for this model are obtained according to the available information about the service time probability density and the steady-state distribution of the system state. The results are well-suited for numerical computation.,2018-03-20
10.1007/BF01178668,On problems with short certificates,We consider languages in NP whose certificate size is bounded by a fixed  slowly growing function (sayf (n)) of the input size. The classesf (n)-NP  which are related to classes of Kintala and Fischer  are defined in order to classify such languages. We show that several natural problems  involving Boolean satisfiability  graph colouring and Hamiltonian circuits  are complete forf (n)-NP. Each of our problems is obtained by taking a known NP-complete problem and introducing an ingredient we callforcing  whereby a partial structure is enlarged by a sequence of local improvements. As special cases of these results we obtain some new logspace completeness results for P.,2016-03-20
10.1007/BF03036467,Trial and error,"AbstractA pac-learning algorithm isd-space bounded  if it stores at mostd examples from the sample at any time. We characterize thed-space learnable concept classes. For this purpose we introduce the compression parameter of a concept classb and design our Trial and Error Learning Algorithm. We show:
 b isd-space learnable if and only if the compression parameter ofb is at mostd. This learning algorithm does not produce a hypothesis consistent with the whole sample as previous approaches e.g. by Floyd  who presents consistent space bounded learning algorithms  but has to restrict herself to very special concept classes. On the other hand our algorithm needs large samples; the compression parameter appears as exponent in the sample size.We present several examples of polynomial time space bounded learnable concept classes:- all intersection closed concept classes with finite VC-dimension.- convexn-gons in ℝ2.- halfspaces in ℝn.- unions of triangles in ℝ2.
 We further relate the compression parameter to the VC-dimension  and discuss variants of this parameter.",2018-03-20
10.1007/s00236-016-0264-3,Efficiently solving the Bin Packing problem through bio-inspired mobility,Recently we have considered the possibility of using bio-inspired mobility for solving a weak NP-complete problem (Partition). In this paper we provide a semi-uniform polynomial solution for a strong NP-complete problem (Bin Packing) by means of membrane computing techniques. The solution employs mobile membranes and elementary membrane division.,2013-03-20
10.1007/BF01893885,Sufficient-completeness  ground-reducibility and their complexity,SummaryThe sufficient-completeness property of equational algebraic specifications has been found useful in providing guidelines for designing abstract data type specifications as well as in proving inductive properties using the induction-less-induction method. The sufficient-completeness property is known to be undecidable in general. In an earlier paper  it was shown to be decidable for constructor-preserving  complete (canonical) term rewriting systems  even when there are relations among constructor symbols. In this paper  the complexity of the sufficient-completeness property is analyzed for different classes of term rewriting systems. A number of results about the complexity of the sufficient-completeness property for complete (canonical) term rewriting systems are proved: (i) The problem is co-NP-complete for term rewriting systems with free constructors (i.e.  no relations among constructors are allowed)  (ii) the problem remains co-NP-complete for term rewriting systems with unary and nullary constructors  even when there are relations among constructors  (iii) the problem is provably in “almost” exponential time for left-linear term rewriting systems with relations among constructors  and (iv) for left-linear complete constructor-preserving rewriting systems  the problem can be decided in steps exponential innlogn wheren is the size of the rewriting system. No better lower-bound for the complexity of the sufficient-completeness property for complete (canonical) term rewriting system with nonlinear left-hand sides is known. An algorithm for left-linear complete constructor-preserving rewriting systems is also discussed. Finally  the sufficient-completeness property is shown to be undecidable for non-linear complete term rewriting systems with associative functions. These complexity results also apply to the ground-reducibility property (also called inductive-reducibility) which is known to be directly related to the sufficient-completeness property.,2011-03-20
10.1007/s002360050115,Data refinement of mixed specifications,"Abstract. Using predicate transformers as a basis  we give semantics and refinement rules for mixed specifications that allow UNITY style specifications to be written as a combination of abstract program and temporal properties. From the point of view of the programmer  mixed specifications may be considered a generalization of the UNITY specification notation to allow safety properties to be specified by abstract programs in addition to temporal properties. Alternatively  mixed specifications may be viewed as a generalization of the UNITY programming notation to allow arbitrary safety and progress properties in a generalized ‘always section’. The UNITY substitution axiom is handled in a novel way by replacing it with a refinement rule. The predicate transformers foundation allows known techniques for algorithmic and data-refinement for weakest precondition based programming to be applied to both safety and progress properties. In this paper  we define the predicate transformer based specifications  specialize the refinement techniques to them  demonstrate soundness  and illustrate the approach with a substantial example.
",2011-03-20
10.1007/BF00264613,On efficient implementation of an approximation algorithm for the Steiner tree problem,SummaryThis paper studies the design and implementation of an approximation algorithm for the Steiner tree problem. Given any undirected distance graph G and a set of Steiner points S  the algorithm produces a Steiner tree with total weight on its edges no more than 2(1−1/L) times the total weight on the optimal Steiner tree  where L is the number of leaves in the optimal Steiner tree. Our implementation of the algorithm  in the worst case  makes it run in 0(¦Eg¦+¦Vg−S¦log¦Vg−S¦+¦S¦log ¦S¦) time for general graph G and in 0(¦S¦ log¦S¦+M log β(M ¦Vg−S¦)) time for sparse graph G  where Eg is the set of edges in G  Vg is the set of vertices in G  M = min {¦Eg  (¦Vg−S¦−1)2/2} and β(x y) = min {i¦log(i)y ≦ x/y}.The implementation is not likely to be improved significantly without the improvement of the shortest paths algorithm and the minimum spanning tree algorithm as the algorithm essentially composes of the computation of the multiple sources shortest paths of a graph with ¦Vg¦ vertices and ¦Eg¦ edges and the minimum spanning tree of a graph with ¦Vg−S¦ vertices and M edges.,2020-03-20
10.1007/BF01185681,On partitions and presortedness of sequences,To take advantage of existing order in a sequence when sorting  we evaluate the quantity of this information by the minimal size of decomposition of the input sequence  particularly the minimal size of chain and of monotonic partitions. Some sorting strategies that are optimal with respect to these measures of presortedness are presented. The relationships between these new measures of presortedness and other known measures have also been explored. As an application  we carry out the optimality of an adaptive sorting algorithm Skiena'sMelsort. For some special partitioning strategies  we present two sorting algorithms based on Dijkstra'sSmoothsort. Moreover  the optimalities of these two algorithms are demonstrated. By examining the optimalities of sorting algorithms with respect to certain measures of presortedness  we also propose some optimal sorting strategies for one class of measures. Finally  we discuss other types of sorting problems  such as sorting multisets and topological sorting. In particular  we derive an optimal algorithm for sorting multisets and for finding the multiset sizes as well.,2013-03-20
10.1007/BF00289117,The complexity of combinatorial problems with succinct input representation,SummarySeveral languages for the succinct representation of the instances of combinatorial problems are investigated. These languages have been introduced in [20  2] and [5] where it has been shown that describing the instances by these languages causes a blow-up of the complexities of some problems. In the present paper the descriptional power of these languages is compared by estimating the complexities of some combinatorial problems in terms of completeness in suitable classes of the “counting polynomial-time hierarchy” which is introduced here. It turns out that some of the languages are not comparable  unless P=NP Some problems left open in [2] are solved.,2020-03-20
10.1007/BF01209711,Speeding up dynamic transitive closure for bounded degree graphs,In this paper we present an algorithm for solving two problems in dynamically maintaining the transitive closure of a digraph: In the first problem a sequence of edge insertions is performed on an initially empty graph  interspersed withp transitive closure queries of the form: “is there a path froma tob in the graph”. Our algorithm solves this problem in timeO (dm*+p)  whered is the maximum outdegree of the resulting graphG andm* is the number of edges in the transitive closure ofG. In the second problem  a sequence of edge deletions is performed on anacyclic graph  interspersed withp transitive closure queries. Once again we solve this problem in timeO (dm*+p)  whered is the maximum outdegree of the initial graphG andm* is the number of edges in the transitive closure ofG. For bounded degree graphs  this improves upon previous results. Our algorithms also work when insertions and deletions to the graph are intermixed. Finally  we show how to implement the operation findpath (x  y) which retrieves some path fromx toy in time proportional to the length of the path.,2016-03-20
10.1007/BF00289307,The formal power of one-visit attribute grammars,SummaryAn attribute grammar is one-visit if the attributes can be evaluated by walking through the derivation tree in such a way that each subtree is visited at most once. One-visit (1V) attribute grammars are compared with one-pass left-to-right (L) attribute grammars and with attribute grammars having only one synthesized attribute (1S).Every 1S attribute grammar can be made one-visit. One-visit attribute grammars are simply permutations of L attribute grammars; thus the classes of output sets of 1V and L attribute grammars coincide  and similarly for 1S and L-1S attribute grammars. In case all attribute values are trees  the translation realized by a 1V attribute grammar is the composition of the translation realized by a 1S attribute grammar with a deterministic top-down tree transduction  and vice versa; thus  using a result of Duske e.a.  the class of output languages of 1V (or L) attribute grammars is the image of the class of IO macro tree languages under all deterministic top-down tree transductions.,2016-03-20
10.1007/BF00264364,SLR(1) and LALR(1) parsing for unrestricted grammars,SummarySimple LR(1) and lookahead LR(1) phrase structure grammars are defined and corresponding deterministic two-pushdown automata which parse all sentences are given. These grammars include a wide variety of grammars for non context-free languages. A given phrase structure grammar is one of these types if the parse table for the associated automaton has no multiple entries. A technique for construction of this parse table is given which in the lookahead case involves elimination of inverses in a grammar for lookahead strings for LR(0) items and computation of first sets for strings of symbols in the given grammar.,2014-03-20
10.1007/s00236-011-0146-7,An efficient algorithm for finding ideal schedules,We study the problem of scheduling unit execution time jobs with release dates and precedence constraints on two identical processors. We say that a schedule is ideal if it minimizes both maximum and total completion time simultaneously. We give an instance of the problem where the min-max completion time is exceeded in every preemptive schedule that minimizes total completion time for that instance  even if the precedence constraints form an intree. This proves that ideal schedules do not exist in general when preemptions are allowed. On the other hand  we prove that  when preemptions are not allowed  then ideal schedules do exist for general precedence constraints  and we provide an algorithm for finding ideal schedules in O(n3) time  where n is the number of jobs. In finding such ideal schedules we resolve a conjecture of Baptiste and Timkovsky (Math. Methods Oper. Res. 60(1):145–153  2004) Further  our algorithm for finding min-max completion-time schedules requires only O(n3) time  while the most efficient solution to date has required O(n9) time.,2016-03-20
10.1007/s00236-009-0095-6,A decomposition theorem for finite persistent transition systems,In this paper  we consider finite labelled transition systems. We show that if such transition systems are deterministic  persistent  and weakly periodic  then they can be decomposed in the following sense. There exists a finite set of label-disjoint cycles such that any other cycle is Parikh-equivalent to a multiset of cycles from this set.,2013-03-20
10.1007/BF00288773,Necessary and sufficient conditions for the universality of programming formalisms,SummaryOver many familiar datatypes the notion of “computable” coincides with the notion of “flowchartable”. It is also known that flowcharts are not a universal programming formalism over arbitrary datatypes  in the sense that there are datatypes over which not all computable functions are flowchartable. In this paper we consider various extensions and restrictions of the basic formalism of flowcharts  and then for every such formalism  we characterize the datatypes over which the computable functions are exactly the functions programmable in this formalism. We say that a function is computable over a datatype if it is effective relative to the primitive operations and relations of the datatype.,2018-03-20
10.1007/BF00289141,Free choice systems have home states,SummaryThis paper contains a proof that live and safe free choice Petri nets have home states. Home states are ones which can be reached from every successor state of the initial state. Liveness means that all actions remain executable  and safeness means that all capacities are finite. The result is interesting because it may help in the analysis of behavioural properties of complex systems. The existence of home states is a strong property which (as we will also show) fails to hold for a slightly generalised class of nets.,2017-03-20
10.1007/BF00289412,On the relationship of minimum and optimum covers for a set of functional dependencies,SummaryMost algorithms in relational database theory use a set of functional dependencies as their input. The efficiency of the algorithms depends on the size of the set. The notions of a minimum set (with as few dependencies as possible) and an optimum set (which is as short as possible) were introduced by Maier. He showed that while a minimum cover for a given set of dependencies can be found in polynomial time  obtaining an optimum cover is an NP-complete problem. Here the relationship of these covers is explored further. It is shown that the length of a minimum set (i) cannot be bounded by a linear function on the length of an optimum cover  and (ii) is bounded by the square of the length of an optimum cover. It is also shown that the NP-completeness of the optimization problem is somewhat surprisingly caused solely by the difficulty of optimizing a single class of dependencies having equivalent left sides  not by the globality of the optimality condition. This result has some practical significance  since the equivalence classes appearing in practice are short. The problem of optimizing an equivalence class is studied and left and right sides of a dependency are shown to behave differently. A new representation for equivalence classes based on this observation is suggested. The optimization of single dependencies is shown to be NP-complete  and a method to produce good approximations is given.,2015-03-20
10.1007/s00236-004-0148-9,The size of random bucket trees via urn models,We find the asymptotic average composition of a class of nonclassic Polya urn models (not necessarily of fixed row sum) by embedding the discrete urn process into a renewal process with rewards. A subclass of the models considered has banded matrix urn schemes and serves as a natural modeling tool for the size of a class of random bucket trees. The class of urns considered extends known results for multicolor urns with constant row sums. The same asymptotic average results are shown to hold in the larger class. This provides an average-case analysis for the size of certain random bucketed multidimensional quad trees and k-d trees  which are all new results. Some bucket trees have urn schemes with constant row sum  a special case that helps detect phase changes in the limiting distribution of the (normed) size of the tree. For these special cases one can appeal to a more developed urn theory to find a limiting distribution of the normed size up to a threshold value of the capacity of a bucket. Once that cut-off point is surpassed  normality ceases to hold. This case appears in paged binary trees (threshold 116)  m-ary search trees (threshold 26)  and bucket recursive trees (threshold 26). The asymptotic normality results and the phase change after the threshold in these trees are already known and we only provide alternative proofs via a unified urn models approach.,2012-03-20
10.1007/BF00276184,Complete parameterized families of job scheduling strategies,SummaryThe concept of a family of scheduling strategies in which a few parameters may be varied to achieve different performance levels is introduced. The use of such families in satisfying performance requirements stated in terms of average response times for jobs of different classes is studied. A performance requirement is said to be achievable if  given the loading conditions on the system  there exists a scheduling strategy which satisfies it. A family of scheduling strategies is said to be complete if every achievable performance requirement can be satisfied by a strategy from the family. Sufficient conditions for a parameterized family to be complete are proven.Three parameterized families are discussed  one in detail. Completeness of the three families is demonstrated and simulation results illustrating some properties of implementation are presented.,2020-03-20
10.1007/s002360000042,The class Steiner minimal tree problem: a lower bound and test problem generation,"Abstract. The class Steiner minimal tree problem is an extension of the standard Steiner minimal tree problem in graphs  motivated by the problem of wire routing in the area of physical design of very large scale integration (VLSI). This problem is NP-hard  even if there are no Steiner nodes and the graph is a tree; moreover  there exists no polynomial time approximation algorithm with a constant bound on the relative error under the hypothesis that P 
$\neq$ NP [16]. Hence  fast and good heuristic algorithms are needed in practice. In this paper  we present an integer programming formulation of the problem. Using Lagrangean relaxation and subgradient optimization  we derive a lower bound. In order to test the lower bound  we present a procedure for generating test problems for the class Steiner minimal tree problem that have known optimal solutions. The computational experiments for the test problems demonstrate that the lower bound is very tight and differs from the optimal solutions by only a few percent on average for sparse graphs.",2014-03-20
10.1007/s00236-015-0249-7,Concurrent abstract state machines,A concurrent Abstract State Machine (ASM) is a family of agents each equipped with a sequential ASM to execute. We define the semantics of concurrent ASMs by concurrent ASM runs which overcome the problems of Gurevich’s distributed ASM runs and generalize Lamport’s sequentially consistent runs. A postulate characterizing an intuitive understanding of concurrency is formulated. It allows us to state and prove an extension of the sequential ASM thesis to a concurrent ASM thesis.,2014-03-20
10.1007/BF00267043,Truly prefix-correct chain-free LR(1) parsers,SummaryA refinement of Pager's method for the elimination of chain productions from LR parsers is presented. A practical algorithm is given and it is shown that the resulting parsers are prefix-correct in a very strict sense.,2017-03-20
10.1007/BF00292114,Time optimal left to right construction of position trees,SummaryIn the following paper we are presenting a new algorithm for the on-line construction of position trees. Reading a given input string from left to right we are generating its position tree with the aid of the general concept of infix trees. An additional chain structure within the trees  called tail node connection  enables us to construct the tree within the best possible time (proportional to the number of nodes).,2011-03-20
10.1007/s002360050179,Optimal bounds on the gain of permitting dynamic allocation of communication channels in distributed computing,"Abstract. Consider a distributed system consisting of n computers connected by a number of identical broadcast channels. All computers may receive messages from all channels. We distinguish between two kinds of systems: systems in which the computers may send on any channel (dynamic allocation) and system where the send port of each computer is statically allocated to a particular channel. A distributed task (application) is executed on the distributed system. A task performs execution as well as communication between its subtasks. We compare the completion time of the communication for such a task using dynamic allocation and 
$k_d$ channels with the completion time using static allocation and 
$k_s$ channels. Some distributed tasks will benefit very much from allowing dynamic allocation  whereas others will work fine with static allocation. In this paper we define optimal upper and lower bounds on the gain (or loss) of using dynamic allocation and 
$k_d$ channels compared to static allocation and 
$k_s$ channels. Our results show that  for some tasks  the gain of permitting dynamic allocation is substantial  e.g. when 
$k_s = k_d = 3$  there are tasks which will complete 1.89 times faster using dynamic allocation compared to using the best possible static allocation  but there are no tasks with a higher such ratio.",2012-03-20
10.1007/BF00269806,Klaus Samelson,This year on Whitsunday  May 25  1980  Professor Dr. Klaus Samelson has passed away after having endured a long and severe illness. Born 1918 in StraBburg he lived in Breslau through his childhood and his high school years. Since he was not allowed under the Nationalsocialistic regime to register in a university  Klaus Samelson had to wait until 1946 before he could begin to study Mathematics and Physics at the Ludwig-Maximilians-Universit~it in Munich. After his graduation Klaus Samelson was working for a Short period as a high school teacher before he returned to the. university. He took his doctor's degree under F.Bopp with a dissertation on a quantum mechanical problem which had been posed by A. Sommerfeld. This topic was already a stimulation for Klaus Samelson to become interested in Numerical Analysis  and when H. Piloty and R. Sauer began their extremely fruitful cooperation in designing and constructing the electronic computer PERM he took up the chance offered by R. Sauer of an employment as a research associate in the Mathematical Institute of the Technical University Munich. This marks a turning point in Samelson's scientific career. His first publications followed R. Sauer's interests dealing with supersonic flow and with precision problems of digital computations for numerical calculations of eigenvalues. But soon began Samelson's great influence on the development of Informatics as a new discipline of science. Together with F.L. Bauer he studied the structure of programming languages in order to develop efficient algorithms for their translation and implementation. This research was stimulated partly by H. Rutishauser and led to the invention and exploration of the cellar principle as the appropriate model for bracketed structures. For K. Samelson it was therefore clear right from the beginning that this principle should not only govern the translation of programming languages but also the runtime system meaning that the scope and access rights of data structures within a program should follow a dynamic bracket structure which is reflected in the static program write-up. In this cognition the stack in conjunction with the block structure was already present even if the word for this concept was coined later. With it a fundamental breakthrough for the,2013-03-20
10.1007/BF00262976,A hierarchy theorem for multihead stack-counter automata,"SummaryLet Lb = {w1*...*w2b¦wi is in {0 1}* and wi = w2b+1−i for 1≦i≦2b for b≧1. We show that the language Lb is not recognizable by any nondeterministic one-way k-head stack-counter automata if 
$$b > \left( {\begin{array}{*{20}c} k \\ 2 \\ \end{array} } \right)$$
. As a corollary  we show that k+1 heads are better than k for one-way multihead stack-counter automata.",2016-03-20
10.1007/BF00264226,Querying fragmented relations in a distributed database,SummaryThe paper discusses the query optimization problem in a distributed database system supporting a complex fragmentation schema  in which different fragments can share the same set of data. The fragmentation and the distribution of data are assumed to be transparent to the user  who queries the database in terms of the global relations. The optimization of queries stated on a single fragmented relation is considered  and a method for its solution is presented. The method is based on an algorithm which calculates a set of virtual fragments that can alternatively be used to answer the query.,2012-03-20
10.1007/BF00264258,A note on the density of inherently ambiguous context-free languages,SummaryIn this paper we give the first example of an inherently ambiguous context-free language with a non-algebraic density.,2017-03-20
10.1007/BF00263192,Logic for improving integrity checking in relational data bases⋆,SummaryWhen an “updating” operation occurs on the current state of a data base  one has to ensure the new state obeys the integrity constraints. So  some of them have to be evaluated on this new state. The evaluation of an integrity constraint can be time consuming  but one can improve such an evaluation by taking advantage from the fact that the integrity constraint is satisfied in the current state. Indeed  it is then possible to derive a simplified form of this integrity constraint which is sufficient to evaluate in the new state in order to determine whether the initial constraint is still satisfied in this new state. The purpose of this paper is to present a simplification method yielding such simplified forms for integrity constraints. These simplified forms depend on the nature of the updating operation which is the cause of the state change. The operations of inserting  deleting  updating a tuple in a relation as well as transactions of such operations are considered. The proposed method is based on syntactical criteria and is validated through first order logic. Examples are treated and some aspects of the method application are discussed.,2015-03-20
10.1007/BF00290142,Throughput of a satellite channel communication,SummaryThe throughput of a satellite channel communication is depending upon the link protocol. It is well known that the “classical” HDLC protocol is inadequate when applied to satellite links instead of short terrestrial links. Several modifications have been proposed to overcome this problem. The present paper gives an analysis and evaluation of a new class of protocols called “Virtual Subchannel schemes” which splits the satellite link into several components; these subchannels are assigned for transmission in cyclic order and are controlled independently of each other by the classical HDLC procedure.,2012-03-20
10.1007/BF00288729,Semantic decomposition of computer programs: An aid to program testing,SummarySemantic decomposition results in a hierarchy of partitions which are small enough to be easily understood  and large enough to be meaningful to a program tester. Each partition results in the elimination of at least one local variable from consideration during error analysis  which further simplifies the testing process. Semantic decomposition reduces the complexity of the testing process  enhances the understandability of the program for the tester  and thus abstracts a program to a higher level. The decomposition yields a plan for hierarchical testing which  if followed conscientiously  should result in faster and more thorough testing for large or poorly structured programs. By reorganizing poorly structured programs into the modules indicated by semantic decomposition  an improved source level representation of the programs may be obtained.,2017-03-20
10.1007/BF00289574,Stratified balanced search trees,SummaryWe develop a new perspective on trees  that enables us to distinguish and analyse many different subclasses of known classes of (height-)balanced search trees in a uniform manner. The approach shows that a great many different local constraints  including an arbitrary degree of density  can be enforced on everyday balanced search tree models  without losing the O(log n) bound on the time for insertions  deletions and finds. The theory extends known concepts from the study of B-trees.,2020-03-20
10.1007/BF00288649,Optimal disk merge patterns,Our purpose is to study the optimal way to merge n initially sorted runs  stored on a disk like device  into a unique sorted file. This problem is equivalent to finding a tree with n leaves which minimizes a certain cost function (see Knuth [1]).We shall study some properties of those optimal trees  in the hope of finding efficient ways for constructing them.In particular  if all the initial runs have the same length  an algorithm for constructing the best merge pattern is described ; its running time is proportional to n2 and it requires space proportional to n.A special case is also analyzed in which the problem is solved in time and space proportional to n  and which provides some insight into the asymptotic behaviour of optimal merge trees.,2016-03-20
10.1007/BF00264361,Redundant proofs of non-interference in Levin-Gries CSP program proofs,SummaryThe proof system for Hoare's CSP language proposed by Levin and Gries requires that non-interference be proven for each assertion used in the proof of a process. In the worst case  the effort required to provide such proofs could be enormous. The need for these proofs has been identified as a significant weakness of the system. In this paper  we show that most of the proofs of non-interference required are unnecessary. This suggest that proving non-interference in the Levin-Gries system may be far less burdensome than had previously been assumed.,2018-03-20
10.1007/BF03036463,On the recognition of permuted Supnick and incomplete Monge matrices,Incomplete Monge matrices are a generalization of standard Monge matrices: the values of some entries are not specified and the Monge property only must hold for all specified entries. We derive several combinatorial properties of incomplete Monge matrices and prove that the problem of recognizingpermuted incomplete Monge matrices is NP-complete. For the special case of permutedSupnick matrices  we derive a fast recognition algorithm and thereby identify a special case of then-vertex travelling salesman problem which can be solved inO(n2logn) time.,2016-03-20
10.1007/BF00288468,Generating binary trees of bounded height,SummaryWe present a new encoding scheme for binary trees with n internal nodes whose heights are bounded by a given value h  h≧⌈log2(n +1)1⌉. The scheme encodes the internal nodes of the tree level by level and enables us to develop an algorithm for generating all binary trees within this class in a certain predetermined order. Specifically  the trees are generated in decreasing height and for trees of the same height they are generated in lexicographically increasing order. The algorithm can be easily generalized to encompass t-ary trees with bounded height. It is then shown that the average generation time per tree is constant (independent of n and h).,2013-03-20
10.1007/BF01178510,A recursive second order initial algebra specification of primitive recursion,Theoretical results on the scope and limits of first order algebraic specifications can be used to show that certain natural algebras have no recursively enumerable equational specification under first order initial algebra semantics. A well known example is the algebraPℛ of primitive recursive functions over the natural numbers. In this paper we show thatPℛ has a recursive equational specification under second order initial algebra semantics. It follows that higher order initial algebra specifications are strictly more powerful than first order initial algebra specifications.,2016-03-20
10.1007/BF01178731,Petri net algorithms in the theory of matrix grammars,This paper shows that the languages over a one-letter alphabet generated by context-free matrix grammars are always regular. Moreover we give a decision procedure for the question of whether a context-free matrix language is finite. Hereby we strengthen a result of [Mk 92] and settle a number of open questions in [DP 89]. Both results are obtained by a reduction to Petri net problems.,2013-03-20
10.1007/BF00265683,Decidable properties of monadic recursive schemas with a depth parameter,SummaryMonadic table counter schemas (MTCS) are defined as extensions of recursive monadic schemas by incorporating a depth-of-recursion counter. The family of languages generated by free MTCS under Herbrand interpretation is shown to be the family of ETOL languages. It is proven that the halting and divergence problems are decidable for free MTCS and that the freedom problem is decidable. Most of these results are obtained using results on regular control sequences from L system theory.,2019-03-20
10.1007/BF03036460,Disambiguating grammars by exclusion of sub-parse trees,A method is presented for disambiguation of grammars  based on the idea of excluding certain forbidden sub-parse trees. Combined with recent developments in the theory of parser generation for ambiguous grammars  the method disambiguates large classes of grammars guaranteeing that the generated language is unchanged.,2017-03-20
10.1007/BF00288685,Optimal scheduling for two-processor systems,SummaryDespite the recognized potential of multiprocessing little is known concerning the general problem of finding efficient algorithms which compute minimallength schedules for given computations and m≧2 processors. In this paper we formulate a general model of computation structures and exhibit an efficient algorithm for finding optimal nonpreemptive schedules for these structures on two-processor systems. We prove that the algorithm gives optimal solutions and discuss its application to preemptive scheduling disciplines.,2020-03-20
10.1007/BF00289592,Another look at the “longest ascending subsequence” problem,SummaryDijkstra has given a derivation of an efficient algorithm for a problem concerning monotonic subsequences  and extracted a proof of a related theorem from the algorithm. Here it is shown that a careful separation of concerns can lead to a beautiful conventional proof  a very different derivation of Dijkstra's algorithm  a more elegant proof from the algorithm  and the discovery of a duality property.,2019-03-20
10.1007/BF00264314,Decomposition of graphs and monotone formula size of homogeneous functions,SummaryWe show that every graph on n nodes can be partitioned by a number of complete bipartite graphs with O(n2/log n) nodes with no edge belonging to two of them. Since each partition corresponds directly to a monotone formula for the associated quadratic function we obtain an upper bound for the monotone formula size of quadratic functions. Our method extends to uniform hypergraphs with fixed range and thus to homogeneous functions with fixed length of prime implicants. Finally we give an example of a quadratic function where each monotone formula built from arbitrary partitions of the graph (double edges allowed) is not optimal. That means we disprove the single-level-conjecture for formulae.,2013-03-20
10.1007/BF00263578,On the finite degree of ambiguity of finite tree automata,SummaryThe degree of ambiguity of a finite tree automaton A  da(A)  is the maximal number of different accepting computations of A for any possible input tree. We show: it can be decided in polynomial time whether or not da(A)<∞. We give two criteria characterizing an infinite degree of ambiguity and derive the following fundamental properties of an finite tree automaton A with n states and rank L>1 having a finite degree of ambiguity: for every input tree t there is a input tree t1 of depth less than 22n·n! having the same number of accepting computations; the degree of ambiguity of A is bounded by 222·log(L+1)·n.,2016-03-20
10.1007/BF00263291,Order and metric in the stream semantics of elemental concurrency,SummaryTwo denotational semantics for a language with simple concurrency are presented. The language has parallel composition in the form of the shuffle operation  in addition to the usual sequential concepts including full recursion. Two linear time models  both involving sets of finite and infinite streams  are given. The first model is order-theoretic and based on the Smyth order. The second model employs complete metric spaces. Various technical results are obtained relating the order-theoretic and metric notions. The paper culminates in the proof that the two semantics for the language considered coincide. The paper completes previous investigations of the same language  establishing the equivalence of altogether four semantic models for it.,2014-03-20
10.1007/BF01185405,A formal identification between tuples and lists with an application to list-arithmetic categories,"AbstractWe may say with confidence that in many papers about general programming languages either the distinction betweenn-tuples and lists of lengthn is avoided  or those objects are identified  but only at an intuitive level [7  8  13]. That type of identification  considered formally  leads to non-trivial problems  making difficult the typing of the functions used to deal with lists  i.e.hd  tl  cons...
In this paper  following computational intuitions  we present a construction of a list object as a coproduct. This idea is the key concept that permits us to prove directly some of the presented results about list-arithmetic categories. This is a most useful construction because we construct recursive objects on the basis of the expected semantics of a list object.",2015-03-20
10.1007/s002360050119,Average-case complexity for the execution of recursive definitions on relational databases,"Abstract. The execution costs of various types of database queries  expressed in terms of linear recusive definitions  are evaluated for two common query evaluation algorithms in the case where the database relations are represented by forests of labelled oriented trees. In a first stage  the execution costs are computed for a given forest. A key issue in this computation is the partition of the set of nodes in the forest into equivalence classes  the properties of which are explored. Moreover  the representation adopted is conceptually simple and provides additional results which are of interest by themselves. In a second stage  the averages of these costs  computed over all databases representable by forests with a given number of nodes  are also evaluated. Finally  the execution cost of the considered database queries is computed for the case where the underlined database relations are modelled as Hamiltonian digraphs.
",2019-03-20
10.1007/s00236-011-0145-8,The query complexity of estimating weighted averages,The query complexity of estimating the mean of some [0  1] variables is understood. Inspired by some work by Carterette et al. on evaluating retrieval systems  and by Moffat and Zobel’s new proposal for such evaluation  we examine the query complexity of weighted average calculation. In general  determining an answer within accuracy $${\varepsilon}$$  with high probability  requires $${\Omega(\varepsilon^{-2})}$$ queries  as the mean is a special case. There is a matching upper bound for the weighted mean. If the weights are a normalized prefix of a divergent series  the same result holds. However  if the weights follow a geometric sequence  a sample of size $${\Omega(\log (1/\varepsilon))}$$ suffices. Our principal contribution is the investigation of power-law sequences of weights. We show that if the ith largest weight is proportional to i−p  for p > 1  then the query complexity is in $${\Omega(\varepsilon^{2/(1-2p)})}$$.,2018-03-20
10.1007/s00236-015-0243-0,Metric temporal logic revisited,We introduce a new way of defining metric temporal logic over the continuous real model of time. The semantics refer to a single universal clock in order to impose metric constraints to any desired precision. Furthermore  the expression of any non-metric aspects can correctly utilise the full power of continuous time temporal logic. Syntactic constructs afford the convenient succinct expression of many useful and typical constraints including some interesting requirements for regular occurrences. A decision procedure is provided via a simple translation into an existing non-metric temporal logic and this gives a workable complexity and the possibility of automated reasoning. There are advantages in expressiveness  naturalness  generality and amenability to reasoning techniques over the existing metric temporal logics. Combining purely continuous with adequate metric aspects in one language makes the logic very suitable for dealing with hybrid systems.,2018-03-20
10.1007/BF00289243,Language design methods based on semantic principles,SummaryTwo language design methods based on principles derived from the denotational approach to programming language semantics are described and illustrated by an application to the language Pascal. The principles are  firstly  the correspondence between parametric and declarative mechanisms  and secondly  a principle of abstraction for programming languages adapted from set theory. Several useful extensions and generalizations of Pascal emerge by applying these principles  including a solution to the array parameter problem  and a modularization facility.,2011-03-20
10.1007/BF00289140,Axiomatising finite delay operators,SummaryIn a simple language for finite automata based on SCCS we introduce three different delay operators δ  ɛ  γ. The operators ɛ  γ are two different versions of an unbounded but finite delay operator. It is argued that the usual notion of bisimulation is inadequate and two generalisations are proposed. In both cases we give a complete axiomatisation for finite terms of the language and prove that certain forms of induction are sound. In one case we give a complete axiomatisation.,2015-03-20
10.1007/BF02737109,Resolution on formula-trees,SummaryWe introduce a nonclausal resolution calculus on formula-trees which comprises classical resolution as a special case. The resolvents produced in this calculus are more structure preserving than in nonclausal resolution by Murray and Manna and Waldinger and simpler than in nested resolution by Traugott. Proofs of correctness and completeness are given. In some examples  first experiences made when implementing the calculus are discussed.,2013-03-20
10.1007/s00236-005-0177-z,Subtyping for session types in the pi calculus,Extending the pi calculus with the session types proposed by Honda et al. allows high-level specifications of structured patterns of communication  such as client-server protocols  to be expressed as types and verified by static typechecking. We define a notion of subtyping for session types  which allows protocol specifications to be extended in order to describe richer behaviour; for example  an implemented server can be refined without invalidating type-correctness of an overall system. We formalize the syntax  operational semantics and typing rules of an extended pi calculus  prove that typability guarantees absence of run-time communication errors  and show that the typing rules can be transformed into a practical typechecking algorithm.,2019-03-20
10.1007/s002360050050,Forgetting automata and context-free languages,It is shown that context-free languages can be characterized by linear bounded automata with the following restriction: the head can either move right without rewriting or move left with erasing the current cell (i.e. rewriting it with a special  nonrewriteable  symbol). If  instead of erasing  we consider deleting (complete removing of the cell)  the corresponding automata are less powerful.,2017-03-20
10.1007/BF03036472,Calculi for interaction,Action structures have previously been proposed as an algebra for both the syntax and the semantics of interactive computation. Here  a class of concrete action structures calledaction calculi is identified  which can serve as a non-linear syntax for a wide variety of models of interactive behaviour. Each action in an action calculus is represented as an assembly ofmolecules; the syntactic binding ofnames is the means by which molecules are bound together. A graphical form action graphs  is used to aid presentation. One action calculus differs from another only in its generators  calledcontrols.Action calculi generalise a previously defined action structure PIC for the π- calculus. Several extensions to PIC are given as action calculi  giving essentially the same power as the π-calculus. An action calculus is also given for the typed λ-calculus  and for Petri nets parametrized on their places and transitions.An equational characterization of action calculi is given: each action calculusA is the quotient of a term algebra by certain equations. The terms are generated by a set of operators  including those basic to all action structures as well as the controls specific toA; the equations are the basic axioms of action structures together with four additional axiom schemata.,2018-03-20
10.1007/BF00290145,Strongest invariant functions: Their use in the systematic analysis of while statements,SummaryStrongest invariant functions  a useful tool in the analysis of while statements  are defined and discussed. Their relationships to loop invariants and to the function computed by the while statement are investigated.,2018-03-20
10.1007/BF01209712,Unavoidable binary patterns,Peter Roth proved that there are no binary patterns of length six or more that are unavoidable on the two-letter alphabet. He gave an almost complete description of unavoidable binary patterns. In this paper we prove one of his conjectures: the pattern α2 β2 α is 2-avoidable. From this we deduce the complete classification of unavoidable binary patterns. We also study the concept of avoidability by iterated morphisms and prove that there are a few 2-avoidable patterns which are not avoided by any iterated morphism.,2012-03-20
10.1007/BF00289049,A unified approach to the generation and the acception of formal languages,SummaryThe duality of generation and acception of the Chomsky classes of languages is emphasized by considering the corresponding acceptors as Semi-Thue-Systems instead of unnatural “machines”.It is shown as one main result that lba's  pda's and fsa's are characterized by imposing extremely simple and natural length conditions on the productions of the accepting Semi-Thue-System. As a second result  the shift-reduce or LR-acceptor which is wellknown from syntax analysis is generalised for CH-1 and CH-0 languages. As for contextfree languages  the LR-acceptor when scanning a word from Left to right yields a Right-most derivation in the general sense.,2015-03-20
10.1007/BF01261656,Independent database schemes under functional and inclusion dependencies,In a context considering in a unique framework all the relations in a database  by means of the notion of global consistency  independent database schemes allow enforcement of constraints to be performed locally  thus providing independent updatability of the various relations. Independent schemes have hitherto been studied in the presence of functional and join dependencies. In this paper the definition is extended and some characterizations are given for schemes whose sets of constraints contain functional and inclusion dependencies.,2012-03-20
10.1007/BF00289139,Optimal multiway search trees for variable size keys,This paper considers the construction of optimal search trees for a sequence of n keys of varying sizes  under various cost measures. Constructing optimal search cost multiway trees is NP-hard  although it can be done in pseudo-polynomial time O 3 and space O 2  where L is the page size limit. An optimal space multiway search tree is obtained in O 3 time and O 2 space  while an optimal height tree in O(n 2 log2 n) time and O(n) space both having additionally minimal root sizes. The monotonicity principle does not hold for the above cases. Finding optimal search cost weak B-trees is NP-hard  but a weak B-tree of height 2 and minimal root size can be constructed in O(n log n) time. In addition  if its root is restricted to contain M keys then a different algorithm is applied  having time complexity O(nM log n). The latter solves a problem posed by McCreight.,2019-03-20
10.1007/BF00288647,Automaten in planaren Graphen,SummaryFor any finite set of automata there is a planar graph which the automata together cannot search.,2016-03-20
10.1007/BF00288651,Reducing the number of multiplikations in iterative processes,SummaryIn any iteration scheme  such as vk=f(Qvk−1)  where a fixed matrix multiplies a vector that depends on the iteration number  Winograd's method for computing inner products can be used in a straightforward manner to reduce the number of multiplications required at the cost of more additions. The key observation is that certain quantities required by Winograd's method have to be computed only at the first iteration. In the Jacobi method for solving systems of linear equations  f is linear. Gauss-Seidel iteration often converges faster than Jacobi iteration  but it cannot be put in the above form. A simple trick is necessary to apply Winograd's method in an efficient recursive manner. Our proposed method is better than the naive method when it is faster to add than to multiply. Versions of Jacobi and Gauss-Seidel iteration appropriate for optimization (as in Markov decision problems) are presented. The analysis specializes easily to the linear equation case.,2016-03-20
10.1007/BF00269808,Approximate analysis of exponential queueing systems with blocking,SummaryA network of service stations Q0Q1 ... QM is studied. Requests arrive at the centers according to independent Poisson processes; they travel through (part of) the network demanding amounts of service  with independent and negative exponentially distributed lengths  from those centers which they enter  and finally depart from the network. The waiting rooms or buffers at each service station in this exponential service system are finite. When the capacity at Qi is reached  service at all nodes which are currently processing a request destined next for Qi is instantaneously interrupted. The interruption lasts until the service of the request in the saturated node Qi is. completed. This blocking phenomenon makes an exact analysis intractable and a numerical solution computationally infeasible for most exponential systems. We introduce an approximation procedure for a class of exponential systems with blocking and show that it leads to accurate approximations for the marginal equilibrium queue length distributions. The applicability of the approximation method may not be limited to blocking systems.,2015-03-20
10.1007/BF00264295,A sound and relatively complete Hoare-logic for a language with higher type procedures,SummaryPresent day Hoare-like proof-systems are in general not capable of dealing with procedures with procedure parameters. Nevertheless  the fact  that the actual termination problem over finite interpretations is decidable for a language with procedures of finite modes and without global variables [15] indicates  that a relatively complete Hoare-style proof-system for such a language (Clarke's language L4) should exist  which then necessarily has to incorporate new proof-techniques. This paper presents such a system (using a suitable oracle set) and thus essentially solves the conjecture raised by Langmaack and Olderog.,2016-03-20
10.1007/BF00289580,Partage de tâches entre processeurs homogenes,RésuméUne méthode de partage de tâches entre deux processeurs homogènes interconnectés est proposée. Nous supposons que l'un des deux processeurs est plus rapide que l'autre et nous donnons un algorithme s'appuyant sur une modélisation du système  permettant de diminuer les temps d'exécution des tâches du processeur le plus lent en les sous-traitant au processeur le plus rapide. L'algorithme proposé tient compte à la fois de la charge du processeur le plus rapide et des temps de transmission. L'efficacité de l'algorithme est montré à travers une étude théorique et une étude expérimentale mettant en æuvre un PDP 11/03 et un PDP 11/34.SummaryA method for task scheduling between two homogeneous interconnected processors is proposed. We assume that one of the processors is faster than the other and we develop an algorithm based on a model of the system  which minimizes the execution delay of tasks arriving to the slow processor by taking into account the load of the fastest processor and the transmission delay. The performance of the algorithm is investigated experimentally using a PDP 11/03 connected to a PDP 11/34.,2018-03-20
10.1007/BF00292108,An easily testable optimal-time VLSI-multiplier,SummaryWe consider the design of a ‘tree-multiplier’  which is a modified version of a Wallace tree-multiplier [16] made suitable for VLSI design by Luk and Vuillemin [12]. It is shown that 4 log(n) + 3 test patterns suffice to exhaustively test the multiplier with respect to the ‘cellular fault model’ (which includes tests for all single stuck at faults). Some slight modifications of the multiplier prove  that these tests can be applied without increasing the number of input ports substantially.,2011-03-20
10.1007/BF00289576,The complexity of drawing trees nicely,SummaryWe investigate the complexity of producing aesthetically pleasing drawings of binary trees  drawings that are as narrow as possible. The notion of what is aesthetically pleasing is embodied in several constraints on the placement of nodes  relative to other nodes. Among the results we give are: (1) There is no obvious “principle of optimality” that can be applied  since globally narrow  aesthetic placements of trees may require wider than necessary subtrees. (2) A previously suggested heuristic can produce drawings on n-node trees that are Θ(n) times as wide as necessary. (3) The problem can be reduced in polynomial time to linear programming; hence  if the coordinates assigned to the nodes are continuous variables  then the problem can be solved in polynomial time. (4) If the placement is restricted to the integral lattice then the problem is NP-hard  as is its approximation to within a factor of about 4 per cent.,2018-03-20
10.1007/BF00290339,Monotone data flow analysis frameworks,SummaryWe consider a generalization of Kildall's lattice theoretic approach to data flow analysis  which we call monotone data flow analysis frameworks. Many flow analysis problems which appear in practice meet the monotonicity condition but not Kildall's condition called distributivity. We show that the maximal fixed point solution exists for every instance of every monotone framework  and that it can be obtained by Kildall's algorithm. However  whenever the framework is monotone but not distributive  there are instances in which the desired solution—the “meet over all paths solution” — differs from the maximal fixed point. Finally  we show the nonexistence of an algorithm to compute the meet over all paths solution for monotone frameworks.,2020-03-20
10.1007/s002360050163,Reasoning algebraically about loops,Abstract. We show how to formalise different kinds of loop constructs within the refinement calculus  and how to use this formalisation to derive general transformation rules for loop constructs. The emphasis is on using algebraic methods for reasoning about equivalence and refinement of loop constructs  rather than operational ways of reasoning about loops in terms of their execution sequences. We apply the algebraic reasoning techniques to derive a collection of transformation rules for action systems and for guarded loops. These include transformation rules that have been found important in practical program derivations: data refinement and atomicity refinement of action systems; and merging  reordering  and data refinement of loops with stuttering transitions.,2017-03-20
10.1007/s00236-015-0245-y,State complexity of deletion and bipolar deletion,It is well known that the language obtained by deleting an arbitrary language from a regular language is regular. We give an upper bound for the state complexity of deleting an arbitrary language from a regular language and a matching lower bound. We show that the state complexity of deletion is $$n \cdot 2^{n-1}$$n·2n-1 [respectively  $$(n + \frac{1}{2}) \cdot 2^n - 2$$(n+12)·2n-2] when using complete (respectively  incomplete) deterministic finite automata. We show that the state complexity of bipolar deletion has an upper bound $$n^n$$nn [respectively $$(n+1)^n - 1$$(n+1)n-1] when using complete (respectively  incomplete) deterministic finite automata. In both cases we give almost matching lower bounds.,2017-03-20
10.1007/BF00260928,A conservation law for G/G/m queueing systems,SummaryConservation laws are useful in the investigation of physical systems. There exists a special conservation law for priority queueing systems: a preferential treatment given to one class of jobs is afforded at the expense of other jobs. This fundamental relationship has been proved previously for G/G/1 queueing systems. In the present paper the conservation law is extended to G/G/m queueing systems and a useful application of this extension is given.,2017-03-20
10.1007/BF00289145,Unsafe operations in B-trees,SummaryA simple mathematical model for analyzing the dynamics of a B-tree node is presented. From the solution of the model  it is shown that the simple technique of allowing a B-tree node to be slightly less than half full can significantly reduce the rate of split  merge and borrow operations. We call split  merge  borrow and balance operations unsafe operations in this paper. In a multi-user environment  a lower unsafe operation rate implies less blocking and higher throughput  even when tailored concurrency control algorithms (e.g.  that proposed by Lehman and Yao [10]) are used. A lower unsafe operation rate also means a longer life time of an optimally initialized B-tree (e.g.  compact B-tree). It is in general useful to have an analytical model which can predict the rate of unsafe operations in a dynamic data structure  not only for comparing the behavior of variations of B-trees  but also for characterizing workload for performance evaluation of different concurrency control algorithms for such data structures. The model presented in this paper represents a starting point in this direction.,2013-03-20
10.1007/s00236-013-0191-5,Synthesizing robust systems,Systems should not only be correct but also robust in the sense that they behave reasonably in unexpected situations. This article addresses synthesis of robust reactive systems from temporal specifications. Existing methods allow arbitrary behavior if assumptions in the specification are violated. To overcome this  we define two robustness notions  combine them  and show how to enforce them in synthesis. The first notion applies to safety properties: If safety assumptions are violated temporarily  we require that the system recovers to normal operation with as few errors as possible. The second notion requires that  if liveness assumptions are violated  as many guarantees as possible should be fulfilled nevertheless. We present a synthesis procedure achieving this for the important class of GR(1) specifications  and establish complexity bounds. We also present an implementation of a special case of robustness  and show experimental results.,2019-03-20
10.1007/BF00288652,Critical comments on the programming language Pascal,SummaryThe programming language Pascal is claimed to be more suitable than other languages for “teaching programming as a systematic discipline”. However  an investigation of the Reports on the Pascal language reveals that it suffers as much from ill-defined constructs as many of the languages to which it is supposed to offer an alternative. Problems with the language are caused primarily by the confusion of ranges  types and structures and by the phenomena associated with goto statements.,2019-03-20
10.1007/BF00290708,Analysis of space allocation in a generally fragmented linear store,SummaryThe space allocation process in a fragmented linear store with general fragmentation characteristics is analysed. For a given allocation requirement t  exact expression for the n-th moment of the allocation penalty for single block contiguous allocation is obtained  which for large t is shown to be O(¯F(t)−n)  where ¯F(·) is the complementary distribution function of the free block sizes. For multiple block non-contiguous allocation  it is shown that the corresponding penalty can be approximated by an n-th degree polynomial and is O(tn) for large t. Compared with experimental values  the model results are able to achieve good agreement.,2020-03-20
10.1007/s00236-015-0229-y,A tool for deciding the satisfiability of continuous-time metric temporal logic,Constraint LTL over clocks is a variant of CLTL  an extension of linear-time temporal logic allowing atomic assertions in a concrete constraint system. Satisfiability of CLTL over clocks is here shown to be decidable by means of a reduction to a decidable Satisfiability Modulo Theories (SMT) problem. The result is a complete Bounded Satisfiability Checking procedure  which has been implemented by using standard SMT solvers. The importance of this technique derives from the possibility of translating various continuous-time metric temporal logics  such as MITL and QTL  into CLTL over clocks itself. Although standard decision procedures of these logics do exist  they have never been realized in practice. Suitable translations into CLTL over clocks have instead allowed us the development of the first prototype tool for deciding MITL and QTL. The paper also reports preliminary  but encouraging  experiments on some significant examples of MITL and QTL formulae.,2014-03-20
10.1007/s00236-011-0138-7,A Markovian queue with varying number of servers and applications to the performance comparison of HSDPA user equipment,Inspired by the need for performability models for HSDPA user equipment  a Markovian queue with varying number of servers is conceived. The arrival and the service processes  the number of allocated or active servers of the queue are inherently  and independently (or jointly) Markov modulated. Batch arrivals  batch services  autocorrelation of inter-arrival times  and autocorrelation of batch sizes can be accommodated in the queue  by a suitable use of Markov modulation and generalized exponential distribution. The queue has a provision for negative customers too. Transformations of the balance equations into a computable form are proposed in order to obtain the steady state probabilities with the Spectral Expansion method. This queue is used to model the High Speed Downlink Packet Access (HSDPA) wireless networks. The model is an integrated one with respect to HSDPA  capable of accommodating many of the intricate aspects of HSDPA such as  channel allocation policy  loss of packets due to channel fading  bursty and correlated traffic. Good agreement is observed between the numerical results of the proposed analytical model and those of an independent simulator of real HSDPA and radio channel behaviors. The comparison of the terminal categories specified by the 3rd Generation Partnership Project (3GPP) is also presented.,2016-03-20
10.1007/s00236-014-0208-8,Some properties of involution binary relations,This paper aims to investigate properties of involution binary relations  which are some particular binary relations. We study the concepts of involution spanning sets and give some examples related to different involution binary relations. Moreover  some relationships among the involution independent sets  codes  and involution codes are studied when the mapping function is either a morphic or an antimorphic involution of $$X^*$$X∗.,2014-03-20
10.1007/BF01213206,Well quasi-orders and regular languages,An extension of Myhill's theorem of automata theory  due to Ehrenfeucht et al. [4] shows that a subsetX of a semigroupsS is recognizable if and only ifX is closed with respect to a monotone well quasi-order onS. In this paper we prove that a similar extension of Nerode's theorem is not possible by showing that there exist non-regular languages on a binary alphabet which are closed with respect to a right-monotone well quasi-order. We give then some additional conditions under which a setX S closed with respect to a right-monotone well quasi-order becomes recognizable. We prove the following main proposition: A subsetX ofS is recognizable if and only ifX is closed with respect to two well quasi-orders<=1 and<=2 which are right-monotone and left-monotone  respectively. Some corollaries and applications are given. Moreover  we consider the family ℱ of all languages which are closed with respect to a right-monotone well quasi-order on a finitely generated free monoid. We prove that ℱ is closed under rational operations  intersection  inverse morphisms and direct non-erasing morphisms. This implies that ℱ is closed under faithful rational transductions. Finally we prove that the languages in ℱ satisfy a suitable ‘pumping’ lemma and that ℱ contains languages which are not recursively enumerable.,2012-03-20
10.1007/BF02983374,Efficient memo-table management strategies,SummaryA large  automatically detectable class of non-linear functions is defined and their evaluation graphs are characterised. These results are then used to develop space-efficient implementation ofmemo-functions. We generate a variant of memo-functions which can be used to linearise the time cost of calls of a non-linear function to itself whilst executing in bounded space. These memo-functions dynamically garbage collect (or reuse) memo-table entries when it is known that such entries will not be useful again. For each non-linear function a function called the “table-manager” function is synthesised by a static analysis of the definition of the non-linear function. The table-managers delete (or reuse) entries that are guaranteed to be obsolete as a result of any insertion into the memo-tables. In this way they ensure that the size of the tables is minimised. Furthermore  the sizes of the tables for these memo-functions are guaranteed not to exceed a compile-time constant found by the same static analysis which synthesises the table-managers. The applicability of the method also includes many problems which have been previously solved by applyingdynamic programming techniques. An implementation of these memo-functions for the functional language HOPE is also outlined.,2020-03-20
10.1007/BF01178567,Every binary pattern of length six is avoidable on the two-letter alphabet,U. Schmidt [9  10] showed that every pattern on two letters of length at least 13 is avoidable an a two-letter alphabet (i.e. 2-avoidable). We prove that this bound can be improved to 6. Since there are patterns of length 5 being not 2-avoidable  this bound is optimal.,2019-03-20
10.1007/s00236-002-0086-3,Relaxed red-black trees with group updates,Abstract. In search trees with relaxed balance  updating and rebalancing have been uncoupled such that rebalancing can be controlled separately. Recently  it has been shown how an advanced update such as an insertion of an entire tree into a relaxed multi-way structure can be implemented efficiently. This indicates a similar result for binary trees by a naive interpretation of small multi-way tree nodes as binary configurations. However  this would imply that nodes must be connected by level links  which significantly deviates from the usual structural implementations of binary trees. In this paper  we show that it is possible to define binary schemes which are both natural and efficient.,2019-03-20
10.1007/BF00264032,An analytic storage allocation model,SummaryAn analytical model of a simple computer storage allocation scheme is described  and its Markov nature established given certain conditions on its input and operation. Simple Markov theory is used to compute the expected storage utilisation in some example situations with small memory sizes. These are compared with the analytical closed-form results which are possible when storage relocation is allowed. Some current restrictions and possible future developments and uses of the model are outlined.,2013-03-20
10.1007/s00236-015-0227-0,Efficient execution of dynamically controllable simple temporal networks with uncertainty,A simple temporal network with uncertainty (STNU) is a data structure for representing and reasoning about temporal constraints where the durations of certain temporal intervals—the contingent links—are only discovered during execution. The most important property of an STNU is whether it is dynamically controllable (DC)—that is  whether there exists a strategy for executing its time-points that will guarantee that all of its constraints will be satisfied no matter how the durations of the contingent links turn out. The literature on STNUs includes a variety of DC-checking algorithms and execution algorithms. The fastest DC-checking algorithm reported so far is the $$O(N^3)$$O(N3)-time algorithm due to Morris (Integration of AI and OR techniques in constraint programming—11th international conference  CPAIOR 2014  volume 8451 of Lecture Notes in Computer Science. Springer  Berlin  pp 464–479  2014). The fastest execution algorithm for dynamically controllable STNUs is the $$O(N^3)$$O(N3)-time algorithm due to Hunsberger (Proceedings of the 20th international symposium on temporal representation and reasoning (TIME-2013). IEEE Computer Society  Washington  2013). This paper begins by providing the first comprehensive  rigorous  and yet streamlined treatment of the theoretical foundations of STNUs  including execution semantics  dynamic controllability  and a set of results that have been collected into what has recently been called the fundamental theorem of STNUs. The paper carefully argues from basic definitions to proofs of the major theorems on which all of the important algorithmic work on STNUs depends. Although many parts of this presentation have appeared in various forms  in various papers  the scattered nature of the STNU literature has allowed too many holes in the theory to persist  and has relied all too often on proof sketches that leave important details unexamined. The presentation combines results from many sources  while also introducing novel approaches and proofs. The paper concludes by presenting a modified version of a recent algorithm for managing the execution of dynamically controllable STNUs  the fastest reported so far in the literature. The modified version organizes its computations more efficiently and corrects an oversight in the original algorithm.,2012-03-20
10.1007/BF00289264,A discrete-time round-robin queue with bernoulli input and general arithmetic service time distributions,SummaryWe present a discrete-time round-robin queue with a last-in-first-served rule: a newly arriving job receives a quantum of service immediately and only thereafter joins the tail of the queue. For Bernoulli input and general arithmetic service times we compute steady-state probabilities and mean response times.,2020-03-20
10.1007/BF00288537,Paramodulated connection graphs,The connection graph proof procedure of R. Kowalski is extended to the case of equality. The extension is achieved through the introduction of special links connecting those terms that can be paramodulated upon. Completeness and consistency of the resulting proof procedure are shown.,
10.1007/BF00289520,Schnelle Berechnung von Kettenbruchentwicklungen,SummaryA method  given by D. E. Knuth for the computation of the greatest common divisor of two integers u  v and of the continued fraction for u/v is modified in such a way that only O(n(lg n)2(lglg n)) elementary steps are used for u v<.2n.ZusammenfassungEin von D. E. Knuth angegebenes Verfahren  für ganze Zahlen u  v den größten gemeinsamen Teiler und den Kettenbruch für u/v zu berechnen  wird so modifiziert  daß für n-stellige Zahlen nur O(n(lg n)2 (lglg n)) elementare Schritte gebraucht werden.,2011-03-20
10.1007/BF01178681,Resource finding in store-and-forward networks,We present a model of searching for a resource in a distributed system whose nodes are connected through a store-and-forward network. Based on this model  we show a lower bound on the number of messages needed to find a resource when nothing is known about the nodes that have the current location of the resource. The model also helps us to establish results about the time complexity of determining a message optimal resource finding algorithm when the probability distribution for the location of the resource in the network is known. We show that the optimization problem is NP-hard for general networks. Finally we show that optimal resource finding algorithms can be determined in polynomial time for a class of tree networks and bidirectional rings. The polynomial algorithms can be used as a basis of heuristic algorithms for general networks.,2015-03-20
10.1007/s00236-012-0174-y,Infinitary rewriting: closure operators  equivalences and models,Infinitary Term Rewriting allows to express infinite terms and transfinite reductions that converge to those terms. Underpinning the machinery of infinitary rewriting are closure operators on relations that facilitate the formation of transfinite reductions and transfinite equivalence proofs. The literature on infinitary rewriting has largely neglected to single out such closure operators  leaving them implicit in definitions of (transfinite) rewrite reductions  or equivalence relations. This paper unpicks some of those definitions  extracting the underlying closure principles used  as well as constructing alternative operators that lead to alternative notions of reduction and equivalence. A consequence of this unpicking is an insight into the abstraction level at which these operators can be defined. Some of the material in this paper already appeared in Kahrs (2010). The paper also generalises the notion of equational model for infinitary rewriting. This leads to semantics-based notions of equivalence that tie in with the equivalences constructed from the closure operators.,2012-03-20
10.1007/BF01178580,Alan J. Perlis 1922–1990,,2019-03-20
10.1007/s00236-016-0266-1,On the relations between Markov chain lumpability and reversibility,In the literature  the notions of lumpability and time reversibility for large Markov chains have been widely used to efficiently study the functional and non-functional properties of computer systems. In this paper we explore the relations among different definitions of lumpability (strong  exact and strict) and the notion of time-reversed Markov chain. Specifically  we prove that an exact lumping induces a strong lumping on the reversed Markov chain and a strict lumping holds both for the forward and the reversed processes. Based on these results we introduce the class of $$\lambda \rho $$λρ-reversible Markov chains which combines the notions of lumping and time reversibility modulo state renaming. We show that the class of autoreversible processes  previously introduced in Marin and Rossi (Proceedings of the IEEE 21st international symposium on modeling  analysis and simulation of computer and telecommunication systems MASCOTS  pp. 151–160  2013)  is strictly contained in the class of $$\lambda \rho $$λρ-reversible chains.,2020-03-20
10.1007/BF00264163,Complexity theory and the operational structure of algebraic programming systems,SummaryAn algebraic programming system is a language built from a fixed algebraic data abstraction and a selection of deterministic  and nondeterministic  assignment and control constructs. First  we give a detailed analysis of the operational structure of an algebraic data type  one which is designed to classify programming systems in terms of the complexity of their implementations. Secondly  we test our operational description by comparing the computations in deterministic and non-deterministic programming systems under certain space and time restrictions.,2018-03-20
10.1007/s00236-012-0159-x,Prefix-primitive annihilators of languages under some operations,This paper studies some properties of prefix-primitive annihilators of languages under the catenation  shuffle product and bi-catenation operations. We prove that for every finite language L under the catenation operation  the left prefix-primitive annihilator of L is not equal to the right prefix-primitive annihilator of L  the left prefix-primitive annihilator of languages is not regular for any finite language  and the left prefix-primitive annihilator of any thin languages is not empty. Moreover  we also characterize the prefix-primitive annihilators of non-empty language under the shuffle product and bi-catenation operations over the alphabet with two letters.,2014-03-20
10.1007/BF00289618,EOL systems with control devices,SummaryThis paper is concerned with extended OL systems and the effects (with respect to the generative capacity) on these systems caused by1)regular control on the use of subsets of productions2)appearance checking3)minimal table interpretationand their combinations. Among other things it is proven that the effect of 3) is strictly stronger than the effect of both 1) and 2)  and equal to the effect of the combination of 1) and 2). This implies among other things that the effect of appearance checking on the systems with regular control is significant.Finally the notions of matrix and vector control are introduced  and the effects of these mechanisms are investigated. This leads to results very much different from corresponding well-known results for context-free grammars.,2017-03-20
10.1007/BF01191809,Normal form approach to compiler design,This paper demonstrates how reduction to normal form can help in the design of a correct compiler for Dijkstra's guarded command language. The compilation strategy is to transform a source program  by a series of algebraic manipulations  into a normal form that describes the behaviour of a stored-program computer. Each transformation eliminates high-level language constructs in favour of lower-level constructs. The correctness of the compiler follows from the correctness of each of the algebraic transformations.,2011-03-20
10.1007/BF00263582,Crypt-equivalent algebraic specifications,SummaryEquivalence is a fundamental notion for the semantic analysis of algebraic specifications. In this paper the notion of “crypt-equivalence” is introduced and studied w.r.t. two “loose” approaches to the semantics of an algebraic specification T: the class of all first-order models of T and the class of all term-generated models of T. Two specifications are called crypt-equivalent if for one specification there exists a predicate logic formula which implicitly defines an expansion (by new functions) of every model of that specification in such a way that the expansion (after forgetting unnecessary functions) is homologous to a model of the other specification  and if vice versa there exists another predicate logic formula with the same properties for the other specification. We speak of “first-order crypt-equivalence” if this holds for all first-order models  and of “inductive crypt-equivalence” if this holds for all term-generated models. Characterizations and structural properties of these notions are studied. In particular  it is shown that first order crypt-equivalence is equivalent to the existence of explicit definitions and that in case of “positive definability” two first-order crypt-equivalent specifications admit the same categories of models and homomorphisms. Similarly  two specifications which are inductively crypt-equivalent via sufficiently complete implicit definitions determine the same associated categories. Moreover  crypt-equivalence is compared with other notions of equivalence for algebraic specifications: in particular  it is shown that first-order cryptequivalence is strictly coarser than “abstract semantic equivalence” and that inductive crypt-equivalence is strictly finer than “inductive simulation equivalence” and “implementation equivalence”.,2018-03-20
10.1007/BF00264036,Über die Vernetzungsstruktur von maschinen,SummaryBy adding some technologically motivated postulates to the definition of finite automata  we gain a mathematical model which permits interesting insights into the network structure of computing machines. In particular we show that the design of a strongly wired part (CPU) and a weakly wired part (storage) is advisable from the viewpoint of cost minimisation. We can also deduce some results about the interdependence of wiring density and computation time.,2013-03-20
10.1007/s00236-006-0007-y,Splitting forward simulations to copewith liveness,In the literature  the conditions on history variables or forward simulations that are related to liveness are expressed in terms of behaviours  and are stronger than convenient and necessary. In this paper  we propose alternative conditions on the simulation relation  which are expressed in terms of the next state relation  and are closely tied to the weak or strong fairness conditions of the specifications. The proof of soundness of this proposal is based on a new theorem that asserts the existence of a strongly fair scheduler for infinitely many alternatives. The theory is extended to simulations in which the concrete specification (occasionally) does fewer steps than the abstract specification it implements.,2012-03-20
10.1007/BF01178584,The virtual feedback problem in hierarchical representations of combinational circuits,Orders of magnitude of space and time can be saved if hierarchical algorithms are used for automatic synthesis and analysis of regular VLSI circuits. When we tried to apply this technique to compiled simulation of large regular combinational circuits  we observed that hierarchical representations of acyclic circuits often contain cycles. In this paper we study the question of whether this undesired property is necessary or not. We prove  that there are combinational circuits  which have a succinct cyclic hierarchical representation  but where each acyclic hierarchical representation is large. This negative result may be weakened  if we allow the circuits structure to be changed but not its behavior. We also discuss the effect of these observations on hierarchical simulation techniques and the complexity of pragmatic approaches such as the construction of a smallest acyclic refinement of a hierarchical representation.,2013-03-20
10.1007/BF00271345,The LBA-problem and the deterministic tape complexity of two-way one-counter languages over a one-letter alphabet,SummaryIt is shown  that NTAPE(n) is equal to TAPE(n) if and only if every language L⊂⊣{1}*⊢ which is acceptable by a nondeterministic two-way one-counter automaton whose counter length is bounded by the length of its input is contained in TAPE(log n).,2015-03-20
10.1007/s00236-015-0224-3,Two-way pebble transducers for partial functions and their composition,Two-way finite state transducers are considered that use a finite number of pebbles  of which the life times must be nested. For every nondeterministic transducer that realizes a partial function  an equivalent deterministic transducer can be constructed. The composition of two deterministic transducers can be realized by one such transducer with a minimal number of pebbles.,2020-03-20
10.1007/BF01200263,Logical and schematic characterization of complexity classes,We consider classes of well-known program schemes from a complexity theoretic viewpoint. We define logics which express all those problems solvable using our program schemes and show that the class of problems so solved or expressed coincides exactly with the complexity classPSPACE (our problems are viewed as sets of finite structures over some vocabulary). We derive normal form theorems for our logics and use these normal form theorems to show that certain problems concerning acceptance and termination of our program schemes and satisfiability of our logical formulae arePSPACE-complete. Moreover  we show that a game problem  seemingly disjoint from logic and program schemes  isPSPACE-complete using the results described above. We also highlight similarities between the results of this paper and the literature  so providing the reader with an introduction to this area of research.,2018-03-20
10.1007/s00236-002-0088-1,Adding a path connectedness operator to FO+poly (linear),Abstract. In the constraint database community FO+poly and FO+linear have been proposed as foundations for spatial database query languages. One of the strengths of this approach is that these languages are a clean and natural generalization of Codd's relational model to a spatial setting. As a result rigorous mathematical study of their expressiveness and complexity can be carried out.Along this line important geometric queries involving connectivity have been shown to be inexpressible in FO+poly and FO+linear. To address this problem we extend both languages with a parameterized path-connectivity predicate Pconn. We show that FO+linear+Pconn and FO+poly+Pconn[3D] are closed and have PTIME data complexity. We also examine the expressiveness of FO+poly+Pconn and FO+linear+Pconn and show that parity and transitive closure are expressible in each.,2015-03-20
10.1007/BF01191811,A characterisation of meet and join respecting pre-orders and congruences on finite lattices,A connection between pre-orders that respect the operations of the lattice and sets of join-irreducibles closed under a relation ≈ between joinirreducibles is demonstrated. It is shown that any lattice pre-order determines two sets of join-irreducibles closed under the relation ≈ and that elements of the lattice are related by the pre-order if and only if the subsets of joinirreducibles which they are greater than are comparable. The above connection is extended to congruences and the set of join-irreducibles that determine congruences that produce distributive quotient lattices are characterised. Finally it is shown that the quotient lattice of an arbitrary congruence is isomorphic to the lattice of decreasing subsets of join-irreducibles that determine the congruence.,2020-03-20
10.1007/BF00264158,Robust data types,SummaryData types with total operations and exceptions are proposed as basic building blocks for the construction of modular robust software. A notation for specifying such data types is presented and the issues underlying their correct implementation in a programming language supporting data abstraction and exception handling are discussed and illustrated by examples. New light is shed on some important aspects of exception handling such as the identification and specification of exceptions  the precise detection of exception occurrences  recovery of consistent states after exception detections and verification of the correct implementation of specified exceptional effects for operations.,2020-03-20
10.1007/BF00267864,Precedence technique is not worse than SLR(1),SummaryThe paper describes a transformation which converts SLR(1) grammars to grammars which are (1  0) or (1  1) mixed strategy precedence grammars and which have the correct prefix property. The transformation is first of all practical. The increase of a grammar size caused by the transformation is so moderate that often a smaller parser can be obtained as the final result.,2013-03-20
10.1007/BF00279952,Graph complexity,SummaryWe develop a complexity theory based on the concept of the graph instead of the Boolean function. We show its relation to the Boolean complexity and prove some lower bounds to the complexity of explicitly given graphs.,2015-03-20
10.1007/BF00268137,An O(n) algorithm for computing the set of available expressions of D-charts,SummaryIn this paper  an idea for computing the set of available expressions at entrance to the nodes of D-charts is explained. An algorithm based on the idea will work in time O(n)  given bit vector operations  where n is the number of nodes. D-charts are flow graphs which correspond to the programs where ifs and whiles are used as control statements. The paper is based on the authors' previous report [9].,2018-03-20
10.1007/BF00264310,The reliability of life-critical computer systems,SummaryIn order to aid the designers of life-critical  fault-tolerant computing systems  accurate and efficient methods for reliability prediction are needed. The accuracy requirement implies the need to model the system in great detail  and hence the need to address the problems of large state space  non-exponential distributions  and error analysis. The efficiency requirement implies the need for new model solution techniques  in particular the use of decomposition/aggregation in the context of a hybrid model. We describe a model for reliability prediction which meets both requirements. Specifically  our model is partitioned into fault occurrence and fault/error handling submodels  which are represented by non-homogeneous Markov processes and extended stochastic Petri nets  respectively. The overall aggregated model is a stochastic process that is solved by numerical techniques. Methods to analyze the effects of variations in input parameters on the resulting reliability predictions are also provided.,2019-03-20
10.1007/BF01893884,A new explanation of the glitch phenomenon,SummaryWe consider a discrete model for asynchronous circuits and show that  under very mild restrictions  this model excludes the existence of glitch-free arbiters. This result contradicts a long standing conjecture that the nonexistence of glitch-free arbiters is due to the continuous nature of such circuits.,2014-03-20
10.1007/BF00264289,Optimum binary search trees,,2020-03-20
10.1007/BF00268318,On a class of recursive procedures and equivalent iterative ones,SummaryH. Partsch and P. Pepper gave translations for a special class of recursive procedures into equivalent iterative ones  motivated by the well-known recursive solution for the ‘Towers of Hanoi’ problem. By generalizing their translations towards two directions  we investigate a class of recursive algorithms and obtain their translations  thus giving a unified view for these algorithms. Some of the included algorithms are mutually recursive procedures for plotting ‘space-filling curves’ such as the Hilbert curves  and a recursive procedure by C.T. Fike which produces all the permutations of n symbols. These algorithms are characterized by the property that the values of a parameter given to recursive procedure calls in a procedure are ‘uniform’ in a certain sense.,2018-03-20
10.1007/s00236-003-0107-x,A note on pure and p-pure languages,Abstract.A variation of first order logic with variables for exponents is developed to solve some problems in the setting of rational languages on the free monoid  implying in particular algorithms for purity and p-purity. This same problem is addressed for the case of rational free group languages  and characterizations of the rational subsets of $\mathbb{N}$ involved are also obtained.,2018-03-20
10.1007/BF01185563,Two impossibility theorems on behaviour specification of abstract data types,Two kinds of finite specification of the behaviour of a counter data type are proved impossible.We consider the class of data types (many-sorted algebras) behaving like an encapsulated counter that can be observed only by a test for zero. It is shown that no nonempty subclass of this class can be finitely specified in “observational first-order logic”  which is a variant of first-order logic in which equality may not be used on encapsulated types. Secondly  it is shown that the class cannot be described exactly by a finite specification in first-order logic.,2012-03-20
10.1007/BF01257086,Task allocation in fault-tolerant distributed systems,SummaryThis paper examines task allocation in fault-tolerant distributed systems. The problem is formulated as a constrained sum of squares minimization problem. The computational complexity of this problem prompts us to consider an efficient approximation algorithm. We show that the ratio of the performance of the approximation algorithm to that of the optimal solution is bounded by 9m/(8m−r+1))  wherem is the number of processors to be allocated andr is the number of times each task is to be replicated. Experience with the algorithm suggests that even better performance ratios can be expected.,2011-03-20
10.1007/BF01257085,Rational set of trees and the algebraic semantics of logic programming,Cet article presente une nouvelle semantique pour la programmation logique (semantique algebrique)  qui definit le calcul d'un programme logique comme la solution d'un systeme d'equations arbre. Ces equations sont resolues pour une classe particuliere de programmes logiques et les solutions de ces equations sont demontrees etre des ensembles rationnels d'arbres,2016-03-20
10.1007/BF00260925,The ultimate equivalence problem for DOL systems,SummaryThe ultimate equivalence problem for DOL systems is shown to be recursively decidable. In algebraic formulation this problem can be stated as follows: Given finite alphabet Σ  two homomorphisms h1 and h2 on the free monoid Σ* and two words w1w2 in Σ*  does there exist m≧0 so that h1n(w1) = h2n(w2) for all n≧m?,2017-03-20
10.1007/BF00268321,Some remarks on Boolean sums,SummaryNeciporuk  Lamagna/Savage and Tarjan determined the monotone network complexity of a set of Boolean sums if any two sums have at most one variable in common. Wegener then solved the case that any two sums have at most k variables in common. We extend his methods and results and consider the case that any set of h +1 distinct sums have at most k variables in common. We use our general results to explicitly construct a set of n Boolean sums over n variables whose monotone complexity is of order n5/3. The best previously known bound was of order n3/2. Related results were obtained independently by Pippenger.,2016-03-20
10.1007/BF00289262,Recursive assertions and parallel programs,SummaryWe prove that recursive assertions are enough for proofs of parallel programs considered in Owicki and Gries [7]. In other words  we prove that for any parallel program S and recursive assertions p and q if {p} S{q} is true under the standard interpretation in natural numbers then all intermediate assertions needed in the proof can be chosen recursive. Finally  we show that if auxiliary variables are used only as program counters then the above result does not hold.,2012-03-20
10.1007/s00236-010-0124-5,Equilibria for two parallel links: the strong price of anarchy versus the price of anarchy,We consider a job scheduling game with two uniformly related parallel machines (or links). Jobs are atomic players  and the delay of a job is the completion time of the machine running it. The private goal of each job is to minimize its own delay and the social goal is to minimize the maximum delay of any job  that is  to minimize the makespan. We consider the well known price of anarchy as well as the strong price of anarchy  and show that for a wide range of speed ratios these two measures are very different whereas for other speed ratios these two measures give the exact same bound. We extend all our results for models of restricted assignment  where a machine may have an initial load resulting from jobs that can only be assigned to this machine  and show tight results for all variants.,2018-03-20
10.1007/s00236-003-0108-9,Preference rankings in the face of uncertainty,Abstract. An agent may have to choose between actions based on incomplete knowledge of its environment. The incomplete knowledge is modelled as the local state of the agent  which represents the set of states of the environment that the agent deems possible. A policy determines a ranking (as a total preorder) of the set of actions as a function of the local state. A policy is maximin representable when it is based on a utility function via the maximin principle. The theory of Brafman and Tennenholz on necessary and sufficient conditions for policies to be maximin representable is sharpened  extended  and related to maximax and Laplace representability.,2018-03-20
10.1007/BF00288933,Quad trees a data structure for retrieval on composite keys,SummaryThe quad tree is a data structure appropriate for storing information to be retrieved on composite keys. We discuss the specific case of two-dimensional retrieval  although the structure is easily generalised to arbitrary dimensions. Algorithms are given both for staightforward insertion and for a type of balanced insertion into quad trees. Empirical analyses show that the average time for insertion is logarithmic with the tree size. An algorithm for retrieval within regions is presented along with data from empirical studies which imply that searching is reasonably efficient. We define an optimized tree and present an algorithm to accomplish optimization in n log n time. Searching is guaranteed to be fast in optimized trees. Remaining problems include those of deletion from quad trees and merging of quad trees  which seem to be inherently difficult operations.,2011-03-20
10.1007/BF01178735,The path length of random skip lists,The skip list is a recently introduced data structure that may be seen as an alternative to (digital) tries. In the present paper we analyze the path length of random skip lists asymptotically  i.e. we study the cumulated successful search costs. In particular we derive a precise asymptotic result on the variance  being of ordern2 (which is in contrast to tries under the symmetric Bernoulli model  where it is only of ordern). We also intend to present some sort of technical toolkit for the skilful manipulation and asymptotic evaluation of generating functions that appear in this context.,2011-03-20
10.1007/BF00264292,Ein Vollständigkeitssatz für Programme und Schaltkreise,SummaryFormal transformations of programs or switching circuits can be described by a system of relations within the concept of free X-categories. In this theory the programs or switching circuits are the morphisms of the free X-category. A finite relation system is given which is correct and complete (in an analogous sense to the notions of the predicate calculus) and which describes the transformations of programs or switching circuits. At first this system can be applied only to loopfree switching circuits or programs  but loops may easily be presented in a free X-category. All these subjects will thoroughly be discussed in this paper.,2011-03-20
10.1007/s00236-014-0206-x,Head and state hierarchies for unary multi-head finite automata,Unary deterministic one-way multi-head finite automata characterize the unary regular languages. Here they are studied with respect to the existence of head and state hierarchies. It turns out that for any fixed number of states  there is an infinite proper head hierarchy. In particular  the head hierarchy for stateless deterministic one-way multi-head finite automata is obtained using unary languages. On the other hand  it is shown that for a fixed number of heads  $$m+1$$m+1 states are more powerful than $$m$$m states. Finally  the open question of whether emptiness is undecidable for stateless one-way two-head finite automata is addressed and  as a partial answer  undecidability can be shown if at least four states are provided.,2013-03-20
10.1007/BF00288640,Sur une conjecture de S. Greibach,SummaryA counter-example is given to the following conjecture of S. Greibach [4]: “There is no infinite class of mutually incomparable context-free full AFL's”.,2015-03-20
10.1007/s00236-008-0070-7,Two-tier relaxed heaps,We introduce a data structure which provides efficient heap operations with respect to the number of element comparisons performed. Let n denote the size of the heap being manipulated. Our data structure guarantees the worst-case cost of O(1) for finding the minimum  inserting an element  extracting an (unspecified) element  and replacing an element with a smaller element; and the worst-case cost of O(lg n) with at most lg n + 3 lg lg n + O(1) element comparisons for deleting an element. We thereby improve the comparison complexity of heap operations known for run-relaxed heaps and other worst-case efficient heaps. Furthermore  our data structure supports melding of two heaps of size m and n at the worst-case cost of O(min {lg m  lg n}).,2016-03-20
10.1007/s002360050142,A Tree-based Mergesort,Abstract. We demonstrate that if standard Mergesort is implemented using finger search trees instead of arrays it optimally adapts to a set of measures of presortedness not fulfilled by any other algorithm.,2018-03-20
10.1007/BF00264159,The effect of fixed-length record implementation on file system response,SummaryMany file and database management systems are implemented using fixed-length physical records on movable head discs. Such implementation not only causes internal dependence among different components of the file access time  but also induces an external dependence of the overall access time on request input rate. Accordingly  conventional performance estimates are inaccurate here  and the error in using them typically ranges from 10% to 100+% for different loading conditions. This paper presents revised formulae for calculating the file response time  throughput and busy period for such a storage structure. The analysis makes use of the Takács process in queueing theory.,2020-03-20
10.1007/s00236-007-0059-7,Picture deformation,Algebraic picture generation based on a pixel deformation theory is presented. The main tool used is the deformation monoid which simulates the algebraic structure of pictures viewed as rectangular arrays with operations the horizontal and vertical concatenation. Picture languages generated by grammatical systems are considered and a Chomsky-like normal form as well as an iteration lemma are established. Infinite pictures are obtained as the ω-completion of the set of finite pictures ordered by picture refinement. Regular fractal pictures (such as the Sierpinski Carpet  the Cantor dust  etc.) are defined as the components of the least solution of systems whose right hand side members are finite pictures. They constitute the least class of pictures containing the finite pictures and closed under substitution and the self similarity operation. Solving non deterministic picture program schemes we get the so called ∞-refinement languages which consist of finite and infinite pictures. For such languages the emptiness and finiteness problems are decidable.,2017-03-20
10.1007/BF01237235,Binary search trees of almost optimal height,"SummaryFirst we present a generalization of symmetric binary B-trees  SBB(k)-trees. The obtained structure has a height of only
$$\left[ {\left( {1 + \frac{1}{k}} \right)\log (n + 1)} \right]^1 $$
  wherek may be chosen to be any positive integer. The maintenance algorithms require only a constant number of rotations per updating operation in the worst case. These properties together with the fact that the structure is relatively simple to implement makes it a useful alternative to other search trees in practical applications.Then  by using an SBB(k)-tree with a varyingk we achieve a structure with a logarithmic amortized cost per update and a height of logn+o(logn). This result is an improvement of the upper bound on the height of a dynamic binary search tree. By maintaining two trees simultaneously the amortized cost is transformed into a worst-case cost. Thus  we have improved the worst-case complexity of the dictionary problem.",2019-03-20
10.1007/s00236-015-0252-z,Planning and execution with flexible timelines: a formal account,Planning for real world problems with explicit temporal constraints is a challenging problem. Among several approaches  the use of flexible timelines in Planning and Scheduling has been shown to be successful in a number of concrete applications  such as  for instance  autonomous space systems. This paper builds on previous work and presents a revised and extended formal account of flexible timelines with the aim of providing a general semantics for related planning concepts such as domains  goals  problems  constraints  and flexible plans. Some sources of uncertainty are also modeled in the proposed framework and taken into account in the characterization of valid plans that are assumed not to take decisions on components the planner cannot control. A formal definition of different forms of plan controllability is also proposed.,2019-03-20
10.1007/BF00264580,Size-depth tradeoff in monotone Boolean formulae,SummaryFormula size and depth are two important complexity measures of Boolean functions. We study the tradeoff between those two measures: We give an infinite set of Boolean functions and show for nearly each of them: There is no monotone formula computing it optimal with respect to both measures. We give a lower and upper bound on the product of size and depth of monotone formulae computing our functions. That implies  moreover  a logarithmic lower bound on circuit depth.,2013-03-20
10.1007/s00236-014-0194-x,Distributed synthesis for regular and contextfree specifications,We consider the distributed realizability problem for systems with regular and deterministic contextfree local specifications. We characterize exactly the architectures for which the realizability problem is decidable. This extends known results on local specifications in two directions. First  architectures with cycles are allowed instead of just acyclic ones and second  deterministic contextfree specifications are considered.,2013-03-20
10.1007/BF01178732,Optimal search trees using two-way key comparisons,A generalization of binary search trees and binary split trees is developed that takes advantage of two-way key comparisons: the two-way comparison tree. The two-way comparison tree has little use for dynamic situations but is an improvement over the optimal binary search tree and the optimal binary split tree for static data sets. AnO(n) time and space algorithm is presented for constructing an optimal two-way comparison tree when access probabilities are equal  and an exact formula for the optimal cost is developed. The construction of the optimal two-way comparison tree for unequal access frequencies  both successful and unsuccessful  is computable inO(n5) time andO(n3) space using algorithms similar to those for the optimal binary split tree. The optimal two-way comparison tree can improve search cost by up to 50% over the optimal binary search tree.,2019-03-20
10.1007/BF00263591,Total lineare Realisierbarkeit endlicher Automaten,SummaryStarting out from the research in [1] we prove: If a finite sequential machine a is linearly realizable over a finite field with characteristic 2 and additional over a finite field with characteristic ≠2  then a is linearly realizable over every finite field. Moreover we will see  that a is linearly realizable over every finite field if and only if the extended output function satisfies certain conditions.,2018-03-20
10.1007/BF00289266,A proof technique for communicating sequential processes,SummaryProof rules are presented for an extension of Hoare's Communicating Sequential Processes. The rules deal with total correctness; all programs terminate in the absence of deadlock. The commands send and receive are treated symmetrically  simplifying the rules and allowing send to appear in guards. Also given are sufficient conditions for showing that a program is deadlock-free. An extended example illustrates the use of the technique.,2012-03-20
10.1007/BF00265771,Optimal multiprogramming,SummaryThree heuristics for controlling the multiprogramming load to maximize system work capacity are studied. Each allows the highest load possible subject to a given constraint. The knee criterion constrains the memory policy so that program resident sets average near the knees of their inter page fault lifetime curves. The L=S criterion constrains the memory policy or load so that the system inter page fault lifetime L is at least as large as page swap time S. The 50 % criterion constrains the load so that the paging device is busy approximately half the time. Numerical evaluations of queueing networks show that the knee criterion  which is the most difficult to implement  is the most robust  while the easily implemented 50 % criterion is the least robust. These evaluations also circumscribe the conditions under which the criteria are expected to work reliably. Examples from practical systems further validate the criteria. Stability problems are examined.,2020-03-20
10.1007/s00236-005-0172-4,Refinement of actions for real-time concurrent systems with causal ambiguity,Refinement of actions is a core operation in the hierarchical design methodology for concurrent systems. In this paper  we develop an approach of action refinement for concurrent systems with not only the notation of real-time but also with causal ambiguity  which often exists and appears in real application areas. The systems are modeled in terms of a timed extension of bundle event structures with causal ambiguity. Under a certain partial order semantics  the behavior of the refined system can be inferred compositionally from the behavior of the original system and from the behavior of the systems used to refine actions with explicitly represented start points. A variant of a linear-time equivalence termed pomset trace equivalence and a variant of a branching-time equivalence termed history preserving bisimulation equivalence based on the partial order semantics are both congruences under the refinement. The refinement operation behaves thus well and meets the commonly expected properties.,2019-03-20
10.1007/BF00286492,Descriptively complete process logic,SummaryThe main purpose of this paper is to contribute to the development of Pratt's [12  13] process logic by presenting a modest language for this logic in which some reasonably powerful class of connectives is definable. In particular  Parikh's [8] formidable language SOAPL is shown to be interpretable in our new language. Semantically  Pneuli's [9  10] temporal semantics is incorporated into that of process logic.,2017-03-20
10.1007/BF00264322,On the complementation rule for multivalued dependencies in database relations,SummaryWe study the interrelation between various versions of the complementation rule and other inference rules for multivalued dependencies in database relations. In particular we settle two open questions of [1] concerning the derivability of inference rules for Boolean operations on the right side of multivalued dependencies. Furthermore we prove that there is a trade-off between the complementation rule and the augmentation rule.,2017-03-20
10.1007/s00236-011-0142-y,Correct hardware synthesis,This paper presents an algebraic compilation approach to the correct synthesis (compilation into hardware) of a synchronous language with shared variables and parallelism. The synthesis process generates a hardware component that implements the source program by means of gradually reducing it into a highly parallel state-machine. The correctness of the compiler follows by construction from the correctness of the transformations involved in the synthesis process. Each transformation is proved sound from more basic algebraic laws of the source language; the laws are themselves formally derived from a denotational semantics expressed in the Unified Theories of Programming. The proposed approach is based on previous efforts that handle both software and hardware compilation  in a pure algebraic style  but the complexity of our source language demanded significant adaptations and extensions to the existing approaches.,2014-03-20
10.1007/s002360050071,"Weakly independent database schemes
","Abstract.Independent database schemes are best known to have constraints enforced globally by enforcing them locally in individual relations  and therefore are highly desirable in an updates-busy and distributed environment. However  independence excludes all database schemes with interrelational functional dependencies and therefore is too strong a condition. In this paper  a natural generalization of independent schemes along this line  called weakly independent schemes  is defined. A database scheme is weakly independent with respect to a set of embedded functional dependencies if the constraints can be enforced globally by enforcing local as well as interrelational functional dependencies. (a) A characterization of the weak independence and an exponential time test (in the number of functional dependencies) are presented. (b) Two polynomial time conditions are also presented  one is necessary and the other is sufficient for a database scheme to be weakly independent. (c) It is shown that a certain acyclicity of the database scheme implies weak independence. Extension to the case of embedded functional dependencies plus the join dependency 
$\Join{\bf R}$ is also considered.
",2011-03-20
10.1007/s002360050164,Causality for debugging mobile agents,"Abstract. Mobile agents  i.e. pieces of programs that can be sent around networks of computers  appear more and more frequently on the Internet. These programs may be seen as an enrichment of traditional distributed computing  and structuring applications using mobile agents is destined to become the de facto way of constructing distributed systems in the near future. Since mobile agents may carry communication links with them as they move across the network  they create very dynamic interconnectio n structures that can be extremely complex to analyse. In this paper we study an example of a system based on the mobile agent principle  written in the Facile programming language.
We propose a Structural Operational Semantics (SOS) for Facile  giving a proved transition system that records encodings of the derivation trees of transitions in their labels. This information enables us to easily recover non-interleaving semantics for Facile by looking only at the labels of transitions. We use the new semantics to debug an agent based system. This example is a scaled down version of a system demonstrated at the European IT Conference Exhibition in Brussels  1995. We also adopt our causal semantics to analyse the specification of a prefetch pipeline processor.",2015-03-20
10.1007/BF00289613,Grundlagen einer Theorie der Datenstrukturen und Zugriffssysteme,SummaryIn part I of this paper  a mathematical model for data structures has been presented. Based on this model and on a corresponding formalized notion of retrieval operation  a model for storage access systems is introduced  which is called a Q-system. Equivalence  separation  and decomposition of Q-systems are studied  resulting in a set of basic principles for transforming Q-systems. These can be used for a systematical description of practical storage access systems for multi-attribute-retrieval.,2019-03-20
10.1007/BF01191893,Toward formal development of programs from algebraic specifications: Parameterisation revisited,Parameterisation is an important mechanism for structuring programs and specifications into modular units. The interplay between parameterisation (of programs and of specifications) and specification (of parameterised and of non-parameterised programs) is analysed  exposing important semantic and methodological differences between specifications of parameterised programs and parameterised specifications. The extension of parameterisation mechanisms to the higher-order case is considered  both for parameterised programs and parameterised specifications  and the methodological consequences of such an extension are explored.A specification formalism with parameterisation of an arbitrary order is presented. Its denotational-style semantics is accompanied by an inference system for proving that an object satisfies a specification. The formalism includes the basic specification-building operations of the ASL specification language and is institution independent.,2015-03-20
10.1007/BF00288937,Multipass precedence analysis,SummaryThis paper defines a hierarchy of languages which is properly contained in the context sensitive languages and which starts with the context free family. The hierarchy is defined inductively by controlling labeled linear grammars with languages in one family to yield languages in the next larger family. The families of the hierarchy have properties analogous to those of the context free family  in particular  the new mechanism introduced is very suitable for parsing.A language in the n-th family is specified by a sequence of n — 1 labeled linear grammars and a context free grammar. By assuming that the reversals of the first n — 1 grammars and the last labeled linear grammar are precedence grammars  the concepts and parsing algorithm of Wirth and Weber extend to yield a parsing algorithm within the hierarchy. This considerably enhances the usefulness of the construction and allows much of the power of the context sensitive languages to become accessible in measured amounts for potential programming applications.,2012-03-20
10.1007/BF01209710,On the synchronization in parallel communicating grammar systems,We investigate the power of various types of synchronization in parallel communicating grammar systems. Systems without a universal clock (a pumping lemma is given for this case) proves in general to be weaker than the synchronized systems. Further synchronizing restrictions are introduced (added to the basic synchronization by a universal clock and their effect on the generative capacity of grammar systems is examined.,2016-03-20
10.1007/BF01185404,What is failure? An approach to constructive negation,A standard approach to negation in logic programming is negation as failure. Its major drawback is that it cannot produce answer substitutions to negated queries. Approaches to overcoming this limitation are termed constructive negation. This work proposes an approach based on construction offailed trees for some instances of a negated query. For this purpose a generalization of the standard notion of a failed tree is needed. We show that a straightforward generalization leads to unsoundness and present a correct one.The method is applicable to arbitrary normal programs. If finitely failed trees are concerned then its semantics is given by Clark completion in 3-valued logic (and our approach is a proper extension of SLDNF-resolution). If infinite failed trees are allowed then we obtain a method for the well-founded semantics. In both cases soundness and completeness are proved.,2012-03-20
10.1007/s00236-011-0139-6,Multi-letter quantum finite automata: decidability of the equivalence and minimization of states,Multi-letter quantum finite automata (QFAs) can be thought of quantum variants of the one-way multi-head finite automata (Hromkovič  Acta Informatica 19:377–384  1983). It has been shown that this new one-way QFAs (multi-letter QFAs) can accept with no error some regular languages  for example (a + b)*b  that are not acceptable by QFAs of Moore and Crutchfield (Theor Comput Sci 237:275–306  2000) as well as Kondacs and Watrous (66–75  1997; Observe that 1-letter QFAs are exactly measure-once QFAs (MO-1QFAs) of Moore and Crutchfield (Theor Comput Sci 237:275–306  2000)). In this paper  we study the decidability of the equivalence and minimization problems of multi-letter QFAs. Three new results presented in this paper are the following ones: (1) Given a k1-letter QFA $${{\mathcal A}_1}$$ and a k2-letter QFA $${{\mathcal A}_2}$$ over the same input alphabet Σ  they are equivalent if and only if they are (n2mk-1−mk-1 + k)-equivalent  where m = |Σ| is the cardinality of Σ  k = max(k1 k2)  and n = n1 + n2  with n1 and n2 being numbers of states of $${{\mathcal A}_{1}}$$ and $${{\mathcal A}_{2}}$$   respectively. When k = 1  this result implies the decidability of equivalence of measure-once QFAs (Moore and Crutchfield in Theor Comput Sci 237:275–306  2000). (It is worth mentioning that our technical method is essentially different from the previous ones used in the literature.) (2) A polynomial-time O(m2k-1n8 + kmkn6) algorithm is designed to determine the equivalence of any two multi-letter QFAs (see Theorems 2 and 3; Observe that if a brute force algorithm to determine equivalence would be used  as suggested by the decidability outcome of the point (1)  the worst case time complexity would be exponential). Observe also that time complexity is expressed here in terms of the number of states of the multi-letter QFAs and k can be seen as a constant. (3) It is shown that the states minimization problem of multi-letter QFAs is solvable in EXPSPACE. This implies also that the state minimization problem of MO-1QFAs (see Moore and Crutchfield in Theor Comput Sci 237:275–306  2000  page 304  Problem 5)  an open problem stated in that paper  is also solvable in EXPSPACE.,2013-03-20
10.1007/BF00288642,A practical example of the specification of abstract data types,The algebra of quotient relations  a relationally complete set of operations for data base applications  is formally defined in terms of the algebraic specification technique. The process of constructing an algebraic specification for a data type is described in order that future formal definitions are more easily derived. Several improvements to current algebraic presentation techniques are also introduced.,2012-03-20
10.1007/BF00263590,Eigenschaften der von linearen Automaten erkennbaren Worte,SummaryThe paper investigates the set of words accepted by a linear sequential machine M and the algebraic structure of this set. If M is nonsingular a strong relationship exists between this set and the transition group of the accepting automaton. Thus the algebraic structure of this group is used to describe some properties of the set of accepted words. If M is nilpotent  in addition  an algorithm is given which in a direct way generates just the words accepted by M.,2012-03-20
10.1007/BF03036469,Axiomatizing the algebra of net computations and processes,Descriptions of concurrent behaviors in terms of partial orderings (callednonsequential processes or simplyprocesses in Petri net theory) have been recognized as superior when information about distribution in space  about causal dependency or about fairness must be provided. However  at least in the general case of Place/Transition (P/T) nets  the proposed models lack a suitable  general notion ofsequential composition.In this paper  a new algebraic axiomatization is proposed  where  given a netN  a term algebraP[N] with two operations of parallel and sequential composition is defined. The congruence classes generated by a few simple axioms are proved isomorphic to a slight refinement of classical processes.Actually P[N] is a symmetric strict monoidal category1  parallel composition is the monoidal operation on morphisms and sequential composition is morphism composition. BesidesP[N]  we introduce a categorys[N] containing the classical occurrence and step sequences. The term algebras ofP[N] and ofs[N] are in general incomparable  thus we introduce two more categoriesK[N] and ℐ[N] providing an upper and a lower bound  respectively. A simple axiom expressing the functoriality of parallel composition mapsK[N] toP[N] ands[N] to ℐ[N]  while commutativity of parallel composition mapsK[N] tos[N] andP[N] to ℐ[N] (see Fig. 4).Morphisms ofK[N] constitute a new notion of concrete net computation  while the strictly symmetric strict monoidal category ℐ[N] was introduced previously by two of the authors as a new algebraic foundation for P/T nets [22]. In the context of the present paper  the morphisms of ℐ[N] are proved isomorphic to the processes defined in terms of the “swap” transformation by Best and Devillers [5]. Thus the diamond of the four categories gives a full account in algebraic terms of the relations between interleaving and partial ordering observations of P/T net computations.,2017-03-20
10.1007/s00236-005-0179-x,Type-based information flow analysis for the π-calculus,We propose a new type system for information flow analysis for the π-calculus. As demonstrated by recent studies  information about whether each communication succeeds is important for precise information flow analysis for concurrent programs. By collecting such information using ideas of our previous type systems for deadlock/livelock-freedom  our type system can perform more precise analysis for certain communication/synchronization patterns (like synchronization using locks) than previous type systems. Our type system treats a wide range of communication/synchronization primitives in a uniform manner  which enabled development of a clear proof of type soundness and a sound and complete type inference algorithm.,2020-03-20
10.1007/PL00013303,Relaxed balance for search trees with local rebalancing,Abstract. Search trees with relaxed balance were introduced with the aim of facilitating fast updating on shared-memory asynchronous parallel architectures. To obtain this  rebalancing has been uncoupled from the updating  so extensive locking in connection with updates is avoided. Rebalancing is taken care of by background processes  which do only a constant amount of work at a time before they release locks. Thus  the rebalancing and the associated locks are very localized in time as well as in space. In particular  there is no exclusive locking of whole paths. This means that the amount of parallelism possible is not limited by the height of the tree. Search trees with relaxed balance have been obtained by adapting standard sequential search trees to this new paradigm; clearly using similar techniques in each case  but no general result has been obtained. We show how any search tree with local bottom-up rebalancing can be used in a relaxed variant  preserving the complexity of the rebalancing from the sequential case. Additionally  we single out the one high level locking mechanism that a parallel implementation must provide in order to guarantee cons istency. Though the ideas have come from search trees  the result presented here applies to tree structures in general  where operations initiated at the leaves progress towards the root in constant-sized steps.,2018-03-20
10.1007/BF01178384,A modal logic for message passing processes,A first-order modal logic is given for describing properties of processes which may send and receive values or messages along communication ports. We give two methods for proving that a process enjoys such a property. The first is the construction  for each processP and formulaF  of acharacteristic formula P satF such thatP enjoys the propertyF if and only if the formulaP satF is logically equivalent to tt. The second is a sound and complete proof system whose judgements take the formB ⊢P: F  meaning: under the assumptionB the processP enjoys the propertyF.The notion ofsymbolic operational semantics plays a crucial role in the design of both the characteristic formulae and the proof system.,2013-03-20
10.1007/BF00264616,Speeding up circularity tests for attribute grammars,SummaryWe present three improvements to be applied to algorithms testing the circularity of attribute grammars. The first one  originally introduced in [10]  discards from the set of graphs attached to a nonterminal symbol those graphs that are included in (“covered by”) others of the same set. The second one  first presented by Chebotar [1]  establishes an optimal order for selection of productions and eliminates at each step those graphs that are unnecessary for subsequent stages of the algorithm  thus requiring less time and space. The last one skips recomputations on terminal trees  thus saving time. These three methods can be used alone or together to speed up circularity tests. We also discuss the practical complexity of circularity tests.,2018-03-20
10.1007/s00236-006-0014-z,Periods in Extensions of Words,Let π(w) denote the minimum period of the word w let w be a primitive word with period π(w) < |w|  and let z be a prefix of w. It is shown that if π(wz) = π(w)  then |z| < π(w) − gcd (|w|  |z|). Detailed improvements of this result are also proven. Finally  we show that each primitive word w has a conjugate w′ = vu  where w = uv  such that π(w′) = |w′| and |u| < π(w). As a corollary we give a short proof of the fact that if u v w are words such that u2 is a prefix of v2  and v2 is a prefix of w2  and v is primitive  then |w| > 2|u|.,2019-03-20
10.1007/s00236-004-0153-z,Trading polarizations for labels in P systems with active membranes,Abstract.This paper addresses the problem of removing the polarization of membranes from P systems with active membranes - and this is achieved by allowing the change of membrane labels by means of communication rules or by membrane dividing rules. As consequences of these results  we obtain the universality of P systems with active membranes which are allowed to change the labels of membranes  but do not use polarizations. Universality results are easily obtained also by direct proofs. By direct constructions  we also prove that SAT can be solved in linear time by systems without polarizations and with label changing possibilities. If non-elementary membranes can be divided  then SAT can be solved in linear time without using polarizations and label changing. Several open problems are also formulated.,2013-03-20
10.1007/BF00288536,Gobang ist PSPACE-vollständig,SummaryFor many games  the decision problem of whether a player in a given situation has a winning strategy has been shown to be PSPACE-complete. Following the PSPACE-completeness results of Even and Tarjan [1] for generalized Hex on graphs and of Schaefer [6] for a variety of combinatorial games  the decision problems were shown to be PSPACE-hard for generalizations of Go and Checkers. In this paper a corresponding theorem is proved for the board-game Gobang  a variant of Go. Since the decision problem for Gobang states-of-play itself lies in PSPACE  it can be shown that Gobang is in fact PSPACE-complete.,2017-03-20
10.1007/BF00264022,A binary operation on trees and an initial algebra characterization for finite tree types,SummaryA binary operation on the class of trees is defined that generates a set B of finite trees form a trivial tree (one node) and B contains for every finite tree G exactly one element isomorphic to G. The binary operation defines an algebraic structure on B  and as a consequence the finite tree types are characterized as an initial algebra in the same way as the natural numbers are characterized as an initial algebra by the Peano-Lawvere axiom [2]. Simple and primitive recursion are defined and some applications of the initial algebra characterization are given.,2014-03-20
10.1007/s00236-013-0187-1,A note on the factorization conjecture,We give partial results on the factorization conjecture on codes proposed by Schützenberger. We consider a family of finite maximal codes $$C$$ C over the alphabet $$A = \{a  b\}$$ A = { a   b } and we prove that the factorization conjecture holds for these codes. This family contains $$(p 4)$$ ( p   4 ) -codes  where a $$(p 4)$$ ( p   4 ) -code $$C$$ C is a finite maximal code over $$A$$ A such that each word in $$C$$ C has at most four occurrences of $$b$$ b and $$a^p \in C$$ a p ∈ C   for a prime number $$p$$ p . We also discuss the structure of these codes. The obtained results once again show relations between factorizations of finite maximal codes and factorizations of finite cyclic groups.,2014-03-20
10.1007/BF00264600,Improved time and space bounds for Boolean matrix multiplication,SummaryUsing modular arithmetic we obtain the following improved bounds on the time and space complexities for n × n Boolean matrix multiplication: O(nlog27 lognlogloglognloglogloglogn) bit operations and O(n2loglog n) bits of storage on a logarithmic cost RAM having no multiply or divide instruction; O(nlog27(logn)2−1/2log27(loglog n)1/2log27−1) bit operations and O(n2log n) bits of storage on a RAM which can use indirect addressing for table lookups. The first algorithm can be realized as a Boolean circuit with O(nlog27lognlogloglognloglogloglogn) gates. Whenever n×n arithmetic matrix multiplication can be performed in less than O(nlog27) arithmetic operations  our results have corresponding improvements.,2016-03-20
10.1007/s002360050120,Context-free languages over infinite alphabets,"Abstract. In this paper we introduce context-free grammars and pushdown automata over infinite alphabets. It is shown that a language is generated by a context-free grammar over an infinite alphabet if and only if it is accepted by a pushdown automaton over an infinite alphabet. Also the generated (accepted) languages possess many of the properties of the ordinary context-free languages: decidability  closure properties  etc.. This provides a substantial evidence for considering context-free grammars and pushdown automata over infinite alphabets as a natural extension of the classical ones.
",2020-03-20
10.1007/BF01178679,A fixed point approach to parallel discrete event simulation,Discrete event simulation is viewed as solving a fixed point problem whose unknowns are infinite histories or streams of event and time information. Stream domains provide two notions of convergence  which correspond to the usual categorization of simulation methods. Metric convergence leads to optimistic parallel simulation (the classic event list mechanism turns out to be a specialization)  and convergence in the sense of partial orders leads to conservative parallel simulation.,2018-03-20
10.1007/s00236-009-0100-0,Reasoning about faulty quantum programs,We show how to use a programming language for formally describing and reasoning about errors in quantum computation. The formalisation is based on the concept of performing the correct operation with probability at least p  and the erroneous one with probability at most 1 − p. We apply the concept to two examples: Bell’s inequalities and the Deutsch–Jozsa quantum algorithm. The former is a fundamental thought experiment aimed at showing that Quantum Mechanics is not “local and realist”  and it is used in quantum cryptography protocols. We study it assuming faulty measurements  and we derive hardware reliability conditions that must be satisfied in order for the experiment to support its conclusions. The latter is a quantum algorithm for efficiently solving a classification problem for Boolean functions. The algorithm solves the problem with no error  but when we introduce faulty operations it becomes a two-sided error algorithm. Reasoning is accomplished via standard programming laws and quantum laws.,2013-03-20
10.1007/s002360050123,On time computability of functions in one-way cellular automata,"Abstract. The capability of one-way (space-bounded) cellular automata (OCA) to time-compute functions is investigated. That means given a constant input of length 
$n$ a distinguished cell has to enter a distinguished state exactly after 
$f(n)$ time steps. The family of such functions (
${\cal C}$(OCA)) is characterized in terms of formal language recognition. Several functions are proved to be time-computable and properties of 
${\cal C}$(OCA) are given. The time-computation at some points is concerned with the concept of signals and their realization which is quite formally defined for the first time.
",2013-03-20
10.1007/BF00282618,The derivation of systolic implementations of programs,SummaryWe present a mathematically rigorous and  at the same time  convenient method for systolic design and derive systolic designs for three matrix computation problems. Each design is synthesized from a simple program and a proposed layout of processors. The synthesis derives a systolic parallel execution  channel connections for the proposed processor layout  and an arrangement of data streams such that the systolic execution can begin. Our choices of designs are governed by formal theorems. The synthesis method is implementable and is particularly effective if implemented with graphics capability. Our implementation on the Symbolics 3600 displays the resulting designs and simulated executions graphically on the screen. The method's centerpiece  a transformation of sequential program computations into systolic parallel ones  has been mechanically proved correct.,2017-03-20
10.1007/BF00265677,Two-level meta-controlled substitution grammars,SummaryA language-generating mechanism  inspired on the two-level van Wijngaarden syntax for Algol 68  is considered. Its language generating properties are studied and compared to those of well-known classical systems and grammars. The new mechanism is called a 2 MSG  for “two-level metacontrolled substitution grammar.”,2014-03-20
10.1007/BF00271645,Finite complete rewriting systems and the complexity of the word problem,SummaryIt is well known that the word problem for a finite complete rewriting system is decidable. Here it is shown that in general this result cannot be improved. This is done by proving that each sufficiently rich complexity class can be realized by the word problem for a finite complete rewriting system. Further  there is a gap between the complexity of the word problem for a finite complete rewriting system and the complexity of the least upper bound for the lengths of the chains generated by this rewriting system  and this gap can get arbitrarily large. Thus  the lengths of these chains do not give any information about the complexity of the word problem. Finally  it is shown that the property of allowing a finite complete rewriting system is not an invariant of finite monoid presentations.,2018-03-20
10.1007/BF00263650,Minimal coverings for incompletely specified sequential machines,SummaryIn the literature the problem of finding minimal realizations for incompletely specified machines has been treated in a number of different ways. Solutions to this problem depend on the precise definition of what minimal realization means in this case. If the behaviour of a state is definied as its related partial input-output function then the behaviour of one machine A can cover the behaviour of another machine B if it contains better definied I/O functions for all states of B. Finding a minimal covering in this case is known to be NP-complete. We develop an algebraic treatment of the problem and give a homomorphic characterization of the covering-relation. The construction of state-splitting is also characterized as a special morphism. Then a heuristic method is proposed for finding minimal coverings.,2015-03-20
10.1007/s00236-014-0199-5,Controlled finite automata,This paper discusses finite automata regulated by control languages over their states and transition rules. It proves that under both regulations  regular-controlled finite automata and context-free-controlled finite automata characterize the family of regular languages and the family of context-free languages  respectively. It also establishes conditions under which any state-controlled finite automaton can be turned into an equivalent transition-controlled finite automaton and vice versa. The paper also demonstrates a close relation between these automata and programmed grammars. Indeed  it proves that finite automata controlled by languages generated by propagating programmed grammars with appearance checking are computationally complete. In fact  it demonstrates that this computational completeness holds even in terms of these automata with a reduced number of states.,2020-03-20
10.1007/s00236-012-0167-x,Multi-tilde-bar expressions and their automata,The aim of this paper is to extend the family of Glushkov automata. This is achieved by designing new operators  the so-called multi-tilde-bar operators  that allow us to compute Glushkov functions for the associated extended expressions. Conversely an extended Glushkov automaton with $$n+1$$ states can be converted into an extended expression with $$n$$ occurrences of symbols. It leads to a characterization in terms of graphs of the family of extended Glushkov automata. Moreover  extended expressions are shown to be superpolynomially more succinct than standard expressions.,2013-03-20
10.1007/s00236-005-0003-7,Vector assignment schemes for asymmetric settings,We consider off-line vector assignment problems. The goal is to assign input vectors to machines so that a given target function is minimized. The target function usually gives some measure of the quality of the distribution of input vectors among machines. In a previous study (Epstein and Tassa  J. Algorithms 48  360–384 (2003)) we dealt with this problem where the cost function is symmetric; namely  all machines are identical. The dynamic programming techniques that we used in our previous study do not extend to asymmetric settings. Here  we deal with an asymmetric setting where the cost functions per machine may be different for different machines. Using graph-based techniques  we design a polynomial time approximation scheme for a wide class of asymmetric target functions. Other than a significant extension of the class of cost functions to which our current scheme applies  the present PTAS is much simpler the previous one. It should be noted that asymmetric cost functions appear very naturally in the so called line-up problem that motivated our study.,2014-03-20
10.1007/s002360050170,Single machine scheduling with deadlines and increasing rates of processing times,"Abstract. The makespan  flow time and maximum lateness problems of scheduling a set of tasks with deadlines and increasing rates of processing times on a single machine are considered in this paper. We first show that  when the increasing rates of processing time are identical  the makespan problem is equivalent to the corresponding flow time problem. Both problems are solvable in 
$O(n^5)$ time by a dynamic programming algorithm. As an application of the dynamic programming algorithm  we demonstrate that the corresponding maximum lateness problem can be solved in 
$O(n^6\log n)$ time. We then show that the general makespan problem is strongly NP-complete. Thus  both the corresponding flow time problem and maximum lateness problem are also strongly NP-complete.",
10.1007/BF00289510,Least upper bound on the cost of optimum binary search trees,SummaryThis paper gives the least upper bound on the weighted path length of an optimum lexicographic (alphabetic) binary search tree as a function of n  given the total weight of the n terminal nodes and the n—1 internal nodes to be one.,2020-03-20
10.1007/BF00288726,Grundlagen einer Theorie der Datenstrukturen und Zugriffssysteme,SummaryA mathematical model for data structures is presented from which other well known and widely used methods of representation can be derived easily. In this model the schema/instance relationship which is especially important with regard to data base systems  is described in terms of partitions  quotient structures  and homomorphisms of data structures. The main result is an algebraic characterization of the set of possible schemas for a given data structure.,2020-03-20
10.1007/s00236-007-0057-9,Synchronous cooperation for explicit multi-threading,We develop an algebraic theory of threads  synchronous cooperation of threads and interaction of threads with Maurer machines  and investigate program parallelization using the resulting theory. Program parallelization underlies techniques for speeding up instruction processing on a computer that make use of the abilities of the computer to process instructions simultaneously in cases where the state changes involved do no influence each other. One of our findings is that a strong induction principle is needed when proving theorems about sufficient conditions for the correctness of program parallelizations. The induction principle introduced has brought us to construct a projective limit model for the theory developed.,2013-03-20
10.1007/s00236-006-0012-1,Throughput analysis in wireless networks with multiple users and multiple channels,We consider the problem of maximizing throughput in a multi-carrier wireless network that employs predictive link adaptation. We explicitly consider the time-penalty incurred due to link adaptation. The contributions of this paper are twofold. Firstly  several high performance algorithms (offline and online) are developed for efficient performance in multiple user and multiple channel environment under the practicable lookahead prediction of one time slot. Secondly  the presented algorithms and heuristics are shown to be competitive by deterministic and probabilistic analyses. Our results show that a modest consumption of resources for channel prediction and link adaptation may result in a significant throughput improvement.,2014-03-20
10.1007/s00236-013-0186-2,Judgmental subtyping systems with intersection types and modal types,We study how to extend modal type systems based on intuitionistic modal logic S4 or S5 with a subtyping system based on intersection types. In the presence of four type constructors $${\!}\!\rightarrow \!{\!} \ {\!}\wedge {\!} \ \square {}$$→ ∧ □  and $$\Diamond {}$$◊  the traditional approach using a binary subtyping relation does not work well because of lack of orthogonality in subtyping rules and presence of a transitivity rule. We adopt the idea from the judgmental formulation of modal logic (Pfenning and Davies in Math Struct Comput Sci 11(4):511–540  2001) and use subtyping judgments whose definitions express those notions internalized into type constructors directly at the level of judgments. The resultant judgmental subtyping systems admit cut rules similarly to a sequent calculus for intuitionistic logic and play a key role in designing and verifying the relational subtyping systems based on the binary subtyping relation. We use the proof assistant Coq to prove the admissibility of the cut rules and the equivalence between the two kinds of subtyping systems. The lesson from our study is that by using subtyping judgments instead of the binary subtyping relation  we can overcome the limitation usually associated with the syntactic approach to formulating subtyping systems.,2012-03-20
10.1007/BF00290706,Partial parametrization eliminates multiple traversals of data structures,SummaryThe use of higher order functions in functional programming opens up the possibility of defining functions by partial parametrization  and lazy evaluation brings out a new approach in programming methodology. This paper describes a new transformation technique based on partial parametrization and fully lazy evaluation for eliminating multiple traversais of data structures. It uses no particular mechanisms in functional programming  whereas it transforms a wider class of programs into efficient ones than that proposed so far.,2018-03-20
10.1007/BF01178906,Concurrent testing of processes,Using a form of “ST-operational semantics” we develop a noninterleaving semantic theory of processes based on testing. This operational semantics is based on the assumption that all actions have a non-zero duration and the allowed tests can therefore distinguish between the beginning and the termination of actions. The result is a semantic theory in which concurrency is differentiated from nondeterminism.We show that the semantic preorder based on these tests is preserved by so-called “stable” action refinements and may be characterised as the largest such preorder contained in the standard testing preorder.,2013-03-20
10.1007/BF00261256,Parsing regular grammars with finite lookahead,SummaryNot every unambiguous regular grammar can be parsed by a finite state machine  even if a lookahead facility is added to the machine's capabilities. Those which can be parsed with a fixed lookahead of k are said to be FL(k). If such a grammar has n non-terminals  it never needs more than (n(n−1)/2) + 1 lookahead  and there exist grammars which do require this much. An algorithm is presented for determining whether a grammar is fixed lookahead parsable  and if so  for finding the minimum lookahead needed. The algorithm sets up and solves a set of O(n2) equations using O(n4) steps. Two parsing methods for FL(k) grammars are discussed. One uses a large precomputed parsing table  and operates in real time. The second parses an input string in time proportional to its length  while using approximately 3n storage locations.,2018-03-20
10.1007/BF00263762,Concurrency of operations on B-trees,SummaryConcurrent operations on B-trees pose the problem of insuring that each operation can be carried out without interfering with other operations being performed simultaneously by other users. This problem can become critical if these structures are being used to support access paths  like indexes  to data base systems. In this case  serializing access to one of these indexes can create an unacceptable bottleneck for the entire system. Thus  there is a need for locking protocols that can assure integrity for each access while at the same time providing a maximum possible degree of concurrency. Another feature required from these protocols is that they be deadlock free  since the cost to resolve a deadlock may be high.Recently  there has been some questioning on whether B-tree structures can support concurrent operations. In this paper  we examine the problem of concurrent access to B-trees. We present a deadlock free solution which can be tuned to specific requirements. An analysis is presented which allows the selection of parameters so as to satisfy these requirements.The solution presented here uses simple locking protocols. Thus  we conclude that B-trees can be used advantageously in a multi-user environment.,2019-03-20
10.1007/BF00288747,Ambiguity and precedence in syntax description,SummaryThis paper describes a method of syntax description for programming languages which allows one to factor out that part of the description which deals with the relative precedences of syntactic units. This has been found to produce simpler and more flexible syntax descriptions. It is done by allowing the normal part of the description  which is done in BNF  to be ambiguous; these ambiguities are then resolved by a separate part of the description which gives precedence relations between the conflicting productions from the grammar. The method can be used with any left-to-right parser which is capable of detecting ambiguities and recognizing which productions they come from; We have studied its use with an LR(1) parser  and it requires a small and localized addition to the parser to enable it to deal with the precedence relations.,2011-03-20
10.1007/s00236-009-0113-8,Small universal accepting hybrid networks of evolutionary processors,In this paper  we improve some results regarding the size complexity of accepting hybrid networks of evolutionary processors (AHNEPs). We show that there are universal AHNEPs of size 6  by devising a method for simulating 2-tag systems. This result improves the best upper bound for the size of universal AHNEPs which was 7. We also propose a computationally and descriptionally efficient simulation of nondeterministic Turing machines with AHNEPs. More precisely  we prove that AHNEPs with ten nodes can simulate any nondeterministic Turing machine of time complexity f (n) in time O(f (n)). This result significantly improves the best known upper bound for the number of nodes in a network simulating in linear time an arbitrary Turing machine  namely 24.,2015-03-20
10.1007/s00236-015-0222-5,Parametrized invariance for infinite state processes,We study the uniform verification problem for infinite state processes. This problem consists of proving that the parallel composition of an arbitrary number of processes running the same program (or a finite collection of programs) satisfies a temporal property. Our practical motivation is to build a general framework for the temporal verification of concurrent datatypes. In this paper we propose a general method for the verification of safety properties of parametrized programs that manipulate complex local and global data  including mutable state in the heap. Our method is based on a clear division between the following two dimensions of the problem: the interaction between executing threads—handled by novel parametrized invariance proof rules  and the data being manipulated—handled by specialized decision procedures. Our proof rules discharge automatically a finite collection of verification conditions. The size of this collection depends only on the size of the program and the specification  but not on the number of processes in any given instance or on the kind of data manipulated. Moreover  all verification conditions are quantifier free  which eases the development of decision procedures for complex data-types on top of off-the-shelf SMT solvers. We prove soundness of our proof rules and illustrate their application in the formal verification of (1) two infinite-state mutual exclusion protocols; (2) shape and functional correctness properties of several concurrent data-types  including fine-grained and non-blocking concurrent lists and queues. We report empirical results using a prototype implementation of the proof rules and decision procedures.,2014-03-20
10.1007/s00236-010-0119-2,Randomization adaptive self-stabilization,We present a scheme to convert self-stabilizing algorithms that use randomization during and following convergence to self-stabilizing algorithms that use randomization only during convergence. We thus reduce the number of random bits from an infinite number to an expected bounded number. The scheme is applicable to the cases in which there exits a local predicate for each node  such that global consistency is implied by the union of the local predicates. We demonstrate our scheme over the token circulation algorithm of Herman (Infor Process Lett 35:63–67  1990) and the recent constant time Byzantine self-stabilizing clock synchronization algorithm by Ben-Or  Dolev and Hoch (Proceedings of the 27th Annual ACM SIGACT-SIGOPS symposium on principles of distributed computing  (PODC)  2008). The application of our scheme results in the first constant time Byzantine self-stabilizing clock synchronization algorithm that eventually stops using random bits.,2016-03-20
10.1007/BF00264161,On the power of chain rules in context free grammars,SummaryFor all n ≧2  we construct a context-free language Lnfor which we prove the following:a)Ln  has a cfg of size O(n)b)Any chain rule free cfg for Lnhas size Ω(n log log n).,2016-03-20
10.1007/s00236-009-0093-8,Semantics  calculi  and analysis for object-oriented specifications,We present a formal semantics for an object-oriented specification language. The formal semantics is presented as a conservative shallow embedding in Isabelle/hol and the language is oriented towards ocl formulae in the context of uml class diagrams. On this basis  we formally derive several equational and tableaux calculi  which form the basis of an integrated proof environment including automatic proof support and support for the analysis of this type of specifications. We show applications of our proof environment to data refinement based on an adapted standard refinement notion. Thus  we provide an integrated formal method for refinement-based object-oriented development.,2017-03-20
10.1007/s00236-003-0135-6,Timed automata with urgent transitions,Abstract.We propose an extension to the formalism of timed automata by allowing urgent transitions. An urgent transition is a transition which must be taken within a fixed time interval from its enabling time and it has higher priority than other non-urgent transitions enabled in the same state. We give a set of rules formally describing the behavior of urgent transitions and we show that  from a language theoretic point of view  the addition of urgency does not improve the expressive power of timed automata. From a specification point of view  the use of urgent transitions allows shorter and clear specifications of behaviors involving urgency and priority. We use timed automata with urgent transitions for specifying a multicast protocol for mobile computing.,2019-03-20
10.1007/BF00288540,Optimum multiway search trees,SummaryThe construction of optimum multiway search trees for n keys  n key weights and n+1 gap weights  is investigated. A new general optimality principle is presented  which can be “tuned” for specific applications. Moreover we consider the affects of three additional constraints  namely height  structural and node search restrictions  which lead to a number of new construction algorithms. In particular we concentrate on the construction of optimum t-ary search trees with linear and binary search within their nodes for which we obtain O(n3t) and O(n3log2t) time algorithms  respectively. Whether these algorithms are or are not optimal remains an important open problem  even in the binary case.,2019-03-20
10.1007/BF00264320,The method of attributes for data flow analysis,SummaryThe importance of producing data flow information on demand is discussed. The method of attributes is applied to the demand analysis of live variables.Part I of this paper described the method of attributes  which is a technique for high level data flow analysis. In that paper  the method was applied to two well-known problems: analysis of dead variables and analysis of available expressions. Both of these analyses are called exhaustive because they uncover information for all program points.In this part  we apply the method of attributes to a problem in demand data flow analysis.,2011-03-20
10.1007/s00236-015-0225-2,Gray code orders for $$q$$q-ary words avoiding a given factor,Based on order relations inspired by the binary reflected Gray code (BRGC) we define Gray codes and give a generating algorithm for $$q$$q-ary words avoiding a prescribed factor. These generalize an early 2001 result and a very recent one published by some of the present authors  and can be seen as an alternative to those of Squire published in 1996. Among the involved tools  we make use of generalized BRGC order relations  ultimate periodicity of infinite words  and word matching techniques.,2018-03-20
10.1007/BF01463944,An abstract data type for name analysis,This paper defines an abstract data type on which a solution to the name analysis subproblem of a compiler can be based. (Name analysis uses the scope rules of a language to associate uses of identifiers with their definitions.) We give a state model for the ADT  and show how to implement that model efficiently. The implementation is independent of any particular name analysis  so it is possible to create a library module that can be used in any compiler. Such a library module has been incorporated into the Eli compiler construction system.,2017-03-20
10.1007/s002360050169,On the expressiveness of subset-sum representations,Abstract. We develop a general theory for representing information as sums of elements in a subset of the basic set A of numbers of cardinality n  often refered to as a “knapsack vector”. How many numbers can be represented in this way depends heavily on n. The lower  resp. upper  bound for the cardinality of the set of representable numbers is quadratic  resp. exponential  in terms of n. We give an algorithm for the construction of a knapsack vector of any prescribed expressiveness (that is  the cardinality of the set of representable numbers)  provided it falls within the range possible for expressiveness.,2020-03-20
10.1007/s002360050161,Reasoning with examples: propositional formulae and database dependencies,Abstract. For humans  looking at how concrete examples behave is an intuitive way of deriving conclusions. The drawback with this method is that it does not necessarily give the correct results. However  under certain conditions example-based deduction can be used to obtain a correct and complete inference procedure. This is the case for Boolean formulae (reasoning with models) and for certain types of database integrity constraints (the use of Armstrong relations). We show that these approaches are closely related  and use the relationship to prove new results about the existence and size of Armstrong relations for Boolean dependencies. Furthermore  we exhibit close relations between the questions of finding keys in relational databases and that of finding abductive explanations. Further applications of the correspondence between these two approaches are also discussed.,2012-03-20
10.1007/s00236-005-0170-6,Enhanced prefetching and caching strategies for single- and multi-disk systems,We study integrated offline caching and prefetching algorithms both in the single- and the multi-disk case. For the problem of minimizing the execution time of a given request sequence  we present simple algorithms. In the single-disk case we present a combinatorial algorithm with an approximation ratio of 3/2. An optimal solution can be computed using a linear program but this requires a very large number of variables. Our new result improves on all previous combinatorial approximation algorithms. For the multi-disk case we give combinatorial 2-approximation algorithms. Additionally  we consider this problem in the resource augmentation model where the approximation algorithms may use more cache lines than the optimal solution they are compared to. Here  we give strategies using one additional cache line per disk that outperform the optimum solution without additional cache in the single-disk case and achieve (1+o(1))-approximations in the multi-disk case. In contrast to some of the previous approaches  all the algorithms we present are combinatorial and easy to implement.,2015-03-20
10.1007/s00236-006-0011-2,Fairness of Actions in System Computations,This paper contrasts two important features of parallel system computations: fairness and timing. The study is carried out at a specification system level by resorting to a well-known process description language. The language is extended with labels which allow to filter out those process executions that are not (weakly) fair [as in Costa and Stirling (Acta Inf. 21:417–441  1984) and in Costa and Stirling (Inf. Comput. 73:207–244  1987)]  and with upper time bounds for the process activities (as in Corradini et al. Acta Inf. 38:735–792  2002). We show that fairness and timing are closely related. Two main results are stated. First  we show that each everlasting (or non-Zeno) timed process execution is fair. Second  we provide a characterization for fair executions of untimed processes in terms of timed process executions. This results in a finite representation of fair executions using regular expressions.,2020-03-20
10.1007/BF00264286,Context free derivations on word monoids,SummaryThe notion of a (direct) derivation is introduced on word monoids generated by finite languages over total vocabularies of context free grammars. It is shown that using generators of the length at most two  context sensitive and recursively enumerable languages can be characterized in a natural manner.,2019-03-20
10.1007/s00236-010-0127-2,Some properties of the disjunctive languages contained in Q,The set of all primitive words Q over an alphabet X was first defined and studied by Shyr and Thierrin (Proceedings of the 1977 Inter. FCT-Conference  Poznan  Poland  Lecture Notes in Computer Science 56. pp. 171–176 (1977)). It showed that for the case |X| ≥ 2  the set along with $${Q^{(i)} = \{f^i\ |\ f \in Q\}  i\geq 2}$$ are all disjunctive. Since then these disjunctive sets are often be quoted. Following Shyr and Thierrin showed that the half sets $${Q_{ev} = \{f \in Q\ |\ |f| = {\rm even}\}}$$ and Qod = Q \ Qev of Q are disjunctive  Chien proved that each of the set $${Q_{p r}= \{u\in Q\ |\ |u|\equiv r\ (mod\ p) \} \ 0\leq r < p}$$ is disjunctive  where p is a prime number. In this paper  we generalize this property to that all the languages $${Q_{n r}= \{u\in Q\ |\ |u|\equiv r\ (mod\ n) \} \  0\leq r < n}$$ are disjunctive languages  where n is any positive integer. We proved that for any n ≥ 1  k ≥ 2  (Qn 0)k are all regular languages. Some algebraic properties related to the family of languages {Qn r | n ≥ 2  0 ≤ r < n } are investigated.,2020-03-20
10.1007/BF00266049,On languages accepted by space-bounded oracle machines,Characterizations of classes of languages accepted by space-bounded oracle machines are developed. These characterizations are given in terms of the regular sets  certain information about the oracle set  and certain algebraic closure operations.,2017-03-20
10.1007/s00236-010-0120-9,How to allocate review tasks for robust ranking,In the process of reviewing and ranking projects by a group of reviewers  the allocation of the subset of projects to each reviewer has major impact on the robustness of the outcome ranking. We address here this problem where each reviewer is assigned  out of the list of all projects  a subset of up to k projects. Each individual reviewer then ranks and compares all pairs of k projects. The k-allocation problem is to determine an allocation of up to k projects to each reviewer  that lie within the expertise set of the reviewer  so that the resulting union of reviewed projects has certain desirable properties. The k-complete problem is a k-allocation with the property that all pairs of projects have been compared by at least one reviewer. A k-complete allocation is desirable as otherwise there may be projects that were not compared by any reviewer  leading to possible adverse properties in the outcome ranking. When a k-complete allocation cannot be achieved  one might settle for other properties. One basic requirement is that each pair of projects is comparable via a ranking path which is a sequence of pairwise rankings of projects implying a comparison of all pairs on the path. A k-allocation with a ranking path between each pair is the connectivity-k-aloc. Since the robustness of relative comparisons deteriorates with increased length of the ranking path  another goal is that between each pair of projects there will be at least one ranking path that has at most two hops or q hops for fixed values of q. An alternative means for increasing the robustness of the ranking is to use a k-allocation with at least p disjoint ranking paths between each pair. We model all these problems as graph problems. We demonstrate that the connectivity-k-aloc problem is polynomially solvable  using matroid intersection; we prove that the k-complete problem is NP-hard unless k = 2; and we provide approximation algorithms for a related optimization problem. All other variants are shown to be NP-complete for all values of k ≥ 2.,2019-03-20
10.1007/BF00263588,Performance bounds on the splitting algorithm for binary testing,SummaryIn machine fault-location  medical diagnosis  species identification  and computer decisionmaking  one is often required to identify some unknown object or condition  belonging to a known set of M possibilities  by applying a sequence of binary-valued tests  which are selected from a given set of available tests. One would usually prefer such a testing procedure which minimizes or nearly minimizes the expected testing cost for identification. Existing methods for determining a minimal expected cost testing procedure  however  require a number of operations which increases exponentially with M and become infeasible for solving problems of even moderate size. Thus  in practice  one instead uses fast  heuristic methods which hopefully obtain low cost testing procedures  but which do not guarantee a minimal cost solution. Examining the important case in which all M possibilities are equally likely  we derive a number of cost-bounding results for the most common heuristic procedure  which always applies next that test yielding maximum information gain per unit cost. In particular  we show that solutions obtained using this method can have expected cost greater than an arbitrary multiple of the optimal expected cost.,2017-03-20
10.1007/s00236-010-0131-6,Efficient systematic clustering method for k-anonymization,This paper presents a clustering (Clustering partitions record into clusters such that records within a cluster are similar to each other  while records in different clusters are most distinct from one another.) based k-anonymization technique to minimize the information loss while at the same time assuring data quality. Privacy preservation of individuals has drawn considerable interests in data mining research. The k-anonymity model proposed by Samarati and Sweeney is a practical approach for data privacy preservation and has been studied extensively for the last few years. Anonymization methods via generalization or suppression are able to protect private information  but lose valued information. The challenge is how to minimize the information loss during the anonymization process. We refer to the challenge as a systematic clustering problem for k-anonymization which is analysed in this paper. The proposed technique adopts group-similar data together and then anonymizes each group individually. The structure of systematic clustering problem is defined and investigated through paradigm and properties. An algorithm of the proposed problem is developed and shown that the time complexity is in $${O(\frac{n^{2}}{k})}$$  where n is the total number of records containing individuals concerning their privacy. Experimental results show that our method attains a reasonable dominance with respect to both information loss and execution time. Finally the algorithm illustrates the usability for incremental datasets.,2020-03-20
10.1007/s00236-015-0238-x,Denotational fixed-point semantics for constructive scheduling of synchronous concurrency,The synchronous model of concurrent computation (SMoCC) is well established for programming languages in the domain of safety-critical reactive and embedded systems. Translated into mainstream C/Java programming  the SMoCC corresponds to a cyclic execution model in which concurrent threads are synchronised on a logical clock that cuts system computation into a sequence of macro-steps. A causality analysis verifies the existence of a schedule on memory accesses to ensure each macro-step is deadlock-free and determinate. We introduce an abstract semantic domain $$I(\mathbb {D}  \mathbb {P})$$I(D P) and an associated denotational fixed-point semantics for reasoning about concurrent and sequential variable accesses within a synchronous cycle-based model of computation. We use this domain for a new and extended behavioural definition of Berry’s causality analysis in terms of approximation intervals. The domain $$I(\mathbb {D}  \mathbb {P})$$I(D P) extends the domain $$I(\mathbb {D})$$I(D) from our previous work and fixes a mistake in the treatment of initialisations. Based on this fixed-point semantics we propose the notion of Input Berry-constructiveness (IBC) for synchronous programs. This new IBC class lies properly between strong (SBC) and normal Berry-constructiveness (BC) defined in previous work. SBC and BC are two ways to interpret the standard constructive semantics of synchronous programming  as exemplified by imperative SMoCC languages such as Esterel or Quartz. SBC is often too restrictive as it requires all variables to be initialised by the program. BC can be too permissive because it initialises all variables to a fixed value  by default. Where the initialisation happens through the memory  e.g.  when carrying values from one synchronous tick to the next  then IBC is more appropriate. IBC links two levels of execution  the macro-step level and the micro-step level. We prove that the denotational fixed-point analysis for IBC  and hence Berry’s causality analysis  is sound with respect to operational micro-level scheduling. The denotational model can thus be viewed as a compositional presentation of a synchronous scheduling strategy that ensures reactiveness and determinacy for imperative concurrent programming.,2011-03-20
10.1007/BF00288659,Grammars on partial graphs,SummaryThe concept of Chomsky-grammars is generalized to graph-grammars; the “gluing” of graphs is defined by a pushout-construction. In the present paper  we allow the left-hand and right-hand side of a production to be partial graphs  i.e. graphs in which there may be edges without a source or target node. A necessary and sufficient condition for applicability of productions is given. Furthermore  convex graph-grammars are studied.,2012-03-20
10.1007/BF00299637,Erratum: Predicative Methodology,,2019-03-20
10.1007/BF03036473,On the sequential nature of interprocedural program-analysis problems,In this paper  we study two interprocedural program-analysis problems—interprocedural slicing and interprocedural dataflow analysis— and present the following results:• Interprocedural slicing is log-space complete forP.• The problem of obtaining “meet-over-all-valid-paths” solutions to interprocedural versions of distributive dataflow-analysis problems isP-hard.• Obtaining “meet-over-all-valid-paths” solutions to interprocedural versions of distributive dataflow-analysis problems that involve finite sets of dataflow facts (such as the classical “gen/kill” problems) is log-space complete forP.These results provide evidence that there do not exist fast (Nℐ-class) parallel algorithms for interprocedural slicing and precise interprocedural dataflow analysis (unlessP =Nℐ). That is  it is unlikely that there are algorithms for interprocedural slicing and precise interprocedural dataflow analysis for which the number of processors is bounded by a polynomial in the size of the input  and whose running time is bounded by a polynomial in the logarithm of the size of the input. This suggests that there are limitations on the ability to use parallelism to overcome compiler bottlenecks due to expensive interprocedural-analysis computations.,2020-03-20
10.1007/BF00263652,Erratum: Proving Properties of Pascal Programs in MIZAR 2,,2017-03-20
10.1007/BF01177548,Modularity and reusability in attribute grammars,An attribute grammar is a declarative specification of dependence among computations carried out at the nodes of a tree. Attribute grammars have proven remarkably difficult to decompose into logical fragments. As a result  they have not yet been accepted as a viable specification technique. By combining the ideas of remote attribute access and inheritance  we have been able to define “attribution modules” that can be reused in a variety of applications. As an example  we show how to define reusable modules for name analysis that embody different scope rules.,2016-03-20
10.1007/s236-002-8034-5,The variance of the height of digital search trees,"Abstract. It is shown that the distribution of the height 
$H_n$ of digital search tree is extremely concentrated. Especially it is proved that the variance 
$\vec{E} (H_n - \vec{E} H_n)^2$ and all centralized moments are bounded. These kinds of concentration properties are already known for tries and binary search trees. However  for digital search trees one expects much more  namely that the height is (asymptotically) concentrated at (at most) two levels. This conjecture – sometimes called Kesten's conjecture – remains unsolved but the present results might be a first step towards its resolution.",2019-03-20
10.1007/BF00265152,Some efficient computational algorithms related to phase models,SummaryThis paper develops efficient computational algorithms for some models that utilize phase type distributions. As in other instances  such as matrix-geometric methods  where the PH-distribution lends itself to useful and efficient computational methods  we examine how certain probabilities based on these distributions may be efficiently computed. The examples that we consider include token ring networks  simple multiqueues  and order statistics. By exploiting the geometric nature of PH-densities  it is shown that certain exponential time computations can be reduced to linear time  if recursive algorithms are used. We demonstrate speedup with the aid of a practical example  using a recursive as well as a nonrecursive algorithm  in verifying the stability of a queue on a token ring network.,2015-03-20
10.1007/s00236-015-0244-z,Step traces,In the classical Mazurkiewicz trace approach the behaviour of a concurrent system is described in terms of sequential observations that differ only with respect to their ordering of independent actions. This paper investigates an extension of the trace model to the case that actions can be observed as occurring simultaneously. Thus observations are sequences of steps  i.e.  sets of actions. This leads to a step trace model based on three relations between events: simultaneity  serialisability  and interleaving. Whereas the underlying causal structures of traces are based on dependencies between actions leading to a partial order interpretation  more general causal structures are needed to describe the invariant relationships between the action occurrences in a step trace. We present a complete picture including dependence structures extending dependence graphs  and a characterisation of step traces in terms of invariant order structures.,2017-03-20
10.1007/BF01178779,An all-round sweep algorithm for 2-dimensional nearest-neighbor problems,We present a simple  efficient  robust plane-sweep algorithm that solves 2-dimensional nearest-neighbor problems in asymptotically optimal timeO(n logn). A “foolproof” implementation guarantees an exact result at the cost of using triple-precision integer arithmetic at some key steps.,2015-03-20
10.1007/s002360050046,The synthesis problem of Petri nets,The synthesis problem of concurrent systems is the problem of synthesizing a concurrent system model from sequential observations. The paper studies the synthesis problem for elementary Petri nets and transition systems. A characterization of the class of transition systems which correspond to elementary Petri nets is proven. It is shown how to generate all elementary Petri nets corresponding to a given transition system. If there is any such elementary Petri net  it is proven that there always exists a small one which has only polynomially many elements in the size of the transition system.,2018-03-20
10.1007/s00236-013-0183-5,New proof for the undecidability of the circular PCP,We give simpler proof for the undecidability of the circular Post Correspondence Problem that was originally proved undecidable by Ruohonen (Acta Informatica 19:357–367  1983). The key feature of our proof is the undecidability of the word problem of special semi-Thue systems where derivations are deterministic and reversible for words containing a single occurrence of a letter from a given set.,2014-03-20
10.1007/s00236-013-0182-6,Strategy synthesis for multi-dimensional quantitative objectives,Multi-dimensional mean-payoff and energy games provide the mathematical foundation for the quantitative study of reactive systems  and play a central role in the emerging quantitative theory of verification and synthesis. In this work  we study the strategy synthesis problem for games with such multi-dimensional objectives along with a parity condition  a canonical way to express $$\omega $$ω-regular conditions. While in general  the winning strategies in such games may require infinite memory  for synthesis the most relevant problem is the construction of a finite-memory winning strategy (if one exists). Our main contributions are as follows. First  we show a tight exponential bound (matching upper and lower bounds) on the memory required for finite-memory winning strategies in both multi-dimensional mean-payoff and energy games along with parity objectives. This significantly improves the triple exponential upper bound for multi energy games (without parity) that could be derived from results in literature for games on vector addition systems with states. Second  we present an optimal symbolic and incremental algorithm to compute a finite-memory winning strategy (if one exists) in such games. Finally  we give a complete characterization of when finite memory of strategies can be traded off for randomness. In particular  we show that for one-dimension mean-payoff parity games  randomized memoryless strategies are as powerful as their pure finite-memory counterparts.,2019-03-20
10.1007/BF00290734,One-way multihead deterministic finite automata,SummaryIt is shown that the family of languages recognized by one-way k head deterministic finite state automata ℒ(1 DFA(k)) and the family of languages recognized by one-way k head deterministic sensing finite state automata ℒ(1DSeFA(k)) are not closed under concatenation  Kleene star and reversal for k≧2. These results are obtained as consequences of a theorem giving a sufficient condition for a language L in order not to be in ℒ(1DSeFA(k)). Several further results above the classes ℒ(1DFA(k)) and ℒ(1DSeFA(k)) are simple consequences of this theorem.,2019-03-20
10.1007/s00236-016-0261-6,Regular and context-free nominal traces,Two kinds of automata are presented  for recognising new classes of regular and context-free nominal languages. We compare their expressive power with analogous proposals in the literature  showing that they express novel classes of languages. Although many properties of classical languages hold no longer in the nominal case  we design a slight restriction of our models that preserve some interesting ones. In particular  we prove the emptiness problem decidable and we construct the intersection between (restricted) regular and context-free automata. By examples and walking through their properties we argue the relevance of our models in the context of the verification of resource usage patterns.,
10.1007/BF00279954,Elements of finite order for finite weight-reducing and confluent thue systems,"SummaryThe following problems are shown to be decidable in polynomial time for finite  weight-reducing  and confluent Thue systems T:(1)Is the monoid MTpresented by T a group?(2)Does the monoid MT have a non-trivial idempotent?(3)Does the monoid MT have a non-trivial element of finite order?
The proof of the last result exploits a property of finitely generated virtually free groups  which contain all groups that can be presented by finite  weight-reducing  and confluent Thue systems.",2017-03-20
10.1007/PL00013308,Labelled transition logic: an outline,Abstract. In the last ten years we have developed and experimented in a series of projects  including industry test cases  a method for the specification of reactive/concurrent/parallel/distributed systems both at the requirement and at the design level. We present here in outline its main technical features  providing pointers to appropriate references for more detailed presentations of single aspects  applications and documentation. The overall main feature of the method is its logical (algebraic) character  because it extends to labelled transition systems the logical/algebraic specification method of abstract data types; moreover systems are viewed as data within first-order structures called LT-structures. Some advantages of the approach are the full integration of the specification of static data and of dynamic systems  which includes by free higher-order concurrency  and the exploitation of well-explored classical techniques in many respects  including implementation and tools. On the other hand the use of labelled transition systems for modelling systems  inspired by CCS  allows us to take advantage  with appropriate extensions  of some important concepts  like communication mechanisms and observational semantics  developed in the area of concurrency around CCS  CSP and related approaches.,2016-03-20
10.1007/s00236-014-0209-7,Synthesis and reengineering of persistent systems,In formal verification  a structural object  such as a program or a Petri net  is given  and questions are asked about its behaviour. In system synthesis  conversely  a behavioural object  such as a transition system  is given  and questions are asked about the existence of a structural object realising this behaviour. In system reengineering  one wishes to transform a given system into another one  with similar behaviour and other properties not enjoyed by the original system. This paper addresses synthesis and reengineering problems in the specific framework of finite-state labelled transition systems  place/transition Petri nets  and behaviour isomorphisms. Since algorithms solving these problems are prohibitively time-consuming in general  it is interesting to know whether they can be improved in restricted circumstances  and whether direct correspondences can be found between classes of behavioural and classes of structural objects. This paper is concerned with persistent systems  which occur in hardware design and in various other applications. We shall derive exact conditions for a finite persistent transition system to be isomorphically implementable by a bounded Petri net exhibiting persistence in a structural way  and derive an efficient algorithm to find such a net if one exists. For the class of marked graph Petri nets  this leads to an exact characterisation of their state spaces.,2012-03-20
10.1007/s00236-003-0131-x,Program reversals for evolutions with non-uniform step costs,Abstract.The reversal of a program execution can be helpful for several purposes. The reverse mode of automatic differentiation  parameter estimation  and debugging represent some of the tasks that may require the intermediate values of a calculation in reverse order. The recording of a complete execution log forms the simplest approach to providing the data required for the reversal. However  this “store-everything” method causes an enormous demand for memory. The generation of the execution log piece by piece offers the possibility to reduce the storage requirement. To that end the forward calculation is restarted from suitably placed checkpoints leading to a more or less complicated reversal schedule.This paper deals with the reversal of evaluation procedures that consist of a sequence of time steps with varying computational complexity. We present a new search algorithm for determining a reversal schedule that minimizes the runtime of the reversal process for a given number of checkpoints. By exploiting a certain monotonicity property  the search algorithm based on dynamic programming can be made to grow only quadratically with the number of time steps to be reverted. We report the runtime savings that can be achieved performing the reversal with an optimal  i.e. time-minimal  reversal schedule for a test problem based on Burgers’ equation.,2016-03-20
10.1007/s002360050178,Evolutionary systems: a language generating device inspired by evolving communities of cells,Abstract. We introduce a language generating device based on string operations suggested by the evolution of cell populations  called evolutionary system. Cells are represented by strings which describe their DNA sequences. The cell community evolves according to gene mutations and cell divison defined by operations on strings. The paper deals with the generative power of these mechanisms (a characterization of the class of recursively enumerable languages is presented) and the dynamics of the string population. A connection between the growth function of D0L systems and the population growth relation of evolutionary systems is also given.,2020-03-20
10.1007/BF01210593,Scheduling saves in fault-tolerant computations,Computer users with very long computations run the risk of losing work because of machine failures. Such losses can often be reduced by scheduling saves on secure storage devices of work successfully done. In the model studied here  the user leaves the computation unattended for extended periods of time  after which he or she returns to check whether a machine failure occurs. When a check reveals a failure  the user resets the computation so that it resumes from the point of the last successful save.Saves are themselves time consuming  so that any strategy for scheduling saves must strike a balance between the computing time lost during saves and the computing time that is occasionally lost  because of a failure since the last successful save.For a given time to the next check and given constant save times  this paper computes schedules that maximize the expected amount of work successfully done before the next check  under the uniform and exponential failure laws. Explicit formulas are obtained for the uniform law. A recurrence leads to routine numerical calculations for the more difficult system with an exponential failure law.,2015-03-20
10.1007/BF00288646,Universal asynchronous iterative arrays of Mealy automata,"SummaryAsynchronous two-dimensional iterative arrays of automata will be introduced where the underlying automata are not of Moore-type but of Mealy-type. We will prove that there exists a Mealy automaton  
$$\mathfrak{U}_{ 0} $$
  with only two states and one input and output for each of its four distinguished directions  such that any given Mealy-automaton can be realized by an iterative array with only 
$$\mathfrak{U}_{ 0} $$
 for its component-machines. It is known that loop-free nets cannot be as powerful as Mealy automata; however  we will show that any Mealy automaton can be realized by a network  N  with very restrictive component machines  where no signal may pass a loop in N. Using this fact asynchronous iterative arrays can be built up with one component machine  
$$\mathfrak{U}_{ 1} $$
 such that any given Mealy automaton can be realized under the restriction that no signal passes a loop more than once. 
$$\mathfrak{U}_{ 1} $$
 contains only four states and one input and output for each direction.",2017-03-20
10.1007/BF00289091,do considered od: A contribution to the programming calculus,SummaryThe utility of repetitive constructs is challenged. Recursive refinement is claimed to be semantically as simple  and superior for programming ease and clarity. Some programming examples are offered to support this claim. The relation between the semantics of predicate transformers and “least fixed point” semantics is presented.,2016-03-20
10.1007/BF00263991,Efficient worst-case data structures for range searching,In this paper we investigate the worst-case complexity of range searching: preprocess N points in k-space such that range queries can be answered quickly. A range query asks for all points with each coordinate in some range of values  and arises in many problems in statistics and data bases. We develop three different structures for range searching in this paper. The first structure has absolutely optimal query time (which we prove)  but has very high preprocessing and storage costs. The second structure we present has logarithmic query time and O(N1+2) preprocessing and storage costs  for any fixed ɛ>0. Finally we give a structure with linear storage  O(N ln N) preprocessing and O(Nɛ) query time.,2013-03-20
10.1007/BF00264019,An experimentally validated model of the paging drum,SummaryThe behaviour of the paging drum or disc has a significant impact on the performance of multiprogrammed  paging systems. A study is made of such devices using the three tools of performance evaluation: an analytical model  a simulation model and empirical measurements. The models extend previous studies by including non-exponential arrival times and a comparison is made between the proposed analytical model and standard models using Poisson arrivals.,2020-03-20
10.1007/BF01178579,From ATP to timed graphs and hybrid systems,The paper presents results of ongoing work aiming at the unification of some behavioral description formalisms for timed systems. We propose for the algebra of timed processes ATP a very general semantics in terms of a time domain. It is then shown how ATP can be translated into a variant of timed graphs. This result allows the application of existing model-checking techniques to ATP. Finally  we propose a notion of hybrid systems as a generalization of timed graphs. Such systems can evolve  either by executing a discrete transition  or by performing some “continuous” transformation. The formalisms studied admit the same class of models: time deterministic and time continuous  possibly infinitely branching transition systems labeled by actions or durations.,2011-03-20
10.1007/s002360050134,Decision problems concerning thinness and slenderness of formal languages,"Abstract. A language L is called thin if for almost all n there is at most one word of length n in L. A language L is called slender if there is a positive integer k such that for any n there are at most k words of length n in L. The notions of Parikh thin and Parikh slender languages are defined similarly by counting the words with the same Parikh vectors instead of the words of the same length. In this paper we discuss decision problems concerning these four properties. It is shown that all four properties are decidable for bounded semilinear languages but undecidable for DT0L languages. As a consequence all these problems are decidable for context-free languages.
",2020-03-20
10.1007/BF01185566,On the lengths of values in a finite transducer,We investigate finite transducers and their inner structure with regard to the lengths of values. Our transducer models are the normalized finite transducer (NFT) and the nondeterministic generalized sequential machine (NGSM)  which is a real-time NFT. The length-degree of an NFT is defined to be the maximal number of different lengths of values for an input word or is infinite  depending on whether or not a maximum exists. We show: An NGSMM with finite length-degree can be effectively decomposed into finitely many NGSMsM1  ... MN having length-degree at most 1 such that the transduction realized byM is the union of the transductions realized byM1  ... MN. Using this decomposition  the equivalence of NGSMs with finite length-degree is recursively decidable. Whether or not an NGSM has finite length-degree can be decided in deterministic polynomial time. By reduction  all these results can be generalized to NFTs.,2012-03-20
10.1007/BF00261258,Sound and complete Hoare-like calculi based on copy rules,SummaryThis paper presents a uniform approach to known and new results on relative completeness of Hoare-like calculi for languages of ALGOL-like programs with procedures as procedure parameters. First the notion of a copy rule is introduced. It provides a uniform framework for dealing with different variants of semantics reaching from dynamic to static scope. Then for each copy rule ℒ a Hoare-like calculus ℋ(ℒ) is presented  the soundness of which is shown by using an approximating semantics. The key to the completeness results lies in a general completeness theorem on the calculi ℋ(ℒ) which has these results as corollaries. Finally  a new type of theorem on Hoare-like calculi is proved by which the notion of formal provability in ℋ(ℒ) is completely characterized. This characterization theorem is the main result of the paper. It covers both soundness and completeness of the calculi ℋ(ℒ) and additionally gives an idea of what the limits of presently known Hoare-like proof techniques for programming languages with procedures are.,2019-03-20
10.1007/BF01213203,heuristics for parallel machine scheduling with delivery times,A parallel machine scheduling problem is considered in which each job has a processing time and a delivery time. The objective is to find a schedule which minimizes the time by which all jobs are delivered. For a single machine this problem is easily solved in polynomial time  form≥2 machines it becomes NP-hard. Several heuristics using list scheduling as a subroutine are proposed and a tight worst-case analysis is given. The best one of our heuristics has a worst-case performance guarantee of 2−2/(m+1). For the on-line case we give a heuristic with the (best possible) worst-case performance of two.,2020-03-20
10.1007/BF00264248,A probabilistic analysis of the height of tries and of the complexity of triesort,SummaryWe consider binary tries formed by using the binary fractional expansions of X1  ... Xn  a sequence of independent random variables with common density f on [0 1]. For Hn  the height of the trie  we show that either E(Hn)∼21og2n or E(Hn)=∞ for all n≧2 according to whether ∫f2(x)dx is finite or infinite. Thus  the average height is asymptotically twice the average depth (which is ∼log2n when ∫f2(x)dx>∞). The asymptotic distribution of Hn is derived as well.If f is square integrable  then the average number of bit comparisons in triesort is nlog2n+0(n)  and the average number of nodes in the trie is 0(n).,2020-03-20
10.1007/BF00260926,Information management in context trees,SummaryInformation management in context trees involves three principal problems: retrieval  updating and garbage collection. These problems are discussed in the paper  and solutions are proposed and motivated. A list organization and relative algorithms to implement context trees are presented. Finally  experimental results are reported about the behaviour of a system which exploits context trees.,2011-03-20
10.1007/BF00265991,Branching processes in the analysis of the heights of trees,"SummaryIt is shown how the theory of branching processes can be applied in the analysis of the expected height of random trees. In particular  we will study the height of random binary search trees  random k—d trees  quadtrees and union-find trees under various models of randomization. For example  for the random binary search tree constructed from a random permutation of 1 ...  n  it is shown that Hn/(c log(n)) tends to 1 in probability and in the mean as n→∞  where Hn is the height of the tree  and c =4.31107... is a solution of the equation 
$$\left( {\frac{{2e}}{c}} \right) = 1$$
. In addition  we show that 
$$H_n - c log (n) = {\text{O}}(\sqrt {log(n)loglog(n)} )$$
 in probability.",2018-03-20
10.1007/BF01185558,Analysis of a class of communicating finite state machines,Thereachability  deadlok detection andunboundedness detection problems are considered for the class ofcyclic one-type message networks of communicating finite state machines. We show that all the three problems are effectively solvable by (a) constructing canonical execution event sequences which belong to a context-free language  and (b) showing that the reachability sets are semilinear. Our algorithms have polynomial complexity in terms of size of a global structure of a network  called theshuffle-product. The relationships between general Petri nets and the class of communicating finite state machines considered here are also explored.,2016-03-20
10.1007/BF01178667,Synthesized and inherited functions,In this paper we introduce a new formal model for the concept of syntaxdirected semantics  calledmacro attributed tree transducer (for short: mat tree transducer). This model is based on (noncircular) attributed tree transducers and on macro tree transducers. In the first type of transducer  semantic values are computed by means of meaning names called synthesized attributes  and by means of context names called inherited attributes. Both  synthesized and inherited attributes represent basic semantic values. In the second type of transducer  semantic values are computed by meaning names only which are called states. However  in order to have a means of handling context information  states represent functions over semantic values. The new model integrates attributed tree transducers and macro tree transducers by allowing both  meaning names and context names to represent functions over semantic values. In analogy to the terminology of attributed tree transducers  we call such meaning names and context names also synthesized functions and inherited functions  respectively.We present an inductive characterization of the tree transformation computed by an mat tree transducer. We prove that mat tree transducers are more powerful than both  attributed tree transducers and macro tree transducers. We characterize mat tree transducers by the two-fold composition of attributed tree transducers. This characterization has three consequences: (1) the height of output trees of mat tree transducers is bounded exponentially in the size of the input tree  (2) the composition hierarchy of mat tree transducers is strict  and (3) mat tree transducers are closed under right-composition with top-down tree transducers  but not under left-composition. Moreover  we prove that the addition of inherited attributes does not increase the computational power of macro tree transducers.,2018-03-20
10.1007/BF00289155,A class of linearly parsable graph grammars,SummarySpecializing an existing graph grammar model we look in detail at node context-free graph grammars. With a slight generalization the parse trees for context-free Chomsky grammars can be used to describe derivations of these graph grammars.As shown already in former works the precedence graph grammars are defined as a subclass of context-free graph grammars by certain algebraic restrictions on the form of the rules. Then we can prove that every precedence grammar is unambiguous and additionally the reduction process in such a grammar read as replacement system is finite.The most important aim in defining the predence relations was a simple parsing method. This is realized because it is shown that the syntactic analysis for precedence graph grammars can be done in a time which linearly depends on the size of the input graph.The whole method has been implemented and a documentation is available.,2016-03-20
10.1007/BF01191894,An efficiency preorder for processes,A simple efficiency preorder for CCS processes is introduced in whichp≲q means thatq is at least as fast asp  or more generally p uses at least as much resources asq. It is shown to be preserved by all CCS contexts except summation and it is used to analyse a non-trivial example: two different implementations of a bounded buffer. Finally we give a sound and complete proof system for finite processes.,2013-03-20
10.1007/s00236-008-0076-1,Modelling higher-order dual nondeterminacy,We investigate models for programming and specifying in which higher-order functions and nondeterminacy (both demonic and angelic) coexist. The models are built using predicate transformers  binary multirelations  state transformers  and free lattices over a poset. We show there exist suitable models in each approach  and that they are isomorphic. The models support an algebra of nondeterminacy which we use to prove that the classical list fusion law holds even in the presence of nondeterminacy.,2020-03-20
10.1007/BF00290341,Addenda and corrigenda,"11. Lautenbach  K.  Schmid  H. A. : Use of Petri nets for proving correctness of concurrent process systems. Proc. I F I P Congress 74  Stockholm  pp. 187-191. Amsterdam: North-Holland 1974 12. Best  E.  Schmid  H. A. : Systems of open paths in Petr i nets. In : J. Be6v~i"" (ed.)  Mathematical foundations of computer science 1975. Lecture Notes in Computer Science 32. Berlin-Heidelberg-New York: Springer 1975 13. Schmid  H. A.  Best  E. : A further step towards a solution of the liveness problem in Petr i nets. Submit ted a t the Conference on Petri Nets and Related Methods  MIT  Boston  Ju ly 1975",2012-03-20
10.1007/s00236-014-0213-y,Special issue on “Combining Compositionality and Concurrency”: part 1,In March 1988  we organised a workshop on “Combining Compositionality and Concurrency” in Königswinter near Bonn  Germany. We were motivated by the following dichotomy. One the one hand  a theory of concurrency was initiated by Carl Adam Petri  with notions like causality  conflict  and concurrency. One the other hand  a theory of communicating processes was developed by Robin Milner and Tony Hoare  where the emphasis was put on composing processes by algebraic operators like sequential  nondeterministic  and parallel composition. For quite a some time little interaction took place between the followers of these two lines of research. Then it was more and more realized that a full understanding  analysis or construction of parallel processes is impossible without combining the best from concurrency and compositionality. The idea of the workshop was therefore to invite researchers active in the area of combining compositionality and concurrency. In the meantime the relationships between these two directions have been carefully investigated. Today  the elements of the different semantic approaches are freely mixed. Also  the scope of systems that are modelled by concurrent or process algebraic means is much extended  for example  to mobile and probabilistic systems. In 2013  we called for a workshop “25 Years of Combining Compositionality and Concurrency”. We received very enthusiastic responses  and the jubilee workshop took place in,2020-03-20
10.1007/s002360050122,Modularity and expressibility for nets of relations,"Abstract. Modularity reflects the Frege Principle: any two expressions 
$expr_1$ and 
$expr_2$ which have the same meaning (semantics) can be replaced by each other in every appropriate context 
$C[ ]$ without changing the meaning of the overall expression. In [18] we identified observable relations and nets of observable relations as appropriate tools for the investigation of dataflow networks over nondeterministic agents. The observable relations are the Input-Output behaviors of (in general nondeterministic) dataflow agents. Moreover  the semantics of nets of observable relations is consistent with the input-output behavior of dataflow agents. In [18  19] we showed that the main source of the Brock-Ackerman anomaly [2] is in the semantics of nets of relations. But it turns out that this semantics is not modular. The central objective of this paper is the characterization of modular classes of relations and hence indirectly the set of dataflow nets without anomalies. Another major theme which plays a technical role in this characterization  but is interesting in its own  is the expressibility for relational nets. The investigation also reveals the interesting role played by stable functions introduced by Berry [3].
",2012-03-20
10.1007/BF00289468,Axiomatic approach to side effects and general jumps,SummaryHoare's axiomatic method is applied in order to describe two controversial features: side effects and general jumps. The relative simplicity of this description suggests that reasons for the exclusion of these features from programming languages are subtler than it has been thought.,2014-03-20
10.1007/BF00264279,On the performance evaluation of extendible hashing and trie searching,SummaryA class of trees occurs both in digital searching and in schemes for maintaining dynamic hash tables. We study the distribution of height in these trees using the saddle point method of complex analysis. As a result  we derive a precise evaluation of the memory requirements of extendible hashing — a dynamic hashing scheme — and discuss some related implementation issues.,2015-03-20
10.1007/BF00271643,The paging drum queue: A uniform perspective and further results,SummaryA uniform perspective for the performance analysis of drums organised around the sector concept under Poisson input is presented which allows further results on their operating characteristics to be naturally derived. Closed-form expressions are provided for (i) the mean device service time  (ii) the device utilisation  (iii) the drum efficiency  (iv) the mean device busy period  and (v) the mean number of page transfers per busy period. Both the FCFS and SLTF scheduling disciplines are studied. When the number of sectors per track is large  it is shown that some of the above quantities could be approximated by extremely simple asymptotic formulae if a suitable time unit is adopted. Generalisations of some of these results which are applicable to the performance analysis of solid-state secondary memory and certain computer communications systems — the polling server and the token ring — are also presented.,2014-03-20
10.1007/s00236-008-0085-0,A complexity tradeoff in ranking-function termination proofs,To prove that a program terminates  we can employ a ranking function argument  where program states are ranked so that every transition decreases the rank. Alternatively  we can use a set of ranking functions with the property that every cycle in the program’s flow-chart can be ranked with one of the functions. This “local” approach has gained interest recently on the grounds that local ranking functions would be simpler and easier to find. The current study is aimed at better understanding the tradeoffs involved  in a precise quantitative sense. We concentrate on a convenient setting  the Size-Change Termination framework (SCT). In SCT  programs are replaced by an abstraction whose termination is decidable. Moreover  sufficient classes of ranking functions (both global and local) are known. Our results show a tradeoff: either exponentially many local functions of certain simple forms  or an exponentially complex global function may be required for proving termination.,2019-03-20
10.1007/BF00264534,Regenerative simulation of response times in networks of queues: statistical efficiency,SummaryThis paper deals with the statistical efficiency of estimation methods for “passage times” in closed  multiclass networks of queues with priorities. Informally  a passage time is the time for a job to traverse a portion of the network. Such quantities are important in computer and communication system models  and in this context  quantities other than mean values are of interest. We consider here the efficiencies of the “marked job method” for passage time simulation (based on the tracking of a distinguished job) and the “decomposition method” in which observed passage times for all of the jobs enter in the construction of point and interval estimates. We show that the decomposition method is superior in that  for simulations of equal length  it produces tighter confidence intervals. We also calculate theoretical values for variance constants entering into central limit theorems used to obtain confidence intervals for mean passage times. These results provide a means of quantifying the relative efficiency of the decomposition method.,2020-03-20
10.1007/s00236-013-0179-1,Query optimization in information integration,The problem of decentralized data sharing  which is relevant to a wide range of applications  is still a source of major theoretical and practical challenges  in spite of many years of sustained research. In this paper we focus on the challenge of efficiency of query evaluation in information integration systems that use the global-as-view approach  with the objective of developing query-processing strategies that would be widely applicable and easy to implement in real-life applications. Our algorithms take into account important features of today’s data sharing applications: XML as likely interface or representation for data sources; the potential for information overlap across data sources; and the need for inter-source processing  as in joins of data across sources. The focus of this paper is on performance-related characteristics of several alternative approaches that we propose for efficient query processing in information integration  including an approach that uses materialized restructured views. We use synthetic and real-life datasets in our implementation of an information integration system shell to provide experimental results that demonstrate that our algorithms are efficient and competitive in the information integration setting. In addition  our experimental results allow us to make context-specific recommendations on selecting query-processing approaches from our proposed alternatives. As such  our approaches could form a basis for scalable query processing in information integration and interoperability in many practical settings.,2020-03-20
10.1007/s002360050171,Data refinement and algebraic structure,Abstract. We recall Hoare's formulation of data refinement in terms of upward  downward and total simulations between locally ordered functors from the structured locally ordered category generated by a programming language with an abstract data type to a semantic locally ordered category: we use a simple imperative language with a data type for stacks as leading example. We give a unified category theoretic account of the sort of structures on a category that allow upward simulation to extend from ground types and ground programs to all types and programs of the language. This answers a question of Hoare about the category theory underlying his constructions. It involves a careful study of algebraic structure on the category of small locally ordered categories  and a new definition of sketch of such structure. This is accompanied by a range of detailed examples. We extend that analysis to total simulations for modelling constructors of mixed variance such as higher order types.,2011-03-20
10.1007/BF00289156,Linear regular sets,SummaryThe purpose of this paper is to give a characterization of the sets of words accepted by finite linear automata. Since every linear automaton is isomorphic to a parallel product of a nilpotent linear automaton and a nonsingular linear automaton  our characterization is presented for these two classes of automata.,2014-03-20
10.1007/BF01178919,A.N. Habermann 1932–1993,,2015-03-20
10.1007/s00236-004-0143-1,Self-stabilizing group communication in directed networks,Abstract.This paper presents the first self-stabilizing group membership service  multicast service  and resource allocation service for directed networks. The first group communication algorithm is based on a token circulation over a virtual ring. The second algorithm is based on construction of distributed spanning trees. In addition  a technique is presented that emulates  in a self-stabilizing fashion  any undirected communication network over strongly connected directed networks  is presented. A resource allocation asynchronous algorithm for strongly connected directed networks is presented.,2013-03-20
10.1007/BF01192158,Geometrical tools to map systems of affine recurrence equations on regular arrays,We propose a method based on geometrical tools to map problems onto regular and synchronous processor arrays. The problems we consider are defined by systems of affine recurrence equations (SARE). From such a problem specification we extract the data dependencies in terms of two classes of vectors: the utilization vectors and the dependence vectors. We use these vectors to express constraints on the timing or the allocation functions. We differentiate two classes of constraints. The causal ones are intrinsic timing constraints induced by the system of equations defining the problem. A given choice of target architecture may impose new constraints on the timing or the allocation. We call them the architecture-related constraints. We use these constraints to determine first an affine timing function and next an allocation by projection. We finally illustrate the method with three examples: the matrix multiplication  the recursive convolution and the LLt Cholesky factorization.,2017-03-20
10.1007/s00236-015-0246-x,Mining approximate interval-based temporal dependencies,Temporal functional dependencies add valid time to classical functional dependencies in order to express data integrity constraints over the flow of time. If the temporal dimension adopted is an interval  we have to deal with interval-based temporal functional dependencies (ITFDs for short)  which consider different interval relations between tuple valid times. The related approximate problem is when we want to check whether our data satisfy  without any constraint for the schema  a given ITFD under a given error threshold $$0 \leqslant \epsilon \leqslant 1$$0⩽ϵ⩽1. This can be rephrased as: given a relation instance r  is it possible to delete at most $$\epsilon \cdot |r|$$ϵ·|r| tuples from it in such a way that the resulting instance satisfies the given ITFD? This optimization problem  ITFD-Approx for short  may represent a way to discover (i.e.  mine) important dependencies among attribute values in a database. In this paper we analyze the complexity of problem ITFD-Approx restricting ourselves to Allen’s interval relations: we shall see how the complexity of such a problem may significantly change  depending on the considered interval relation.,2013-03-20
10.1007/s002360050140,d-Words and d-languages,"Abstract. Let X be a finite alphabet containing more than one letter. A d-primitive word u overX is a non-overlapping word in the sense that no proper prefix of u is a suffix of u. D(1) is the set of all d-primitive words over X and D is the set of all positive powers of all words in D (1). Every language in D will be called a d-language. In this paper  we study some algebraic properties of d-primitive words and d-languages relative to formal language theory and codes. We show that there are infinitely many cyclic-square-free words over alphabet with three letters. A characterization of three elements codes in D (1) is obtained and we prove that every regular component in D (1) is either a prefix code or a suffix code.
",2014-03-20
10.1007/BF00264253,General purpose schedulers for database systems,SummaryA family of simple models for database systems is defined  where a system is composed of a scheduler  a data manager and several user transactions. The basic correctness criterion for such systems is taken to be consistency preservation. The central notion of the paper is that of a general purpose scheduler  a database system scheduler that is blind to the semantics of transactions and integrity assertions. Consistency preservation of a database system is shown to be precisely equivalent to a restriction on the output of a general purpose scheduler GPS  called weak serializability. That is  any database system using GPS will preserve consistency iff the output of GPS is always weakly serializable. This establishes a tight connection between database system correctness and scheduler behavior. Also  aspects of restart facilities and predeclared data accesses are discussed. Finally  several examples of schedulers correct with respect to weak serializability are presented.,2012-03-20
10.1007/BF00288656,On the efficient implementation of conditional critical regions and the construction of monitors,SummaryA method is presented that allows the efficient implementation of conditional critical regions combined with scheduling of the waiting processes. It is based on the knowledge of static and invariant relations that exist among the conditional critical regions of a process system. Mathematical methods are applied in order to show the nature of these relations  and to determine them for practical applications.By collecting the conditional critical regions in a program module  a monitor is obtained. Its rather abstract user level allows clear and well structured programming style. It also shows some advantages in comparison to other monitor proposals on the implementation level.,2012-03-20
10.1007/BF00289046,A multiclass network model of a demand paging computer system,SummaryThe paper presents a multiclass network model of a demand paging computer system. The powerful class and class changing mechanism of a multiclass network are used to model the serial co-operation of user and system functions in program execution. The workload itself is modelled as a mix of programs  each with different CPU  I/O  paging and locality characteristics. The effect of paging  I/O and program termination overheads on systems performance is evaluated  as well as the transient overhead of rapid page loading upon program activation. The model is then used to compute the optimal multiprogramming level and the optimal multiprogramming mix as a function of workload composition and system overhead. The model is finally used to confirm certain heuristic load control rules proposed by Denning et al.,2013-03-20
10.1007/BF00264560,Dispatcher primitives for the construction of operating system kernels,SummaryThe main subject of this paper is the definition of a general set of dispatcher primitives which have been proved to be a suitable basis for the structured design of operating system kernels. The use of the primitives in the construction of kernel programs is demonstrated.,2014-03-20
10.1007/BF01893886,Effective construction of the syntactic algebra of a recognizable series on trees,"SummaryIn this paper we exhibit two different effective constructions of the syntactic algebra associated to a recognizable formal series on treesS.The one method consists of a direct construction of (=a copy of) which is the subspace with the natural algebra structure.We first determine a basis
$$S\tau _1^{ - 1}  ... S\tau _m^{ - 1} $$
 of the subspace
$$F_S = \left\langle {{{S\tau ^{ - 1} } \mathord{\left/ {\vphantom {{S\tau ^{ - 1} } {\tau \in P_\Sigma }}} \right. \kern-\nulldelimiterspace} {\tau \in P_\Sigma }}} \right\rangle \subseteq F^{T_\Sigma } $$
 and then  using the junction isomorphism we obtain a basis for.The second method consists of considering an arbitrary surjective realization (  φ) ofS  defining an appropriate ideal ℬ of and then constructing the quotient algebra; this quotient is isomorphic to and thus independent of the choice of ( φ).",2017-03-20
10.1007/BF00289512,Berechnung und programm. I,SummaryLet A be an algebraic structure and assign to each operation of A a nonnegative real number as the performance time of the operation on a given computer. The notion of a computation (or straight line program) in A yields two functions from finite subsets of A to nonnegative real numbers  namely the computational length (or complexity)  and the computational depth. We characterize these functions in a quasiaxiomatic way and prove a number of general results  which will be applied to concrete problems elsewhere (see [12]–[15]).,2011-03-20
10.1007/BF00268135,On the implementation of Strassen's fast multiplication algorithm,SummaryA detailed analysis of Strassen's multiplication algorithm is presented; the analysis consists in deriving a symbolic formula  called time-formula  expressing the time taken to perform matrix multiplications using a combination of Strassen's and the regular method. The variables in the formula represent the time taken to perform the basic operations that can be executed in present day computers; these include arithmetic operations; subscripting  iteration overhead  etc. By binding actual numerical values  corresponding to a given compiler-machine configuration  to the variables one can determine the execution time for that configuration. The derived time-formula corresponds to an optimized and non-recursive version of Strassen's algorithm. This version uses a special scheme for positioning the elements of the matrices  the scheme being particularly suitable for usage in a paging environment. It has been found that Strassen's method can be used in multiplying 40 × 40 matrices (on an Algol-PDP-10 configuration) in a slightly better time than the standard method. Curves expressing the speed-up achieved by Strassen's method are presented. This information is substantiated by benchmarks.,2011-03-20
10.1007/s00236-007-0056-x,Solving #SAT using vertex covers,We propose an exact algorithm for counting the models of propositional formulas in conjunctive normal form. Our algorithm is based on the detection of strong backdoor sets of bounded size; each instantiation of the variables of a strong backdoor set puts the given formula into a class of formulas for which models can be counted in polynomial time. For the backdoor set detection we utilize an efficient vertex cover algorithm applied to a certain “obstruction graph” that we associate with the given formula. This approach gives rise to a new hardness index for formulas  the clustering-width. Our algorithm runs in uniform polynomial time on formulas with bounded clustering-width. It is known that the number of models of formulas with bounded clique-width  bounded treewidth  or bounded branchwidth can be computed in polynomial time; these graph parameters are applied to formulas via certain (hyper)graphs associated with formulas. We show that clustering-width and the other parameters mentioned are incomparable: there are formulas with bounded clustering-width and arbitrarily large clique-width  treewidth  and branchwidth. Conversely  there are formulas with arbitrarily large clustering-width and bounded clique-width  treewidth  and branchwidth.,2016-03-20
10.1007/BF00289093,Dynamic weighted binary search trees,SummaryWe present an algorithm which optimizes a weighted binary tree after an insertion or deletion. The resulting tree is nearly optimal. The algorithm needs O(n) space. In the case of an insertion the expected number of operations is equal to or less than the height of the tree. All results presented in this paper can also be found in [15].,2014-03-20
10.1007/BF00571463,Program proving: Coroutines,SummaryProof methods adequate for a wide range of computer programs have been given in [1–6]. This paper develops a method suitable for programs which incorporate coroutines. The implementation of coroutines described follows closely that given in SIMULA [7  8]  a language in which such features may be used to great advantage. Proof rules for establishing the correctness of coroutines are given and the method is illustrated by the proof of a useful program for histogram compilation.,2016-03-20
10.1007/BF00289154,A note on classes of complements and the LBA problem,SummaryThe complements of an AFL ℒ form an AFL if and only if ℒ is closed under “length-preserving” universal quantification. The complements of the context-sensitive languages form a principal AFL with a hardest set L1. The context-sensitive languages are closed under complementation if and only if L1 is context-sensitive.,2020-03-20
10.1007/BF00268139,Resolution of ambiguity in parsing,SummaryThe use of context-free grammars to define the syntax of programming languages is complicated by the phenomenon of ambiguity. Ambiguity can be resolved by the specification of a unique canonical parse. A set of rules is given which defines a canonical bottom-up parse  and these rules are implemented in a left-to-right bottom-up parsing algorithm. A second set of rules is given which defines a canonical top-down parse  and these rules are similarly implemented in a left-to-right top-down parsing algorithm.,2018-03-20
10.1007/BF00289137,Data management support for database management,SummaryDatabase management systems today face a rising demand for higher transaction rates and shorter response time. One of the essential requirements for meeting this demand is appropriate operating system support for database management functions. This paper proposes the introduction of the concept of “consistency-preserving containers” into data management in order to improve data management support for database management. Moreover  it presents the formal definition of a transactionoriented interface between data management and database management based on this concept  and introduces a locking scheme allowing high concurrency of transactions while guaranteeing consistency. Logging and recovery aspects of the concept are discussed.,2020-03-20
10.1007/s00236-013-0189-z,Efficient controller synthesis for a fragment of $$\hbox {MTL}_{0  \infty }$$MTL0 ∞,In this paper we offer an efficient controller synthesis algorithm for assume-guarantee specifications of the form $$\varphi _1 \wedge \varphi _2 \wedge \cdots \wedge \varphi _n \rightarrow \psi _1 \wedge \psi _2 \wedge \cdots \wedge \psi _m$$φ1∧φ2∧⋯∧φn→ψ1∧ψ2∧⋯∧ψm. Here  $$\{\varphi _i \psi _j\}$${φi ψj} are all safety-MTL$$_{0  \infty }$$0 ∞ properties  where the sub-formulas $$\{\varphi _i\}$${φi} are supposed to specify assumptions of the environment and the sub-formulas $$\{\psi _j\}$${ψj} are specifying requirements to be guaranteed by the controller. Our synthesis method exploits the engine of Uppaal-Tiga and the novel translation of safety- and co-safety-MTL$$_{0  \infty }$$0 ∞ properties into under-approximating  deterministic timed automata. Our approach avoids determinization of Büchi automata  which is the main obstacle for the practical applicability of controller synthesis for linear-time specifications. The experiments demonstrate that the chosen specification formalism is expressive enough to specify complex behaviors. The proposed approach is sound but not complete. However  it successfully produced solutions for all the experiments. Additionally we compared our tool with Acacia+ and Unbeast  state-of-the-art LTL synthesis tools; and our tool demonstrated better timing results  when we applied both tools to the analogous specifications.,2011-03-20
10.1007/BF01178503,On-line multiversion database concurrency control,This paper presents a new model for studying the concurrency vs. computation time tradeoffs involved in on-line multiversion database concurrency control. The basic problem that is studied in our model is the following:Given:a current database system state which includes information such as which transaction previously read a version from which other transaction; which transaction has written which versions into the database; and the ordering of versions previously written; anda set of read and write requests of requesting transactions.Question: Does there exist a new database system state in which the requesting transactions can be immediately put into execution (their read and write requests satisfied  or in the case of predeclared writeset transactions  write requests are guaranteed to be satisfied) while preserving consistency under a given set of additional constraints? (The amount of concurrency achieved is defined by the set of additional constraints).In this paper we derive “limits” of performance achievable by polynomial time concurrency control algorithms. Each limit is characterized by a minimal set of constraints that allow the on-line scheduling problem to be solved in polynomial time. If any one constraint in that minimal set is omitted  although it could increase the amount of concurrency  it would also have the dramatic negative effect of making the scheduling problem NP-complete; whereas if we do not omit any constraint in the minimal set  then the scheduling problem can be solved in polynomial time. With each of these limits  one can construct an efficient scheduling algorithm that achieves an optimal level of concurrency in polynomial computation time according to the constraints defined in the minimal set.,2016-03-20
10.1007/s00236-015-0235-0,Verification of heap manipulating programs with ordered data by extended forest automata,We present a general framework for verifying programs with complex dynamic linked data structures whose correctness depends on ordering relations between stored data values. The underlying formalism of our framework is that of forest automata (FA)  which has previously been developed for verification of heap-manipulating programs. We extend FA with constraints between data elements associated with nodes of the heaps represented by FA  and we present extended versions of all operations needed for using the extended FA in a fully-automated verification approach  based on abstract interpretation. We have implemented our approach as an extension of the Forester tool and successfully applied it to a number of programs dealing with data structures such as various forms of singly- and doubly-linked lists  binary search trees  as well as skip lists.,2020-03-20
10.1007/BF01177549,On bounds of response time performance achievable by multiclass single-server queues,MulticlassM/G/1 systems in steady-state with work-conserving scheduling strategies are studied. Restricting a system's scheduling strategy to making no direct use of the required service times  every time the server becomes idle its memory is cleared  and service may only be interrupted by newly arriving customers  a conservation law is developed by means of inequalities. The conservation law states that if a response time vector composed of the expected response times of the different classes of a system in steady-state is achievable  then it must belong to a well-defined convex polytope (a set bounded by hyperplanes). Furthermore  on each hyperplane bounding the relevant polytope there lies at least one vertex of the convex set of achievable response time vectors. Therefore  this polytope is the least one including the set of all achievable response time vectors.,2018-03-20
10.1007/s002360050174,Abstraction and performance in the design of parallel programs: an overview of the SAT approach,Abstract. SAT stands for Stages And Tranformations and is the name of an approach to the high-level  performance-directed design of parallel programs. The target programs obtained with this approach are sequences of internally parallel stages  i.e.  they fall within the SPMD model. Formal program transformations are used for deriving each parallel stage and optimizing the combination of several stages.The main advantage of the SAT approach is the comparatively high level of abstraction at which performance-relevant design decisions can be made. One consequence is that choices become much clearer than at the code level  enhancing comparability; another is that there is an increased potential for automation of the programming process.This paper summarizes the approach and assesses its usefulness  with emphasis on one basic parallel programming pattern  the list homomorphism  which captures the divide-and-conquer paradigm. We survey the transformational theory  provide a range of practical examples  and discuss the potential for automation and also the demands made on application programmers and implementers.,2013-03-20
10.1007/BF00288969,Testing attribute grammars for circularity,SummaryThe problem of deciding whether a given attribute grammar is noncircular is known to require exponential time for infinitely many grammars. Here the time requirement of a simple circularity test is analyzed. It is shown that the reason for the exponential time requirement is the number of graphs in a collection formed for every nonterminal. By practical experiments it is argued that for real grammars the number is very small. Therefore it is feasible to actually perform the circularity test in practice. Different techniques to improve the implementation of the circularity test are discussed  too.,2014-03-20
10.1007/BF01178907,Contextual nets,We propose a new kind of nets  called contextual nets  where events may have both preconditions and postconditions  as in the classical case  and also positive or negative context conditions. Positive context conditions are to be interpreted as elements which are needed for the event to occur  but which are not affected by the occurring of the event. Instead  negative context conditions are elements which must not be present for the event to take place.The importance of an explicit representation of positive context elements is twofold. Firstly  it allows a faithful representation of systems where the notion of “reading without consuming” is commonly used  like database systems  concurrent constraint programming  or any computation framework based on shared memory. Secondly  it allows to specify directly and naturally a level of concurrency greater than in classical nets. In fact  two events with different preconditions but with the same positive context may occur both in any order and also simultaneously. It is important to note that no other formalism for specifying distributed systems has such feature  not even Petri nets  where the “read” operation does not exists and it is instead modelled through a “rewrite” operation (i.e.  a loop)  which however does not allow the simultaneous execution of two tasks which read the same resource. Of course a context situation may be simulated in classical nets by creating as many copies of the context as are the users  but this would lead to a very unrealistic (and also more costly) description of the real situation. Negative context conditions are instead very natural to use in systems or languages where negation is present.In this paper we provide contextual nets with two process-based semantics which both are able to represent all and only the computations of a net and express the correct level of true-concurrency. Moreover  we show that contact situations  as well as negative context conditions  do not add any additional power  and we investigate the relationship between contextual nets and classical nets in terms of their processes.,2014-03-20
10.1007/s002360050034,Possibility and impossibility results in a shared memory environment,We focus on unreliable asynchronous shared memory model which support only atomic read and write operations. For such a model we provide a necessary condition for the solvability of problems in the presence of multiple undetectable crash failures. Also  by using game-theoretical notions  a necessary and sufficient condition is provided  for the solvability of problems in the presence of multiple undetectable initial failures (i.e.  processes may fail only prior to the execution).Our results imply that many problems such as consensus  choosing a leader  ranking  matching and sorting are unsolvable in the presence of a single crash failure  and that variants of these problems are solvable in the presence of a single crash failure  and that variants of these problems are solvable in the presence of t-1 crash failures but not in the presence of t crash failures.We show that a shared memory model can simulate various message passing models  and hence our impossibility results hold also for those message passing models. Our results extend and generalize previously known impossibility results for various asynchronous models.,2013-03-20
10.1007/BF03036466,Parallel integer sorting and simulation amongst CRCW models,In this paper a general technique for reducing processors in simulation without any increase in time is described. This results in an O(√logn) time algorithm for simulating one step of PRIORITY on TOLERANT with processor-time product of O(n log logn); the same as that for simulating PRIORITY on ARBITRARY. This is used to obtain anO(logn/log logn + √logn (log logm − log logn)) time algorithm for sortingn integers from the set {0 ... m − 1} m ≧n  with a processor-time product ofO(n log logm log logn) on a TOLERANT CRCW PRAM. New upper and lower bounds for ordered chaining problem on an allocated COMMON CRCW model are also obtained. The algorithm for ordered chaining takesO(logn/log logn) time on an allocated PRAM of sizen. It is shown that this result is best possible (upto a constant multiplicative factor) by obtaining a lower bound of Ω(r logn/(logr + log logn)) for finding the first (leftmost one) live processor on an allocated-COMMON PRAM of sizen ofr-slow virtual processors (one processor simulatesr processors of allocated PRAM). As a result  for ordered chaining problem  “processor-time product” has to be at least Ω(n logn/log logn) for any poly-logarithmic time algorithm.Algorithm for ordered-chaining problem results in anO(logN/log logN) time algorithm for (stable) sorting ofn integers from the set {0 ... m − 1} withn-processors on a COMMON CRCW PRAM; hereN = max(n  m). In particular if m =nO(1)  then sorting takes Θ(logn/log logn) time on both TOLERANT and COMMON CRCW PRAMs. Processor-time product for TOLERANT isO(n(log logn)2). Algorithm for COMMON usesn processors.,2011-03-20
10.1007/s00236-012-0171-1,Does indirect addressing matter?,In the study of random access machines (RAMs) and the complexities associated with their algorithms  the availability of indirect addressing often creates an analysis obstacle. We show that for RAMs equipped with a sufficiently rich set of basic operations  indirect addressing does not increase computational power  and can be simulated either in linear time or on-line in real time. These results pertain to the uniform cost model and  particularly  assume a unit cost variable shift.,2020-03-20
10.1007/s00236-016-0260-7,Special issue on temporal representation and reasoning (TIME’13),In September 2013  we organized the 20th International Symposium on Temporal Representation and Reasoning (TIME’13) that took place in Pensacola  FL (USA). After 20years  the Symposium returned to the venue where it originally started. TIME has grown since its original incarnation as a workshop to become an international symposium encompassing several different areas of computer science which deal  in some way or another  with the concept of time  its representation  reasoning and applications. This event has provided an opportunity for scientific exchange for researchers coming from different areas such as artificial intelligence  databases  temporal logic  and formal methods. The work presented at the 2013 Symposium concerned several different temporal aspects of information and computation and comprises a unique combination of innovative theoretical results and successful applications. This special issue of Acta Informatica originates from a call for papers sent out right after the symposium  in which we invited the authors of the highest ranked papers—according to the reviews carried out by the Program Committee members—to submit an extended version. After two rounds of reviews performed by additional experts the following papers were selected for publication in the special issue.We thank all reviewers for their commitment and dedication. The paper “A Faster Execution Algorithm for Dynamically Controllable Simple Temporal Networks with Uncertainty”  by Luke Hunsberger  presents novel algorithms for managing the execution of dynamically controllable simple temporal networks with uncertainty. For the first time  full proofs of the correctness of these algorithms in a self-contained manner are presented. The paper “Optimization in Temporal Qualitative Constraint Networks” by Jean-Francois Condotta  Souhila Kaci and Yakoub Salhi presents a variety of results about temporal quali-,2012-03-20
10.1007/s00236-012-0152-4,The identity problem of finitely generated bi-ideals,Finitely generated bi-ideals with letters from a selected alphabet A are considered. We solve the equivalence problem for generating systems of bi-ideals  i.e.  look for an effective procedure which provides the means of determining if two generating systems $${\langle u_0  . . .   u_{m-1} \rangle}$$ and $${\langle v_0  . . .   v_{n-1} \rangle}$$ represent equal or different bi-ideals. We offer a method of constructing  for every generating system $${\langle u_0  . . .   u_{m-1} \rangle}$$   an equivalent generating system $${\langle u^{\prime}_{0}  . . .   u^{\prime}_{m-1} \rangle}$$ with differing members. We also describe an algorithm for deciding if two generating systems $${\langle u_0  u_1 \rangle}$$ and $${\langle v_0  v_1 \rangle}$$ are equivalent or not. For a general case  the problem of existence of such an algorithm remains open.,2020-03-20
10.1007/s00236-009-0097-4,Correctness proof of a database replication protocol under the perspective of the I/O automaton model,Correctness of recent database replication protocols has been justified in a rather informal way focusing only in safety properties and without using any rigorous formalism. Since a database replication protocol must ensure some degree of replica consistency and that transactions follow a given isolation level  previous proofs only focused in these two issues. This paper proposes a formalization using the I/O automaton model  identifying several components in the distributed system that are involved in the replication support (replication protocol  group communication system  database replicas) and specifying clearly their actions in the global replicated system architecture. Then  a general certification-based replication protocol guaranteeing the snapshot isolation level is proven correct. To this end  different safety and liveness properties are identified  checked and proved. Our work shows that some details of the replication protocols that were ignored in previous correctness justifications are indeed needed in order to guarantee our proposed correctness criteria.,2018-03-20
10.1007/BF01178564,Receptive process theory,An algebraic theory of receptive processes is presented. A receptive process models the interaction by input events and output events between a system and its environment. Input from the environment and output to the environment are never blocked; but if a system is not ready to receive a particular input  its subsequent behaviour is undefined.In essence  this paper reworks Hoare's theory of Communicating Sequential Processes under the above assumption about communication. The resulting model is more attractive than the failures-divergences model of CSP because the refusal sets of the latter are simplified out of existence. Like CSP  receptive process theory is equipped with a sound and complete set of algebraic laws.Applications of the theory include the design of asynchronous circuits and the study of data flow networks. As an example  this paper verifies algebraically the design of a Muller C-element from a majority-element.,2016-03-20
10.1007/s00236-010-0128-1,A characterization of rational D0L power series,We study D0L power series over an arbitrary field. We characterize those D0L power series which are also rational series. As a consequence we show that rationality is decidable for D0L power series over many fields.,2013-03-20
10.1007/s00236-005-0175-1,Genericity and the π-calculus,Types in processes delineate specific classes of interactive behaviour in a compositional way. Key elements of process theory  in particular behavioural equivalences  are deeply affected by types  leading to applications in the description and analysis of diverse forms of computing. As one of the examples of types for processes  this paper introduces a second-order polymorphic π-calculus based on duality principles  building on type structures coming from typed π-calculi  Linear Logic and game semantics. Of various extensions of first-order typed π-calculi with polymorphism  the present paper focusses on the linear polymorphic π-calculus  extending its first-order counterpart [46]. Fundamental elements of the theory of linear polymorphic processes are studied  including establishment of their strong normalisability using Girard's “candidates ” introduction of a behavioural theory of polymorphic labelled transitions which strengthens Pierce-Sangiorgi's polymorphic bisimulation via duality  and a fully abstract embedding of System F in polymorphic processes  establishing a precise connection between the universe of polymorphic functions and the universe of polymorphic processes. The proof combines process-theoretic reasoning with techniques from game semantics. The abstract nature of polymorphic labelled transitions plays an essential role in full abstraction  elucidating subtle aspects of polymorphism in functions and interaction.,2016-03-20
10.1007/BF01178260,Reexecution in abstract interpretation of Prolog,Logic programming  because of referential transparency  enjoys the property that a literal may be reexecuted finitely often without affecting the meaning of the program. This property  although not interesting computationally in general  can be exploited in abstract interpretation to improve the accuracy of the analysis  as noted by Bruynooghe in [6].We study reexecution from its theoretical foundations to its experimental evaluation. We define a new abstract semantics for Prolog  which incorporates the notion of reexecution  and we study its correctness and precision properties. A fixpoint algorithm to compute the abstract semantics is then presented. The accuracy and efficiency of the algorithm is evaluated experimentally on two abstract domains  a simple and an elaborate one  and compared with conventional approaches.The experimental results indicate that (1) reexecution can provide significant gains in accuracy at a very reasonable computation cost and that (2) reexecution on a simple domain is a versatile alternative to the standard approach on a more sophisticated domain.,2020-03-20
10.1007/BF00263499,Iteration of transformation passes over attributed program trees,SummaryTransformations of attributed program trees form an essential part of compiler optimizations. A strategy of repeatedly applying alternate attribute evaluation and tree transformation phases is discussed. An attribute evaluation phase consists of a sequence of passes over the tree. A tree transformation phase consists of a single pass  which is never interrupted to carry out a re-evaluation. Both phases can be performed in parallel. This strategy requires a distinction between consistent (i.e.  correct) and approximate attribute values. Tree transformations can be considered safe if they guarantee that the attribute values everywhere in the program tree will remain consistent or will become at least approximations of the consistent values  so that subsequent transformations can be applied correctly.This attribute evaluation and tree transformation strategy shows similarities with the evaluation methods for circular attribute grammars.,
10.1007/BF01209713,Satisfiability of co-nested formulas,"AbstractAs a notion dual to Knuth's nested formulas [4]  we call a boolean formula
$$\Phi = \mathop \wedge \limits_{i = 1}^n c_i $$
 in conjunctive normal formco-nested if its clauses can be linearly ordered (sayC={ci;i=1 2  ... n})so that the graphGΦcl=(X∪C  {xci;x∈ci or ¬x∈ci} ∪ {cici+1;i=1  2  ... n}) allows a noncrossing drawing in the plane so that the circlec1 c2  ... cn bounds the outerface. Our main result is that maximum satisfiability of co-nested formulas can be decided in linear time.",2018-03-20
10.1007/BF00264438,Deriving very efficient algorithms for evaluating linear recurrence relations using the program transformation technique,SummaryUsing the program transformation technique we derive some algorithms for evaluating linear recurrence relations in logarithmic time. The particular case of the Fibonacci function is first considered and a comparison with the conventional matrix exponentiation algorithm is made. This comparison allows us also to contrast the transformation technique and the stepwise refinement technique underlining some interesting features of the former one. Through the examples given we also explain why those features are interesting for a useful and reliable program construction methodology.,2011-03-20
10.1007/s00236-003-0115-x,Adding inclusion dependencies to an object-oriented data model with uniqueness constraints,Abstract. We study an object-oriented data model that allows to express both uniqueness constraints and inclusion dependencies as semantic constraints. The data model is based on a subset of F-logic. Uniqueness constraints comprise path functional dependencies which generalise functional dependencies and reflect the navigational power of object-oriented query languages. As inclusion dependencies  we consider explicit class inclusion constraints  besides inclusions required by class hierarchies  and onto constraints that enforce reachability of objects. For these classes of semantic constraints we present an axiomatisation and prove its inference rules to be correct and complete with respect to general logical implication  leaving the decision problem open. The completeness proof combines the known construction for path functional dependencies alone with a possibly infinite model generation process to enforce onto constraints. The results prepare the grounds for normal forms in object-oriented data models and subsequently for computer aided object-oriented database design  following the decomposition approach for the relational data model. Beyond the application for schema design  the achievements could also be exploited for related tasks like semantic query optimisation and mediated data integration within a variety of graph based data models.,2012-03-20
10.1007/BF00264282,On specification of multiprocessor computing,SummaryThe paper presents a new specification style for computations to be executed in an essentially multiprocessor environment. This style is based on two pragmatic premises: (1) the specification is derived from considerations of system reaction related to system state  rather than to a goal to be achieved  (2) a reaction enabled by a system state is executed independently of any other system activity but its outcome is accepted only if the system “by itself” satisfies a postguard condition  i.e. finds itself in a (possibly different) well-defined state.,2020-03-20
10.1007/BF02915445,Correctness of semantic integrity checking in database management systems,SummaryAlthough today’s applications are very demanding with regard to semantic integrity  few database systems provide capabilities of this type. In this paper  a definition of integrity constraint is given in terms of Relational Algebra and certain aspects are then discussed concerning transaction management in the presence of such integrity constraints. In particular  the problem of when to enforce a set of integrity constraints during the execution of a transaction is addressed. For this purpose the notion ofIntegrity Enforcement Schedule is introduced. An Integrity Enforcement Schedule represents the sequence of integrity checking actions performed during the execution of a transaction. A correctness criterion for the Integrity Enforcement Schedules is established  and a sufficient condition for the correctness is provided. Finally the notion ofMinimal Integrity Enforcement Schedule is introduced. The Minimal Integrity Enforcement Schedules are those Integrity Enforcement Schedules in which every constraint is verified ‘as soon as possible”. For this reason they are really desirable in the transaction management to avoid expensive rollingback operations. Algorithms for their construction are presented  together with the associated correctness proofs.,2014-03-20
10.1007/s00236-015-0250-1,Checking interval properties of computations,Model checking is a powerful method widely explored in formal verification. Given a model of a system  e.g.  a Kripke structure  and a formula specifying its expected behaviour  one can verify whether the system meets the behaviour by checking the formula against the model. Classically  system behaviour is expressed by a formula of a temporal logic  such as LTL and the like. These logics are “point-wise” interpreted  as they describe how the system evolves state-by-state. However  there are relevant properties  such as those constraining the temporal relations between pairs of temporally extended events or involving temporal aggregations  which are inherently “interval-based”  and thus asking for an interval temporal logic. In this paper  we give a formalization of the model checking problem in an interval logic setting. First  we provide an interpretation of formulas of Halpern and Shoham’s interval temporal logic HS over finite Kripke structures  which allows one to check interval properties of computations. Then  we prove that the model checking problem for HS against finite Kripke structures is decidable by a suitable small model theorem  and we provide a lower bound to its computational complexity.,2013-03-20
10.1007/s00236-015-0251-0,A linear-time algorithm for the orbit problem over cyclic groups,The orbit problem is at the heart of symmetry reduction methods for model checking concurrent systems. It asks whether two given configurations in a concurrent system (represented as finite strings over some finite alphabet) are in the same orbit with respect to a given finite permutation group (represented by their generators) acting on this set of configurations by permuting indices. It is known that the problem is in general as hard as the graph isomorphism problem  whose precise complexity (whether it is solvable in polynomial-time) is a long-standing open problem. In this paper  we consider the restriction of the orbit problem when the permutation group is cyclic (i.e. generated by a single permutation)  an important restriction of the problem. It is known that this subproblem is solvable in polynomial-time. Our main result is a linear-time algorithm for this subproblem.,2012-03-20
10.1007/BF00264538,Eliminating unit reductions from LR(k) parsers using minimum contexts,SummaryThis paper presents a new approach to the design and the proof of bypassed LR(k) parsers; a bypassed LR(k) parser is an LR(k) parser which does not perform any reductions caused by insignificant unit productions. We show that bypassed LR(k) parsers having minimum set of reduction contexts always exist for Knuth LR(k) parsers  but do not necessarily exist for SLR(k) and LALR(k) parsers. As byproducts of our approach  we naturally derive Anderson  Eve and Homing's algorithm [5] and a sufficient condition for the existence of bypassed SLR(1) parsers.,2013-03-20
10.1007/BF00269809,Analysis of a service facility with periodic checkpointing,SummaryThis paper is an application of the theory of Markov renewal and semi regenerative processes into checkpointing problems. Its main practical contribution consists in the analytic expression of mean response time of systems under checkpointing and in the presence of intermittent failures (data bases  file systems ...).,2016-03-20
10.1007/BF00277386,Data refinement by calculation,SummaryData refinement is the systematic substitution of one data type for another in a program. Usually  the new data type is more efficient than the old  but possibly more complex; the purpose of the data refinement in that case is to make progress in program construction from more abstract to more concrete formulations. A recent trend in program construction is to calculate programs from their specifications; that contrasts with proving that a given program satisfies some specification. We investigate to what extent the trend can be applied to data refinement.,2019-03-20
10.1007/BF00264494,Problematic features of programming languages: a situational-calculus approach,SummaryCertain features of programming languages  such as data structure operations and procedure call mechanisms  have been found to resist formalization by conventional program verification techniques. An alternate approach is presented  based on a “situational calculus ” which makes explicit reference to the states of a computation. For each state  a distinction is drawn between an expression  its value  and the location of the value.Within this conceptual framework  the features of a programming language can be described axiomatically. Programs in the language can then be synthesized  executed  verified  or transformed by performing deductions in this axiomatic system. Properties of entire classes of programs  and of programming languages  can also be expressed and proved in this way. The approach is amenable to machine implementation.In a situational-calculus formalism it is possible to model precisely many “problematic” features of programming languages  including operations on such data structures as arrays  pointers  lists  and records  and such procedure call mechanisms as call by reference  call by value  and call by name. No particular obstacle is presented by aliasing between variables  by declarations  or by recursive procedures.In this paper  we introduce our conceptual framework and present an axiomatic definition of the assignment statement. If suitable restrictions on the programming language are imposed  the well-known Hoare assignment axiom can then be proved as a theorem. However  our definition can also describe the assignment statement of unrestricted programming languages  for which the Hoare axiom does not hold. In forthcoming papers  we apply the situational-calculus framework to the description of data structure operations and procedure call mechanisms.,2018-03-20
10.1007/BF00264363,An analysis of a contention resolution algorithm,SummaryA single multiaccess channel is studied with the outcome of a transmission being either ‘idle’  ‘success’  or ‘collision’ (ternary channel). Packets involved in a collision must be retransmitted  and an efficient way to solve a collision is known in the literature as Gallager-Tsybakov-Mikhailov algorithm. Performance analysis of the algorithm is quite hard. In fact  it bases on a numerical solution of some recurrence equations and on a numerical evaluation of some series. The obvious drawback of it is lack of insight into the behavior of the algorithm. We shall present a new approach of looking at the algorithm and discuss some attempts of analyzing its performance. In particular  expected lengths of a resolution interval and a conflict resolution interval as well as throughput of the algorithm will be discussed using asymptotic approximation and “a small input rate” approximation.,2014-03-20
10.1007/s00236-008-0081-4,Scattered context grammars that erase nonterminals in a generalized k-limited way,A scattered context grammar erases nonterminals in a generalized k-limited way in a successful derivation  where k is a positive integer  if in every sentential form of a derivation  each of its substrings consisting of nonterminals from which the grammar derives empty strings is of length k or less. This paper demonstrates that if a scattered context grammar generates its sentences in this way  it can be converted to a scattered context grammar without erasing productions; in general  however  this is not possible.,2012-03-20
10.1007/s002360050101,A fine-grained data-flow analysis framework,Abstract A fine-grained data-flow analysis framework (L  F) where the elements of the semilattice L are mappings from a set of items I to a semilattice of values V is introduced  and an algorithm is presented to solve this framework by considering the elements of I and V individually  rather than regarding the elements of L as atomic values. It is shown that a variety of useful data-flow problems fit into the fine-grained data-flow analysis framework  and can be solved in O(∣I∣×∣N∣) time.,2020-03-20
10.1007/PL00013301,Data structures for order-sensitive predicates in parallel nondeterministic systems,Abstract. We study the problem of guaranteeing correct execution semantics in parallel implementations of logic programming languages in presence of built-in constructs that are sensitive to order of execution. The declarative semantics of logic programming languages permit execution of various goals in any arbitrary order (including in parallel). However  goals corresponding to extra-logical built-in constructs should respect the sequential order of execution to ensure correct semantics. Ensuring this correctness in presence of such built-in constructs  while efficiently exploiting maximum parallelism  is a difficult problem. In this paper  we propose a formalization of this problem in terms of operations on dynamic trees. This abstraction enables us to: (i) show that existing schemes to handle order-sensitive computations used in current parallel systems are sub-optimal; (ii) develop a novel  optimal scheme to handle order-sensitive goals that requires only a constant time overhead per operation. While we present our results in the context of logic programming  they will apply equally well to most parallel non-deterministic systems.,2011-03-20
10.1007/s002360050107,Performance preorder and competitive equivalence,"Abstract. A preorder based on execution speed  called performance preorder  is introduced for a simple process algebra with durational actions. Two processes 
$E$ and 
$F$ are related -
$ E \sqsubseteq_p F$- if they have the same functionality (in this case  we have chosen strong bisimulation equivalence) and 
$E$ is at least as fast as 
$F$. Hence  this preorder supports the stepwise refinement “from specification to implementation” by increasing efficiency while retaining the same functionality. We show that the problem of finding faster implementations for a specification is connected to the problem of finding more distributed implementations of the same specification. Both performance preorder and the induced equivalence  called competitive equivalence  are provided with sound and complete axiomatizations for finite agents.
",2016-03-20
10.1007/s00236-004-0150-2,Project scheduling with irregular costs: complexity  approximability  and algorithms,Abstract.We address a generalization of the classical discrete time-cost tradeoff problem where the costs are irregular and depend on the starting and the completion times of the activities. We present a complete picture of the computational complexity and the approximability of this problem for several natural classes of precedence constraints. We prove that the problem is NP-hard and hard to approximate  even in case the precedence constraints form an interval order. For precedence constraints with bounded height  there is a complexity jump from height one to height two: For height one  the problem is polynomially solvable  whereas for height two  it is NP-hard and APX-hard. Finally  the problem is shown to be polynomially solvable if the precedence constraints have bounded width or are series parallel.,2015-03-20
10.1007/BF00263580,Computational algorithms for networks of queues with rejection blocking,SummaryOpen  closed and mixed queueing networks with reversible routing  multiple job classes and rejection blocking are investigated. In rejection blocking networks blocking event occurs when upon completion of its service of a particular station's server  a job attempts to proceed to its next station. If  at that moment  its destination station is full  the job is rejected. The job goes back to the server of the source station and immediately receives a new service. This is repeated until the next station releases a job and a place becomes available. In the model jobs may change their class membership and general service time distributions depending on the job class are allowed. Two station types are considered: Either the scheduling discipline is symmetric  in which case the service time distributions are allowed to be general and dependent on the job class or the service time distributions at a station are all identical exponential distributions  in which case more general scheduling disciplines are allowed. An exact product form solution for equilibrium state probabilities is presented. Using the exact product form solution of the equilibrium state distribution  algorithms for computation of performance measures  such as mean number of jobs and throughputs  are derived. The complexity of the algorithms is discussed.,2018-03-20
10.1007/BF00290143,Analysis of tree algorithms for the simulation event list,SummaryThe simulation event list is a priority queue found in simulation packages like SIMULA. Its task is to hold the pending events of the simulation  so that they can be executed in the correct order. For varying reasons  most standard algorithms are poorly suited to the special demands of this application.Recent work  on the average-case performance of the binary search tree (BST) and p-tree algorithms under these conditions  is presented. The algorithms are shown to be worse than O(log(n)) in many cases.,2015-03-20
10.1007/BF03036471,Reduction rules for time Petri nets,The goal of net reduction is to increase the effectiveness of Petri-netbased real-time program analysis. Petri-net-based analysis  like all reachabilitybased methods  suffers from the state explosion problem. Petri net reduction is one key method for combating this problem.In this paper  we extend several rules for the reduction of ordinary Petri nets to work with time Petri nets. We introduce a notion of equivalence among time Petri nets  and prove that our reduction rules yield equivalent nets. This notion of equivalence guarantees that crucial timing and concurrency properties are preserved.,2012-03-20
10.1007/s00236-015-0219-0,State space axioms for T-systems,T-systems are generalisations of marked graph Petri nets. This paper describes synthesis algorithms that allow bounded or unbounded T-systems to be derived from finite or infinite labelled transition systems satisfying a set of necessary properties. These properties can thus be interpreted as axioms characterising T-system state spaces.,2020-03-20
10.1007/BF02915448,Applications of the theory of records in the study of random trees,SummaryThe theory of records in sequences of independent identically distributed random variables leads to simple proofs of various properties of random trees  including among other things  the limit law for the depth of the last node of random ordered trees  random union-find trees  and random binary search trees.,2012-03-20
10.1007/BF00264250,A logic covering undefinedness in program proofs,SummaryRecursive definition often results in partial functions; iteration gives rise to programs which may fail to terminate for some imputs. Proofs about such functions or programs should be conducted in logical systems which reflect the possibility of “undefined values”. This paper provides an axiomatization of such a logic together with examples of its use.,2014-03-20
10.1007/s00236-016-0256-3,Metric propositional neighborhood logic with an equivalence relation,The propositional interval logic of temporal neighborhood (PNL for short) features two modalities that make it possible to access intervals adjacent to the right (modality $$\langle A \rangle $$⟨A⟩) and to the left (modality $$\langle \overline{A}\rangle $$⟨A¯⟩) of the current interval. PNL stands at a central position in the realm of interval temporal logics  as it is expressive enough to encode meaningful temporal conditions and decidable (undecidability rules over interval temporal logics  while PNL is NEXPTIME-complete). Moreover  it is expressively complete with respect to the two-variable fragment of first-order logic extended with a linear order $$\text {FO} ^2[<]$$FO2[<]. Various extensions of PNL have been studied in the literature  including metric  hybrid  and first-order ones. Here  we study the effects of the addition of an equivalence relation $$\sim $$∼ to Metric PNL (MPNL$${\sim }$$∼). We first show that the finite satisfiability problem for PNL extended with $$\sim $$∼ is still NEXPTIME-complete. Then  we prove that the same problem for MPNL$${\sim }$$∼ can be reduced to the decidable 0–0 reachability problem for vector addition systems and vice versa (EXPSPACE-hardness immediately follows).,2014-03-20
10.1007/BF00263994,Amounts of nondeterminism in finite automata,SummaryThe amount of nondeterminism in a nondeterministic finite automaton (NFA) is measured by counting the minimal number of “guessing points” a string w has to pass through on its way to an accepting state. NFA's with more nondeterminism can achieve greater savings in the number of states over their deterministic counterparts than NFA's with less nondeterminism. On the other hand  for some nontrivial infinite regular languages a deterministic finite automaton (DFA) can already be quite succinct in the sense that NFA's need as many states (and even context-free grammars need as many nonterminals) as the minimal DFA has states.,
10.1007/BF02915444,Corrections to “A synthesis of several sorting algorithms” by J. Darlington,SummaryDarlington applied program transformation to derive a number of sorting algorithms. We identify and correct two errors in his derivation of quick sort  one of which causes his resulting algorithm to be non-terminating on some inputs  the other of which could have led to an incorrect algorithm  but is fortuitously eliminated later in his derivation.,2017-03-20
10.1007/s00236-011-0148-5,Equational weighted tree transformations,We consider systems of equations of weighted tree transformations with finite support over continuous and commutative semirings. We define a weighted relation to be equational  if it is a component of the least solution of such a system of equations in a pair of algebras. In particular  we focus on equational weighted tree transformations which are equational relations obtained by considering the least solutions of such systems in pairs of term algebras. We characterize equational weighted tree transformations in terms of weighted tree transformations defined by different weighted bimorphisms. To demonstrate the robustness of equational weighted tree transformations  we give an equational definition of the class of linear and nondeleting weighted top-down tree transformations and of the class of linear and nondeleting weighted extended top-down tree transformations. Finally  we prove that a weighted relation is equational if and only if it is  roughly speaking  the morphic image of a weighted equational tree transformation.,2015-03-20
10.1007/BF00276020,Predicate-transformer semantics of general recursion,SummaryWe develop the semantics of a language with arbitrary atomic statements  unbounded nondeterminacy  and mutual recursion. The semantics is expressed in weakest preconditions and weakest liberal preconditions. Individual states are not mentioned. The predicates on the state space are treated as elements of a distributive lattice. The semantics of recursion is constructed by means of the theorem of Knaster-Tarski. It is proved that the law of the excluded miracle can be preserved  if that is wanted. The universal conjunctivity of the weakest liberal precondition  and the connection between the weakest precondition and the weakest liberal precondition are proved to remain valid. Finally we treat Hoare-triple methods for proving correctness and conditional correctness of programs.,2012-03-20
10.1007/BF00264228,Rewrite systems on a lattice of types,SummaryRe-writing systems for partial algebras are developed by modifying the Knuth-Bendix completion algorithm to permit the use of latticestructured domains. Some problems with the original algorithm  such as the treatment of division rings  are overcome conveniently by this means. The use of a type lattice also gives a natural framework for specifying data types in Computer Science without over-specifying error situations. The soundness and meaning of the major concepts involved in re-writing systems are reviewed when applied to such structures.,2013-03-20
10.1007/s00236-003-0113-z,Reasoning about probabilistic sequential programs in a probabilistic logic,Abstract. We introduce a notion of strong monotonicity of probabilistic predicate transformers. This notion enables us to establish a normal form theorem for monotone probabilistic predicate transformers. Three other healthiness conditions  namely  conjunctivity  disjunctivity and continuity for probabilistic predicate transformers are also examined  and they are linked to strong monotonicity. A notion of probabilistic refinement index is proposed  and it provides us with a continuous strength spectrum of refinement relations which may be used to describe more flexible refinement between probabilistic programs. A notion of probabilistic correctness is introduced too. We give a probabilistic weakest-precondition  choice and game semantics to the contract language  and present a probabilistic generalization of the winning strategy theorem.,2016-03-20
10.1007/BF00267042,Optimum decision trees — an optimal variable theorem and its related applications,SummaryThe problem of translation of a decision table into an optimal sequential testing procedure (STP) under two cost criteria is considered. We formulate the STP as a decision tree and introduce its description and execution costs. As usual  optimal STPs are defined as minimum cost decision trees. We call a variable optimal when it is tested first in an optimal STP. In other words an optimal variable is one which is placed (and hence to be tested) at the root of an optimum decision tree. We introduce a notion of quasi-decisive variables and prove that under the strong equivalence assumption on quasi-decisive variables (SEA)  they are optimal  and conversely  only the quasi-decisive variables are optimal whenever they exist in both costs (the optimal variable theorem). SEA holds in the general description cost and in the uniform execution cost. We show that SEA in the theorem can not be weakened in case of the general execution cost.We describe an algorithm for the construction of an optimum decision tree which requires O(Nlog3 log N) comparison operations  where N is the size of the input table. Then we show that we can speed-up this algorithm by applying the optimal variable theorem in description cost case. In fact the number of executions of the inner-most loop of the algorithm is reduced greatly under fairly reasonable assumptions on the test data tables  resulting in a considerable reduction in the total execution time of the algorithm.As a related topic we discuss optimization problems of quasi-decisive chains under execution cost. Our optimization algorithm requires O(N log N) operations.,2019-03-20
10.1007/BF00289045,Die Zeitkomplexität des Normalisierungsproblems bei kontextsensitiven Grammatiken,SummaryLet G be a Contextsensitive grammar. Gcf represents the context free core of G. In this paper the time complexity of the following problem will be discussed. The Normalization ProblemLet τ be a derivation tree with respect to Gc∫; is τ also a derivation tree with respect to G? It is shown that in general the normalization problem is NP-complete. On the other hand  for every context sensitive language L there is a corresponding context sensitive grammar G for which this normalization problem is solvable in polynomial time.ZusammenfassungSei G eine kontextsensitive Grammatik. Gc∫ bezeichne den kontextfreien Kern von G. In dieser Arbeit wird die Zeitkomplexität des folgenden Problems untersucht. Das NormalisierungsproblemSei τ ein Ableitungsbaum bezüglich Gc∫; ist τ auch ein Ableitungsbaum bezüglich G? Es wird gezeigt  daß im allgemeinen das Normalisierungs-problem NP-vollständig ist. Andererseits gibt es zu jeder kontextsensitiven Sprache L eine kontextsensitive Grammatik G  für welche das Normalisierungsproblem in Polynomzeit lösbar ist.,2019-03-20
10.1007/BF00288688,Direction controlled programmed grammars,SummaryA generalization of the notion of a context-free grammar is presented here. It is based on the notion of a programmed grammar. When the underlying context-free rules do not contain erasing  the class of languages obtained is identical with the class of context-sensitive languages. With underlying context-free rules containing erasing one obtains the class of recursively enumerable languages.,2018-03-20
10.1007/s002360050097,Testing bag-containment of conjunctive queries,"Abstract. Under the bag-theoretic semantics relations are bags of tuples  that is  a tuple may have any number of duplicates. Under this semantics  a conjunctive query 
$Q$ is bag-contained in a conjunctive query 
$Q^{\prime }$  denoted 
$ Q\leq _bQ^{\prime }$  if for all databases 
${\cal D}$  
$Q({\cal D})$  the result of applying 
$Q$ to 
${\cal D}$  is a subbag of 
$ Q^{\prime }({\cal D)}$. It is not known whether testing 
$Q\leq _bQ^{\prime }$ is decidable.
 In this paper we prove that 
$Q\leq _bQ^{\prime }$ can be tested on a finite set of canonical databases built from the body of 
$Q$. Using that result we give a procedure that decides the bag-containment problem of conjunctive queries in a large number of cases.",2017-03-20
10.1007/BF01463948,Correction to Null values in nested relational databases by M.A. Roth  H.F. Korth  and A. Silberschatz,We show that the extended projection of a nested relation in Partitioned Normal Form (PNF) is not a precise generalization of standard projection with respect to unnesting and PNF possibility functionPOSS.,2012-03-20
10.1007/BF00265556,The implementation of retention in a coroutine environment,SummaryAn efficient storage management scheme for languages supporting both coroutines and procedures is discussed. This scheme requires identifying those program components whose run time instances might need retention. These components could include both procedures and coroutines. A compile-time marking technique for determining these components in a block structured coroutine environment is presented. The impact that variations in the form of the coroutine control structures have on the technique is also addressed. Using the compile time marking as a guide  the storage management scheme can contract gracefully into a stack when programs use only a procedure call/return control discipline.,2016-03-20
10.1007/PL00013319,Even faster generalized LR parsing,Abstract. We prove a property of generalized LR (GLR) parsing – if the grammar is without right and hidden left recursions  then the number of consecutive reductions between the shifts of two adjacent symbols cannot be greater than a constant. Further  we show that this property can be used for constructing an optimized version of our GLR parser. Compared with a standard GLR parser  our optimized parser reads one symbol on every transition and performs significantly fewer stack operations. Our timings show that  especially for highly ambiguous grammars  our parser is significantly faster than a standard GLR parser.,2019-03-20
10.1007/BF00271641,A set-theoretic semantics for Clear,SummaryA semantics for the Clear specification language is given. The language of set theory is employed to present constructions corresponding to Clear's specification-combining operations  which are then used as the basis for a denotational semantics. This is in contrast to Burstall and Goguen's 1980 semantics which described the meanings of these operations more abstractly via concepts from category theory.,2014-03-20
10.1007/s00236-010-0118-3,On regular temporal logics with past,The IEEE standardized Property Specification Language  PSL for short  extends the well-known linear-time temporal logic LTL with so-called semi-extended regular expressions. PSL and the closely related SystemVerilog Assertions  SVA for short  are increasingly used in many phases of the hardware design cycle  from specification to verification. In this article  we extend the common core of these specification languages with past operators. We name this extension PPSL. Although all ω-regular properties are expressible in PSL  SVA  and PPSL  past operators often allow one to specify properties more naturally and concisely. In fact  we show that PPSL is exponentially more succinct than the cores of PSL and SVA. On the star-free properties  PPSL is double exponentially more succinct than LTL. Furthermore  we present a translation of PPSL into language-equivalent nondeterministic Büchi automata  which is based on novel constructions for 2-way alternating automata. The upper bound on the size of the resulting nondeterministic Büchi automata obtained by our translation is almost the same as the upper bound for the nondeterministic Büchi automata obtained from existing translations for PSL and SVA. Consequently  the satisfiability problem and the model-checking problem for PPSL fall into the same complexity classes as the corresponding problems for PSL and SVA.,2012-03-20
10.1007/BF00265676,Incremental LR parsers,SummaryThe concept of incremental parsing is briefly introduced. An algorithm which augments an LR parser with the capability of reanalyzing a limited part of a modified program is illustrated. The algorithm operates on a sequence of configurations representing the parse of the old input and finds the smallest part of the sequence which must be recomputed to obtain the parse of the new input.The implementation is discussed: a suitable data structure and a version of the algorithm which operates upon it are introduced; finally the problem of realizing efficient incremental parsers is faced  showing a modification to the basic algorithm which enable the reanalysis to be performed in linear time.,2018-03-20
10.1007/BF00289493,An incremental primal sieve,SummaryA new algorithm is presented for finding all primes between 2 and an incrementally increasing value n. The algorithm executes in linear arithmetic time and space. An outline is given to show how previously developed techniques can be applied to improve the efficiency of the algorithm to O(n/loglogn) time and space.,2020-03-20
10.1007/BF01179375,L-systems and mutually recursive function systems,In this paper  we investigate the relationship between two different approaches to generate fractal images—L-systems and mutually recursive function systems. We consider two different ways in which L-systems have been used to generate images. The first is the well-known turtle geometry method  and the other is the vector interpretation method as used by Dekking. We show that a uniformly growing D0L-system can be simulated by an MRFS  and any D0L-system can be simulated by a control set produced by an iterative GSM.,2013-03-20
10.1007/BF00289587,On the use of history variables,SummaryThis paper is a response to a suggestion that the use of history variables in proofs of the correctness of programs is unnecessary. It is argued that the use of history or ghost variables can be of benefit in improving the clarity of some proofs; that without their use some proofs require programming techniques which are at variance with the widely-accepted tenets of structured programming and that for some proofs of correctness their use is unavoidable.,2011-03-20
10.1007/BF00289471,Monoïdes syntactiques des langages algébriques,SummarySyntactic monoids have been considered so far almost only for rational (= regular) languages. We start here a systematic study of the syntactic monoids of algebraic (= context-free) languages. We exhibit a whole class of finitely generated monoids  none of which is isomorphic to the syntactic monoid of an algebraic language. We show that if M1 and M2 are syntactic monoids of algebraic languages L1 and L2  and if neither M1 nor M2 has a zero  then there exists an algebraic language L whose syntactic monoid is isomorphic to the direct product M2×M2. We then prove that the algebraic language ¯L0 Complement of {nn yn zn; n≧1} has a syntactic monoid M0 such that M0×M0 is not isomorphic to the syntactic monoid of any algebraic language  whence follows that any algebraic language L′ whose syntatic monoid is isomorphic to M0 must be non deterministic.,2011-03-20
10.1007/s002360050150,Dijkstra-Scholten predicate calculus: concepts and misconceptions,"Abstract. The paper focusses on the logical backgrounds of the Dijkstra-Scholten program development style for correct programs. For proving the correctness of a program (i.e. the fact that the program satisfies its specifications)  one often uses a special form of predicate calculus in this style of programming. We call this the Dijkstra-Scholten (DS) predicate calculus  since [DS90] is the first place in which it is described. DS predicate calculus can be conceived of as a logically sound and complete manipulation technique for dealing with logical formulas which also contain programming variables.
We relate DS predicate calculus to the classical logical formalism  by contrasting its syntax  derivation rules and semantics to the classical framework. We also comment on two abstractions of DS predicate calculus: the set-theoretical and the algebraic approach. In doing so  we give DS predicate calculus and its abstract variants a firm basis  on a par with the foundations of the well-known first order logic. Such a comparison of DS predicate calculus and classical logic has not yet been sufficiently elaborated before.
We conclude our paper with a number of examples showing that the  up to now  unsatisfactory presentation of DS predicate calculus and some of its features (such as the square brackets notation) has led to errors and fallacies in the literature.",2017-03-20
10.1007/BF01463945,On the expansion of non-linear functions,Expansion theorems are obtained for classes of non-linear functions. From these  properties of some complex recursive functions are derived by finding equivalent non-recursive definitions  and a combinator-based formulation facilitates a simpler analysis than is typical of the applicative calculus approach.,2017-03-20
10.1007/s00236-003-0121-z,Pipelines: Modelling a software architecture through relations,Abstract.A pipeline is a popular architecture which connects computational components (filters) through connectors (pipes) so that computations are performed in a stream like fashion. The data are transported through the pipes between filters  gradually transforming inputs to outputs. This kind of stream processing has been made popular through UNIX pipes that serially connect independent components for performing a sequence of tasks. We show in this paper how to formalize this architecture in terms of monads  hereby including relational specifications as special cases. The system is given through a directed acyclic graph the nodes of which carry the computational structure by being labelled with morphisms from the monad  and the edges provide the data for these operations. It is shown how fundamental compositional operations like combining pipes and filters  and refining a system by replacing simple parts through more elaborate ones  are supported through this construction.,2020-03-20
10.1007/BF01178777,A robust and efficient spatial data structure,A new structure for organizing a set of multidimensional points called the nested interpolation-based grid file (NIBGF) is introduced. The structure represents a synthesis and an improvement over interpolation-based grid files (IBGF)  BANG files  andK-D-B-trees. It decomposes the data search space into uniquely identifiable regions which may either be disjoint as in interpolation-based grid files or enclose each other as in the BANG files. In addition to possessing the symmetry of access and clustering properties characteristic of grid file structures  the performance of NIBGF is comparable to aB-tree performance as far as the index is concerned  even in the worst case scenario  and to the BANG file performance as far as the data regions are concerned. These properties make the new structure suitable for efficient implementation of relational database operations.,2019-03-20
10.1007/s00236-005-0173-3,Exponentially decreasing number of operations in balanced trees,While many tree-like structures have been proven to support amortized constant number of operations after updates  considerably fewer structures have been proven to support the more general exponentially decreasing number of operations with respect to distance from the update. In addition  all existing proofs of exponentially decreasing operations are tailor-made for specific structures. We provide the first formalization of conditions under which amortized constant number of operations imply exponentially decreasing number of operations. Since our proof is constructive  we obtain the constants involved immediately. Moreover  we develop a number of techniques to improve these constants.,2014-03-20
10.1007/s00236-015-0223-4,Contextual hyperedge replacement,Contextual hyperedge-replacement grammars (contextual grammars  for short) are an extension of hyperedge replacement grammars. They have recently been proposed as a grammatical method for capturing the structure of object-oriented programs  thus serving as an alternative to the use of meta-models like uml class diagrams in model-driven software design. In this paper  we study the properties of contextual grammars. Even though these grammars are not context-free  one can show that they inherit several of the nice properties of hyperedge replacement grammars. In particular  they possess useful normal forms and their membership problem is in NP.,2012-03-20
10.1007/BF01177550,Behavioural approaches to algebraic specifications,This paper focuses on observability issues in the framework of loose algebraic specifications. The main purpose of observability is to extend the model class of some given algebraic specification in order to consider not only the algebras that satisfy the axioms of the specification in order to consider not only the algebras that satisfy the axioms of the specification  but as well other ones  provided that the differences between the properties satisfied by these algebras and the properties required by the specification (i.e.  the axioms) are not “observable”. We compare various behavioural approaches developed so far. We point out their respective advantages and limitations. Expressive power is our main criterion for the discussion.,2020-03-20
10.1007/s00236-010-0117-4,Quantum loop programs,Loop is a powerful program construct in classical computation  but its power is still not exploited fully in quantum computation. The exploitation of such power definitely requires a deep understanding of the mechanism of quantum loop programs. In this paper  we introduce a general scheme of quantum loops and describe its computational process. The function computed by a quantum loop is defined  and a denotational semantics and a weakest precondition semantics of a quantum loop are given. The notions of termination and almost termination are proposed for quantum loops. This paper only consider the case of finite-dimensional state spaces. Necessary and sufficient conditions for termination and almost termination of a general quantum loop on any mixed input state are presented. A quantum loop is said to be (almost) terminating if it (almost) terminates on any input state. We show that a quantum loop is almost terminating if and only if it is uniformly almost terminating. It is observed that a small disturbance either on the unitary transformation in the loop body or on the measurement in the loop guard can make any quantum loop (almost) terminating  provided that some dimension restriction is satisfied. Moreover  a representation of the function computed by a quantum loop is given in terms of finite summations of matrices. To illustrate the notions and results obtained in this paper  two simple classes of quantum loop programs  one qubit quantum loops  and two qubit quantum loops defined by controlled gates  are carefully examined  and to show their expressive power  quantum loops are applied in describing quantum walks.,2012-03-20
10.1007/BF01178778,Single machine flow-time scheduling with scheduled maintenance,In this paper  we investigate a single machine scheduling problem of minimizing the sum of job flow times subject to scheduled maintenance. We first provide an NP-completeness proof for the problem. This proof is much shorter than the one given in Adiri et al. [1]. The shortest processing time (SPT) sequence is then shown to have a worst case error bound of 2/7. Furthermore  an example is provided to show that the bound is tight. This example also serves as a counter-example to the 1/4 error bound provided in Adiri et al. [1].,2012-03-20
10.1007/s002360050182,Two graph algorithms derived,Abstract. Much emphasis has been placed in recent years on deriving or calculating programs rather than proving them correct. Adequate calculational frameworks are needed to support such an approach. The present work explores the use of a calculus of relations to express and reason about graph properties in an algorithmic context. We first construct a generic program that computes a maximal set  over some universe  satisfying a certain given predicate. The development is presented as a step-by-step derivation  applying well-known techniques and heuristics that aid the construction of imperative programs. A calculational framework of relations is then used to obtain two instances of the generic program. These instances correspond to the computation of maximal graph components  viz. maximal independent sets of vertices and maximal sets of edges without cycles (i.e. maximal forests).,2014-03-20
10.1007/BF00289409,A note on multi-queue scheduling of two tasks,SummaryOptimal schedules in a central server model  consisting of a ‘CPU’ server and m ‘I/O’ servers  are obtained for the case of two customers. Each customer has exponential service time distributions with a distinct mean at the CPU server and with the same mean at any I/O servers. The performance measure considered is an arbitrarily weighted sum of the CPU utilization for each customer. It is shown that the optimal CPU and I/O schedules are either one of preemptive priority disciplines depending on certain conditions; the conditions are also obtained. A proof is given to the conjecture made by Spirn on the model and the results of Spirn's are generalized.,2017-03-20
10.1007/BF00264231,An effectively given initial semigroup,SummaryThe notion of effectively given domains is extended to semigroups. We show that the initial algebra for the semigroups with finite generators is effectively given. The initial algebra we describe uses expressions and trees of symbols of generators and the partial order in the algebra is defined using a formal system on expressions. The main body of the paper lies in the demonstration of the decidability of this formal system.,2013-03-20
10.1007/s00236-006-0017-9,Programmed grammars and their relation to the LBA problem,We consider generating and accepting programmed grammars with bounded degree of non-regulation  that is  the maximum number of elements in success or in failure fields of the underlying grammar. In particular  it is shown that this measure can be restricted to two without loss of descriptional capacity  regardless of whether arbitrary derivations or left-most derivations are considered. Moreover  in some cases  precise characterizations of the linear bounded automaton problem in terms of programmed grammars are obtained. Thus  the results presented in this paper shed new light on some longstanding open problem in the theory of computational complexity.,2015-03-20
10.1007/BF00289077,Subrekursive Komplexität bei Gruppen,SummaryHigman's embedding theorem states that every recursively presented (r.p.) group can be embedded in a finitely presented (f.p.) group. We use the results of part I together with an idea of Aanderaa [1] to show that the embedding can be realized preserving the complexity of the word problem of the r.p. group.,2018-03-20
10.1007/BF00289071,Extended linear macro grammars  iteration grammars  and register programs,SummaryExtended macro grammars (of the linear basic type only) are introduced as a generalization of those in [5]  and it is shown that they have the same language generating power as (parallel) iteration grammars. In particular the IO and OI versions of extended macro grammars correspond to the deterministic and the (usual) nondeterministic iteration grammars respectively. Hence iterated substitution can be formulated using extended macro grammars.A nondeterministic register program without tests may be viewed as a macro grammar. IO-extension of this macro grammar corresponds to the use of nonrecursive function procedures in the register program. OI-extended macro grammars correspond to register programs which compute on sets. Hence these features of register programs can be investigated by means of (extended) parallel rewriting systems.,2013-03-20
10.1007/s00236-006-0032-x,Parallel LL parsing,A deterministic parallel LL parsing algorithm is presented. The algorithm is based on a transformation from a parsing problem to parallel reduction. First  a nondeterministic version of a parallel LL parser is introduced. Then  it is transformed into the deterministic version—the LLP parser. The deterministic LLP(q k) parser uses two kinds of information to select the next operation — a lookahead string of length up to k symbols and a lookback string of length up to q symbols. Deterministic parsing is available for LLP grammars  a subclass of LL grammars. Since the presented deterministic and nondeterministic parallel parsers are both based on parallel reduction  they are suitable for most parallel architectures.,2014-03-20
10.1007/s00236-002-0098-z,A functional approach for temporal $\times$ modal logics,Abstract. This work is focused on temporal $\times$ modal logics. We study the representation of properties of functions of interest because of their possible computational interpretations. The semantics is exposed in an algebraic style  and the definability of the basic properties of the functions is analysed. We introduce minimal systems for linear time with total functions as well as with a class of partial functions (those with uniform domain). Moreover  completeness proofs are offered for these minimal systems. Finally  functional-validity is compared with $T\times W$-validity and Kamp-validity.,2012-03-20
10.1007/BF00263293,Performance evaluation of fork and join synchronization primitives,SummaryThe paper presents a performance model of fork and join synchronization primitives. The primitives are used in parallel programs executed on distributed systems. Three variants of the execution of parallel programs with fork and join primitives are considered and queueing models are proposed to evaluate their performance on a finite number of processors. Synchronization delays incurred by the programs are represented by a state-dependent server with service rate depending on a particular synchronization scheme. Closed form results are presented for the two processor case and a numerical method is proposed for many processors. Fork-join queueing networks having more complex structure i.e.  processors arranged in series and in parallel  are also analyzed in the same manner. The networks can model the execution of jobs with a general task precedence graph corresponding to a nested structure of the fork-join primitives. Some performance indices of the parallel execution of programs are studied. The results show that the speedup which can be obtained theoretically in a parallel system may be decreased significantly by synchronization constraints.,2016-03-20
10.1007/s002360050175,On slender 0L languages over the binary alphabet,"Abstract. A language 
$L$ is called slender if there exists a constant 
$k$ such that 
$L$ contains no 
$k$ words of equal length. In this paper we continue the study of relationships between slender languages and bounded languages. We show that if a 0L language 
$L$ over a two-letter alphabet is slender then 
$L$ is a D0L language or 
$L$ is a bounded language. As an application we prove the decidability of the slenderness problem in many cases.",2020-03-20
10.1007/s00236-016-0257-2,Dynamic controllability via Timed Game Automata,Temporal networks are data structures for representing and reasoning about temporal constraints on activities. Many kinds of temporal networks have been defined in the literature  differing in their expressiveness. The simplest kinds of networks have polynomial algorithms for determining their temporal consistency or different levels of controllability  but corresponding algorithms for more expressive networks (e.g.  those that include observation nodes or disjunctive constraints) have so far been unavailable. This paper introduces a new approach to determine the dynamic controllability of a very expressive class of temporal networks that accommodates observation nodes and disjunctive constraints. The approach is based on encoding the dynamic controllability problem into a reachability game for Timed Game Automata (TGAs). This is the first sound and complete approach for determining the dynamic controllability of such networks. The encoding also highlights the theoretical relationships between various kinds of temporal networks and TGAs. The new algorithms have immediate applications in the design and analysis of workflow models being developed to automate business processes  including workflows in the health-care domain.,2018-03-20
10.1007/BF00264354,Dynamic multi-dimensional data structures based on quad- and k—d trees,SummaryQuad-trees and k—d trees have been noted for their lack of dynamic properties as data structures for multi-dimensional point sets. We describe a method to insert points in a quad-tree while keeping the tree balanced that achieves an average time complexity of O(log2 N) per insertion  where N is the number of updates performed on the quad-tree. We define a structure similar to a quad-tree  called a pseudo quad-tree  and show how it can be used to handle both insertions and deletions in O(log2N) average time. We also discuss how quad-trees and pseudo quadtrees can be extended for use in configurations of points in which more than one point may have a same value in some equal coordinate  without altering the earlier time bounds for insertions  deletions and queries. Similar algorithms are given for k—d trees and the same average time bounds for insertion and deletion are achieved.,2020-03-20
10.1007/BF01178566,A run-time load balancing strategy for highly parallel systems,We discuss a simple run-time load balancing strategy which applies to numerical applications working on planar domains with localized data dependency. We develop an iterative and adaptive partitioner  able to work in a distributed way among the processors of a parallel system. Our algorithm subdivides data space into general quadrilaterals  where each processor works on the data of one area. The topology of these domains is that of a rectangular grid and does not change during execution. In this way a very simple and efficient communication structure is given. The administration overhead due to irregular geometry is small. Also  the overhead caused by periodically read-justing load balance is rather small because of the adaptivity and parallelity of the partitioning algorithm. We ran an scientific application to compare our method with a method working by recursive bisection  and obtained satisfactory results.,2014-03-20
10.1007/s002360050091,"A hierarchy of uniquely parsable grammar classes and deterministic acceptors
",Abstract.We introduce a new class of grammars called uniquely parsable grammars (UPGs). A UPG is a kind of phrase structure grammar having a restricted type of rewriting rules  where parsing can be performed without backtracking. We show that  in spite of such restriction to the rules  UPGs are universal in their generating ability. We then define three subclasses of UPGs. They are M-UPGs (monotonic UPGs)  RC-UPGs (UPGs with right-terminating and context-free-like rules)  and REG-UPGs (regular UPGs). It is proved that the generating abilities of the classes of M-UPGs  RC-UPGs  and REG-UPGs are exactly characterized by the classes of deterministic linear-bounded automata  deterministic pushdown automata  and deterministic finite automata  respectively. Especially  the class of RC-UPGs gives a very simple grammatical characterization of the class of deterministic context-free languages. Thus  these four classes form a deterministic counterpart of the classical Chomsky hierarchy.,2016-03-20
10.1007/BF01178576,Frameworks for abstract interpretation,Abstract interpretation theory provides a semantic foundation for dataflow analysis of programs by formalizing the relationship between analysis and semantics. In the original theory for abstract interpretation  due to Cousot and Cousot  this relationship was given in terms of an adjoined pair of functions. One function  called the abstraction function  mapped data to their best description  while the second function  called the concretization function  mapped descriptions to the largest data object they described. Since this time  however  a number of other “frameworks” for abstract interpretation have been developed  differing in how the descriptions are related to the actual data used in computation. For instance  one framework uses only abstraction functions  another uses only concretization functions  while yet another allows an arbitrary approximation relation. We illustrate that each of these frameworks has certain advantages and limitations. This motivates our development and study of a general framework which encompasses these other approaches. We examine this framework with regard to three questions: when does approximation lift from base functions to all expressions; when is approximation transitive; and when is there an optimal approximation and how can it be inferred? Answers to these questions are not only interesting in the context of our framework but also provide a better understanding of the other frameworks.,2013-03-20
10.1007/BF00264275,LR parsing for affix grammars,SummaryThe principal tools in LR theory  viz. item grammars and their corresponding automata  are adapted for use with affix grammars. The items (and automata states) are furnished with attributes that serve as pointers into the parsing stack and thus determine the inherited affixes needed in a reduction step. This attribute mechanism can be tested for ambiguity. If unambiguous and consistent in the sense of LR theory  the attributed automaton defines a deterministec bottom-up parser for the affix grammar in question.,2015-03-20
10.1007/BF00271340,On a new approach to representation independent data classes,SummaryAn approach to definition of abstract data classes suggested by J.C. Reynolds is investigated in the context of a PASCAL-like language. The issues of inheritance and parameterization of classes are considered  and new design solutions proposed.,2015-03-20
10.1007/BF00289575,Concurrent algorithms for root searching,SummaryConcurrent algorithms for finding the root of a real continous function are analyzed. A lower bound on the running time is given  this lower bound is obtained by a synchronous algorithm. A new asynchronous algorithm is discussed in detail and its running time is analyzed. Finally  the results from running the asynchronous algorithm on a multiprocessor are shown.,2015-03-20
10.1007/s002360050048,The log-structured merge-tree (LSM-tree),High-performance transaction system applications typically insert rows in a History table to provide an activity trace; at the same time the transaction system generates log records for purposes of system recovery. Both types of generated information can benefit from efficient indexing. An example in a well-known setting is the TPC-A benchmark application  modified to support efficient queries on the history for account activity for specific accounts. This requires an index by account-id on the fast-growing History table. Unfortunately  standard disk-based index structures such as the B-tree will effectively double the I/O cost of the transaction to maintain an index such as this in real time  increasing the total system cost up to fifty percent. Clearly a method for maintaining a real-time index at low cost is desirable. The log-structured mergetree (LSM-tree) is a disk-based data structure designed to provide low-cost indexing for a file experiencing a high rate of record inserts (and deletes) over an extended period. The LSM-tree uses an algorithm that defers and batches index changes  cascading the changes from a memory-based component through one or more disk components in an efficient manner reminiscent of merge sort. During this process all index values are continuously accessible to retrievals (aside from very short locking periods)  either through the memory component or one of the disk components. The algorithm has greatly reduced disk arm movements compared to a traditional access methods such as B-trees  and will improve cost-performance in domains where disk arm costs for inserts with traditional access methods overwhelm storage media costs. The LSM-tree approach also generalizes to operations other than insert and delete. However  indexed finds requiring immediate response will lose I/O efficiency in some cases  so the LSM-tree is most useful in applications where index inserts are more common than finds that retrieve the entries. This seems to be a common property for history tables and log files  for example. The conclusions of Sect. 6 compare the hybrid use of memory and disk components in the LSM-tree access method with the commonly understood advantage of the hybrid method to buffer disk pages in memory.,2014-03-20
10.1007/s00236-007-0040-5,Decision problems for pushdown threads,Threads as contained in a thread algebra emerge from the behavioral abstraction from programs in an appropriate program algebra. Threads may make use of services such as stacks  and a thread using a single stack is called a pushdown thread. Equivalence of pushdown threads is shown decidable whereas pushdown thread inclusion is undecidable. This is again an example of a borderline crossing where the equivalence problem is decidable  whereas the inclusion problem is not.,2011-03-20
10.1007/BF00292110,On sufficient-completeness and related properties of term rewriting systems,SummaryThe decidability of the sufficient completeness property of equational specifications satisfying certain conditions is shown. In addition  the decidability of the related concept of quasi-reducibility of a term with respect to a set of rules is proved. Other results about irreducible ground terms of a term rewriting system also follow from a key technical lemma used in these decidability proofs; this technical lemma states that there is a finite bound on the substitutions of ground terms that need to be considered in order to check for a given term  whether the result obtained by any substitution of ground terms into the term is irreducible. These results are first shown for untyped systems and are subsequently extended to typed systems.,2018-03-20
10.1007/PL00013300,Type introduction for equational rewriting,Abstract. Type introduction is a useful technique for simplifying the task of proving properties of rewrite systems by restricting the set of terms that have to be considered to the well-typed terms according to any many-sorted type discipline which is compatible with the rewrite system under consideration. A property of rewrite systems for which type introduction is correct is called persistent. Zantema showed that termination is a persistent property of non-collapsing rewrite systems and non-duplicating rewrite systems. We extend his result to the more complicated case of equational rewriting. As a simple application we prove the undecidability of AC-termination for terminating rewrite systems. We also present sufficient conditions for the persistence of acyclicity and non-loopingness  two properties which guarantee the absence of certain kinds of infinite rewrite sequences. In the final part of the paper we show how our results on persistence give rise to new modularity results.,2014-03-20
10.1007/s00236-008-0084-1,Exploiting colored Petri nets to decide on permutation admissibility,In this work  we propose an innovative approach to investigate the admissibility of permutations to multistage interconnection networks—a challenging problem of switching theory. The proposed approach is centered upon modeling of multistage interconnection networks with colored Petri nets and use of Petri net analysis tools such as the unfolding technique and the invariants method. To assess the feasibility of the proposed approach we demonstrate that the complete unfoldings obtained in this work are polynomial in the problem size and employ an acyclic structure. The approach takes advantage of easy to use  yet extremely efficient  software tools.,2017-03-20
10.1007/BF00288650,Node flows in graphs with conservative flow,SummaryIn analyzing graphs with conservative flow where the node flows are of interest (e.g. algorithm flowcharts) the practice has been to measure or to analytically determine the flows in the independent edges  and to calculate all other edge flows using Kirchhoff's law of flow conservation. The node flows are then obtained as the sum of edge flows entering each node.This paper presents a transformation on such graphs whereby the transformed graph  if analyzed for its edge flows  will directly yield the node flows of the original graph.A proof is also given that the number of node flow measurements determined by the transformed graph never exceeds the number of edge flow measurements that would be required if the transformation were not applied.,2012-03-20
10.1007/BF00286489,Semantic routines and LR(k) parsers,SummaryMost applications of parsing require that the parser call semantic action routines while processing the input. For LR(k) parsers it is well known that a semantic action routine can be called when the end of a production is recognized. Often  however  it is desirable to call routines at other times.This paper presents fast algorithms that determine  for an LR(k) (or SLR(k)) grammar  which positions are suitable for calling routines. The algorithms are practical for use with LR(1) (SLR(1)) parser building programs  because the worst case running time is dominated by the time required to build the LR(1) (SLR(1)) parser. Applications of the algorithms to attribute grammars and automatic indentation are discussed.,2018-03-20
10.1007/BF00289579,A network for the detection of words in continuous speech,SummaryA highly parallel algorithm for implementing word-spotting techniques is presented together with its realization on a systolic network of processors. Performances of this network are estimated and compared with results obtained on sequential architectures.,2016-03-20
10.1007/s00236-015-0254-x,Compositional schedulability analysis of real-time actor-based systems,We present an extension of the actor model with real-time  including deadlines associated with messages  and explicit application-level scheduling policies  e.g. “earliest deadline first” which can be associated with individual actors. Schedulability analysis in this setting amounts to checking whether  given a scheduling policy for each actor  every task is processed within its designated deadline. To check schedulability  we introduce a compositional automata-theoretic approach  based on maximal use of model checking combined with testing. Behavioral interfaces define what an actor expects from the environment  and the deadlines for messages given these assumptions. We use model checking to verify that actors match their behavioral interfaces. We extend timed automata refinement with the notion of deadlines and use it to define compatibility of actor environments with the behavioral interfaces. Model checking of compatibility is computationally hard  so we propose a special testing process. We show that the analyses are decidable and automate the process using the Uppaal model checker.,2013-03-20
10.1007/s00236-009-0092-9,Liveness of a mutex algorithm in a fair process algebra,In earlier work  we have shown that two variants of weak fairness can be expressed comparatively easily in the timed process algebra PAFAS. To demonstrate the usefulness of these results  we complement work by Walker (Form Asp Comput 1:273–292  1989) and study the liveness property of Dekker’s mutual exclusion algorithm within our process algebraic setting. We also present some results that allow to reduce the state space of the PAFAS process representing Dekker’s algorithm  and give some insight into the representation of fair behaviour in PAFAS.,2017-03-20
10.1007/BF00276024,Through the mincing machine with a Boolean layer cake,"SummaryThe purpose of the present paper is threefold. Firstly  it introduces an abstract theory of straight-line (circuit) Boolean computations and complexity based on a strict separation of the syntax and semantics of Boolean circuits; the usual (standard) way to compute a circuit becomes thus only one of many other (nonstandard) operation modes over the circuit. Secondly  we construct and investigate three particular nonstandard operation modes  of which one  the mincing (M-)mode  is the superposition of two others  the injection and ejection modes respectively. The M-mode uses the circuit as a pipe-lining device  channeling simultaneously through each layer of the circuit (a layer comprises all nodes of a given individual depth) information stored in previous layers and renewing the input and storing the output information after every such parallel step; the number of steps is equal to the double depth of the circuit. The function computed by the M-mode is richer as a functional device than the standard functional (S-)representation of a circuit; in particular  it not only detects paths connecting individual inputs and outputs of a circuit  as the S-representation does  but their lengths as well. Thirdly  based on the M-mode  a new (in fact  the first known nontrivial) general lower bound to the relative circuit-size complexity of a Boolean function is presented  in the form of the inequality 
$$s(f  C') \geqq m(f  C')$$
  which means that the circuit-size (CS-)complexity of a Boolean function f with respect to a fixed subset C′ ⫅ C of the set C of all Boolean circuits is at least as big as the mincing complexity of f with respect to the same subset; choosing appropriate subsets  one arrives at the complete  monotone  synchronous  locally synchronous (and in algebraic computations which can be naturally treated in the same vein  linear  bilinear) or other CS-complexities. The corresponding mincing complexity is defined as the minimum  taken over all circuits from C′ standardly computing f  of the Boolean dimension of the function computing by the M-mode; the Boolean dimension of a function is equal by definition to the 2-logarithm of the cardinality of the function's image. The advantage to work with the new lower bound is that it is defined as a minimum taken over a relatively well defined functional subspace associated with f and C′  and not  as in the CS-complexity case  over a subset of circuits  i.e.  a mixed discrete-continuum structure of an obscure nature (the real reason why the lower bound problem is so difficult). To demonstrate how the above inequality works  we prove an Ω(m·log m) lower bound to the locally synchronous CS-complexity of the m-dimensional cyclic convolution. This particular result is important for several reasons: (i) it improves the more than ten-years old non-linear lower bound to the synchronous CS-complexity of the same function  (ii) it can not be  apparently  proved by previously known methods  (iii) there exist functions (an example will be given in this paper) with the linear locally synchronous and a non-linear synchronous CS-complexities.",2013-03-20
10.1007/s002360050124,"A fully abstract semantics for causality in the 
$\pi$-calculus","Abstract. We examine the meaning of causality in calculi for mobile processes like the 
$\pi$-calculus  and we investigate the relationship between interleaving and causal semantics for such calculi. We separate two forms of causal dependencies on actions of 
$\pi$-calculus processes  called subject and object dependencies: The former originate from the nesting of prefixes and are propagated through interactions among processes (they are the only form of causal dependencies present in CCS-like languages); the latter originate from the binding mechanisms on names. We propose a notion of causal bisimulation which distinguishes processes which differ for the subject or for the object dependencies. We show that this causal equivalence can be reconducted to  or implemented into  the ordinary interleaving observation equivalence. We prove that our encoding is fully abstract w.r.t. the two behavioural equivalences. This allows us to exploit the simpler theory of the interleaving semantics to reason about the causal one. In [San94b] a similar programme is carried out for location bisimulation [BCHK91]  a non-interleaving spatial-sensitive (as opposed to causal-sensitive) behavioural equivalence. The comparison between the encodings of causal bisimulation in this paper  and of location bisimulation in [San94b]  evidences the similarities and the differences between these two equivalences.
",2016-03-20
10.1007/BF00265770,A study of queueing networks with deterministic service and application to computer networks,SummaryWe consider a packet-switching network as a queueing system with constant service times: that means that the lengths of the packets are equal. We study such a network by isolating a particular path which we treat as tandem queueing system. Two aspects will be examined: the study of the response time of such a system  and the throughput of such a system when time-outs are used to destroy packets. The results we obtain show that when the interference between paths is neglected the response time is independent of the order of the stations. The control policy we examine proves the necessity to have a limitated memory capacity at each node of a packet-switching network. These results confirm the intuitive options taken in a network like CYCLADES.,2015-03-20
10.1007/BF01261654,Opportunistic algorithms for eliminating supersets,The main problem tackled in this paper is that of finding each set in a given collection that has no proper subset in the collection. Starting with a solution that uses a quadratic (in the size of the collection) number of subset tests  solutions are developed that are opportunistic in the sense of running significantly faster for certain classes of input (such as when most sets are small)  but without running slower on other input. They are based on an opportunistic algorithm for the fundamental problem of finding an element common to two ordered sequences. Methodological issues are emphasized throughout.,2020-03-20
10.1007/s002360100070,Process algebra with action dependencies,Abstract. In this paper  we present a process algebra with a minimal form of semantics for actions given by dependencies. Action dependencies are interpreted in the Mazurkiewicz sense: independent actions should be able to commute  or (from a different perspective) should be unordered  whereas dependent actions are always ordered. In this approach  the process algebra operators are used to describe the conceptual behavioural structure of the system  and the action dependencies determine the minimal necessary orderings and thereby the additionally possible parallelism within this structure.In previous work on the semantics of specifications using Mazurkiewicz dependencies  the main interest has been on linear time. We present in this paper a branching time semantics  both operationally and denotationally. For this purpose  we introduce a process algebra that incorporates  besides some standard operators  also an operator for action refinement. For interpreting the operators in the presence of action dependencies  a new concept of partial termination has to be developed. We show consistency of the operational and denotational semantics; furthermore  we give a axiomatisation of bisimilarity  which is complete for finite terms. Some small examples demonstrate the flexibility of this process algebra in the design of distributed reactive systems.,2019-03-20
10.1007/s00236-014-0196-8,General quantitative specification theories with modal transition systems,This paper proposes a new theory of quantitative specifications. It generalizes the notions of step-wise refinement and compositional design operations from the Boolean to an arbitrary quantitative setting. Using a great number of examples  it is shown that this general approach permits to unify many interesting quantitative approaches to system design.,2018-03-20
10.1007/BF00263928,Complexity of analyzing the synchronization structure of concurrent programs,SummaryFoundational to verification of some aspects of communicating concurrent systems is knowledge of the synchronization which may occur during execution. The synchronization determines the actions that may occur in parallel  may determine program data flow  and may also lead to inherently erroneous situations (e.g. deadlock). This paper formalizes the notion of the synchronization structure of concurrent programs that use the rendezvous (or similar) mechanism for achieving synchronization. The formalism is oriented towards supporting verification as performed by automated static program analysis. Complexity results are presented which indicate what may be expected in this area and which also shed light on the difficulty of correctly constructing concurrent systems. Specifically  most of the analysis tasks considered are shown to be intractable.,2011-03-20
10.1007/s00236-012-0169-8,Accepting splicing systems with permitting and forbidding words,In this paper we propose a generalization of the accepting splicing systems introduced in Mitrana et al. (Theor Comput Sci 411:2414–2422  2010). More precisely  the input word is accepted as soon as a permitting word is obtained provided that no forbidding word has been obtained so far  otherwise it is rejected. Note that in the new variant of accepting splicing system the input word is rejected if either no permitting word is ever generated (like in Mitrana et al. in Theor Comput Sci 411:2414–2422  2010) or a forbidding word has been generated and no permitting word had been generated before. We investigate the computational power of the new variants of accepting splicing systems and the interrelationships among them. We show that the new condition strictly increases the computational power of accepting splicing systems. Although there are regular languages that cannot be accepted by any of the splicing systems considered here  the new variants can accept non-regular and even non-context-free languages  a situation that is not very common in the case of (extended) finite splicing systems without additional restrictions. We also show that the smallest class of languages out of the four classes defined by accepting splicing systems is strictly included in the class of context-free languages. Solutions to a few decidability problems are immediately derived from the proof of this result.,2019-03-20
10.1007/BF01178730,Comparing locality and causality based equivalences,For CCS [15] several noninterleaving semantics have been proposed among which causal bisimulation [9] and location equivalence [6] play a central role. To unify these two approaches this paper introduces a new transition system based onlocal andglobal causes. Bisimulation equivalence is parameterized by a functionf which evaluates the information on causes provided by the transitions. Appropriate instantiations off yield characterizations of causal bisimulations and location equivalence.,2014-03-20
10.1007/s00236-013-0176-4,Avoiding cross-bifix-free binary words,In this paper we study the construction and the enumeration of binary words in $$\{0 1\}^*$$ having more 1’s than 0’s and avoiding a set of cross-bifix-free patterns. We give a particular succession rule  called jumping and marked succession rule  which describes the growth of such words according to their number of ones. Moreover  the problem of associating a word to a path in the generating tree obtained by the succession rule is solved by introducing an algorithm which constructs all binary words having more 1’s than 0’s and then kills those containing the forbidden patterns. Finally  we give the generating function of such words according to the number of ones.,2015-03-20
10.1007/s002360050154,Transformational design of real-time systems. Part II: From program specifications to programs,Abstract. In the two parts of this article we present a transformational approach to the design of real-time systems. The overall starting point are requirements formulated in a subset of Duration Calculus called implementables and the target are programs in an OCCAM dialect PL. In the first part we have shown how the level of program specifications represented by a language SL can be reached. SL combines regular expressions with action systems and time conditions. In this part we show the transformation from SL to PL. It relies on the ‘Expansion strategy’ by which certain transformations can be applied in an almost automatic fashion. In many places transformations consist of algebraic reasoning by laws for operations on programs. Both parts of our transformational calculus rely on the mixed term techniques in which syntax pieces of two languages are mixed in a semantically coherent manner. In the first part of the article mixed terms between implementables and SL have been used  in the present part mixed terms between SL and PL are used. The approach is illustrated by the example of a computer controlled gas burner from part I again.,2015-03-20
10.1007/BF01178680,The expressive power of the bounded-iteration construct,The bounded-iteration constructforeachxinR/pdotod is very commonly used in database programming  due to the fact that database programs are dominated by data retrieval and manipulation tasks rather than by complex computations. Hence in database programming language design  it is important to understand the expressive power of the bounded-iteration construct and its relationship with other language constructs. We study the bounded-iteration construct within the context of a simple database programming language called theiterative transaction language. The language is shown to have NPTIME expressive power  and the deterministic subclass of it has PTIME expressive power  without any extra machineries or restrictions. We show that the bounded-iteration construct is essential for achieving this expressiveness  by characterizing its relationship with other constructs in the language. We also identify another natural subclass of iterative transactions calledfirst-order transactions with exactly first-order expressive power. The complexity of first-order transactions in terms of nested iterations and intermediate states is connected further to the complexity of first-order updates in terms of quantification depth.,2011-03-20
10.1007/BF00288770,Rational bijection of rational sets,SummaryIn this paper we initiate the study of rational bijections  that is of rational transductions which are bijections of a rational (=regular) set R onto a rational set S. We present a complete and easily decidable characterization of the existence of a rational bijection between two given rational sets.,2019-03-20
10.1007/BF00289142,Maintaining order in a generalized linked list,SummaryWe give a representation for linked lists which allows to efficiently insert and delete objects in the list and to quickly determine the order of two list elements. The basic data structure  called an indexed BB [α]-tree  allows to do n insertions and deletions in O(n log n) steps and determine the order in constant time  assuming that the locations of the elements worked at are given. The improved algorithm does n insertions and deletions in O(n) steps and determines the order in constant time. An application of this provides an algorithm which determines the ancestor relationship of two given nodes in a dynamic tree structure of bounded degree in time O(1) and performs n arbitrary insertions and deletions at given positions in time O(n) using linear space.,2020-03-20
10.1007/s00236-002-0084-5,Automatic verification of concurrent systems using a formula-based compositional approach,Abstract. When verifying concurrent systems  described by transition systems  state explosion is one of the most serious problems: systems are often described by transition systems with a prohibitive number of states. The primary cause of this problem is the parallel composition of interacting processes. In the recent years  compositional techniques have been developed to attack the state explosion problem. These techniques are based on dividing the verification task into simpler tasks  exploiting the natural decomposition of complex systems into processes. In this paper we present a formula-based compositional approach that allows us to deduce a property of a parallel composition of processes by checking it only on a component process. The approach can be automated and it is completely transparent to the user.,2014-03-20
10.1007/BF00288644,Ordered attributed grammars,SummaryOrdered attributed grammars are defined as a large subclass of semantically well-defined attributed grammars proposed by Knuth. An attributed grammar is ordered if for each symbol a partial order over the associated attributes can be given  such that in any context of the symbol the attributes are evaluable in an order which includes that partial order. The definition does not refer to a predefined strategy for attribute evaluation  e.g. several passes from left to right. For each attributed grammar evaluable by any predefined evaluation strategy such an order exists. The ordering property can be checked by an algorithm  which depends polynomially in time on the size of the input grammar. “Visit-sequences” are computed from the attribute dependencies given by an ordered attributed grammar. They describe the control flow of an algorithm for attribute evaluation which can be part of an automatically generated compiler.,2018-03-20
10.1007/BF00263989,Methods for the automatic construction of error correcting parsers,SummaryMethods for the automatic construction of error handling parsers are presented. The resulting parsers are capable of correcting all syntax errors by insertion and/or deletion of terminal symbols to the right of the error location. Thus  the output of the parser always corresponds to a syntactically valid program. This contributes significantly to the reliability and robustness of a compiler. The speed of parsing correct parts of a program is not affected by the presence of the error handling capability. The correction algorithm is easy to implement. Apart from the parsing tables only one character per parser state is required to control the correction process. The method is applicable to a wide class of stack automata including LL(k)  LR(k)  SLR(k)  and LALR(k) parsers. It is shown that for LL(k) grammars error correction can be obtained as a byproduct of the canonical LL(k) parser generation. A similar result can be obtained for LR(k) grammars if the parser generator is slightly modified. The method has been successfully added to an LALR(1) parser generator.,2014-03-20
10.1007/BF00264598,Proving and applying program transformations expressed with second-order patterns,SummaryWe propose a program transformation method based on rewriting-rules composed of second-order schemas. A complete second-order matching algorithm is presented that allows effective use of these rules. We show how to formally prove the correctness of the rules using a denotational semantics for the programming language. We establish the correctness of the transformation method itself  and give techniques pertaining to its actual implementation. The paper is illustrated with recursion removal examples.,2020-03-20
10.1007/s00236-016-0272-3,Verification of population protocols,Population protocols (Angluin et al. in PODC  2004) are a formal model of sensor networks consisting of identical mobile devices. Two devices can interact and thereby change their states. Computations are infinite sequences of interactions satisfying a strong fairness constraint. A population protocol is well specified if for every initial configuration C of devices  and every computation starting at C  all devices eventually agree on a consensus value depending only on C. If a protocol is well specified  then it is said to compute the predicate that assigns to each initial configuration its consensus value. While the computational power of well-specified protocols has been extensively studied  the two basic verification problems remain open: Is a given protocol well specified? Does a given protocol compute a given predicate? We prove that both problems are decidable by reduction to the reachability problem of Petri nets. We also give a new proof of the fact that the predicates computed by well-defined protocols are those definable in Presburger arithmetic (Angluin et al. in PODC  2006).,2018-03-20
10.1007/BF00288730,Automatic correction of syntax-errors in programming languages,SummaryA formal model for automatic error-correction is presented. It considers clusters of errors  using a local context to determine the corrections. The process can be embedded in left-to-right recognizers. The recognizer is used for standard syntax checking. When an error is detected  an error correction mechanism is activated which  by a limited backward then forward move  determines the possible corrections. An important aspect of this process is that it does not slow down the parsing of correct programs.,2013-03-20
10.1007/BF01209623,Program refinement in fair transition systems,Refinement of programs is investigated in the context of fair transition systems. Two kinds of refinements  property preserving and fixed-point preserving  are defined. Conditions are developed under which common program transformations such as data refinement are property preserving and fixed-point preserving. These conditions and relevant program refinements are illustrated through a number of examples.,2016-03-20
10.1007/BF00264290,A model for data structures and its applications. I,SummaryThis paper presents a constructive model for data structures description based on the concept of data space defined as the Cartesian product of a name space and a value space. The subsets of name space are ordered by an a priori given selector function. The model is used for classification of data structures into regular (array-like)  semiregular (key-ordered list-like) and irregular (threaded list-like) data structures. The notion of data storage structures induced by addressing mechanism is introduced and storage mapping functions are described using this concept together with the data structure model. The first part of the paper contains also some of the model applications to regular and semiregular data structure problems and a brief comparison withAlgol 68 treatment of regular data structures.,2019-03-20
10.1007/BF00276019,Laws of data refinement,SummaryA specification language typically contains sophisticated data types that are expensive or even impossible to implement. Their replacement with simpler or more efficiently implementable types during the programming process is called data refinement. We give a new formal definiton of data refinement and use it to derive some basic laws. The derived laws are constructive in that used in conjunction with the known laws of procedural refinement they allow us to calculate a new specification from a given one in which variables are to be replaced by other variables of a different type.,2018-03-20
10.1007/BF00263926,Transposition of large tabular data structures with applications to physical database organization,SummaryTabular data structures of a relational database  placed in a paged virtual space or in some two-level storage  are discussed. To rearrange  or transpose  those data stored attributewise to those stored tuplewise  and vice versa  an algorithm is devised that causes a minimal amount of page fetches. The algorithm is near best possible  since it is a generalization of Floyd's algorithm on matrix transposition  shown as the best possible for the case of idealized two-level storage. With a view to practical applications in relational databases  a class of algorithms are specified in detail  so that the exact evaluations of the number of required page fetches can be done. Partial transposition that is important in actual database manipulations is also discussed. Finally the transposition algorithm is extended to cover the case that data lengths may differ between distinct attributes.,2017-03-20
10.1007/s002360050102,Using the causal domain to specify and verify distributed programs,Abstract. A system for specification and proof of distributed programs is presented. The method is based directly on the partial order of local states (poset) and avoids the notions of time and simultaneity. Programs are specified by documenting the relationship between local states which are adjacent to each other in the poset. Program properties are defined by stating properties of the poset. Many program properties can be expressed succinctly and elegantly using this method because poset properties inherently account for varying processor execution speeds. The system utilizes a proof technique which uses induction on the complement of the causally precedes relation and is shown to be useful in proving poset properties. We demonstrate the system on three example algorithms: vector clocks  mutual exclusion  and direct dependency clocks.,2019-03-20
10.1007/BF00288637,Axiomatic approach to total correctness of programs,SummaryWe present here an axiomatic approach which enables one to prove by formal methods that his program is “totally correct” (i.e.  it terminates and is logically correct—does what it is supposed to do). The approach is similar to Hoare's approach [3] for proving that a program is “partially correct” (i.e.  that whenever it terminates it produces correct results). Our extension to Hoare's method lies in the possibility of proving both correctness and termination by one unified formalism. One can choose to prove total correctness by a single step  or by incremental proof steps  each step establishing more properties of the program.,2020-03-20
10.1007/BF00289517,Top-down syntax analysis,SummaryThe theory and practice of classical “top-down” parsing methods is presented in a tutorial manner.,2016-03-20
10.1007/BF00289710,Some average performance measures for the B-tree,SummarySeveral average performance measures are presented for large B-trees formed from insertions  where large refers to the number of keys. Formulas are first derived for the expected number of nodes of each size on the bottom level of the tree  where the size of a node is the number of keys currently contained in the node. This is followed by formulas for the probability of making an insertion into a node of a given size  the probability of a split during an insertion into a node  and the expected number of splits during an insertion into the tree. It is shown that for large trees of high order m  the expected number of splits per insertion is approximately 1/((ln 2) m). A formula is presented for the average storage utilization  and it is shown that this average approaches ln 2 as m approaches infinity. A simpler formula is derived for the average storage utilization at the bottom level of the tree  and it is shown that this formula is an increasing function of m ranging from 2/3 to ln 2. It is shown that the expected tree height and the expected search path length are approximately logarithmic to the base (ln 2) m. Simulation results are presented to corroborate the theoretical analysis.,2014-03-20
10.1007/BF00266046,Generalized recursive data structures,SummaryRecursive data types are data types which are defined in terms of themselves  such as lists and trees. There is a single access path to each component in a recursive data structure.Generalized recursive data structures may include multiple access paths to some parts of the data structure. Two way lists  threaded trees and circular lists are generalized recursive data types. The extra access paths in a generalized recursive data structure are uniquely determined by the type of the structure and the main paths through the structure.An extension to Pascal in which generalized recursive data structures may be defined is described.,2011-03-20
10.1007/s002360050106,Context-free graph grammars and concatenation of graphs,"Abstract. An operation of concatenation is defined for graphs. This allows strings to be viewed as expressions denoting graphs  and string languages to be interpreted as graph languages. For a class 
$K$ of string languages  
${\rm Int}(K)$ is the class of all graph languages that are interpretations of languages from 
$K$. For the classes REG and LIN of regular and linear context-free languages  respectively  
${\rm Int}({\rm REG}) = {\rm Int}({\rm LIN})$. 
${\rm Int}({\rm REG})$ is the smallest class of graph languages containing all singletons and closed under union  concatenation and star (of graph languages). 
${\rm Int}({\rm REG})$ equals the class of graph languages generated by linear HR (= Hyperedge Replacement) grammars  and 
${\rm Int}(K)$ is generated by the corresponding 
$K$-controlled grammars. Two characterizations are given of the largest class 
$K'$ such that 
${\rm Int}(K') = {\rm Int}(K)$. For the class CF of context-free languages  
${\rm Int}({\rm CF})$ lies properly inbetween 
${\rm Int}({\rm REG})$ and the class of graph languages generated by HR grammars. The concatenation operation on graphs combines nicely with the sum operation on graphs. The class of context-free (or equational) graph languages  with respect to these two operations  is the class of graph languages generated by HR grammars.
",2015-03-20
10.1007/s00236-007-0038-z,Fair ambients,Based on an analysis of the capability operators of the Calculus of Mobile Ambients  three fairness principles are proposed to safeguard the interactions of the ambients. The Calculus of Fair Ambient is designed to meet these fairness principles. A labeled transition semantics for the calculus is defined to support structural investigation. The bisimulation theory of the fair ambients is studied and two coincidence results are established. An expressiveness result of the calculus is formally established by proving that it contains the pi calculus as a sub-calculus.,2018-03-20
10.1007/BF01213080,Detecting morphic images of a word on the rank of a pattern,We study the general problem which consists in detecting the morphic images of a given word in an arbitrary text. We introduce the concept ofrank of a pattern  which measures the complexity of its recognition in terms of periodicity.This notion leads to improve the general “naive” algorithm. A special class of equations in words is also concerned.,2013-03-20
10.1007/BF00264016,Lower bounds on space complexity for contextfree recognition,SummaryUsing methods from linear algebra and crossing-sequence arguments it is shown that logarithmic space is necessary for the recognition of all context-free nonregular subsets of {a1}* ... {an}*  where {a1 ... an} is some alphabet. It then follows that log n is a lower bound on the space complexity for the recognition of any bounded or deterministic non-regular context-free language.,2011-03-20
10.1007/BF00267045,The family of one-counter languages is closed under quotient,SummaryWe study  first  the operation of quotient in connection with rational transductions. We show  afterwards  that Rocl  the family of one counter languages is closed under quotient by a context-free language. On the contrary  every recursively enumerable language is the quotient of two linear languages.,2013-03-20
10.1007/BF01191895,Languages accepted by systolic Y-tree automata: structural characterizations,In this paper closure properties and decision problems for families of languages accepted by deterministic and nondeterministic systolic binary Y-tree automata are studied. Non closure results under basic language operations are stated by means of new nonacceptability criteria for these classes of automata. Necessary and sufficient conditions are given in terms of the shape of the underlying Y-tree  for the closure under λ-free regular substitution  concatenation  inverse homomorfism and for the closure under right concatenation with and quotient by finite sets. Moreover in the nondeterministic case necessary and sufficient conditions are given again in terms of the shape of the underlying Y-tree for the closure under right concatenation with regular sets and for the decidability of the problems of emptiness  finiteness  equivalence and co-emptiness. A sufficient condition is given for the decidability of the stability problem  in the deterministic case  while some undecidability results are proved in the nondeterministic case.,2011-03-20
10.1007/BF00286493,Infinite proof rules for loops,SummaryClassical proof rules for loop constructions  formalizing the method of inductive assertions are based on the fundamental concept of loop invariants. A certain incompleteness of such rules indicates some inherent gap between partial correctness of loop programs and its provability by strongly formal proof rules. Introducing the concept of infinite proof rules (i.e. rules with infinitely many premises) for loops  this paper is devoted to get some insight into this gap. Such rules provide proof-theoretical completeness and — relevant for practice — a general framework in which the invariant method is contained as a special case essentially corresponding to some “direct” mathematical induction over the infinitely many premises  but which opens also the view for other proof methods. As an example  a method of generalized invariants is described within this formal setting. As illustrated by examples  for certain programs generalized invariants may be “simpler” than classical invariants.,2014-03-20
10.1007/BF00263587,Analyse d'un algorithme de gestion simultanée mémoire centrale — disque de pagination,SummaryCommonly used memory management strategies in a paged environment optimize separately the page-fault rate (by proper choice of a replacement algorithm) and the response time of the paging drum (by a shortest-access-time-first discipline with multiple sectors). In this paper we consider replacement strategies which attempt to maximize useful CPU utilisation and hence throughput by choosing the page to be replaced on the basis of its probability of reference as well as on the rapidity with which the page can be removed from main memory  assuming that a fixed-head disk or drum is used as a secondary memory. An analysis of the approach is given using a mathematical model. Analytical results for the gain in CPU utilisation are obtained under mono-programming and numerical examples are presented illustrating the effects of variation of program behaviour and of variants of the replacement strategy.,2018-03-20
10.1007/s00236-007-0066-8,Deciding probabilistic bisimilarity over infinite-state probabilistic systems,We prove that probabilistic bisimilarity is decidable over probabilistic extensions of BPA and BPP processes. For normed subclasses of probabilistic BPA and BPP processes we obtain polynomial-time algorithms. Further  we show that probabilistic bisimilarity between probabilistic pushdown automata and finite-state systems is decidable in exponential time. If the number of control states in PDA is bounded by a fixed constant  then the algorithm needs only polynomial time.,2011-03-20
10.1007/BF00265150,An incremental mechanical development of systolic solutions to the Algebraic Path Problem,SummaryThe Algebraic Path Problem  whose solution is Gauss-Jordan elimination  is one of the most complex problems for which systolic implementations have been proposed. We apply a development method which derives these systolic implementations from a traditional (i.e.  Pascal-like) program by formal computational steps. The structure which our method imposes on the derivation process exposes clearly the relationship between the different implementations.,2014-03-20
10.1007/s00236-005-0168-0,π-calculus with noisy channels,It is assumed in the π-calculus that communication channels are always noiseless. But it is usually not the case in the mobile systems that developers are faced with in the real life. In this paper  we introduce an extension of π  called πN  in which noisy channels may be present. A probabilistic transitional semantics of πN is given. The notions of approximate (strong) bisimilarity and equivalence between agents in πN are proposed  and various algebraic laws for them are established. In particular  we introduce the notion of stratified bisimulation which is suited to describe behavior equivalence between infinite probabilistic processes. Some useful techniques for reasoning about approximate bisimilarity and equivalence are developed. We also introduce a notion of reliability in order to compare different behaviors of an agent in π and πN. It is shown that reliability is preserved by the basic combinators in π. A link between reliability and bisimulation is given. This provides us with a uniform framework in which we can reason about both correctness properties and reliability of mobile systems. Also  a potential way of combing value-passing process algebras and Shannon’s information theory is pointed out.,2017-03-20
10.1007/BF00288541,Hierarchical program specification and verification — a many-sorted logical approach,SummaryThe notion of abstractions in programming is characterized by the distinction between specification and implementation. As far as the specification structures are concerned  hierarchical program development with abstraction mechanisms is naturally regarded as a process of theory extensions in a many-sorted logic. To support such program development  a language called t is proposed with which one can structuredly build up theories and write their program implementation. There  the implementation is regarded as another level of theory extension  and the relation between the specification and the implementation of an abstraction is characterized in terms of a homomorphism between the two theories. On this formalism  a mechanizable proof method is introduced for validation of implementations of both data and procedural abstraction. Finally  a new data type concept is introduced to generalize the so-called type-parametrization mechanism. A justification of this concept within the first order logic is provided as well as its applications to program structuring and verification.,2016-03-20
10.1007/BF00289063,Evaluation des performances d'un algorithme de contrôle de la cohérence d'une base de données répartie,SummaryThis article presents a performance evaluation of an algorithm preserving consistency in a duplicated data base. This algorithm was proposed by C.A. Ellis  and is representative of a class of solutions: Ring structured  priority use  fully duplicated copies ... Throughput  communication delay  number of messages are the performance criteria used.RésuméCet article présente l'évaluation des performances d'un algorithme préservant la cohérence d'une base de données répartie. Cet algorithme a été proposé par C.A. Ellis et est représentatif d'une classe de solutions: utilisation d'un anneau virtuel  utilisation de priorité  copies totalement dupliquées... Débit  temps de communication  nombre de messages ont été les critères de performances retenus.,2014-03-20
10.1007/s00236-006-0019-7,Distances in random digital search trees,Distances between nodes in random trees is a popular topic  and several classes of trees have recently been investigated. We look into this matter in digital search trees. By analytic techniques  such as the Mellin Transform and poissonization  we describe a program to determine the moments of these distances. The program is illustrated on the mean and variance. One encounters delayed Mellin transform equations  which we solve by inspection. In addition to various asymptotics  we give an exact expression for the mean and for the variance in the unbiased case. Interestingly  the unbiased case gives a bounded variance  whereas the biased case gives a variance growing with the number of keys. It is therefore possible in the biased case to show that an appropriately normalized version of the distance converges to a limit. The complexity of moment calculation increases substantially with each higher moment; it is prudent to seek a shortcut to the limit via a method that avoids the computation of all moments. Toward this end  we utilize the contraction method to show that in biased digital search trees the distribution of a suitably normalized version of the distances approaches a limit that is the fixed-point solution of a distributional equation (distances being measured in the Wasserstein metric space). An explicit solution to the fixed-point equation is readily demonstrated to be Gaussian.,2012-03-20
10.1007/BF00289614,A branch-and-bound algorithm to obtain an optimal evaluation tree for monotonic Boolean functions,SummaryFor monotonic Boolean functions  a branch-and-bound algorithm is given for constructing an optimal decision tree (sequential evaluation procedure). The tree is optimal in minimizing the average number of variables which need to be examined.,2013-03-20
10.1007/BF00264232,A 2.5n lower bound on the monotone network complexity of T3n,"SummaryThe k-th threshold function  Tkn  is defined as: 
$$T_k^n \left( {x_1  ... x_n } \right) = \left\{ \begin{gathered} 1 if \sum\limits_{i = 1}^n {x_i \geqq k} \hfill \\ 0 otherwise \hfill \\ \end{gathered} \right.$$
 where xiε{0 1} and the summation is arithmetic. We prove that any monotone network computing T3/n(x1 ... xn) contains at least 2.5n-5.5 gates.",2014-03-20
10.1007/BF00288884,Orthogonality of information structures,SummaryIn the mathematical framework of data spaces the paper develops some important general principles of information structuring. These principles are related to the notions of redundancy of information  completeness of a set of access paths  information sharing and compounding  and virtual access to information. The results are relevant to both sequential and concurrent processing.,2019-03-20
10.1007/BF01178511,Context-free graph languages of bounded degree are generated by apex graph grammars,The apex graph grammars generate precisely the context-free graph languages of bounded degree  independently of whether one considers hyperedge replacement systems or (boundary or confluent) NLC or edNCE graph grammars. The main feature of apex graph grammars is that nodes cannot be “passed” from nonterminal to nonterminal. The proof is based on a normal form result for arbitrary hyperedge replacement systems that forbids “passing chains”. This generalizes Greibach Normal Form.,2019-03-20
10.1007/BF00288469,Maximum entropy and the G/G/1/N queue,SummaryA new “hybrid” analytic framework  based on the principle of maximum entropy  is used to derive a closed form expression for the queue length distribution of a G/G/1 finite capacity queue. It is shown that “Birth-Death” homogeneous recursions for a single resource queue are special cases of maximum entropy “one-step” transitions which can be applied either in an operational or stochastic context. Furthermore  an “equivalence” relationship is used to analyse two-stage cyclic queueing networks with general service times  and favourable comparisons are made with global balance and approximate results. Numerical examples provide useful information on how critically system behaviour is affected by the distributional form of interarrival and service patterns. Comments on the implication of the work to the performance analysis and aggregation of computer systems are included.,2015-03-20
10.1007/s00236-002-0104-5,Stochastic cooperative distributed grammar systems and random graphs,Abstract. We introduce an alternative definition of random graphs as a language generated by a stochastic cooperating distributed grammar system. We show a relationship between our definition and four known definitions of random graphs  an example of using our model to prove graph-theoretic properties  and we define k-probabilistic model of random graphs as an extension. The first important acquisition of our definition is that only a small modification of a stochastic cooperating distributed grammar system may effect the substantial change of the generated random graph model. Other important result resides in the fact that our approach enables the use of a new proving technique in the random graph theory which is based on the generative paradigm inherent in the formal languages theory.,2013-03-20
10.1007/s00236-007-0047-y,Improved matrix pair undecidability results,We improve the undecidability bounds for problems involving two integer matrices by showing that Scalar Reachability  Zero in the Right Upper Corner  Vector Reachability  and Zero in the Left Upper Corner are undecidable for dimensions of 9  10  11  and 13  respectively. Problems Scalar Reachability  Zero in the Right Upper Corner  and Vector Reachability were previously known undecidable for dimensions 18  18  and 16  respectively.,2017-03-20
10.1007/BF00290149,Ramsey numbers and an approximation algorithm for the vertex cover problem,"SummaryWe show two results. First we derive an upper bound for the special Ramsey numbers rk(q) where rk(q) is the largest number of nodes a graph without odd cycles of length bounded by 2k+1 and without an independent set of size q+1 can have. We prove 
$$r_k (q) \leqq \frac{k}{{k + {\text{1}}}}q^{\frac{{k + {\text{1}}}}{k}} + \frac{{k + {\text{2}}}}{{k + {\text{1}}}}q$$
 The proof is constructive and yields an algorithm for computing an independent set of that size. Using this algorithm we secondly describe an O(¦V¦·¦E¦) time bounded approximation algorithm for the vertex cover problem  whose worst case ratio is 
$$\Delta \leqq {\text{2 - }}\frac{{\text{1}}}{{k + {\text{1}}}}$$
  for all graphs with at most (2k+3)k(2k+2) nodes (e.g. Δ≦1.8  if ¦V¦≦146000).",2016-03-20
10.1007/BF00289590,On the response time distribution in a discrete round-robin queue,SummaryA closed rational expression is derived for the generating function of the response time distribution in a certain discrete-time queuing model with Bernoulli input  general arithmetic service time distribution  and round-robin scheduling.,2015-03-20
10.1007/BF00289143,Generalized binary split trees,SummaryThe definition of binary split trees is generalized by removing the condition of decreasing frequency. It is shown that the access time of generalized split trees is less than that of split trees in general. The optimal representation of generalized split trees is studied. A polynomial time algorithm to construct such optimal tree structures is given. The relationship among several classes of binary trees are also discussed.,2011-03-20
10.1007/s00236-016-0282-1,Conjunctive query containment over trees using schema information,We study the containment  satisfiability  and validity problems for conjunctive queries over trees with respect to a schema. We show that conjunctive query containment and validity are 2EXPTIME -complete with respect to a schema  in both cases where the schema is given as a DTD or as a tree automaton. Furthermore  we show that satisfiability for conjunctive queries with respect to a schema can be decided in NP . The problem is NP -hard already for queries using only one kind of axis. Finally  we consider conjunctive queries that can test for equalities and inequalities of data values. Here  satisfiability and validity are decidable  but containment is undecidable  even without schema information. On the other hand  containment with respect to a schema becomes decidable again if the “larger” query is not allowed to use both equalities and inequalities.,2016-03-20
10.1007/BF00262972,A theory of interactive programming,SummaryThe center of study is programming that allows communication between program and its environment. A modified version of Hoare's CSP is applied as programming language and its main features in connection with semantics and completeness are investigated. Semantics is based on an appropriate type of games by using its tree representation. These entities are shown to be definable in first order logic. Hence the descriptive language is complete in the classical sense and a complete calculus is developed in the spirit of Floyd and Hoare.To illustrate the usage of the descriptive language and its calculus a program simulating a simple calculator is considered.,2017-03-20
10.1007/PL00006050,Fair sticker languages,Abstract. Codings of fair sticker languages are characterized as languages accepted by blind one-counter automata.,2011-03-20
10.1007/BF00288728,More comments on the programming language Pascal,SummaryA. N. Habermann recently published some “Critical comments on the programming language Pascal”. His reproaches are principally that numerous constructs are ill-defined  that there is “confusion” amongst ranges  types and structures  and that the goto statement should have been abolished. The present reply successively deals with points that are clearly refutable  those which are debatable and those which constitute valid criticism. Its principal aim is to encourage the reader to form his own opinion.,2012-03-20
10.1007/BF00264470,General properties of derivational complexity,SummaryThe purpose of this paper is to establish a certain correspondence between shortest derivations of phrase structure grammars and Turing machine computations  and to show how to connect the derivational complexity introduced by Gladkij to Blum's axioms for partial recursive functions and their step-counting functions. It is shown that main theorems on Blum's axiomatic theory of computational complexity can be transfered to the case of derivational complexity.,2011-03-20
10.1007/BF00288634,Bounds on the parallel evaluation of arithmetic expressions using associativity and commutativity,SummaryWe show that any arithmetic expression with n operands and parentheses nested to depth d can be evaluated in at most 1+2d+ [log2n] steps  assuming that only associativity and commutativity are used to transform the expression. We also show that at most [n−2d/2] processors are needed to achieve this bound.,2013-03-20
10.1007/s00236-012-0170-2,Step semantics of boolean nets,Boolean nets are a family of Petri net models with very simple markings which are sets of places. We investigate several classes of boolean nets distinguished by different kinds of individual connections between places and transitions  as well as different ways in which these connections are combined in order to specify the effect of executing steps of transitions. The latter aspect can be captured by connection monoids. A key advantage of using connection monoids is that by describing the step semantics of a class of Petri nets in terms of a connection monoid  one can apply results developed within a general theory of Petri net synthesis. In this paper  we provide an extensive classification of boolean nets which can be described by connection monoids. This classification is based on the realisation that the different ways of interpreting combinations of connections can be made explicit using a higher level monoid. Moreover  we demonstrate that connection monoids can capture other behavioural properties of boolean nets  such as structural conflicts between transitions.,2012-03-20
10.1007/BF00289016,Hiding in stream semantics of uniform concurrency,SummaryThis paper shows how to treat the hiding operator originally defined by Hoare et al. for finite observations of processes  in an order theoretic setting based on finite and infinite streams. The main technical contribution is the continuity proof of the hiding operator based on a mixture of topological and order-theoretic arguments. As an application of the continuity of hiding  syntactic transformation rules for its calculation are derived. This calculus utilizes a general fixed point transformation technique.,2014-03-20
10.1007/BF00290147,Purely top-down updating algorithms for stratified search trees,SummaryThe existence of purely top-down updating algorithms for balanced search trees is of importance when maintaining such trees in a concurrent environment  where purely top-down means a single sweep from the root to frontier along a search path. We present algorithms for internal- and external-search trees in the general framework of stratified trees. This enables us to demonstrate that many classes of balanced search trees have such updating schemes  although  for example  weight-balanced trees do not fit into this framework.,2015-03-20
10.1007/BF00299636,The method of forced enumeration for nondeterministic automata,SummaryEvery family of languages  recognized by nondeterministic L(n) tape-bounded Turing machines  where L(n)≥logn  is closed under complement. As a special case  the family of context-sensitive languages is closed under complement. This solves the open problem from [4].,2014-03-20
10.1007/BF00265773,On the self contained modelling of DB/DC systems,SummaryThis paper discusses the modelling of DB/DC systems operating in a demand paging environment. As an extension of an earlier definition of Denning a class of systems is defined  those operating with “working set integrity”  for which one can obtain system response parameters solely from the resource requirements of the input processes when running in isolation. No external information such as a miss ratio curve from another systems environment is required. The interdependence between the resource requirements of processes when running in a systems environment and the system performance parameters is faced directly and expressed as a set of simultaneous equations. The emphasis is on the effect of the sharing of a common set of pages among the active set of processes. Both unrestricted shared usage and usage with locking are treated.,2013-03-20
10.1007/BF00288743,Algorithms for fast evaluation of Boolean expressions,SummaryFor Boolean functions whose variables appear in secondary storage  algorithms which minimize the expected cost of evaluation are considered. An easyto-implement algorithm which gives nearly optimal results is proposed for the case of monotonic functions without a priori probabilities. Optimality proofs are given for a simple special cases.,2013-03-20
10.1007/s002360050069,RETRPROV A system that looks for axioms,Abstract. In this paper we shall describe a formal system which enables us to prove theorems within propositional calculus  logic of quantifiers and first order theories  including theorems containing programs. Its main feature relies on generating an additional set of assumptions needed to prove a considered formula. Thus we are able to consider expressions which can become theorems by looking for a special set of assumptions (axioms) and then adding it to the standard set of axioms. Using this system the correctness and equivalence of programs can be determined. In the end we present some experimental results.,2019-03-20
10.1007/BF00264468,Locations considered unnecessary,SummaryRecent papers have attacked the use of locations  or pointers  as data objects in programs. This paper considers a generalization of this attack — attempting to remove locations from the underlying semantic model. Using the “mathematical semantics” of Scott and Strachey  we show that reference parameters and Algol scope rules for procedures  two constructs requiring the notion of reference  can be replaced with alternative constructs not requiring locations in the definition. Some conclusions are also drawn about the use of mathematical semantics as a language design tool.,2018-03-20
10.1007/BF00571460,Job scheduling guaranteing reasonable turn-around times,SummaryThis report describes the algorithm for job scheduling and resource allocation used in the operating system Boss 2 for RC 4000. Most resources in the system are nonpreemptible  which causes the usual deadlock problems. The algorithm gives modest jobs a short turn-around time and more greedy jobs a correspondingly larger turn-around time. All jobs are guaranteed a finite turn-around time even if an infinite stream of other jobs is fed to the system (i.e. Holt's permanent blocking [7] is prevented). An estimate of the expected finishing time is computed when the job is enrolled. The estimate is updated continuously and is available from all terminals. The algorithm is a modification of the Banker's Algorithm described by Habermann [5]. It pays high attention to turnaround time and less attention to resource utilization.,2017-03-20
10.1007/BF01178582,The expressive power of delay operators in SCCS,SummaryWe investigate the relative expressive power of finite delay operators in SCCS. These were introduced by Milner and by Hennessy to study fairness properties of processes in the context of SCCS. We show that the context sensitive delay operator introduced by Hennessy is more expressive than the finite delay operator introduced by Milner. This result is closely related to recent results by Pananagden and Stark on the expressive power of fair merge in asynchronous dataflow (Kahn) networks. It indicates that the expressiveness results obtained there are not sensitive to the precise computational model since SCCS  unlike Kahn networks  is synchronous and permits expansion of recursively defined processes.,2013-03-20
10.1007/BF00289162,Erratum: Maximum Entropy Two-Station Cyclic Queues with Multiple General Servers,,2016-03-20
10.1007/BF00289248,EBE: a language for specifying the expected behavior of programs during debugging,A generalized iterative array model in which the next state of each finite-state computing element may depend on the signs of its location's coordinates and the current state of the computing element at the array origin (“direct central control”) is shown to be no more powerful for on-line time-bounded operation than the standard model of Cole. Applications include a simple iterative array simulation of multihead Turing machines of the same dimension  a simulation without time loss of a further generalized iterative array model with multiple “array heads” which may be shifted locally in the array or reset instantaneously to each other's locations  and simplified versions of several published iterative array algorithms.,2014-03-20
10.1007/BF00263197,On an exponential server with general cyclic arrivals,SummaryA En¦ M ¦ 1 queue is defined as a single server queue with exponential service time and general cyclic arrival distributions of cycle length n. The waiting time distribution for such a queue is proved to be a sum of n exponential terms; this is a generalization of G ¦ M ¦ 1 queue results. Based on this a method for obtaining the steady-state waiting time distributions for En¦ M ¦ 1 queues is introduced. An example is presented to show an application of En¦ M ¦ 1 queues in deterministic routing.,2015-03-20
10.1007/s002360050172,Minimal Huffman trees,Abstract. For a given set of real weights  Huffman trees minimize the weighted external path length. Over the years  several algorithms have been proposed for constructing Huffman trees that minimize additional natural cost functions such as the external path length  the variance and  more generally  the central moments. We show that all these cost functions are minimized on exactly the same class of Huffman trees  and we characterize the class: it consists of all Huffman trees of minimal level set. It follows that a Huffman tree minimizing one of the cost functions in fact minimizes all of them  and has the minimal level set; in particular  it has minimum height. We show that the unique Huffman tree produced by the simplest construction method  the bottom-merge algorithm of Schwartz  belongs to the class. Finally  we prove that several natural variants of Huffman's algorithm  that appear to be nondeterministic  in fact all lead to the single Huffman tree obtained by Schwartz's algorithm.,2016-03-20
10.1007/BF00288962,An improved complexity hierarchy on the depth of Boolean functions,SummaryCircuit depth is an important complexity measure for a Boolean function. Let some Boolean function of n variables have depth k according to an arbitrary binary basis Ω. For each j where [log n]≦j≦k we prove the existence of a Boolean function f with the following properties. f depends essentially on n variables and the depth of f according to Ω is exactly j Thus we state the best possible hierarchy result on the depth of all nondegenerate Boolean functions.,2017-03-20
10.1007/BF00265222,Grammarforms and grammarhomomorphisms,SummaryWe show that grammar forms  introduced by S. Ginsburg  can be treated with the help of grammar homomorphisms  introduced by G. Hotz. This gives us the possibility to generalize the notion of grammar forms in such a way that we can prove closure properties of the associated language family using some simple axioms by diagram chasing. Moreover we demonstrate a principle of duality in dealing with this theory.,2015-03-20
10.1007/s00236-016-0280-3,Safraless LTL synthesis considering maximal realizability,Linear temporal logic (LTL) synthesis is a formal method for automatically composing a reactive system that realizes a given behavioral specification described in LTL if the specification is realizable. Even if the whole specification is unrealizable  it is preferable to synthesize a best-effort reactive system. That is  a system that maximally realizes its partial specifications. Therefore  we categorized specifications into must specifications (which should never be violated) and desirable specifications (the violation of which may be unavoidable). In this paper  we propose a method for synthesizing a reactive system that realizes all must specifications and strongly endeavors to satisfy each desirable specification. The general form of the desirable specifications without assumptions is $$\mathbf{G }\varphi $$Gφ  which means “$$\varphi $$φ always holds”. In our approach  the best effort to satisfy $$\mathbf{G }\varphi $$Gφ is to maximize the number of steps satisfying $$\varphi $$φ in the interaction. To quantitatively evaluate the number of steps  we used a mean-payoff objective based on LTL formulae. Our method applies the Safraless approach to construct safety games from given must and desirable specifications  where the must specification can be written in full LTL and may include assumptions. It then transforms the safety games constructed from the desirable specifications into mean-payoff games and finally composes a reactive system as an optimal strategy on a synchronized product of the games.,2020-03-20
10.1007/BF01178658,Specification and verification of object-oriented programs using supertype abstraction,We present a formal specification language and a formal verification logic for a simple object-oriented programming language. The language is applicative and statically typed  and supports subtyping and message-passing. The verification logic relies on a behavioral notion of subtyping that captures the intuition that a subtype behaves like its supertypes. We give a formal definition for legal subtype relations  based on the specified behavior of objects  and show that this definition is sufficient to ensure the soundness of the verification logic. The verification logic reflects the way programmers reason informally about object-oriented programs  in that it allows them to use static type information  which avoids the need to consider all possible run-time subtypes.,2018-03-20
10.1007/BF00290704,Sometime = always + recursion ≡ always on the equivalence of the intermittent and invariant assertions methods for proving inevitability properties of programs,SummaryWe propose and compare two induction principles called “always” and “sometime” for proving inevitability properties of programs. They are respective formalizations and generalizations of Floyd invariant assertions and Burstall intermittent assertions methods for proving total correctness of sequential programs whose methodological advantages or disadvantages have been discussed in a number of previous papers. Both principles are formalized in the abstract setting of arbitrary nondeterministic transition systems and illustrated by appropriate examples. The “sometime” method is interpreted as a recursive application of the “always” method. Hence “always” can be considered as a special case of “sometime”. These proof methods are strongly equivalent in the sense that a proof by one induction principle can be rewritten into a proof by the other one. The first two theorems of the paper show that an invariant for the “always” method can be translated into an invariant for the “sometime” method even if every recursive application of the later is required to be of finite length. The third and main theorem of the paper shows how to translate an invariant for the “sometime” method into an invariant for the “always” method. It is emphasized that this translation technique follows the idea of transforming recursive programs into iterative ones. Of course  a general translation technique does not imply that the original “sometime” invariant and the resulting “always” invariant are equally understandable. This is illustrated by an example.,2011-03-20
10.1007/s00236-002-0095-2,A top-down proof procedure for generalized data dependencies,Abstract. Data dependencies are well known in the context of relational database. They aim to specify constraints that the data must satisfy to model correctly the part of the world under consideration. The implication problem for dependencies is to decide whether a given dependency is logically implied by a given set of dependencies. A proof procedure for the implication problem  called “chase”  has already been studied in the generalized case of tuple-generating and equality-generating dependencies. The chase is a bottom-up procedure: from hypotheses to conclusion  and thus is not goal-directed. It also entails in the case of TGDs the dynamic creation of new constants  which can turn out to be a costly operation. This paper introduces a new proof procedure which is top-down: from conclusion to hypothesis  that is goal-directed. The originality of this procedure is that it does not act as classical theorem proving procedures  which require a special form of expressions  such as clausal form  obtained after Skolemization. We show  with our procedure  that this step is useless  and that the notion of piece allows infering directly on dependencies  thus saving the cost of Skolemizing the dependencies set and  morever  that the inference can be performed without dynamically creating new constants. Although top-down approaches are known to be less efficient in time than bottom-up ones  the notion of piece cuts down irrelevant goals usually generated  leading to a usable top-down method. With the more recent introduction of constrained and ordered dependencies  some interesting perspectives also arise.,2011-03-20
10.1007/s00236-012-0156-0,Stochastic game logic,Stochastic game logic (SGL) is a new temporal logic for multi-agent systems modeled by turn-based multi-player games with discrete transition probabilities. It combines features of alternating-time temporal logic (ATL)  probabilistic computation tree logic and extended temporal logic. SGL contains an ATL-like modality to specify the individual cooperation and reaction facilities of agents in the multi-player game to enforce a certain winning objective. While the standard ATL modality states the existence of a strategy for a certain coalition of agents without restricting the range of strategies for the semantics of inner SGL formulae  we deal with a more general modality. It also requires the existence of a strategy for some coalition  but imposes some kind of strategy binding to inner SGL formulae. This paper presents the syntax and semantics of SGL and discusses its model checking problem for different types of strategies. The model checking problem of SGL turns out to be undecidable when dealing with the full class of history-dependent strategies. We show that the SGL model checking problem for memoryless deterministic strategies as well as the model checking problem of the qualitative fragment of SGL for memoryless randomized strategies is PSPACE-complete  and we establish a close link between natural syntactic fragments of SGL and the polynomial hierarchy. Further  we give a reduction from the SGL model checking problem under memoryless randomized strategies into the Tarski algebra which proves the problem to be in EXPSPACE.,2014-03-20
10.1007/s00236-006-0030-z,On Abelian 2-avoidable binary patterns,We give the first example of a binary pattern which is Abelian 2-avoidable  but which contains no Abelian fourth power. We introduce a family $$\{f_n\}_{n=1}^\infty$$ of binary morphisms which offer a common generalization of the Fibonacci morphism and the Abelian fourth-power-free morphism of Dekking. We show that the Fibonacci word begins with arbitrarily high Abelian powers  but for n ≥ 2  the fixed point of fn avoids xn+2 in the Abelian sense. The sets of patterns avoided in the Abelian sense by the fixed points of fn and fn+1 are mutually incomparable for n ≥ 2.,2016-03-20
10.1007/s00236-016-0269-y,Signature-free asynchronous Byzantine systems: from multivalued to binary consensus with $$t,This paper presents a new algorithm that reduces multivalued consensus to binary consensus in an asynchronous message-passing system made up of n processes where up to t may commit Byzantine failures. This algorithm has the following noteworthy properties: it assumes $$t<n/3$$t<n/3 (and is consequently optimal from a resilience point of view)  uses $$O(n^2)$$O(n2) messages  has a constant time complexity  and uses neither signatures nor additional computational power (such as random numbers  failure detectors  additional scheduling assumption  or additional synchrony assumption). The design of this reduction algorithm relies on two new all-to-all communication abstractions. The first one allows the non-faulty processes to reduce the number of proposed values to c  where c is a small constant. The second communication abstraction allows each non-faulty process to compute a set of (proposed) values satisfying the following property: if the set of a non-faulty process is a singleton containing value v  the set of any non-faulty process contains v. Both communication abstractions have an $$O(n^2)$$O(n2) message complexity and a constant time complexity. The reduction of multivalued Byzantine consensus to binary Byzantine consensus is then a simple sequential use of these communication abstractions. To the best of our knowledge  this is the first asynchronous message-passing algorithm that reduces multivalued consensus to binary consensus with $$O(n^2)$$O(n2) messages and constant time complexity (measured with the longest causal chain of messages) in the presence of up to $$t<n/3$$t<n/3 Byzantine processes  and without using cryptography techniques. Moreover  this reduction algorithm uses a single instance of the underlying binary consensus  and tolerates message re-ordering by Byzantine processes.,2014-03-20
10.1007/s00236-005-0169-z,Online square and cube packing,In online square packing  squares of different sizes arrive online and need to be packed into unit squares which are called bins. The goal is to minimize the number of bins used. Online cube packing is defined analogously. We show an upper bound of 2.2697 and a lower bound of 1.6406 for online square packing  and an upper bound of 2.9421 and a lower bound of 1.6680 for online cube packing. The upper bound for squares can be further reduced to 2.24437 using a computer proof. These results improve on the previously known results for the two problems. We also show improved lower bounds for higher dimensions.,2017-03-20
10.1007/s00236-012-0161-3,Abstract reduction in directed model checking CCS processes,Model checking tools face a combinatorial blow up of the state-space (commonly known as the state explosion problem) that must be addressed to formally verify concurrent systems. We propose an approach combining abstraction techniques and heuristic search to overcome the problem above. In particular  heuristic search can avoid the bottleneck of the exhaustive exploration of the global state graph of a system  while retaining the advantages of abstraction techniques.,2014-03-20
10.1007/s002360050167,Specifying communication in distributed information systems,"Abstract. We present two logics that allow specifying distributed information systems  emphasizing communication among sites. The low-level logic 
$\mbox{\sf D}_0$ offers features that are easy to implement but awkward to use for specification  while the high-level logic 
$\mbox{\sf D}_1$ offers convenient specification features that are not easy to implement. We show that 
$\mbox{\sf D}_1$ specifications may be automatically translated to 
$\mbox{\sf D}_0$ in a sound and complete way. In order to prove soundness and completeness  we define our translation as a simple map of institutions. Our result may be useful for making implementation platforms like Corba easier accessible by providing high-level planning and specification methods for communication.",2014-03-20
10.1007/BF00276182,Proof of termination within a weak logic of programs,SummaryA weak logic of programs is a formal system in which statements that mean “the program halts” cannot be expressed. In order to prove termination  we would usually have to use a stronger logical system. In this paper we show how we can prove termination of both iterative and recursive programs within a weak logic by augmenting the programs with counters and adding bound assertions on the counters as loop invariants and entry conditions. Thus  most of the existing verifiers which are based on a weak logic of programs can be used to prove termination of programs without any modification. We give examples of proofs of termination and of upper bounds on computation time that were obtained using a Pascal program verifier. The use of the method to locate causes of non-termination is also illustrated.,2013-03-20
10.1007/s00236-003-0117-8,Towards action refinement for true concurrent real time,Abstract.Action refinement is an essential operation in the design of concurrent systems  real-time or not. In this paper we develop a theory of action refinement in a real-time non-interleaving causality based setting  a timed extension of bundle event structures that allows for urgent interactions to model timeout. The syntactic action refinement operation is presented in a timed process algebra as incorporated in the internationally standardised specification language LOTOS. We show that the behaviour of the refined system can be inferred compositionally from the behaviour of the original system and from the behaviour of the processes substituted for actions with explicitly represented start points  that the timed versions of a linear-time equivalence  termed pomset trace equivalence  and a branching-time equivalence  termed history preserving bisimulation equivalence  are both congruences under the refinement  and that the syntactic and semantic action refinements developed coincide under these equivalence relations with respect to a metric denotational semantics. Therefore  our refinement operations behave well. They meet the commonly expected properties.,2014-03-20
10.1007/BF00572987,In memoriam: Andrei Petrovich Ershov,,2019-03-20
10.1007/s002360050002,How to calculate symmetries of Petri nets,Symmetric net structure yields symmetric net behaviour. Thus  knowing the symmetries of a net  redundant calculations can be skipped. We present a framework for the calculation of symmetries for several net classes including place/transition nets  timed nets  stochastic nets  self–modifying nets  nets with inhibitor arcs  and many others. Our approach allows the specification of different symmetry groups. Additionally it provides facilities either to calculate symmetries on demand while running the actual analysis algorithm  or to calculate them in advance. For the latter case we define and calculate a ground set of symmetries. Such a set has polynomial size and is sufficient for an efficient implementation of the for all symmetries loop and the partition of net elements into equivalence classes. These two constructions are the usual way to integrate symmetries into an analysis algorithm.,2020-03-20
10.1007/BF00262974,Scheduling with slack time,SummaryWe consider a scheduling problem concerning a set of jobs {J1  J2 ...  Jn} in which the job Ji requests Ci units of computation time every Ti units of time periodically. These jobs are to be executed by a timeshared single-processor computing system. It is assumed that the requests for each job arrive at the system at the beginning of the request periods and that deadline for completion of the requested computation in each period coincides with the beginning of the next period. For a set of jobs that is schedulable by a certain algorithm  the time span between the completion of a request and its deadline is referred to as the slack time of the request. It is shown here that when the set of jobs is scheduled according to the rate monotonic algorithm  the slack time of the first request of any job is no larger than the slack time of any subsequent request of that job. This result enables us to determine lower bounds to slack times of all requests.,2011-03-20
10.1007/s00236-006-0023-y,Merged processes: a new condensed representation of Petri net behaviour,Model checking based on Petri net unfoldings is an approach widely applied to cope with the state space explosion problem. In this paper  we propose a new condensed representation of a Petri net’s behaviour called merged processes  which copes well not only with concurrency  but also with other sources of state space explosion  viz sequences of choices and non-safeness. Moreover  this representation is sufficiently similar to the traditional unfoldings  so that a large body of results developed for the latter can be re-used. Experimental results indicate that the proposed representation of a Petri net’s behaviour alleviates the state space explosion problem to a significant degree and is suitable for model checking.,2012-03-20
10.1007/BF01192159,Context-free text grammars,A text is a tripleτ=(λ ρ1 ρ2) such that λ is a labeling function  andρ1 andρ2 are linear orders on the domain of λ; hence τ may be seen as a word (λ ρ1) together with an additional linear orderρ2 on the domain of λ. The orderρ2 is used to give to the word (λ ρ1) itsindividual hierarchical representation (syntactic structure) which may be a tree but it may be also more general than a tree. In this paper we introducecontext-free grammars for texts and investigate their basic properties. Since each text has its own individual structure  the role of such a grammar should be that of a definition of a pattern common to all individual texts. This leads to the notion of ashapely context-free text grammar also investigated in this paper.,
10.1007/s00236-012-0154-2,Instruction sequence processing operators,Instruction sequence is a key concept in practice  but it has as yet not come prominently into the picture in theoretical circles. This paper concerns instruction sequences  the behaviours produced by them under execution  the interaction between these behaviours and components of the execution environment  and two issues relating to computability theory. Positioning Turing’s result regarding the undecidability of the halting problem as a result about programs rather than machines  and taking instruction sequences as programs  we analyse the autosolvability requirement that a program of a certain kind must solve the halting problem for all programs of that kind. We present novel results concerning this autosolvability requirement. The analysis is streamlined by using the notion of a functional unit  which is an abstract state-based model of a machine. In the case where the behaviours exhibited by a component of an execution environment can be viewed as the behaviours of a machine in its different states  the behaviours concerned are completely determined by a functional unit. The above-mentioned analysis involves functional units whose possible states represent the possible contents of the tapes of Turing machines with a particular tape alphabet. We also investigate functional units whose possible states are the natural numbers. This investigation yields a novel computability result  viz. the existence of a universal computable functional unit for natural numbers.,2020-03-20
10.1007/BF01213079,On the look-ahead problem in lexical analysis,Modern programming languages use regular expressions to define valid tokens. Traditional lexical analyzers based on minimum deterministic finite automata for regular expressions cannot handle the look-ahead problem. The scanner writer needs to explicitly identify the look-ahead states and code the buffering and re-scanning operations by hand. We identify the class of finite look-ahead finite automata  which is general enough to include all finite automata of practical lexical analyzers. Finite look-ahead finite automata are then transformed into suffix finite automata. A new lexical analyzer makes use of the suffix finite automata to identify tokens. The new lexical analyzer solves the look-ahead problem in a table-driven approach and it can detect lexical errors at an earlier time than traditional lexical analyzers. The extra cost of the new lexical analyzers is the larger state transition table and three additional 1-dimensional tables. Incremental lexical analysis is also discussed.,2015-03-20
10.1007/s00236-016-0273-2,Assume-admissible synthesis,In this paper  we introduce a novel rule for synthesis of reactive systems  applicable to systems made of n components which have each their own objectives. This rule is based on the notion of admissible strategies. We compare this rule with previous rules defined in the literature  and show that contrary to the previous proposals  it defines sets of solutions which are rectangular. This property leads to solutions which are robust and resilient  and allows one to synthesize strategies separately for each agent. We provide algorithms with optimal complexity and also an abstraction framework compatible with the new rule.,2018-03-20
10.1007/BF01257083,The temporal logic of branching time,SummaryA temporal logic is defined which contains both linear and branching operators. The underlying model is the tree of all possible computations. The following metatheoretical results are proven: 1) an exponential decision procedure for satisfiability; 2) a finite model property; 3) the completeness of an axiomatization.,2016-03-20
10.1007/BF00289518,Application of regular canonical systems to grammars translatable from left to right,In [2] Knu th consideres a special class of context free grammars (~ which he calls translatable from left to right with bound k>--O (~ E L R (k)). Knuth shows tha t for fixed bound k it can be decided in a finite number of steps whether a context free g rammar is an L R (k) grammar. Here we shall give a different simple proof of the decidability of the class L R (k). The proof is based on a characterization of L R (k) grammars by the help of k-pushdown classes which we introduce in this paper and on a result of Btichi on regular canonical systems [1 ~. A regular canonical system • over a finite a lphabet ~ is a special canonical sys tem with a finite number of product ions of the form ~a = ~b a  b E~*. ~ is a variable over ~* and indicates tha t replacements m a y be done only at the right end of a word: u is directly derivable from v (v / u) : M v ---xa and u = x b where a = ~ b is a product ion of 27. The transit ive closure I x of ~ in ~* defines the relat ion of general derivability. Biichi shows: If u and v are words in ~* then the genera ted set of words. ~(u 27 v) : =(x~.q*:u ~xv},2019-03-20
10.1007/BF00625278,Optimum reorganization points for arbitrary database costs,SummaryThe performance deterioration caused by updates to databases or data structures can be overcome by reorganizing the structure from time to time. In previous work  optimal reorganization intervals were determined for linearly increasing deterioration costs and linearly growing reorganization cost. To date only heuristics have been available for non-linear costs  and no work has been published on optimal solutions.This paper extends previous results by identifying the reorganization points problem as a shortest route problem and by providing a dynamic programming algorithm to find optimal reorganization points when reorganization and deterioration costs are arbitrary. It is shown that our method usesθ(T**2) basic operations andθ(T) space  whereT represents the database lifetime. Furthermore  we note that no algorithm can solve this problem in significantly less time or space. Examples involving linear and non-linear costs are presented and discussed. Finally  the algorithm is modified to find the optimal sequence of reorganizations to be applied in situations where partial reorganizations are possible.,2016-03-20
10.1007/s00236-007-0055-y,Recursive Petri nets,In order to design and analyse complex systems  modelers need formal models with two contradictory requirements: a high expressivity and the decidability of behavioural property checking. Here we present and develop the theory of such a model  the recursive Petri nets. First  we show that the mechanisms supported by recursive Petri nets enable to model patterns of discrete event systems related to the dynamic structure of processes. Furthermore  we prove that these patterns cannot be modelled by ordinary Petri nets. Then we study the decidability of some problems: reachability  finiteness and bisimulation. At last  we develop the concept of linear invariants for this kind of nets and we design efficient computations specifically tailored to take advantage of their structure.,2017-03-20
10.1007/BF00290707,Electing a leader in a ring with link failures,SummaryWe investigate the message complexity of electing a leader in a ring of asynchronous processors. Our work deviates from the previous works on electing a leader in that we consider the effect of link failures. A link is said to fail if some message sent through it never reaches its destination. We distinguish the case where n is known from the case n unknown. Our main result is a O(n · log n) algorithm for electing a leader on a n-processor ring (the case n is known).,2019-03-20
10.1007/BF00288967,Inner loops in flowgraphs and code optimization,SummaryA criterion is developed to define a hierarchy of inner loops in a program which constitute sections of the program which take up large proportions of the execution time; this hierarchy lends a dynamic loop structure to the program. It is assumed that the program has been given a flowgraph representation in which each vertex corresponds to a statement or a set of statements and the flow in each edge corresponds to the frequency of passage of control from one statement or set of statements to another. While developing this criterion an attempt is made to guarantee that moving a loop invariant statement from an inner loop to a point outside of the loop would always yield a more optimal code.,2014-03-20
10.1007/s00236-005-0166-2,A comprehensive database schema integration method based on the theory of formal concepts,Integrating heterogeneous database schemata is a major task in federated database design where preexisting and heterogeneous database systems need to be integrated virtually by providing a homogenization database interface. Most proposed schema integration methods suffer from very complex result schemata and insufficient handling of extensional relations  i.e. in the way how redundant data of the input systems are dealt with. Redundancy among the input systems may thus remain undetected and  hence  remains uncontrolled.Our GIM (Generic Integration Model) method is based on the elegant and mathematically founded theory of formal concept analysis (FCA). The main idea is to integrate schemata into one formal context which is a binary relation between a set of attributes and a set of base extensions (set of potential objects). From that context we apply an FCA-algorithm to semi-automatically derive a concept lattice which we interpret as an inheritance hierarchy of classes for a homogenized schema. Thus  the integration task following our method can be supported by tools.,2017-03-20
10.1007/s00236-013-0193-3,On weighted first-order logics with discounting,We introduce a linear temporal logic and a first-order logic in the weighted setup of the max-plus semiring with discounting parameters in $$[0 1)$$[0 1). Furthermore  we define $$\omega \hbox {-}d$$ω-d-star-free series and counter-free weighted Büchi automata. We show that the classes of series definable in fragments of the weighted linear temporal logic and first-order logic  the class of $$\omega \hbox {-}d$$ω-d-star-free series  and a subclass of $$\omega \hbox {-}d$$ω-d-counter-free series coincide. This extends a fundamental result  for first-order logic theory  to series over the max-plus semiring with discounting.,2014-03-20
10.1007/s00236-006-0006-z,Recognizability of graph and pattern languages,Graph language recognizability is defined and investigated by virtue of the syntactic magmoid  analogously with the syntactic monoid of a word language. In this setup  the syntax complexity of a given recognizable graph language can be determined  giving rise to a syntactic classification inside the class of recognizable graph languages.,2014-03-20
10.1007/s00236-002-0099-y,Synchronized regular expressions,Abstract. Text manipulation is one of the most common tasks for everyone using a computer. The increasing number of textual information in electronic format that every computer user collects everyday also increases the need of more powerful tools to interact with texts. Indeed  much work has been done to provide simple and versatile tools that can be useful for the most common text manipulation tasks. Regular Expressions (RE)  introduced by Kleene  are well known in the formal language theory. RE have been extended in various ways  depending on the application of interest. In almost all the implementations of RE search algorithms (e.g. the egrep [15] UNIX command  or the Perl [20] language pattern matching constructs) we find backreferences  i.e. expressions that make reference to the string matched by a previous subexpression. Generally speaking  it seems that all kinds of synchronizations between subexpressions in a RE can be very useful when interacting with texts. In this paper we introduce the Synchronized Regular Expressions (SRE) as an extension of the Regular Expressions. We use SRE to present a formal study of the already known backreferences extension  and of a new extension proposed by us  which we call the synchronized exponents. Moreover  since we are dealing with formalisms that should have a practical utility and be used in real applications  we have the problem of how to present SRE to the final users. Therefore  in this paper we also propose a user-friendly syntax for SRE to be used in implementations of SRE-powered search algorithms.,2018-03-20
10.1007/BF00263500,A model of the dynamic behavior of B-trees,SummaryWe present a practical and efficient model for the estimation of average performance measures of B-trees under dynamic conditions of insertions and deletions. Performance measures computed are average storage utilization  average path length  and average tree height. The model introduces a data structure  called a lineage tree  which permits a highly compact representation of B-trees while still retaining information needed to compute the above performance measures. The model then involves a Markov chain in which the states are “lineages” obtained from the lineage tree. Probabilities  based on the number of B-tree structures corresponding to each lineage  are derived for the transition from one lineage to another under certain dynamic conditions. Results are given for tree orders ranging from 5 up to 401  and for numbers of keys up to 140000. Computer requirements are shown to be small to moderate.,2015-03-20
10.1007/s00236-011-0134-y,One-sided random context grammars,The notion of a one-sided random context grammar is defined as a context-free-based regulated grammar  in which a set of permitting symbols and a set of forbidding symbols are attached to every rule  and its set of rules is divided into the set of left random context rules and the set of right random context rules. A left random context rule can rewrite a nonterminal if each of its permitting symbols occurs to the left of the rewritten symbol in the current sentential form while each of its forbidding symbols does not occur there. A right random context rule is applied analogically except that the symbols are examined to the right of the rewritten symbol. The paper demonstrates that without erasing rules  one-sided random context grammars characterize the family of context-sensitive languages  and with erasing rules  these grammars characterize the family of recursively enumerable languages. In fact  these characterization results hold even if the set of left random context rules coincides with the set of right random context rules. Several special cases of these grammars are considered  and their generative power is established. In its conclusion  some important open problems are suggested to study in the future.,2016-03-20
10.1007/BF00264164,Explaining the wheel sieve,SummaryIn a previous paper  an algorithm was presented for the classical problem of finding all prime numbers up to a given limit. The algorithm was derived therein by transforming a prior algorithm in accordance with some essentially ad hoc observations on the problem.The present paper complements the former by developing a simple mathematical framework  which leads to a smoother and more insightful derivation of the new algorithm  and which may be of independent interest to the number theorist.,2017-03-20
10.1007/BF00289048,Static main storage packing problems,SummaryThe instruction set of many computers permits referencing certain areas of main storage more efficiently than others. For example  “base-offset” addressing favors small offsets. This report discusses the problem of how to optimally assign data to storage on such a machine  subject to the restriction that the locations chosen are not to change with time. The emphasis is on truly optimal solutions  although many simplifying assumptions are made. Some of the results apply to the problem of optimally placing “read-only” files on auxiliary storage. Areas for further work are suggested.,2014-03-20
10.1007/BF00264564,Formal semantics of a class of high-level primitives for coordinating concurrent processes,SummaryHigh level programs for generating systems of cooperating concurrent processes are classified according to syntactic criteria. Their semantic characterization by means of Petri Nets  a mathematical theory of system descriptions  induces a corresponding syntactic classification on the latter. This permits the transferal of intuitively important semantical results of Petri Net theory to their corresponding programs. As a consequence it becomes possible to determine a certain kind of semantic correctness of a programm merely by its syntactic classification. Alternate solutions to a well known synchronization problem are treated in this way.,2011-03-20
10.1007/s002360050143,Machine scheduling with availability constraints,Abstract. We will give a survey on results related to scheduling problems where machines are not continuously available for processing. We will deal with single and multi machine problems and analyze their complexity. We survey NP-hardness results  polynomial optimization and approximation algorithms. We also distinguish between on-line and off-line formulations of the problems. Results are concerned with criteria on completion times and due dates.,2013-03-20
10.1007/s00236-016-0267-0,Reversible Watson–Crick automata,Since 1970  reversible finite automata have generated interest among researcher; but till now  we have not come across a model of reversible read only one-way finite automata which accept all regular languages  In this paper  we introduce a new model of one-way reversible finite automata inspired by the Watson–Crick complementarity relation and show that our model can accept all regular languages. We further show that our model accepts a language which is not accepted by any multi-head deterministic finite automaton.,2015-03-20
10.1007/BF00289244,On an equivalence between continuation and stack semantics,SummaryA class of continuation models and a class of stack models for defining the semantics of programming languages are specified. A transformation is given that maps any continuation model into an equivalent stack model  and the equivalence is proved. The transformation is illustrated for an example language which includes gotos and recursive procedures.,2014-03-20
10.1007/s00236-013-0178-2,Verifying a simplification of mutual exclusion by Lycklama–Hadzilacos,A simplification of the mutual exclusion algorithm of Lycklama and Hadzilacos (ACM Trans Program Lang Syst 13:558–576  1991) is presented. It uses only four nonatomic shared bits per thread to guarantee mutual exclusion with the first-come-first-served property. The algorithm is verified by assertional methods  aided by the proof assistant PVS. A variation with five bits per thread is also given. This variation may give better performance when the number of threads is large. The use of the proof assistant made it easy to transfer the proof of the main algorithm to the variation.,2015-03-20
10.1007/s00236-007-0067-7,Two-dimensional packing with conflicts,We study the two-dimensional version of the bin packing problem with conflicts. We are given a set of (two-dimensional) squares V = {1  2  . . .  n} with sides $${s_1  s_2 \ldots  s_n \in [0 1]}$$ and a conflict graph G = (V  E). We seek to find a partition of the items into independent sets of G  where each independent set can be packed into a unit square bin  such that no two squares packed together in one bin overlap. The goal is to minimize the number of independent sets in the partition. This problem generalizes the square packing problem (in which we have $${E = \emptyset}$$) and the graph coloring problem (in which si = 0 for all i = 1 2  . . .   sn). It is well known that coloring problems on general graphs are hard to approximate. Following previous work on the one-dimensional problem  we study the problem on specific graph classes  namely  bipartite graphs and perfect graphs. We design a $${2+\varepsilon}$$ -approximation for bipartite graphs  which is almost best possible (unless P = NP). For perfect graphs  we design a 3.2744-approximation.,2018-03-20
10.1007/s00236-007-0061-0,Adaptive sorting: an information theoretic perspective,We present two algorithms that are near optimal with respect to the number of inversions present in the input. One of the algorithms is a variation of insertion sort  and the other is a variation of merge sort. The number of comparisons performed by our algorithms  on an input sequence of length n that has I inversions  is at most $$n\ {\rm log}_{2} (\frac{I}{n} + 1) + O(n)$$ . Moreover  both algorithms have implementations that run in time $$O(n\ {\rm log}_{2} (\frac{I}{n} + 1)\ +\ n)$$ . All previously published algorithms require at least $$cn\ {\rm log}_{2} (\frac{I}{n} + 1)$$ comparisons for some c > 1.,2016-03-20
10.1007/BF00289018,Maintaining range trees in secondary memory,SummaryRange trees are used for solving the orthogonal range searching problem  a problem that has applications in e.g. databases and computer graphics. We study the problem of storing range trees in secondary memory. To this end  we partition range trees into parts that are stored in consecutive blocks in secondary memory. This paper gives a number of partition schemes that limit the part-sizes and the number of disk accesses necessary to perform updates and queries. We show e.g.  that for each fixed positive integer k  there is a partition of a two-dimensional range tree into parts of size O(n1/k)  such that each update requires at most k(2k+1) disk accesses  and each query requires at most 8k2+2k+2t disk accesses  where t is the number of answers to the range query.,2016-03-20
10.1007/s00236-016-0258-1,Disjunctivity and other properties of sets of pseudo-bordered words,The concepts of pseudo-bordered and pseudo-unbordered words are in large part motivated by research in theoretical DNA computing  wherein the Watson–Crick complementarity of DNA strands is modelled as an antimorphic involution  that is  a function $$\theta $$θ which is an antimorphism  $$\theta (uv)=\theta (v) \theta (u)$$θ(uv)=θ(v)θ(u)  and an involution  $$\theta (\theta (u))=u$$θ(θ(u))=u  for all words u  v over the DNA alphabet. In particular  a word w is said to be $$\theta $$θ-bordered (or pseudo-bordered) if there exists a word $$v \in \Sigma ^{+}$$v∈Σ+ that is a proper prefix of w  while $$\theta (v)$$θ(v) is a proper suffix of w. A word which is not $$\theta $$θ-bordered is $$\theta $$θ-unbordered. This paper continues the exploration of properties (for the case where $$\theta $$θ is a morphic involution) of the set of $$\theta $$θ-unbordered words  $$D_{\theta }(1)$$Dθ(1)  and the sets of words that have exactly i$$\theta $$θ-borders  $$D_{\theta }(i)$$Dθ(i)  $$i \ge 2$$i≥2. We prove that  under some conditions  the set $$D_{\theta }(i)$$Dθ(i) is disjunctive for all $$i \ge 1$$i≥1  and that the set $$D_{\theta }^i(1){\setminus }D(i)$$Dθi(1)\D(i) is disjunctive for all $$i\ge 2$$i≥2  where D(i) denotes the set of words with exactly i borders. We also discuss conditions for catenations of languages of $$\theta $$θ-unbordered words to remain $$\theta $$θ-unbordered  and anticipate further generalizations by showing that the set of all $$\theta $$θ-bordered words is not context-free for all morphisms $$\theta $$θ over an alphabet $$\Sigma $$Σ with $$|\Sigma | \ge 3$$|Σ|≥3 such that $$\theta (a) \ne a$$θ(a)≠a for all $$a \in \Sigma $$a∈Σ and $$\theta ^{3}$$θ3 equals the identity function on $$\Sigma $$Σ.,2020-03-20
10.1007/s00236-011-0149-4,Erratum to: Avoidable binary patterns in partial words,In the paper “F. Blanchet-Sadri  R. Mercas  S. Simmons and E. Weissenstein  Avoidable binary patterns in partial words  Acta Informatica 48(1) (2011) 25–41”  the first sentence of Section 5 as well as Theorem 6 should be deleted. The error is that overlap-freeness does not necessarily coincide with the pattern αβαβα being avoidable. It coincides only in the case when the considered overlaps have length greater than three. Thus  an infinite word might contain factors of the form aaa while still avoiding the pattern αβαβα  where a is a letter of the alphabet the word is defined on. Thus  given the fact that the pattern αβαβα is 3-avoidable and  obviously  this pattern is not 1-avoidable  it remains open the question of whether αβαβα is 2-avoidable in partial words. Consequently  the pattern αβαβα should be removed from Statement 2 of Theorem 10 and a new statement should be added stating that:,2019-03-20
10.1007/BF00282620,Combinator-based compilation of recursive functions with different parameter passing modes,SummaryWand's technique of deriving compilers from denotational semantics is applied to a block structured language with recursive functions. The emphasis is on compilation of different parameter passing modes and a simple storage management. The technique starts by eliminating λ-variables from semantic equations through the introduction of special-purpose combinators. The final code consists of combinators equivalent to target-machine instructions (running-system procedures). The method enables us to derive a compiler and a running system directly from the denotational semantics of a language.,2019-03-20
10.1007/s002360000052,Letter from the Editor,,2013-03-20
10.1007/s00236-016-0259-0,Special issue on Rich Models  EU-COST Action IC0901 Rich-Model Toolkit,The main goal of The Rich Model Toolkit initiative was to explore directions and techniques for making automated reasoning (including analysis and synthesis) applicable to a wider range of problems  as well as making them easier to use by researchers  software developers  hardware designers  and information system users and developers. The Rich Model Toolkit was funded by the European Union as COST Action IC0901 between 2009 and 2013. The action included the participation of researchers from over 20 countries and 50 research groups. The unifying idea of Rich Models is to explore precise mathematical and formal models of key aspects of our infrastructure  developing algorithms  tools  and common standardized formats. The networking activities funded by the action—particularly workshops  visits from young scientists to hosting research groups  and summer schools—aimed to establish connections between different tools  methodologies  and communities. The objective was to build a unified infrastructure to clearly define Rich Models  to introduce standardized representation formats  and incorporates a number of automated reasoning tools with the ability to establish communication between these formats. During the action benchmarks and competitions for automated reasoning and verification were created  as well as several research results on decision procedures  analysis and synthesis. These activities included competitions on the verification of Numerical Transitions Systems and the participation of researchers from the action in the development of Horn-Clauses as a common representation of several verification problems. After the end of the action  we invited researchers to submit significant contributions to this special issue of Acta Informatica. After two round of reviews from several experts the following four papers were selected for publication. We thank all reviewers for their commitment and dedication. The paper “Symbolic Automata for Static Specification Mining” by Hila Peleg  Sharon Shoham  Eran Yahav and Hongseok Yang presents a new automata-based framework for,2013-03-20
10.1007/BF00279953,Apex graph grammars and attribute grammars,SummaryApex graph grammars are a particular type of directed node-label controlled (DNLC) graph grammars: the embedding edges are established between terminal nodes only. Apex graph grammars  slightly generalized  can generate the sets of dependency graphs of attribute grammars. The other way around  every apex graph language can be obtained from such a dependency graph language by a graph replacement (which is an operation analogous to a string homomorphism).,2018-03-20
10.1007/s00236-011-0143-x,On α2 − ν2-products of automata,Two equivalent sufficient conditions are given for the completeness of classes of finite automata with respect to the isomorphic simulation under the α2 − ν2-product. It is conjectured that these conditions are also necessary with respect to the isomorphic or homomorphic simulation too.,2016-03-20
10.1007/s00236-007-0049-9,Dual unbounded nondeterminacy  recursion  and fixpoints,In languages with unbounded demonic and angelic nondeterminacy  functions acquire a surprisingly rich set of fixpoints. We show how to construct these fixpoints  and describe which ones are suitable for giving a meaning to recursively defined functions. We present algebraic laws for reasoning about them at the language level  and construct a model to show that the laws are sound. The model employs a new kind of power domain-like construct for accommodating arbitrary nondeterminacy.,2017-03-20
10.1007/s00236-011-0144-9,Solving a weak NP-complete problem in polynomial time by using mutual mobile membrane systems,Mutual mobile membrane systems represent a variant of mobile membrane systems in which endocytosis and exocytosis work whenever the involved membranes “agree” on the movement by using mutual complement objects placed in membranes. We provide a semi-uniform polynomial solution for a weak NP-complete problem (namely partition problem) by means of mutual mobile membrane systems.,2020-03-20
10.1007/BF00572988,Merging sorted runs using large main memory,SummaryExternal sorting is usually accomplished by first creating sorted runs  then merging the runs. In the merge phase  writing and calculating can be overlapped by reading if two input buffers are used for each sorted run. If the memory is very large  the input buffers will be large and using two input buffers per sorted run will be more efficient than using only one input buffer per run and risking reduced overlap of reading and writing. In many cases  merging time can be cut in half. We derive a formula for estimating the total time for merging for a given memory size  file size  number of merging passes and for a given disk drive. We present an extreme example where in spite of having two buffers per run  significant non-overlap occurs. However  in realistic problems  we show that making one merge pass with two input buffers per run is near optimal. This contradicts earlier results on merging which do not take large memory into account.,2012-03-20
10.1007/BF00265223,The network complexity and the Turing machine complexity of finite functions,"SummaryLet L(f) be the network complexity of a Boolean function L(f). For any n-ary Boolean function L(f) let 
$$TC(f) = min\{ T_p^{\bar A} (n){\text{ (}}\parallel p\parallel + 1gS_p^{\bar A} {\text{(}}n{\text{):}}res_p^{\bar A} {\text{(}}n{\text{) = }}f\} $$
. Hereby p ranges over all relative Turing programs and Ā ranges over all oracles such that given the oracle Ā  the restriction of p to inputs of length n is a program for L(f). ∥p∥ is the number of instructions of p. TpĀ(n) is the time bound and SpĀof the program p relative to the oracle Ā on inputs of length n. Our main results are (1) L(f) ≦ O(TC(L(f)))  (2) TC(f) ≦ O(L(f)22+ɛ) for every ɛ ⋙ O.",2014-03-20
10.1007/BF00289414,NP-complete problems simplified on tree schemas,SummaryA schema is a collection of finite subsets of a set. One can partition the class of all schemas into tree schemas and cyclic schemas. This partitioning has been extensively studied in relational database theory. In this paper we examine the impact of tree schemas on some NP-complete problems. We show that tree schema instances can be efficiently solved (i.e.  polynomially) for certain NP-complete problems.,2011-03-20
10.1007/s00236-004-0141-3,A new natural structural congruence in the pi-calculus with replication,Abstract.In the $\pi$-calculus with replication  a new structural congruence called “middle” congruence is investigated: a notion of structural equivalence of processes in which replication of a process is viewed as a potential rather than an actual infinite number of copies of the process  in the sense that copies are spawned at need rather than produced all at once. It is slightly weaker than standard congruence (which is also of the potential type) but stronger than the extended congruence investigated before by the authors (which is of the actual type). It is shown that middle congruence has the same desirable properties as extended congruence: it is decidable and it has a concrete multiset semantics. Thus  these properties do not depend on the distinction between potential and actual replication.,2011-03-20
10.1007/BF00289499,Nearly optimal hierarchies for network and formula size,SummaryHow large are the “gaps” in the complexity hierarchies for Boolean functions with respect to network size and formula size? A gap is a non-empty interval of integers none of which is the complexity of any Boolean function. It is shown for the most natural bases that there are no gaps at all over a broad range of values and that the largest gap anywhere is less than n.,2013-03-20
10.1007/BF00289112,A regularity test for dual bordered OS systems,SummaryA dual bordered OS system is a triple (∑  P  S) where ∑ is a finite alphabet  S a finite subset of ∑*  the set of axioms  and P a finite set of rules of the form a→a × a  where a ε ∑ and x ε ∑*. Using well-quasi-order theory  we show that the regularity problem for such systems is decidable. Whether such a system generates a regular language essentially only depends on the set of rules but not on the axioms.,2014-03-20
10.1007/BF00264473,The construction of operator interfaces based on logical input devices,SummaryGraphics standards today operate with abstract logical functions in order to provide application portability. Beside the logical interface  also the physical interface to operators is of significance for interactive systems since physical device characteristics determine the suitability of a system for given interactive applications. Based on the GKS input model  this report shows how to provide logical input devices to a dialogue component on the one hand  and  on the other hand  how to map them to the physical interface in controlled and flexible ways.,2012-03-20
10.1007/s00236-002-0089-0,Packing rectangles in a strip,"Abstract. Rectangles with dimensions independently chosen from a uniform distribution on [0 1] are packed on-line into a unit-width strip under a constraint like that of the Tetris
$^{TM}$ game: rectangles arrive from the top and must be moved inside the strip to reach their place; once placed  they cannot be moved again. Cargo loading applications impose similar constraints. This paper assumes that rectangles must be moved without rotation. For n rectangles  the resulting packing height is shown to have an asymptotic expected value of at least (0.31382733 ...)n under any on-line packing algorithm. An on-line algorithm is presented that achieves an asymptotic expected height of (0.36976421 ...)n. This algorithm improves the bound achieved in Next Fit Level (NFL) packing  by compressing the items packed on two successive levels of an NFL packing via on-line movement admissible under the Tetris constraint.",2020-03-20
10.1007/BF01178506,Concurrent bisimulations in Petri nets,SummaryAfter various attempts  an equivalence relation is defined for labelled Petri nets  on the base of the concurrency semantics of net theory. This relation  called Fully Concurrent bisimulation and abbreviated FC-bisimulation  preserves the level of concurrency of visible operations and  under some conditions  allows to enforce injective labelling on them. Refinements of a visible operation are also defined and we show that  under some conditions  they preserve FC-bisimulation.,2020-03-20
10.1007/BF00288938,Nonterminals  homomorphisms and codings in different variations of OL-systems,SummaryThe use of nonterminals versus the use of homomorphisms of different kinds in the basic types of deterministic OL-systems is studied. A rather surprising result is that in some cases the use of nonterminals produces a comparatively low generative capacity  whereas in some other cases the use of nonterminals gives a very high generative capacity. General results are obtained concerning the use of erasing productions versus the use of erasing homomorphisms. The paper contains a systematic classification of the effect of nonterminals  codings  weak codings  nonerasing homomorphisms and homomorphisms for all basic types of deterministic OL-languages  including table languages.,2014-03-20
10.1007/s00236-012-0150-6,Nonterminal complexity of one-sided random context grammars,In the present paper  we study the nonterminal complexity of one-sided random context grammars. More specifically  we prove that every recursively enumerable language can be generated by a one-sided random context grammar with no more than ten nonterminals. An analogical result holds for thirteen nonterminals in terms of these grammars with the set of left random context rules coinciding with the set of right random context rules. Furthermore  we introduce the notion of a right random context nonterminal  defined as a nonterminal that appears on the left-hand side of a right random context rule. We demonstrate how to convert any one-sided random context grammar G to an equivalent one-sided random context grammar H with two right random context nonterminals. An analogical conversion is given in terms of (1) propagating one-sided random context grammars and (2) left random context nonterminals. In the conclusion  two open problems are stated.,2011-03-20
10.1007/s00236-007-0046-z,View selection for real conjunctive queries,Given a query workload  a database and a set of constraints  the view-selection problem is to select views to materialize so that the constraints are satisfied and the views can be used to compute the queries in the workload efficiently. A typical constraint  which we consider in the present work  is to require that the views can be stored in a given amount of disk space. Depending on features of SQL queries (e.g.  the DISTINCT keyword) and on whether the database relations on which the queries are applied are sets or bags  the queries may be computed under set semantics  bag-set semantics  or bag semantics. In this paper we study the complexity of the view-selection problem for conjunctive queries and views under these semantics. We show that bag semantics is the “easiest to handle” (we show that in this case the decision version of view selection is in NP)  whereas under set and bag-set semantics we assume further restrictions on the query workload (we only allow queries without self-joins in the workload) to achieve the same complexity. Moreover  while under bag and bag-set semantics filtering views (i.e.  subgoals that can be dropped from the rewriting without impacting equivalence to the query) are practically not needed  under set semantics filtering views can reduce significantly the query-evaluation costs. We show that under set semantics the decision version of the view-selection problem remains in NP only if filtering views are not allowed in the rewritings. Finally  we investigate whether the cgalg algorithm for view selection introduced in Chirkova and Genesereth (Linearly bounded reformulations of conjunctive databases  pp. 987–1001  2000) is suitable in our setting. We prove that this algorithm is sound for all cases we examine here  and that it is complete under bag semantics for workloads of arbitrary conjunctive queries and under bag-set semantics for workloads of conjunctive queries without self-joins.,2016-03-20
10.1007/BF00264035,Weakly context-sensitive languages as model for programming languages,SummaryAn abstract family of formal languages containing context-free languages and properly contained in (deterministic) context-sensitive languages is introduced. This family is comprehensive enough to contain e.g. Algol 60 without admitting too complex recursive constructions possible in the frame of general context-sensitive languages.This family is essentially a family of property-languages  whereby the considered properties are restricted to properties which are constructively definable from a finite number of context-free sets.,2017-03-20
10.1007/BF00289612,A principle of independence for binary tree searching,SummaryWhen searching unsuccessfully for a fixed element in a random binary search tree  the number of comparisons made whose result is “less” is independent from the number of comparisons whose result is “greater”. This principle can be used to compute the mean and variance of the total number of comparisons involved in both a successful and an unsuccessful search.,2020-03-20
10.1007/s00236-006-0013-0,Algebraic Correctness Proofs for Compiling Recursive Function Definitions with Strictness Information,Adding appropriate strictness information to recursive function definitions we achieve a uniform treatment of lazy and eager evaluation strategies. By restriction to first-order functions over basic types we develop a pure stack implementation that avoids a heap even for lazy arguments. We present algebraic definitions of denotational  operational  and stack-machine semantics and prove their equivalence by means of structural induction.,2014-03-20
10.1007/s00236-014-0195-9,An efficient simulation algorithm on Kripke structures,A number of algorithms for computing the simulation preorder (and equivalence) on Kripke structures are available. Let $$\varSigma $$Σ denote the state space  $${\rightarrow }$$→ the transition relation and $$P_{\mathrm {sim}}$$Psim the partition of $$\varSigma $$Σ induced by simulation equivalence. While some algorithms are designed to reach the best space bounds  whose dominating additive term is $$|P_{\mathrm {sim}}|^2$$|Psim|2  other algorithms are devised to attain the best time complexity $$O(|P_{\mathrm {sim}}||{\rightarrow }|)$$O(|Psim||→|). We present a novel simulation algorithm which is both space and time efficient: it runs in $$O(|P_ {\mathrm {sim}}|^2 \log |P_{\mathrm {sim}}| + |\varSigma |\log |\varSigma |)$$O(|Psim|2log|Psim|+|Σ|log|Σ|) space and $$O(|P_{\mathrm {sim}}||{\rightarrow }|\log |\varSigma |)$$O(|Psim||→|log|Σ|) time. Our simulation algorithm thus reaches the best space bounds while closely approaching the best time complexity.,2013-03-20
10.1007/BF00271339,On computing the transitive closure of a relation,"SummaryAn algorithm is presented for computing the transitive closure of an arbitrary relation which is based upon Tarjan's algorithm [7] for finding the strongly connected components of a directed graph. A new formulation  justifying a somewhat simplified statement of the latter  characterises weaker restrictions on the form of the graph traversal than Tarjan's depth first conditions and reveals aspects of the behaviour of this algorithm which have been obscure hitherto.If V is the number of vertices in the directed graph representing the relation then the worst case behaviour  O(V3) is inferior to existing algorithms [1  2] which require O(V3/log V) and 
$$O(V^{log_2 7} log V)$$
 operations respectively. The best case performance  O(V2) operations  is better. Viewed in this way  it is similar to other algorithms [5  6  8] but it combines the improved efficiency in the presence of strongly connected components which characterises the algorithms in [5  6] with the advantages of Warshall's algorithm [8]  namely  succinctness  a single traversal of the directed graph and ability to exploit the availability of Boolean vector operations.",2012-03-20
10.1007/BF01192157,The lattice of data refinement,We define a general notion of data refinement that comprises the traditional notion of data refinement as a special case. Using the concepts of duals and adjoints  we define converse commands and find a symmetry between ordinary data refinement and a dual (backward) data refinement. We show how ordinary and backward data refinement are interpreted as simulation  and we derive rules for the piecewise data refinement of programs. Our results are valid for a general language  including demonic and angelic nondeterminism as well as nontermination and miracles.,2013-03-20
10.1007/s00236-002-0105-4,Fundamentals of control flow in workflows,Abstract. Although workflow management emerged as a research area well over a decade ago  little consensus has been reached as to what should be essential ingredients of a workflow specification language. As a result  the market is flooded with workflow management systems  based on different paradigms and using a large variety of concepts. The goal of this paper is to establish a formal foundation for control-flow aspects of workflow specification languages  that assists in understanding fundamental properties of such languages  in particular their expressive power. Workflow languages can be fully characterized in terms of the evaluation strategy they use  the concepts they support  and the syntactic restrictions they impose. A number of results pertaining to this classification will be proven. This should not only aid those developing workflow specifications in practice  but also those developing new workflow engines.,2014-03-20
10.1007/BF01178585,Decision problems for finite special string-rewriting systems that are confluent on some congruence class,The class of decision problems for which finite  special string-rewriting systems that are confluent on some congruence class effectively provide algorithms is compared to the class of decision problems for which finite  monadic  and confluent string-rewriting systems effectively yield algorithms. Among the decision problems solved are the word problem  the power problem  the left-and right-divisibility problems  the finiteness problem  the group problem  the problem of torsion-freeness  the inclusion problem  and the generalized word problem. In particular  it is shown that the technique of linear sentences of Book [7] applies to finite  special string-rewriting systems that are confluent on some congruence class.,2020-03-20
10.1007/BF00263583,Incremental evaluation for attribute grammars with unrestricted movement between tree modifications,SummaryThis paper concerns the design of editors that perform checks on a language's context-dependent constraints. Our particular concern is the design of an efficient  incremental analysis algorithm for systems based on the attribute-grammar model of editing. With previous incremental evaluation algorithms for arbitrary noncircular attribute grammars  the editing model required there to be a restriction on the operation that moves the editing cursor: moving the cursor was limited to just a single step in the tree — either to the parent node or to one of the child nodes of the current cursor location. This paper describes a new updating algorithm that can be used when an arbitrary movement of the cursor in the tree is permitted. After an operation that restructures the tree  the tree's attributes can be updated with a cost of 0 ((1+¦AFFECTED¦)·√m)  where m is the size of the tree and AFFECTED is the subset of the tree's attributes that require new values  when the cost is amortized over a sequence of tree modifications. the editing cursor may be moved from its current location to any other node of the tree in a single  unit-cost operation. CR Categories and Subject Descriptors: D.2.3 [Software Engineering]: Coding — program editors; D.2.6 [Software Engineering]: Programming Environments; D.3.1 [Programming Languages]: Formal Definitions and Theory — semantics  syntax D.3.4 [Programming Languages]: Processors — translator writing systems and compiler generators F.3.2 [Logics and Meanings of Programs]: Semantics of Programming Languages — denotational semantics.,2017-03-20
10.1007/s00236-010-0125-4,On stateless deterministic restarting automata,The transitions of a stateless automaton do not depend on internal states but solely on the symbols currently scanned by its head accessing the input and memory. We investigate stateless deterministic restarting automata that  after executing a rewrite step  continue to read their tape before performing a restart. Even the weakest class thus obtained contains the regular languages properly. The relations between different classes of stateless automata as well as between stateless automata and the corresponding types of automata with states are investigated  and it is shown that the language classes defined by the various types of deterministic stateless restarting automata without auxiliary symbols are anti-AFLs that are not even closed under reversal.,2012-03-20
10.1007/BF00289249,Van wijngaarden grammars and space complexity class EXSPACE,SummaryTop-down and bottom-up decision strategies for van Wijngaarden grammars led to type R and type L van Wijngaarden grammars. The corresponding language families are now shown to be equal and  furthermore  to equal EXSPACE. Thus  EXSPACE is characterised syntactically  and the closure properties of type L and type R languages are those of EXSPACE.,2016-03-20
10.1007/s00236-015-0228-z,Optimization in temporal qualitative constraint networks,Various formalisms for representing and reasoning about temporal information with qualitative constraints have been studied in the past three decades. The most known are definitely the Point Algebra $$(\mathsf {PA})$$(PA) and the Interval Algebra $$({\mathsf {IA}})$$(IA) proposed by Allen. In this paper  for both calculi  we study a problem that we call the minimal consistency problem $$(\mathsf {MinCons})$$(MinCons). Given a temporal qualitative constraint network $$(\mathsf {TQCN})$$(TQCN) and a positive integer $$k$$k  this problem consists in deciding whether or not this $$\mathsf {TQCN}$$TQCN admits a solution using at most $$k$$k distinct points on the line.We show that $$\mathsf {MinCons}$$MinCons for $$\mathsf {PA}$$PA can be encoded into the finitary versions of Gödel logic. Furthermore  we prove that the $$\mathsf {MinCons}$$MinCons problem is $$\mathsf {NP}$$NP-complete for both $$\mathsf {PA}$$PA and $${\mathsf {IA}}$$IA  in the general case. However  we show that for $$\mathsf {TQCN}$$TQCNs defined on the convex relations  $$\mathsf {MinCons}$$MinCons is polynomial. For such $$\mathsf {TQCN}$$TQCNs  we give a polynomial method that allows one to obtain compact scenarios.,2017-03-20
10.1007/s00236-010-0116-5,A note on autodense related languages,In this paper  some algebraic properties of autodense languages and pure autodense languages are studied. We also investigate the algebraic properties concerning anti-autodense languages. The family of anti-autodense languages contains infix codes  comma-free codes  and some subfamilies of new codes which are anti-autodense prefix codes  anti-autodense suffix codes and anti-autodense codes. The relationships among these subfamilies of new codes are investigated. The characterization of Ln  n ≥ 2  which are anti-autodense is studied.,2014-03-20
10.1007/BF00260924,Bounded quantification and relations recognizable by finite automata,SummaryThe concept of inverse well-known for homomorphisms and gsm-mappings is extended to any language operation. The class IRP of language operations whose inverse preserves regularity is considered. As an application a necessary and sufficient condition is established for the class of relations recognizable by finite automata to be closed under different versions of bounded quantification.,2011-03-20
10.1007/BF00264495,A characterization of attribute evaluation in passes,SummaryThis paper describes the evaluation of semantic attributes in a bounded number of passes from left-to-right and/or from right-to-left over the derivation tree of a program. Evaluation strategies where different instances of the same attribute in any derivation tree are restricted to be evaluated in one pass  with for every derivation tree the same pass number  are referred to as simple multi-pass whereas the unrestricted pass-oriented strategies are referred to as pure multi-pass.A graph theoretic characterization is given  showing in which cases an attribute grammar meets the simple multi-pass requirements and what are the minimal pass numbers of its attributes for a given sequence of pass directions. For the special cases where only left-to-right passes are made or where left-to-right and right-to-left passes strictly alternate  new algorithms are developed that associate minimal pass numbers with attributes and indicate in case of failure the attributes that cause the rejection of the grammar. Mixing of a simple multi-pass strategy with other evaluation strategies  in case the grammar is not simple multi-pass  is discussed.,2020-03-20
10.1007/BF00263930,Standard model semantics for DSL a data type specification language,"SummaryWe discuss a data type specification language DSL(∑) which is obtained from the first order language L(∑) for a given signature ∑ by augmenting it with schemes.A specification is a pair (∑  
$$\mathbb{F}$$
) with 
$$\mathbb{F}$$
 a finite set of axioms in DSL(∑). As semantics of such specifications we propose: standard model semantics  SMS.We investigate DSL/SMS as a specification mechanism for data types and compare it with both first order and algebraic specifications. A concise theory of parametrized data types is developed in this context.",2014-03-20
10.1007/s00236-006-0035-7,Hybridization methods for the analysis of nonlinear systems,In this article  we describe some recent results on the hybridization methods for the analysis of nonlinear systems. The main idea of our hybridization approach is to apply the hybrid systems methodology as a systematic approximation method. More concretely  we partition the state space of a complex system into regions that only intersect on their boundaries  and then approximate its dynamics in each region by a simpler one. Then  the resulting hybrid system  which we call a hybridization  is used to yield approximate analysis results for the original system. We also prove important properties of the hybridization  and propose two effective hybridization construction methods  which allow approximating the original nonlinear system with a good convergence rate.,2018-03-20
10.1007/s00236-016-0287-9,Dynamic Bayesian networks for formal verification of structured stochastic processes,We study the problem of finite-horizon probabilistic invariance for discrete-time Markov processes over general (uncountable) state spaces. We compute discrete-time  finite-state Markov chains as formal abstractions of the given Markov processes. Our abstraction differs from existing approaches in two ways: first  we exploit the structure of the underlying Markov process to compute the abstraction separately for each dimension; second  we employ dynamic Bayesian networks (DBN) as compact representations of the abstraction. In contrast  approaches which represent and store the (exponentially large) Markov chain explicitly incur significantly higher memory requirements. In our experiments  explicit representations scaled to models of dimension less than half the size as those analyzable by DBN representations. We show how to construct a DBN abstraction of a Markov process satisfying an independence assumption on the driving process noise. We compute a guaranteed bound on the error in the abstraction w.r.t. the probabilistic invariance property—the dimension-dependent abstraction makes the error bounds more precise than existing approaches. Additionally  we show how factor graphs and the sum-product algorithm for DBNs can be used to solve the finite-horizon probabilistic invariance problem. Together  DBN-based representations and algorithms can be significantly more efficient than explicit representations of Markov chains for abstracting and model checking structured Markov processes.,2020-03-20
10.1007/s002360000044,Analysis of range search for random k-d trees,Abstract. We analyze the expected time complexity of range searching with k-d trees in all dimensions when the data points are uniformly distributed in the unit hypercube. The partial match results of Flajolet and Puech are reproved using elementary probabilistic methods. In addition  we give asymptotic expected time analysis for orthogonal and convex range search  as well as nearest neighbor search. We disprove a conjecture by Bentley that nearest neighbor search for a given random point in the k-d tree can be done in O(1) expected time.,2018-03-20
10.1007/BF00264599,Remarks on “some comments on concurrent readers and writers” by Reidar Conradi,SummaryThe Synchronization primitive P* was introduced by Conradi in order to present a more compact and efficient algorithm for synchronization of concurrent readers and writers. Unfortunately  Conradi's solutions fail when the conventional definitions of semaphores are used in conjunction with this primitive. This paper proposes a definition of the semaphore operations P  V and P* that make Conradi's readers-writers solutions correct. This definition is compatible with the definition given by Dijkstra.,2020-03-20
10.1007/BF00289068,The Schorr-Waite graph marking algorithm,SummaryAn explanation is given of the Schorr-Waite algorithm for marking all nodes of a directed graph that are reachable from one given node  using the axiomatic method.,2019-03-20
10.1007/s00236-013-0181-7,A distributed resource allocation algorithm for many processes,Resource allocation is the problem that a process may enter a critical section CS of its code only when its resource requirements are not in conflict with those of other processes in their critical sections. For each execution of CS  these requirements are given anew. In the resource requirements  levels can be distinguished  such as e.g. read access or write access. We allow unboundedly many processes that communicate by reliable asynchronous messages and have finite memory. A simple starvation-free solution is presented. Processes only wait for one another when they have conflicting resource requirements. The correctness of the solution is argued with invariants and temporal logic. It has been verified with the proof assistant PVS.,2013-03-20
10.1007/BF00288748,On 3-head versus 2-head finite automata,SummaryA direct proof is given that shows that (one-way) 3-head deterministic finite automata are computationally more powerful than 2-head finite automata.,2019-03-20
10.1007/s002360050145,Amortized constant relaxed rebalancing using standard rotations,Abstract. The idea of relaxed balance is to uncouple the rebalancing in search trees from the updating in order to speed up request processing in main-memory databases. This paper defines the first relaxed binary search tree with amortized constant rebalancing using only standard single or double rotations.,2020-03-20
10.1007/BF00571461,EfficientLR (1) parsers,"SummaryKnuth'sLR(1) parsing algorithm is sufficiently general to handle the parsing of most programming languages with the additional benefit of earlier detection of syntax errors than in other formal methods used in compilers. The major obstacle impeding the use of this algorithm is the large space requirement for parsing tables. In addition  certain optimisations described here  which increase parsing speed  exacerbate the space problem.Two approaches for overcoming this problem are explored.1.Using parsers related to theLR(1) parser which parse a large subset of theLR(1) grammars  but which have much smaller parsing tables.2.Devising compact encodings and performing space optimisations on these tables.
Time and space efficiency is evaluated using the Stanford University Algol W compiler as a base for comparison since the parsing routine in this compiler is among the more efficient presently used.",2011-03-20
10.1007/s002360050092,Performance analysis of parallel programs based on directed acyclic graphs,"Abstract. Task precedence graphs are widely used for modeling and evaluation of parallel applications. Their nodes represent the subtasks of the parallel program and the edges represent the precedence relations between the subtasks. The execution times of the subtasks are described by random variables and their distributions. In our paper we introduce a new class of distributions  particularly suited for the modeling and evaluation of parallel programs.
Exponential polynomials introduced by Sahner and Trivedi have the disadvantage that a large number of parameters is needed for the representation of realistic task execution times  which usually have a small value of variation. We extend this class to derive the class of truncated 
$\theta$-exponential polynomials which allow the representation of realistic task execution times with fewer parameters. Additionally this class of distributions has the advantage that minimum as well as maximum execution times can be guaranteed.
Models with a large number of subtasks 
$n$ can not be evaluated on a computer using exact analytical methods because of memory requirements and numerical inaccuracies  which accumulate  when the operations of analysis are applied. Using extreme value theory we derive approximate formulas for the parallel independent execution of 
$n$ subtasks  a structure  which can be found in every parallel program. The obtained results for truncated and not truncated distributions show  that distributions with an infinite domain are not suitable  particularly for massively parallel structures.",2011-03-20
10.1007/BF00264581,The multiple phase service network with generalized processor sharing,SummaryAn analysis is given of multiple phase service facilities of which queueing networks are special models  for the case of a service discipline to be denoted as generalized processor sharing. Under this discipline requests are served simultaneously with a rate depending on the phase and the number of requests present here. The model is of a very general type  its analysis is given for arbitrary routing matrices and absolutely continuous required service time distributions. The mathematical technique used is that of the supplementary variable. Generalisations of known results for closed and open networks are obtained and new results about the average sojourn time of a request in the system are derived  in particular for requests with given route and given processing times at the nodes of the route. Some basic results about reversed processes and departure processes are discussed. For a special but important model the workload is discussed.,2011-03-20
10.1007/s002360050128,A logic-based approach to program flow analysis,Abstract. A formalism is presented for tracking assertions which hold universally  i.e.  at the end of all the execution paths to a given program point  and assertions which hold existentially  i.e.  at the end of some execution paths. In the formalism  the assertions which hold at a given execution path are uniformly defined by an entry environment which contains the assertions which hold when the execution of the program begins and an environment transformer for every program construct. The novel aspect of our formalism is that Horn clauses are used to specify the consistent environments and the meaning of program constructs. The best iterative algorithm (a notion defined by P. Cousot and R. Cousot) for tracking universal and existential assertions simultaneously is given. Conditions are presented under which the best iterative algorithm can be efficiently implemented. The formalism is applied to the pointer equality problem in Pascal. It is shown that universal pointer equalities may be used to reduce the number of superfluous existential equalities  and that existential equalities may be used to obtain more universal equalities. Recent empirical results indicate that tracking the combination of may and must equalities leads to substantial improvements in the result of the analysis. For programs without recursively defined records  the best iterative algorithm can be effectively implemented. These results apply to multiple levels of pointers and can be extended to handle possibly recursive procedures. However  for programs with recursively defined data types further approximations are necessary  e.g.  by using a finite graph to model all the possible pointer equalities. For simplicity  this paper does not present an analysis algorithm for this case.,2018-03-20
10.1007/BF00289138,LALR(1  1) parser generation for regular right part grammars,SummaryCommonly used extensions to BNF can be modelled by the formalism of regular right part grammars. A method for building LR parsers for such grammars is given  which works by first constructing an LR(0) automaton and then augmenting it with readback machines constructed to recognize the reverse of the state sequences leading to a reduction. The state sequences which will be accepted by such readback machines are also the sequences which link reductions to their lookback states (states in which the parser may be re-started after the reduction)  which are needed in order to compute LALR(1) lookahead sets using the algorithm devised recently by DeRemer and Pennello.An algorithm is presented which computes these lookback states using the structure of the LR(0) automaton  and it is shown how this can easily be extended to build readback machines at the same time.,2014-03-20
10.1007/BF00265765,Multitype multiprogramming models,SummaryWe have presented models for multitype job traffic in a simple cyclic queueing model of a multiprogramming computer system (termed MM models)  and have shown how such models may yield numerical results by use of a variation of the Gauss-Seidel iteration algorithm. Lastly  we have indicated the manner in which a simple Gordon and Newell Markov model be fitted to MM data  and have shown that satisfactory predictions of some system characteristics may be obtained thereby.,2019-03-20
10.1007/BF00288470,Deterministic grammars and grammar morphisms,SummaryThe present categorial approach to bottom-up parsing context free grammars treats two aspects of determinism. One is an abstraction of grammatical determinism from actual parsing strategies. The other is the transfer of determinism under grammar transformations. The approach is based on the characterization of a parse step as categorial limit  which on the one hand yields a convenient pattern for grammar type definition  and leads on the other hand in a transparent way to invariance results on deterministic grammars under homomorphic transformations.,2020-03-20
10.1007/s00236-008-0083-2,Semi-synchronous transductions,Semi-synchronously rational relations generalise synchronised rational relations in a natural way. We discuss here some of their basic properties  among them a “Cobham–Semenov-like” dichotomy theorem. Our main result is a characterisation of bijective semi-synchronously rational transductions as those bijections mapping regular relations to regular ones and non-regular relations to non-regular ones.,2013-03-20
10.1007/s002360050168,A complete algebraic characterization of behavioral subtyping,Abstract. We present a model-theoretic study of correct behavioral subtyping for first-order  deterministic  abstract data types with immutable objects. For such types  we give a new algebraic criterion for proving correct behavioral subtyping that is both necessary and sufficient. This proof technique handles incomplete specifications by allowing proofs of correct behavioral subtyping to be based on comparison with one of several paradigmatic models. It compares a model to a selected paradigm with a generalization of the usual notion of simulation relations. This generalization is necessary for specifications that are not term-generated and that use multiple dispatch. However  we also show that the usual notion of simulation gives a necessary and sufficient proof technique for the special cases of term-generated specifications and specifications that only use single dispatch.,2018-03-20
10.1007/BF00289092,Procédures de reprise dans les systèmes de gestion de base de données réparties,SummaryIn this paper  two recovery techniques used to restore the integrity of the distributed database management system operating in the presence of intermittent failures and with a checkpointing and roll-back recovery scheme are analysed and compared. A mathematical model of the distributed database management system is proposed to evaluate its disponibility at the updating and interrogating operations in the case of one  two  three and four distributed copies. Numerical illustrations are presented and it is shown that the recovery procedure based on the transfert of the valid copies across the network is better in some given conditions of processing of the distributed database management system.,2012-03-20
10.1007/BF00288746,Automatic program verification I: A logical basis and its implementation,SummaryDefining the semantics of programming languages by axioms and rules of inference yields a deduction system within which proofs may be given that programs satisfy specifications. The deduction system herein is shown to be consistent and also deduction complete with respect to Hoare's system. A subgoaler for the deduction system is described whose input is a significant subset of Pascal programs plus inductive assertions. The output is a set of verification conditions or lemmas to be proved. Several non-trivial arithmetic and sorting programs have been shown to satisfy specifications by using an interactive theorem prover to automatically generate proofs of the verification conditions. Additional components for a more powerful verification system are under construction.,2018-03-20
10.1007/BF00265219,The synchronization of independent processes,SummaryThis paper considers the problem of programming a multiple process system so that it continues to operate despite the failure of individual processes. A powerful synchronizing primitive is defined  and it is used to solve some sample problems. An algorithm is then given which implements this primitive under very weak assumptions about the nature of interprocess communication  and a careful informal proof of its correctness is given.,2015-03-20
10.1007/BF00265678,The semigroups of linearly realizable finite automata. I,SummaryFirst the problem is solved how one can decide whether an arbitrary finite semigroup H is linearly A-realizable  i.e.  whether there exists a linearly realizable finite automaton having a semigroup isomorphic to H. This leads to a question about the existence of certain generating subsets of H. The determination of these subsets is rather complicated in case H-HH=Ø and very simple in case H-HH#Ø. But in the first case we are able to clear up completely the structure of the semigroups which are linearly A-realizable: These are exactly the finite right groups which have maximal subgroups of the type described by Ecker in [4]. In the second case we get only necessary structure conditions. Among other things we shall see: If a semigroup H is linearly A-realizable one can define a congruence relation ρ on it having the property  that H is isomorphic to a semigroup of a strongly connected and linearly realizable automaton iff the so-called index of H equals the index of H/ρ. Developing these results about semigroups we obtain at the same time many structure theorems about linearly realizable automata.,2012-03-20
10.1007/s00236-014-0202-1,Exploiting a hypergraph model for finding Golomb rulers,Golomb rulers are special rulers where for any two marks it holds that the distance between them is unique. They find applications in radio frequency selection  radio astronomy  data encryption  communication networks  and bioinformatics. An important subproblem in constructing “compact” Golomb rulers is Golomb Subruler  (GSR)  which asks whether it is possible to make a given ruler Golomb by removing at most $$k$$k marks. We initiate a study of GSR from a parameterized complexity perspective. In particular  we consider a natural hypergraph characterization of rulers and investigate the construction and structure of the corresponding hypergraphs. We exploit their properties to derive polynomial-time data reduction rules that reduce a given instance of GSR to an equivalent one with $${{\mathrm{O}}}(k^3)$$O(k3) marks. Finally  we complement a recent computational complexity study of GSR by providing a simplified reduction that shows NP-hardness even when all integers are bounded by a polynomial in the input length.,2011-03-20
10.1007/BF00263586,Choosing a storage schema,SummaryIn using a general-purpose language such as PL/I  a data base management system such as IMS  or a special-purpose language such as SNOBOL  program designers must decide on strategies for storing their data. This paper contains a description of an algorithm for choosing suitable data linking methods from a class of available storage schemata. Emphasis is placed on specifying the types of parameters which are involved in this choice  such as the volatility of the data  the density of the keys  and the amount of storage available.,2015-03-20
10.1007/s002360050049,Parallel Approximation Schemes for problems on planar graphs,This paper describes a technique to obtain NC Approximations Schemes for the Maximum Independent Set in planar graphs and related optimization problems. The strategy consists in decomposing the graph into K-outerplanar subgraphs and solve for each K-outerplanar using tree contraction techniques.,2013-03-20
10.1007/BF00289310,A gap between the actual complexity of permutations and their entropy defined by Stoß,SummaryWe will construct a family of permutations having an entropy of lower order than their actual rearrangement-complexity. This result is a solution of an open problem that arose in the context of a result obtained by Stoß [6]  who showed that entropy yields a lower bound for complexity of permutations. Besides this we present some interesting results concerning the entropy of permutations defined by Stoß [6].,2014-03-20
10.1007/BF01178578,Contextual rewriting as a sound and complete proof method for conditional LOG-specifications,In this paper we provide foundations to contextual rewriting. We present the class of LOG-specifications  which may be seen  essentially  as a variety of conditional specifications  which may be seen  essentially  as a of LOG-specifications are LOG-algebras  i.e. algebras satisfying that their boolean part coincides with the boolean algebra of two elements. With respect to this semantics  a proof-system called L is presented characterizing logical consequence proof-theoretically. Then  we show that  under adequate assumptions of confluence and finite termination  contextual rewriting is a complete method for this kind of specifications.,2015-03-20
10.1007/s00236-009-0102-y,STG decomposition strategies in combination with unfolding,For synthesising efficient asynchronous circuits one has to deal with the state space explosion problem. In order to alleviate this problem one can decompose the STG into smaller components. This paper deals with the decomposition method of Vogler and Wollowski and introduces several strategies for its efficient implementations. Furthermore  this approach is combined with another method to alleviate state space explosion  which is based on Petri net unfoldings. The developed algorithms are compared by means of benchmark examples  and the experimental results show significant improvement in terms of memory usage and runtime compared with other existing methods.,
10.1007/BF00263648,A functional model for describing and reasoning about time behaviour of computing systems,SummaryWe present a mathematical model of parallel and real time systems behaviour  suitable for problem specification  and for implementation description  analysis and proof. On one hand  this model allows a pure behavioural description mode  and on the other hand it takes into account a metric notion of time. A system is considered as a history transformer  and the history of a variable consists of the sequence of values assigned to it  together with the sequence of times when these assignments take place. A set of tools is proposed  in order to describe such histories  and to perform proofs about them. This model is illustrated by the specification  the description and the proof of a distributed bus arbiter.,2014-03-20
10.1007/BF03036462,Chromatic binary search trees,We propose a new rebalancing method for binary search trees that allows rebalancing and updating to be uncoupled. In this way we obtain fast updates and  whenever the search tree is accessed by multiple users  a high degree of concurrency. The trees we use are obtained by relaxing the balance conditions ofred-black trees. The relaxed red-black trees  calledchromatic trees  contain information of possible imbalance such that the rebalancing can be done gradually as a shadow process  or it can be performed separately when no urgent operations are present.,2020-03-20
10.1007/BF00264362,The undecidability of the unification and matching problem for canonical theories,SummaryThe problem whether there exists a unifying substitution for two terms is considered in the class of theories which can be embedded into canonical term rewriting systems. The problem is shown to be undecidable  even if we restrict the substitutions to matching ones. This implies that the class of admissible canonical theories is a proper subset of the class of canonical theories.,2012-03-20
10.1007/BF00572990,A maximum entropy priority approximation for a stableG/G/1 queue,SummaryThe principle of maximum entropy is used under two different sets of mean value constraints to analyse a stableG/G/1 queue withR priority classes under preemptive-resume (PR) and non-preemptive head-of-line (HOL) scheduling disciplines. New one-step recursions for the maximum entropy state probabilities are established and closed form approximations for the marginal queue length distribution per priority class are derived. To expedite the utility of the maximum entropy solutions exact analysis  based on the generalised exponential (GE) distribution  is used to approximate the marginal mean queue length and idle state probability class constraints for both the PR and HOLG/G/1 priority queues. Moreover  these results are used as building blocks in order to provide new approximate formulae for the mean and coefficient of variation of the effective priority service-time and suggest a maximum entropy algorithm for general open queueing networks with priorities in the context of the reduced occupancy approximation (ROA) method. Numerical examples illustrate the accuracy of the proposed maximum entropy approximations in relation to simulations involving different interarrival-time and service-time distributions per class. Comments on the extension of the work to more complex types of queueing systems are included.,2016-03-20
10.1007/s00236-005-0178-y,safeDpi: a language for controlling mobile code,AbstractsafeDpi is a distributed version of the Picalculus  in which processes are located at dynamically created sites. Parametrised code may be sent between sites using so-called ports  which are essentially higher-order versions of Picalculus communication channels. A host location may protect itself by only accepting code which conforms to a given type associated to the incoming port.We define a sophisticated static type system for these ports  which restrict the capabilities and access rights of any processes launched by incoming code. Dependent and existential types are used to add flexibility  allowing the behaviour of these launched processes  encoded as process types  to depend on the host's instantiation of the incoming code.We also show that a natural contextually defined behavioural equivalence can be characterised coinductively  using bisimulations based on typed actions. The characterisation is based on the idea of knowledge acquisition by a testing environment and makes explicit some of the subtleties of determining equivalence in this language of highly constrained distributed code.,2014-03-20
10.1007/BF00289113,A workload model representative of static and dynamic characteristics,SummaryA technique to implement a workload model that must be representative of both static and dynamic characteristics of a workload is presented. The main goal of this work is the construction of a representative and compact artificial workload model. The approach taken is first to assign the set of workload components to classes having homogeneous static (i.e.  load-independent) characteristics using clustering and then to model the dynamic sequence of components execution with a suitable stochastic process. The representativeness of such a workload model may be verified applying the physically or the function-oriented criteria for the static aspects and the performance-oriented criterion for the dynamic aspects considered. The results of an experimental application of this technique to model the workload of a university environment are presented.,2014-03-20
10.1007/BF01178512,Deterministic asynchronous automata for infinite traces,This paper shows the equivalence between the family of recognizable languages over infinite traces and the family of languages which are recognized by deterministic asynchronous cellular Muller automata. We thus give a proper generalization of McNaughton's Theorem from infinite words to infinite traces. Thereby we solve one of the main open problems in this field. As a special case we obtain that every closed (w.r.t. the independence relation) word language is accepted by someI-diamond deterministic Muller automaton.,2015-03-20
10.1007/s002360100076,Object type constructors,Abstract. Object type constructors are a model for container objects in typed object-oriented programming languages. Object type constructors solve the difficulties with combining container objects with type inference and parametric polymorphism  the latter of which are used very successfully in functional languages such as ML and Haskell. The semantics of object type constructors introduces a new object cloning operation for container objects with method update  motivated by concerns independent of type inference.,2019-03-20
10.1007/BF00279951,Inductive completion with retracts,SummaryIn this paper we give countably infinitely many extensions of Huet and Hullot's inductive completion procedure. Also we try and throw some light on the problem of functions which are only partially defined by some set of rewrite rules. We also give a procedure which attempts to show that two derived F-algebras are isomorphic when both of the algebras are realised as retracts.,2016-03-20
10.1007/s002360100077,Containment and disjointedness in partitioned normal form relations,Abstract. Containment and disjointedness are two important properties in the updating materialized views. Disjointedness means that the set of tuples to be inserted in the view are disjoint from the view  and containment means that the tuples to be deleted from the view are contained in the view. In this paper we consider how to extend the definition of containment and disjointedness from flat relations to nested relations which are in partitioned normal form. The two correctness requirements that we place on our definitions are that they must be faithful and precise; where faithful means that the definition should coincide with the corresponding definition for flat relations when the nested relations are flat  and precise means that the definition should coincide with the corresponding definition for flat relations after performing a total unnest on the nested relation. We then propose definitions for disjointedness and containment for partitioned normal form relations and prove that the definitions proposed are faithful and precise. We also show that simple set based extensions of the definitions for flat relations are not correct since they are not precise.,2019-03-20
10.1007/BF00263764,Eliminating unit productions from LR parsers,SummaryIn this paper we show how one can improve upon an algorithm by Aho and Ullman [3] for eliminating unit productions from an LR(k) parser so that the elimination concerned can be made in all cases  instead of only in the special case required by [3] where no two unit productions have the same left-hand side. In most practical grammars this special case does not in fact arise. Since the elimination of unit productions both reduces the size of the parser and increases its speed  it is of value to have a general method for achieving this objective.The algorithm provided eliminates from the parser all nonterminals that occur as left-hand sides of unit productions. This substantially contributes to the reduction in size obtained  and also provides a solution to an open problem by Aho and Ullman [3]. An application of the Algorithm to the parser construction method of Pager [19] is considered  and a method is provided for the use of default reductions and the elimination of final states in conjunction with the elimination of unit reductions. The sizes of the parsers obtained using the parser's algorithm are compared with those of Anderson  Eve  and Horning [4].,2018-03-20
10.1007/s00236-004-0146-y,Random sprouts as internet models  and Pólya processes,Abstract.The sprout  a tree growing in real time is introduced. The sprout is a generalization and an embedding in time of the standard recursive tree. The sprout is proposed as a model for the growth of the Internet. The tree size is analyzed via an associated two-color stochastic process (the sprout process)  which is a special case of the Pólya process. Owing to its potential as a modeling tool  the more general Pólya process is analyzed on average. In addition to the usage of the Pólya process in evaluating sprouts  we also give a heuristic interpretation of the result for Pólya urns  which might be a first step toward understanding several nonclassic urn models  as those with nonconstant row sum and those with multiple eigenvalues.,2012-03-20
10.1007/BF00288467,A logic for the specification and proof of regular controllable processes of CCS,SummaryThis work has been motivated by the following general problem: find logics for the specification and proof of programs  described by terms of some algebra with given congruence relation. This relation is supposed to define a satisfactory concept for the behavioural comparison of programs. We require these logics to be adequate with respect to the term language  in the sense that two programs  behaviourally equivalent satisfy the same formulas and conversely. The term language considered is the subset of controllable  regular terms of CCS  on a vocabulary of actions A  with observational congruence. A term is said to be controllable if it is congruent to some term without occurrence of τ. We obtain an adequate logic whose language of formulas is obtained from constants true  false and ¦Nil¦ by using operators ∨  ∧  fixpoint operators  + and a for a∈A; the latter can be considered as extensions of the operators + and a for a∈A of CCS. As a result  controllable CCS terms can be considered as formulas of this logic and the problem of program verification is reduced to the proof of the validity of a formula.,2016-03-20
10.1007/s002360050044,Short resolution proofs for a sequence of tricky formulas,A class of propositional formulas  encoding the property that every finite  transitive digraph with no two-cycles must have a source  has been investigated by Krishnamurty and conjectured as hard for resolution. In this note we prove  opposed to that conjecture  that there are proofs of polynomial lengths (or even linear in the lengths of the formulas) of those formulas.,2020-03-20
10.1007/PL00013305,Running a job on a collection of partly available machines  with on-line restarts,We consider the problem of running a background job on a selected machine of a collection of machines. Each of these machines may become temporarily unavailable (busy) without warning. If the currently selected machine becomes unavailable  the scheduler is allowed to restart the job on a different machine. The behaviour of machines is characterized by a Markov chain  which can be compared to [6]. The objective is to minimize the expected completion time of the job. For several types of Ma rkov chains  we present elegant and optimal policies.,2018-03-20
10.1007/BF00288684,A comparison of two synchronizing concepts,SummaryIn this paper the use of semaphores and critical regions to synchronize concurrent processes is compared to a more recent proposal for so-called conditional critical regions. The latter concept permits the programmer to express directly that a process must be delayed until a certain condition holds before entering a critical region. The paper describes a well-structured notation for these. synchronizing concepts and uses both of them to solve a typical resource allocation problem. The two solutions are compared by outlining proofs of their correctness. A fairly long argument is needed to justify the solution which uses semaphores. In contrast  the solution based on conditional critical regions is so obvious that a proof is hardly needed. The paper concludes by explaining why programs using semaphores in general will be much more obscure than programs using conditional critical regions.,2020-03-20
10.1007/BF00292111,Parallel approximation schemes for Subset Sum and Knapsack problems,SummaryThis paper presents parallel approximation schemes for the Subset Sum  0–1 Knapsack  and several other optimization problems. These algorithms offer a three-way trade-off among parallel time  the accuracy of the solution  and the number of processors used. The maximum numbers of processors which can be usefully employed depend on n (the size of the input)  and the accuracy requirement ɛ. The parallel running times of the algorithms are polynomial in both log n and log(1/ɛ) when enough processors are used.,2014-03-20
10.1007/s002360050153,Transformational design of real-time systems Part I: From requirements to program specifications,Abstract. In the two parts of this article a transformational approach to the design of distributed real-time systems is presented. The starting point are global requirements formulated in a subset of Duration Calculus called implementables and the target are programs in an OCCAM dialect PL. In the first part we show how the level of program specifications represented by a language SL can be reached. SL combines regular expressions with ideas from action systems and with time conditions  and can express the distributed architecture of the implementation. While Duration Calculus is state-based  SL is event-based  and the switch between these two worlds is a prominent step in the transformation from implementables to SL. Both parts of the transformational calculus rely on the mixed term techniques by which syntax pieces of two languages are mixed in a semantically coherent manner. In the first part of the article mixed terms between implementables and SL and in the second part of the article mixed terms between SL and PL are used. The approach is illustrated by the example of a computer controlled gas burner.,2011-03-20
10.1007/BF00264229,An algorithm for merging meaps,SummaryWe present an algorithm to merge priority queues organized as heaps. The worst case number of comparisons required to merge two heaps of sizes k and n is O(log(n)*log(k)). The algorithm requires O(k) +log(n)*log (k)) data movements if heaps are implemented using arrays and O(log(n)*log(k)) for a pointer-based implementation. Previous algorithms require either O(n+k) data movements and comparisons  or O(k*log(log(n+k))) comparisons and O(k*log(n+k)) data movements. The algorithm presented in this paper improves on the previous algorithms for the case when k>log(n).,2011-03-20
10.1007/BF00263988,A new lower bound on the monotone network complexity of Boolean sums,SummaryNeciporuk [3]  Lamagna/Savage [1] and Tarjan [6] determined the monotone network complexity of a set of Boolean sums if each two sums have at most one variable in common. By this result they could define explicitely a set of n Boolean sums which depend on n variables and whose monotone complexity is of order n3/2. In the main theorem of this paper we prove a more general lower bound on the monotone network complexity of Boolean sums. Our lower bound is for many Boolean sums the first nontrivial lower bound. On the other side we can prove that the best lower bound which the main theorem yields is the n3/2-bound cited above. For the proof we use the technical trick of assuming that certain functions are given for free.,2011-03-20
10.1007/BF00288935,The stability problem of broadcast packet switching computer networks,SummaryCertain computer networks have been implemented using a radio broadcast frequency over which a large set of terminals are allowed to transmit packets of bits; one such example is the ALOHA computer network [1]. In such systems  a basic problem is that of the blocking of terminals whose transmission of a packet has overlapped in time with transmission by some other terminal. In this paper we consider a “slotted ALOHA” packet transmission scheme with an infinite set of terminals each transmitting at an infinitesimally small rate. We present a probabilistic model of such a system to show that the slotted ALOHA system with an infinite population is inherently unstable. This paper confirms the simulations and results of Kleinrock and Lam [8].,2020-03-20
10.1007/BF00263502,A note on synthesis and classification of sorting algorithms,SummarySorting algorithms are traditionally classified according to their main operational characteristic. More recently  program synthesis has been used as a basis for classification. We briefly survey previous work in the synthesis and classification of sorting algorithms  and outline a more comprehensive scheme derived by synthesising many sorting algorithms in a top-down fashion on a semi-automated logic programming system.,2012-03-20
10.1007/BF02983372,Nested satisfiability,SummaryA special case of the satisfiability problem  in which the clauses have a hierarchical structure  is shown to be solvable in linear time  assuming that the clauses have been represented in a convenient way.,2017-03-20
10.1007/s00236-006-0033-9,An exact subexponential-time lattice algorithm for Asian options,Asian options are popular financial derivative securities. Unfortunately  no exact pricing formulas exist for their price under continuous-time models. Asian options can also be priced on the lattice  which is a discretized version of the continuous- time model. But only exponential-time algorithms exist if the options are priced on the lattice without approximations. Although efficient approximation methods are available  they lack accuracy guarantees in general. This paper proposes a novel lattice structure for pricing Asian options. The resulting pricing algorithm is exact (i.e.  without approximations)  converges to the value under the continuous-time model  and runs in subexponential time. This is the first exact  convergent lattice algorithm to break the long-standing exponential-time barrier.,2013-03-20
10.1007/PL00013312,Parallel communicating grammar systems with terminal transmission,Summary. We introduce a new variant of PC grammar systems  called PC grammar systems with terminal transmission  PCGSTT for short. We show that right-linear centralized PCGSTT have nice formal language theoretic properties: they are closed under gsm mappings (in particular  under intersection with regular sets and under homomorphisms) and union; a slight variant is  in addition  closed under concatenation and star; their power lies between that of n-parallel grammars introduced by Wood and that of matrix languages of index n  and their relation to equal matrix grammars of degree n is discussed. We show that membership for these language classes is complete for NL. In a second part of the paper  we discuss questions concerning grammatical inference of these systems. More precisely  we show that PCGSTT whose component grammars are terminal distinguishable right-linear  a notion introduced by Radhakrishnan and Nagaraja in [33 34]  are identifiable in the limit if certain data communication information is supplied in addition.,2018-03-20
10.1007/BF00288645,Context-free grammars with selective rewriting,SummarySelective substitution grammars first introduced by Rozenberg are further investigated. In particular we study ‘context-free grammars’ with selection  since the original model is too general in its generative power. It is shown how the families of context-free  EOL and ETOL languages can be characterized by selective context-free grammars. Further the effect of linguistic restrictions on the family of selection languages is investigated. Finally  the notion of a universal grammar is investigated in this framework  demonstrating the existence of selection universal grammars under weak conditions on the selection family.,2014-03-20
10.1007/s00236-012-0175-x,Deterministic pushdown-CD-systems of stateless deterministic R(1)-automata,Abstract Recently the one-counter trace languages and the context-free trace languages have been characterized through restricted types of cooperating distributed systems (CD-systems) of stateless deterministic restarting automata with window size one (so-called stl-det-R(1)-automata) that work in mode ‘=1’ and that use an external counter or pushdown store to determine the successor components within computations. Here we study the deterministic variants of these CD-systems  comparing the resulting language classes to the classes of languages defined by CD-systems of stl-det-R(1)-automata without such an external device and to some classical language families  among them in particular the classes of rational  one-counter  and context-free trace languages. In addition  we present a large number of (non-)closure properties for our language classes.,2019-03-20
10.1007/BF00289515,Automatic analysis of inflectional morphems in German nouns,"SummaryThe underlying algorithm can be used for automatic indexing. It is supposed to analyze every inflected German noun automatically by reducing it to its proper standard form and by distinguishing every inflected noun from non-inflected ones. The algorithm starts out with two presuppositions:1.Nouns first of all must be considered to be the key words for automatic indexing as they contain the most relevant information of all parts of speech  and as they have statistically the greatest frequency.2.Since in German we use capital letters for every noun we are able to distinguish homographs of parts of speech to a large extent.
The testwords are to be looked up in an automatic dictionary and after the complete analysis we get either the correct analysis of the testword or the result that the testword is not contained in the dictionary. The algorithm uses a maximum of four pieces of information with every word: inflectional group singular (1–9)  inflectional group plural (1–10); information about the umlaut in the plural or/and the change of β to S S both depending on the inflectional system. The algorithm is supposed to give the following results:1.The correct analysis of every German noun including foreign words  loan words and exceptions.2.Automatic recognition of inflected and non-inflected noun homographs.3.The impossibility of wrong analyses.4.The algorithm works with a minimum of dictionary operations.5.The dictionary can be relatively small according to the number of special terms which the specialist considers necessary for his field or for his special task.",2013-03-20
10.1007/BF00288886,Data encodings and their costs,SummaryThis paper is devoted to developing and studying a precise notion of the “encoding” of a “logical data structure” in a “physical storage structure ” that is motivated by considerations of computational efficiency. The development builds upon the notion of an encoding of one graph in another. The cost of such an encoding is then defined so as to reflect the structural compatibility of the two graphs  the (externally specified) costs of “implementing” the host graph  and the (externally specified) set of intended “usage patterns” of the guest graph. The stability of the constructed framework is demonstrated in terms of a number of results; the faithfulness of the formalism is argued in terms of a number of examples from the literature; and the tractability of the model is hinted at by several results and by further references to the literature.,2015-03-20
10.1007/BF00268843,Fifo nets without order deadlock,SummaryWe introduce a generalisation of free choice nets to fifo. These fifo nets are free from deadlocks caused by the order of messages in fifo queues. We describe some tools for their analysis  using the fact that they are weakly monotonous  and that there is a narrow relation between their languages and those of the associated coloured nets. Therefore  quasi-liveness  finite termination and liveness are decidable properties.,2020-03-20
10.1007/s00236-012-0164-0,Finding vertex-surjective graph homomorphisms,The Surjective Homomorphism problem is to test whether a given graph G called the guest graph allows a vertex-surjective homomorphism to some other given graph H called the host graph. The bijective and injective homomorphism problems can be formulated in terms of spanning subgraphs and subgraphs  and as such their computational complexity has been extensively studied. What about the surjective variant? Because this problem is NP-complete in general  we restrict the guest and the host graph to belong to graph classes $${{\mathcal G}}$$ and $${{\mathcal H}}$$  respectively. We determine to what extent a certain choice of $${{\mathcal G}}$$ and $${{\mathcal H}}$$ influences its computational complexity. We observe that the problem is polynomial-time solvable if $${{\mathcal H}}$$ is the class of paths  whereas it is NP-complete if $${{\mathcal G}}$$ is the class of paths. Moreover  we show that the problem is even NP-complete on many other elementary graph classes  namely linear forests  unions of complete graphs  cographs  proper interval graphs  split graphs and trees of pathwidth at most 2. In contrast  we prove that the problem is fixed-parameter tractable in k if $${{\mathcal G}}$$ is the class of trees and $${{\mathcal H}}$$ is the class of trees with at most k leaves  or if $${{\mathcal G}}$$ and $${{\mathcal H}}$$ are equal to the class of graphs with vertex cover number at most k.,2015-03-20
10.1007/BF00289158,The expected additive weight of trees,SummaryWe consider a general additive weight of random trees which depends on the structure of the subtrees  on weight functions defined on the number of internal and external nodes and on the degrees of the nodes appearing in the tree and its subtrees. Choosing particular weight functions  the corresponding weight is an important parameter appearing in the analysis of sorting and searching algorithms. For a simply generated family of rooted planar trees ℱ  we shall derive a general approach to the computation of the average weight of a tree Tεℱ with n nodes and m leaves for arbitrary weight functions. This general result implies exact and asymptotic expressions for many types of average weights of a tree Tεℱ with n nodes if the weight functions are arbitrary polynomials in the number of nodes and leaves with coefficients depending on the node degrees.,2016-03-20
10.1007/s00236-014-0201-2,On the incremental growth and shrinkage of LR goto-graphs,The LR(0) goto-graph is the basis for the construction of parsers for several interesting grammar classes such as LALR and GLR. Early work has shown that even when a grammar is an extension to another  the goto-graph of the first is not necessarily a subgraph of the second. Some authors presented algorithms to grow and shrink these graphs incrementally  but the formal proof of the existence of a particular relation between a given goto-graph and a grown or shrunk counterpart seems to be still missing in literature as of today. In this paper we use the recursive projection of paths of limited length to prove the existence of one such relation  when the sets of productions are in a subset relation. We also use this relation to present two algorithms (Grow and Shrink) that transform the goto-graph of a given grammar into the goto-graph of an extension or a restriction to that grammar. We implemented these algorithms in a dynamically updatable LALR parser generator called DEXTER (the Dynamically EXTEnsible Recognizer) that we are now shipping with our current implementation of the Neverlang framework for programming language development.,2012-03-20
10.1007/BF00289589,Behandlung verschiedener INTEGER-Darstellungen durch optimierende Compiler,SummaryThis paper describes a method for supporting different internal representations of INTEGER values by compilers for modern high level programming languages. Such programming languages usually do not offer different INTEGER types. They rather provide facilities to declare subranges of INTEGER. A compiler for such a language should process this information to choose the optimal internal representation for INTEGER values. However for arithmetic expressions the different machine operations must be chosen carefully to protect the running program from illegal arithmetic overflow.,2018-03-20
10.1007/s00236-016-0268-z,Reactive synthesis without regret,Two-player zero-sum games of infinite duration and their quantitative versions are used in verification to model the interaction between a controller (Eve) and its environment (Adam). The question usually addressed is that of the existence (and computability) of a strategy for Eve that can maximize her payoff against any strategy of Adam. In this work  we are interested in strategies of Eve that minimize her regret  i.e. strategies that minimize the difference between her actual payoff and the payoff she could have achieved if she had known the strategy of Adam in advance. We give algorithms to compute the strategies of Eve that ensure minimal regret against an adversary whose choice of strategy is (1) unrestricted  (2) limited to positional strategies  or (3) limited to word strategies  and show that the two last cases have natural modelling applications. These results apply for quantitative games defined with the classical payoff functions $$\mathsf {Inf}$$Inf  $$\mathsf {Sup}$$Sup  $${\mathsf {LimInf}}$$LimInf  $$\mathsf {LimSup}$$LimSup  and mean-payoff. We also show that our notion of regret minimization in which Adam is limited to word strategies generalizes the notion of good for games introduced by Henzinger and Piterman  and is related to the notion of determinization by pruning due to Aminof  Kupferman and Lampert.,2013-03-20
10.1007/s002360050152,Axioms for generalized graphs  illustrated by a Cantor–Bernstein proposition,"Abstract. The notion of a graph type 
$\mathcal{T}$ is introduced by a collection of axioms. A graph of type 
$\mathcal{T}$ (or 
$\mathcal{T}$-graph) is defined as a set of edges  of which the structure is specified by 
$\mathcal{T}$. From this  general notions of subgraph and isomorphism of 
$\mathcal{T}$-graphs are derived. A Cantor-Bernstein (CB) result for 
$\mathcal{T}$-graphs is presented as an illustration of a general proof for different types of graphs. By definition  a relation 
$\mathcal{R}$ on 
$\mathcal{T}$-graphs satisfies the CB property if 
$A \mathcal{R} B$ and 
$B \mathcal{R} A$ imply that A and B are isomorphic. In general  the relation ‘isomorphic to a subgraph’ does not satisfy the CB property. However  requiring the subgraph to be disconnected from the remainder of the graph  a relation that satisfies the CB property is obtained. A similar result is shown for 
$\mathcal{T}$-graphs with multiple edges.",2011-03-20
10.1007/BF00289573,Systolic automata for VLSI on balanced trees,SummarySystolic tree automata with a binary (or  more generally  balanced) underlying tree are investigated. The main emphasis is on input conditions  decidability  and characterization of acceptable languages.,2020-03-20
10.1007/BF01185564,Classes of systolic Y-tree automata and a comparison with systolic trellis automata,In this paper we study systolic Y-tree automata (SYTA)  a class of systolic automata where the communication structure is obtained by adding new edges  and therefore new sons  called adoptive sons  to the nodes of the underlying tree according to some regularity condition. We study SYTA in the more specific case where the tree ist-ary or a tree with base. We show that for eachs≧0 the set of classes of languages accepted by SYTA whose underlying tree is a tree with base withs leaves has a maximum  calledLsSYTA. We study whenLsSYTA is reached depending on number and position of the adoptive sons. We prove that ifs andt are powers of the same base  thenLsSYTA=LtSYTA. We give also a simulation of SYTA on regular and modular systolic trellis automata  strengthening a previous result on simulation of systolic tree automata on systolic trellis automata.,2013-03-20
10.1007/BF00288638,Nonterminals versus homomorphisms in defining languages for some classes of rewriting systems,"AbstractGiven a rewriting system G (its alphabet  the set of productions and the axiom) one can define the language of G by(i)taking out of all strings generated by G only those which are over a distinguished subalphabet of G  or(ii)translating the set of all strings generated by G by a fixed homomorphism.
The “trade-offs” between these two mechanisms for defining languages are discussed for both “parallel” rewriting systems from the developmental systems hierarchy and “sequential” rewriting systems from the Chomsky hierarchy.",2013-03-20
10.1007/s002360050151,A transformation system for concurrent processes,Abstract. Program transformation techniques have been extensively studied in the framework of functional and logic languages  where they were applied mainly to obtain more efficient and readable programs. All these works are based on the Unfold/Fold program transformation method developed by Burstall and Darlington in the context of their recursive equational language. The use of Unfold/Fold based transformations for concurrent languages is a relevant issue that has not yet received an adequate attention. In this paper we define a transformation methodology for CCS. We give a set of general rules which are a specialization of classical program transformation rules  such as Fold and Unfold. Moreover  we define the general form of other rules  “oriented” to the goal of a transformation strategy  and we give conditions for the correctness of these rules. We prove that a strategy using the general rules and a set of goal oriented rules is sound  i.e. it transforms CCS programs into equivalent ones. We show an example of application of our method. We define a strategy to transform  if possible  a full CCS program into an equivalent program whose semantics is a finite transition system. We show that  by means of our methodology  we are able to a find finite representations for a class of CCS programs which is larger than the ones handled by the other existing methods. Our transformational approach can be seen as unifying in a common framework a set of different techniques of program analysis. A further advantage of our approach is that it is based only on syntactic transformations  thus it does not requires any semantic information.,2013-03-20
10.1007/s00236-011-0135-x,MAT learners for tree series: an abstract data type and two realizations,We propose abstract observation tables  an abstract data type for learning deterministic weighted tree automata in Angluin’s minimal adequate teacher (MAT) model  and show that every correct implementation of abstract observation tables yields a correct MAT learner. Besides the “classical” observation table  we show that abstract observation tables can also be implemented by observation trees. The advantage of the latter is that they often require fewer queries to the teacher.,2016-03-20
10.1007/s002360050088,"Minimum feedback vertex sets in cocomparability graphs and convex bipartite graphs
",Abstract.Polynomial-time algorithms for the feedback vertex set problem in cocomparability graphs and convex bipartite graphs are presented.,2012-03-20
10.1007/BF00265560,On the number of relational operators necessary to compute certain functions of real variables,SummaryThe famous result of N. Friedman that any sorting algorithm uses at least O(n log n) relational operations in the worst case  even if the real number operations + − *  / can be used without any time account  is extended and generalized. Our main theorem can be used to calculate lower bounds for computations of functions if the operations < + − * / are allowed and only the relational operators are counted. Friedman's sorting result and several other lower bounds are covered by the theorem. One of the results is of special interest for future directions of research  since it is possible to compute the max function of n arguments in a restricted domain with O(log n) relational operations.,2014-03-20
10.1007/BF01178381,Invariants  composition  and substitution,In the literature the notion of asystem invariant has been formalized in two different ways  differing in the treatment of unreachable transitions. We call the more general notion  which ignores unreachable transitions invariant sets of a system  the more restricted notion  which considers unreachable transitions inductive sets of a system.It turns out that even if we are only interested in invariant sets of a system  inductive sets play an important rôle for proving invariant sets of system in a compositional way. This paper shows the interplay of both kinds of invariants; particularly  we show that inductive sets arefully abstract with respect to invariant sets.One essential difference between invariant and inductive sets is that thesubstitution rule is only valid for invariant sets  and thecomposition rule is only valid for inductive sets. Sometimes it seems desirable to have a notion of invariants for which both rules are valid. We show that every notion of an invariant enjoying both rules is very restrictive.,2013-03-20
10.1007/BF00264472,Interpretation and reduction of attribute grammars,SummaryAn attribute grammar (AG) is in reduced form if in all its derivation trees every attribute contributes to the translation. We prove that  eventhough AG are generally not in reduced form  they can be reduced  i.e.  put into reduced form  without modifying their translations. This is shown first for noncircular AG and then for arbitrary AG. In both cases the reduction consists of easy (almost syntactic) transformations which do not change the semantic domain of the AG. These easy transformations are formalized by introducing the notion of AG interpretation as an extension to AG of the concept of context-free grammar form. Finally we prove that any general algorithm for reducing even the simple class of L-AG needs exponential time (in the size of the input AG) infinitely often.,2015-03-20
10.1007/BF00288774,Complete problems for space bounded subclasses of NP,SummarySeveral problems are shown to be log space complete  when restricted to bandwidth f(n)  for the subclass of NP defined by nondeterministic polynomial time bounded Turing machines with a simultaneous f(n) space restriction  denoted by NTISP(poly  f(n)). These problems are NOT-ALL-EQUAL 3SAT  MONOCHROMATIC TRIANGLE  CUBIC SUBGRAPH  DOMINATING SET  ONE-IN-THREE 3SAT and MONOTONE 3SAT. The problems DOMATIC NUMBER  PARTITION INTO FORESTS and DISJOINT CONNECTING PATHS restricted to bandwidth f(n) are shown to be log space hard for NTISP(poly  f(n)). Their membership in the class NTISP(poly  f(n)) is currently open. As one application of these results  we note that the first six of the problems mentioned are examples of NSPACE(log n) complete problems when restricted to bandwidth log n.,2014-03-20
10.1007/s00236-002-0096-1,The size of random bucket trees via urn models,Abstract. We find the asymptotic average composition of a class of nonclassic Pólya urn models (not necessarily of fixed row sum) by embedding the discrete urn process into a renewal process with rewards. A subclass of the models considered has banded matrix urn schemes and serves as a natural modeling tool for the size of a class of random bucket trees. The class of urns considered extends known results for multicolor urns with constant row sums. The same asymptotic average results are shown to hold in the larger class. This provides an average-case analysis for the size of certain random bucketed multidimensional quad trees and k-d trees  which are all new results. Some bucket trees have urn schemes with constant row sum  a special case that helps detect phase changes in the limiting distribution of the (normed) size of the tree. For these special cases one can appeal to a more developed urn theory to find a limiting distribution of the normed size up to a threshold value of the capacity of a bucket. Once that cut-off point is surpassed  normality ceases to hold. This case appears in paged binary trees (threshold 116)  m-ary search trees (threshold 26)  and bucket recursive trees (threshold 26). The asymptotic normality results and the phase change after the threshold in these trees are already known and we only provide alternative proofs via a unified urn models approach.,2013-03-20
10.1007/BF00289064,Concurrent search and insertion in 2–3 trees,SummaryThe problem being addressed is to allow a number of processes to search and insert concurrently in a 2–3 tree without causing deadlock and without destroying the integrity of the data or structure. We present two solutions which allow more concurrency than do previous solutions. Several techniques for introducing parallelism are illustrated. Finally  simulation results used to evaluate the parallel performance of these algorithms are summarized.,2018-03-20
10.1007/s002360200092,A quadratic speedup theorem for iterative arrays,Abstract. An iterative array (IA) is a semi-infinite array (with left boundary) of cells  where the input string is given serially to the leftmost cell. This paper presents a quadratic speedup theorem for IAs by using alternations. It is shown that for any constructible functions s(n) and t(n) such that $t(n)\geq s(n)\geq n$  every s(n)t(n)-time deterministic IA can be simulated by an O(s(n))-space O(t(n))-time alternating IA. Therefore  every $t^2(n)$-space $t^2(n)$-time deterministic IA can be simulated by an O(t(n))-time alternating IA. This leads to a separation result: There is a language which can be accepted by an alternating IA in O(t(n)) time but not by any deterministic IA in t(n) time.,2011-03-20
10.1007/s002360050139,Bi-catenation and shuffle product of languages,"Abstract. The shuffle product of two words consists of all words obtained by inserting one word into another word sparsely. The shuffle product of two languages is the union of all the shuffle products of two words taken one from each of these two languages. The bi-catenation of two languages A andB is the set 
$A\star B = AB\cup BA$. A non-empty word which is not a power of any other word is called a primitive word. A language is a prefix code if no word in this language is a prefix of any other word in this language. This paper is devoted to the investigation of the elementary properties of bi-catenation and shuffle product of languages. The families of prefix codes  disjunctive languages and languages consisting of primitive words with respective to these two operations are studied. We characterize languages of which the bi-catenation or the shuffle product with any non-empty word are prefix codes. We also derive that for any bifix code A  both 
$A\star Q$ and 
$A\star Q^{(n)}$  
$n\geq 2$  are disjunctive languages  where Q is the set of all primitive words over an alphabet X with more than one letter and 
$Q^{(n)} = \{ f^n\mid f\in Q\}$. For the shuffle product case  surprisingly 
$a\diamond Q$ is a regular language  where a is a letter of the alphabet X.
",2014-03-20
10.1007/s00236-008-0073-4,Algebraic reasoning for probabilistic action systems and while-loops,Back and von Wright have developed algebraic laws for reasoning about loops in a total correctness framework using the refinement calculus. We extend their work to reasoning about probabilistic loops in the probabilistic refinement calculus. We apply our algebraic reasoning to derive transformation rules for probabilistic action systems and probabilistic while-loops. In particular we focus on developing data refinement rules for these two constructs. Our extension is interesting since some well known transformation rules that are applicable to standard programs are not applicable to probabilistic ones: we identify some of these important differences and we develop alternative rules where possible.,2019-03-20
10.1007/s00236-009-0105-8,Extended multi bottom–up tree transducers,Extended multi bottom–up tree transducers are defined and investigated. They are an extension of multi bottom–up tree transducers by arbitrary  not just shallow  left-hand sides of rules; this includes rules that do not consume input. It is shown that such transducers  even linear ones  can compute all transformations that are computed by linear extended top–down tree transducers  which are a theoretical model for syntax-based machine translation. Moreover  the classical composition results for bottom–up tree transducers are generalized to extended multi bottom–up tree transducers. Finally  characterizations in terms of extended top–down tree transducers and tree bimorphisms are presented.,2013-03-20
10.1007/BF00268322,Sequential method in propositional dynamic logic,SummaryRecently prepositional modal logic of programs  called ‘prepositional dynamic logic’  has been developed by many authors  following the ideas of Fisher and Ladner [1] and Pratt [12]. The main purpose of this paper is to present a Gentzen-type sequential formulation of this logic and to establish its semantical completeness with due regard to sequential formulation as such. In a sense our sequential formulation might be regarded as a powerful tool to establish the completeness theorem of already familiar axiomatizations of prepositional dynamic logic such as seen in Harel [4]  Parikh [11] or Segerberg [15]. Indeed our method is powerful enough in completeness proof to yield a desired structure directly without making a detour through such intermediate constructs as a ‘pseudomodel’ or a ‘nonstandard structure’  which can be seen in Parikh [11]. We also show that our sequential system of prepositional dynamic logic does not enjoy the so-called cut-elimination theorem.,2017-03-20
10.1007/s00236-017-0294-5,A theory of formal synthesis via inductive learning,Formal synthesis is the process of generating a program satisfying a high-level formal specification. In recent times  effective formal synthesis methods have been proposed based on the use of inductive learning. We refer to this class of methods that learn programs from examples as formal inductive synthesis. In this paper  we present a theoretical framework for formal inductive synthesis. We discuss how formal inductive synthesis differs from traditional machine learning. We then describe oracle-guided inductive synthesis (OGIS)  a framework that captures a family of synthesizers that operate by iteratively querying an oracle. An instance of OGIS that has had much practical impact is counterexample-guided inductive synthesis (CEGIS). We present a theoretical characterization of CEGIS for learning any program that computes a recursive language. In particular  we analyze the relative power of CEGIS variants where the types of counterexamples generated by the oracle varies. We also consider the impact of bounded versus unbounded memory available to the learning algorithm. In the special case where the universe of candidate programs is finite  we relate the speed of convergence to the notion of teaching dimension studied in machine learning theory. Altogether  the results of the paper take a first step towards a theoretical foundation for the emerging field of formal inductive synthesis.,2016-03-20
10.1007/BF00288648,Page size in demand-paging systems,SummaryThe problem of determining page size in a page on demand system is discussed in detail in this paper. After having introduced the problem  the effect page size may have on various system performance measures is reviewed based on measurements of program behaviour and on simple models of system behaviour.This discussion is followed by a detailed study of the effect of the choice of page size on the efficient utilization of primary memory space. The wasted space-time integral (WSTI) of primary memory space is selected as a measure of this utilisation and a new model of program and system behaviour is used to compute the WSTI for different secondary memory devices (drum  ECS and LCS) and different system behaviour parameters such as the time spent in supervisor mode by the operating system to initiate a page transfer  the time spent in the CPU queue by a program which has recovered from a page fault before it receives the attention of the CPU  the global page fault rate (or arrival rate at the secondary storage devices used for paging) and other factors. The influence of each of these factors is discussed and analyzed  and the conditions under which one or another of these dominates the problem is identified.In the Appendix  one of the problems posed by our model  the use of approximate formulae for fragmentation which remain valid for a large class of probability distribution functions of program size  is analyzed in detail. Some tests are developed for the validity of these formulae.,2018-03-20
10.1007/s00236-006-0025-9,A semantic approach to optimize linear datalog programs,In this work  we present a semantic query optimization approach to improve the efficiency of the evaluation of a subset of SQL:1999 recursive queries. Using datalog notation  we can state our main contribution as an algorithm that builds a program P′ equivalent to a given program P  when both are applied over a database d satisfying a set of functional dependencies. The input program P is a linear recursive datalog program. The new program P′ has less different variables and  sometimes  less atoms in rules  thus it is cheaper to evaluate. Using coral and ibm db2  P′ is empirically shown to be more efficient than the original program.,2019-03-20
10.1007/BF01177743,Inductive attribute grammars,Attribute grammars are traditionally constrained to be noncircular. In using attribute grammars to specify the semantics of programming languages  this noncircularity limitation has restricted attribute grammars to compile-time or static semantics. Inductive attribute grammars add a general form of circularity to this standard approach. Inductive attribute grammars have the expressiveness required to describe the full semantics of programming languages  while at the same time maintaining the declarative character of standard attribute grammars. This expanded view of attribute grammars proves to be useful in interactive language-based programming environments  as inductive attribute grammars allow the environment to provide an interpreter for incremental re-evaluation of programs after small changes to the code. The addition of run-time semantics via circular attribute grammars permits automatically generated environments to be complete  in that incremental static semantic checking and fast incremental execution are now available within a single framework.,2019-03-20
10.1007/BF00288466,Predicative methodology,SummaryWe introduce a predicative semantics of programs and show its use in programming. With it  logic errors can be detected and reported when they are made  just like syntax errors. Programming paradigms are stated precisely as theorems. The use of paradigms in larger programs is shown to be the same as the mathematician's use of theorems in the proof of larger theorems.,2011-03-20
10.1007/PL00013307,A Markov modulated multi-server queue with negative customers – The MM CPP/GE/c/L G-queue,Abstract. We obtain the queue length probability distribution at equilibrium for a multi-server queue with generalised exponential service time distribution and either finite or infinite waiting room. This system is modulated by a continuous time Markov phase process. In each phase  the arrivals are a superposition of a positive and a negative arrival stream  each of which is a compound Poisson process with phase dependent parameters  i.e. a Poisson point process with bulk arrivals having geometrically distributed batch size. Such a queueing system is well suited to B-ISDN/ATM networks since it can account for both burstiness and correlation in traffic. The result is exact and is derived using the method of spectral expansion applied to the two dimensional (queue length by phase) Markov process that describes the dynamics of the system. Several variants of the system are considered  applicable to different modelling situations  such as server breakdowns  cell losses and load balancing. We also consider the departure process and derive its batch size distribution and the Laplace transform of the interdeparture time probability density function. From this  a recurrence formula is obtained for its moments. The analysis therefore provides the basis of a building block for modelling networks of switching nodes in terms of their internal arrival processes.,2017-03-20
10.1007/BF01178776,An algebra for process creation,In this paper  we study the issue of process creation from an algebraic perspective. The key to our approach  which is inspired by work of America and De Bakker  consists of giving a new interpretation to the operator symbol · (sequential composition) in the axiom system BPA of Bergstra and Klop. We present a number of other models for BPA and show how the new interpretation of · naturally generalises the usual interpretation in ACP. We give an operational semantics based on Plotkin style inductive rules for a simple language with process creation and communication  and give a complete finite axiomatisation of the associated bisimulation model.,2011-03-20
10.1007/s00236-006-0018-8,Solving HPP and SAT by P Systems with Active Membranes and Separation Rules,The P systems (or membrane systems) are a class of distributed parallel computing devices of a biochemical type  where membrane division is the frequently investigated way for obtaining an exponential working space in a linear time  and on this basis solving hard problems  typically NP-complete problems  in polynomial (often  linear) time. In this paper  using another way to obtain exponential working space – membrane separation  it was shown that Satisfiability Problem and Hamiltonian Path Problem can be deterministically solved in linear or polynomial time by a uniform family of P systems with separation rules  where separation rules are not changing labels  but polarizations are used. Some related open problems are mentioned.,2014-03-20
10.1007/BF01178502,A simple  fast  and effective LL(1) error repair algorithm,Validation and locally least-cost repair are two simple and effective techniques for dealing with syntax errors. We show how the two can be combined into an efficient and effective error-handler for use with LL(1) parsers. Repairs are computed using an extension of the FMQ algorithm. Tables are created as necessary  rather than precomputed  and possible repairs are kept in a priority queue. Empirical results show that the repairs chosen with this strategy are of very high quality and that speed is quite acceptable.,2020-03-20
10.1007/S00236-014-0200-3,Some kinds of primitive and non-primitive words,If the length of a primitive word $$p$$p is equal to the length of another primitive word $$q$$q  then $$p^{n}q^{m}$$pnqm is a primitive word for any $$n m\ge 1$$n m≥1 and $$(n m)\ne (1 1)$$(n m)≠(1 1). This was obtained separately by Tetsuo Moriya in 2008 and Shyr and Yu in 1994. In this paper  we prove that if the length of $$p$$p is divisible by the length of $$q$$q and the length of $$p$$p is less than or equal to $$m$$m times the length of $$q$$q  then $$p^{n}q^{m}$$pnqm is a primitive word for any $$n m\ge 1$$n m≥1 and $$(n m)\ne (1 1)$$(n m)≠(1 1). Then we show that if $$uv u$$uv u are non-primitive words and the length of $$u$$u is divisible by the length $$v$$v or one of the length of $$u$$u and $$uv$$uv is odd for any two nonempty words $$u$$u and $$v$$v  then $$u$$u is a power of $$v$$v.,2019-03-20
10.1007/s002360000041,Refinement of actions and equivalence notions for concurrent systems,Abstract. We study an operator for refinement of actions to be used in the design of concurrent systems. Actions on a given level of abstraction are replaced by more complicated processes on a lower level. This is done in such a way that the behaviour of the refined system may be inferred compositionally from the behaviour of the original system and from the behaviour of the processes substituted for actions. We recall that interleaving models of concurrent systems are not suited for defining such an operator in its general form. Instead  we define this operator on several causality based  event oriented models  taking into account the distinction between deadlock and successful termination. Then we investigate the interplay of action refinement with abstraction in terms of equivalence notions for concurrent systems  considering both linear time and branching time approaches. We show that besides the interleaving equivalences  also the equivalences based on steps are not preserved under refinement of actions. We prove that linear time partial order semantics are invariant under refinement. Finally we consider various bisimulation equivalences based on partial orders and show that the finest two of them are preserved under refinement whereas the others are not. Termination sensitive versions of these equivalences are even congruences for action refinement.,2013-03-20
10.1007/s00236-004-0149-8,An axiomatization of graphs,Abstract.The magmoid of hypergraphs labelled over a finite doubly ranked alphabet  is characterized as the quotient of the free magmoid generated by this alphabet divided by a finite set of equations. Thus a relevant open problem  posed by Engelfriet and Vereijken  is being solved.,2017-03-20
10.1007/BF01186645,Trace nets and process automata,Trace nets are a variant of one-safe Petri nets  where input and output places may be filled as well as emptied by transitions. Those extended nets are introduced for modelling concurrency in a simple format of structural operational specifications  based on permutation of proved transitions. Trace nets are connected by an adjunction to a particular class of trace automata in the sense of Stark  namely the separated trace automata. The adjunction is based on a calculus of ‘regions’ that differ significantly from the ones devised by Ehrenfeucht and Rozenberg for elementary nets  although the axioms of separation are the same.,2012-03-20
10.1007/s002360050038,Multi-granularity locking for nested transactions,The choice of granularity for locking items in a database involves performance trade-offs. In order to provide a choice between different locking granularities within a single system  the two-phase locking algorithm needs to be modified to include intention locks. This paper extends the well-known multigranularity locking algorithm of Gray et al. to deal with nested transactions  and verifies the correctness of the extended algorithm  using a possibilities mapping to abstract commutativity-based locking.,2020-03-20
10.1007/s002360000037,Efficiently building a parse tree from a regular expression,Abstract. We show in this paper that parsing with regular expressions instead of context-free grammars  when it is possible  is desirable. We present efficient algorithms for performing different tasks that concern parsing: producing the external representation and the internal representation of parse trees; producing all possible parse trees or a single one. Each of our algorithms to produce a parse tree from an input string has an optimal time complexity  linear with the length of the string. Moreover  ambiguous regular expressions can be used.,2019-03-20
10.1007/s00236-011-0137-8,Connectivity of workflow nets: the foundations of stepwise verification,Behavioral models capture operational principles of real-world or designed systems. Formally  each behavioral model defines the state space of a system  i.e.  its states and the principles of state transitions. Such a model is the basis for analysis of the system’s properties. In practice  state spaces of systems are immense  which results in huge computational complexity for their analysis. Behavioral models are typically described as executable graphs  whose execution semantics encodes a state space. The structure theory of behavioral models studies the relations between the structure of a model and the properties of its state space. In this article  we use the connectivity property of graphs to achieve an efficient and extensive discovery of the compositional structure of behavioral models; behavioral models get stepwise decomposed into components with clear structural characteristics and inter-component relations. At each decomposition step  the discovered compositional structure of a model is used for reasoning on properties of the whole state space of the system. The approach is exemplified by means of a concrete behavioral model and verification criterion. That is  we analyze workflow nets  a well-established tool for modeling behavior of distributed systems  with respect to the soundness property  a basic correctness property of workflow nets. Stepwise verification allows the detection of violations of the soundness property by inspecting small portions of a model  thereby considerably reducing the amount of work to be done to perform soundness checks. Besides formal results  we also report on findings from applying our approach to an industry model collection.,2020-03-20
10.1007/BF00289116,NP-hard problems in hierarchical-tree clustering,SummaryWe consider a class of optimization problems of hierarchical-tree clustering and prove that these problems are NP-hard. The sequence of polynomial reductions and/or transformations used in our proof is based on relatively laborious graph-theoretical constructions and starts in the NP-complete problem of 3-dimensional matching. Using our main result we establish the NP-completeness of a problem of the best approximation of a symmetric relation on a finite set by an equivalence relation  thus answering in the negative a question proposed implicitly by C.T. Zahn.,2016-03-20
10.1007/BF00269810,Language design methods based on semantic principles: Algol 68  a Language Designed using Semantic Principles,SummaryThis note observes that Tennent's proposed language design method is that used by Algol 68's designers and points out how his proposed extensions to Pascal bring it closer to Algol 68. Some implications of his proposal are discussed.,2016-03-20
10.1007/s00236-009-0090-y,On the closure of pattern expressions languages under intersection with regular languages,In this paper we address a standing question on pattern expressions (PE)  namely whether the family of PE languages is closed under the intersection with regular languages. Since this family is not closed under complement  but is closed under reversal  another natural question has frequently been raised in the recent years  on whether particular languages such as the mirror language and the language of palindromes are PE languages. We give answers to these and other related questions as well  thus providing an insight on their descriptional power.,2011-03-20
10.1007/BF00271644,Space sweep solves intersection of convex polyhedra,SummaryPlane-sweep algorithms form a fairly general approach to two-dimensional problems of computational geometry. No corresponding general space-sweep algorithms for geometric problems in 3- space are known. We derive concepts for such space-sweep algorithms that yield an efficient solution to the problem of solving any set operation (union  intersection  ...) of two convex polyhedra. Our solution matches the best known time bound of O(n log n)  where n is the combined number of vertices of the two polyhedra.,2016-03-20
10.1007/s002360050045,On the rational subsets of the free group,We show that every rational subset of a free group of finite rank is either disjunctive or has finite index. We then generalise this result to virtually free groups: if G is virtually free and R is a rational subset of G  then the syntactic normal subgroup N of R is either finite or has finite index.,2011-03-20
10.1007/s00236-015-0216-3,Modal algebra and Petri nets,We use the by now well established setting of modal semirings to derive a modal algebra for Petri nets. It is based on a relation-algebraic calculus for separation logic that enables calculations of properties in a pointfree fashion and at an abstract level. Basically  we start from an earlier logical approach to Petri nets that in particular uses modal box and diamond operators for stating properties about the state space of such a net. We provide relational translations of the logical formulas which further allow the characterisation of general behaviour of transitions in an algebraic fashion. From the relational structure an algebra for frequently used properties of Petri nets is derived. In particular  we give connections to typical used assertion classes of separation logic. Moreover  we demonstrate applicability of the algebraic approach by calculations concerning a standard example of a mutex net.,2011-03-20
10.1007/s00236-008-0080-5,Charting the completeness frontier of inference systems for multivalued dependencies,"AbstractThe implication of multivalued dependencies in relational databases has originally been defined in the context of some fixed finite universe. While axiomatisability and implication problems have been intensely studied with respect to this notion almost no research has been devoted towards the alternative notion of implication in which the underlying universe of attributes is left undetermined. Based on a set of common inference rules we establish all axiomatisations in undetermined universes  and all axiomatisations in fixed universes that indicate the role of the complementation rule as a means of database normalisation. This characterises the expressiveness of several incomplete sets of inference
rules. We also establish relationships between axiomatisations in fixed and undetermined universes 
and study the time complexity of the implication problem in undetermined universes. The results of this paper establish a foundation for reasoning about multivalued dependencies without the assumption of a fixed underlying universe.",2017-03-20
10.1007/s00236-006-0036-6,Symbolic models for control systems,In this paper we provide a bridge between the infinite state models used in control theory to describe the evolution of continuous physical processes and the finite state models used in computer science to describe software. We identify classes of control systems for which it is possible to construct equivalent (bisimilar) finite state models. These constructions are based on finite  but otherwise arbitrary  partitions of the set of inputs or outputs of a control system.,2017-03-20
10.1007/BF00289074,A proof method for cyclic programs,SummaryWe consider the specification and verification of cyclic (sequential and concurrent) programs. The input-output based concept of correctness traditionally applied to functional programs is replaced by another  based on the concept of eventual behaviour. Various types of eventual behaviour are introduced. In the case of concurrency  the introduction of interface-predicates reduces the proof complexity and achieves greater readability. All specifications use explicitly the auxiliary variables of a location counter π and elapsing time t.,2018-03-20
10.1007/BF00263585,Recording the use of memory in right-boundary grammars and push-down automata,SummaryWithin the framework of coordinated pair systems a push-down automaton A is formalized as an ordered pair (G1  G2) of grammars  where G1 is a right-linear grammar modelling the finite state control of A and the reading of the input of A  and G2 is a right-boundary grammar modelling the push-down store of A. In this paper we present a systematic investigation into the use of memory of right-boundary grammars. Various methods of recording the use of memory are introduced. The results presented concern regularity properties of each of the methods and the interrelationships of the records obtained by different methods. Finally the translation of these results to the level of push-down automata (coordinated pair systems) is discussed.,2013-03-20
10.1007/BF01185559,An experience in proving regular networks of processes by modular model checking,This paper presents a complete example of the use of the synchronous declarative language LUSTRE for the specification  description and verification of a resource arbiter  which is a regular network of hardware devices. The fact that both programs and properties may be expressed in LUSTRE is used to perform an inductive verification. An invariant property of the network is found  and merged with the description program. Verification is performed by model checking.,2018-03-20
10.1007/BF00288975,Time lower bounds for parallel sorting on a mesh-connected processor array,SummaryWe prove that (1+√6/2)n ≈ 2.22n is a time lower bound independent of indexing schemes for sorting n2 items on an n × n mesh-connected processor array. We distinguish between indexing schemes by showing that there exists an indexing scheme which is provably worse than the snake-like row-major indexing for sorting. We also derive lower bounds for various indexing schemes. All these results are obtained by using the chain argument which we provide in this paper.,2015-03-20
10.1007/BF00289308,ɛ-productions in context-free grammars,SummaryThe effect of ɛ-productions on the space complexity of various context-free language problems is investigated. It is shown that the removal of ɛ-productions from a context-free grammar can probably not be achieved with small storage space. This explains the apparent discrepancy between two different results in the literature on the membership problem. By way of contrast  it is shown that the space complexity of the emptiness and the finiteness problems are independent of the presence of ɛ-productions.,2012-03-20
10.1007/s00236-009-0104-9,On regular tree languages and deterministic pushdown automata,The theory of formal string languages and of formal tree languages are both important parts of the theory of formal languages. Regular tree languages are recognized by finite tree automata. Trees in their postfix notation can be seen as strings. This paper presents a simple transformation from any given (bottom-up) finite tree automaton recognizing a regular tree language to a deterministic pushdown automaton accepting the same tree language in postfix notation. The resulting deterministic pushdown automaton can be implemented easily by an existing parser generator because it is constructed for an LR(0) grammar  and its size directly corresponds to the size of the deterministic finite tree automaton. The class of regular tree languages in postfix notation is a proper subclass of deterministic context-free string languages. Moreover  the class of tree languages which are in their postfix notation deterministic context-free string languages is a proper superclass of the class of regular tree languages.,2020-03-20
10.1007/BF00289267,The equivalence of Horn and network complexity for Boolean functions,SummaryWe propose in this paper a logical complexity measure — Horn complexity — for Boolean functions which measures the minimal length of quasi-Horn definitions of such functions by propositional formulae. The interest for this complexity measure comes on the one hand from the observation that the satisfiability problem for Horn formulae is in P  on the other hand from a strong connection to Cook's problem. We show the proposed Horn complexity to be polynomially equivalent to network complexity and therefore to Turing complexity for Boolean functions.,2011-03-20
10.1007/BF00289245,Backtracking in recursive computations,SummaryA mathematical (denotational) semantics is constructed for a formalism of recursive equations with the Alternative operator. This formalism enables the combination of recursion and backtracking. The semantics is defined by applying fixpoint theory to set valued functions. We introduce the notion of strategy to produce subsets of the result. Two implementations are suggested using an auxiliary stack  that trade off recomputation time with space in the auxiliary stack. The concept of a sub-fixpoint is introduced  and the implementations are shown to be incomplete even w.r.t. sub-fixpoint values. One special strategy  the leftmost strategy  which stems from problems such as pattern matching or parsing  is discussed.,2015-03-20
10.1007/BF00265679,The semigroups of linearly realizable finite automata. II,Using some of the results of the two foregoing sections we show that a right group automaton is p-linearly realizable iff the automata fie are p-linearly realizable and the sets Sen  e~Ia  are pairwise disjoint. A right group is p-linearly A-realizable iff one (and therefore each) of its maximal subgroups is p-linearly Arealizable. A generating subset E of a right group H is essential for p iff an arbitrarily taken maximal subgroup G ~ H has an elementary abelian normal psubgroup A and an element v such that G = ( v A ) and E ~ U vAe. e~In Because of 4.2 all the automata ~e  e~/a  of an F-automaton a (see 3.3) are isomorphic. We shall see now  if a is a right group automaton then all the ~e  e~I   are isomorphic even in case where a is not an F-automaton. 7.1. Lemma. The automata ~e  e~la  of a right group automaton are isomorphic. Proof. Let e  e'~I . Since I~ is a right-zero semigroup  then,2018-03-20
10.1007/BF01193578,A “yo-yo” parsing algorithm for a large class of van Wijngaarden grammars,An algorithm is described for parsing a large class of van Wijngaarden grammars in polynomial time. The algorithm is based on Earley's context-free parsing algorithm  with the addition of a bottom-up component and a mechanism for implementing consistent substitution. In contrast to earlier algorithms  this algorithm works for grammars which are both non-left-bound and non-right-bound.,2018-03-20
10.1007/BF00268846,Integrating code generation and peephole optimization,SummaryPeephole optimization when integrated with automatic code generation into a uniform framework has significant advantages in the specification and implementation of efficient compiler back-ends. Attribute grammars provide a framework for expression of machine-specific code optimizations. We present a grammar-driven peephole optimization algorithm that is particularly well suited to attributed-parsing code generators. Integration via semantic attributes corrects interrelated phase-ordering problems and produces a faster and smaller compiler back-end.,2014-03-20
10.1007/s00236-012-0157-z,First-order logics: some characterizations and closure properties,The characterization of the class of FO[+]-definable languages by some generating or recognizing device is still an open problem. We prove that  restricted to word bounded languages  this class coincides with the class of semilinear languages. We also study the closure properties of the classes of languages definable in FO[+1]  FO[<]  FO[+] and FOC[+] under the main classical operations.,2020-03-20
10.1007/s00236-013-0180-8,On the hierarchy of distribution-sensitive properties for data structures,In this paper new dependencies are added to the hierarchy of the distribution-sensitive properties for data structures. Most remarkably  we prove that the working-set property is equivalent to the unified-bound property; a fact that had gone unnoticed since the introduction of such bounds in the Eighties by Sleator and Tarjan.,2011-03-20
10.1007/BF00264278,Product properties and their direct verification,SummaryThe paper presents a family of properties of programs  called product (and power) properties  for which the verification method of Floyd and Hoare are inconvenient. A (semantically) complete alternative method is proposed' The paper presents the method in both the endogenous and exogenous versions and applies them to examples. Semantic completeness and soundness are shown. The method is particularly useful for some second-order programs  having procedures as parameters.,2016-03-20
10.1007/s00236-003-0122-y,Canonical prefixes of Petri net unfoldings,Abstract.In this paper  we develop a general technique for truncating Petri net unfoldings  parameterized according to the level of information about the original unfolding one wants to preserve. Moreover  we propose a new notion of completeness of a truncated unfolding. A key aspect of our approach is an algorithm-independent notion of cut-off events  used to truncate a Petri net unfolding. Such a notion is based on a cutting context and results in the unique canonical prefix of the unfolding. Canonical prefixes are complete in the new  stronger sense  and we provide necessary and sufficient conditions for its finiteness  as well as upper bounds on its size in certain cases. A surprising result is that after suitable generalization  the standard unfolding algorithm presented in [8]  and the parallel unfolding algorithm proposed in [12]  despite being non-deterministic  generate the canonical prefix. This gives an alternative correctness proof for the former algorithm  and a new (much simpler) proof for the latter one.,2013-03-20
10.1007/BF00290146,General correctness: A unification of partial and total correctness,SummaryGeneral correctness  which subsumes partial and total correctness  is defined for both weakest preconditions and strongest postconditions. Healthiness properties for general-correctness predicate transformers are more uniform and complete than those for partial- and total-correctness systems. In fact  the healthiness properties for partial and total correctness are simple restrictions of those for general correctness. General correctness allows simple formulations of the connections between weakest and strongest postconditions and between the notions of weakest precondition under the “demonic” and “angelic” interpretations of nondeterminism. A problem that plagues sp-sp(P  C) is undefined if execution of C begun in some state of P may not terminate — disappears with the generalization.This paper is a study of some simple theory underlying predicate transformer semantics  and as yet has little bearing on current programming practices. The theory uses a relational model of programs.,2017-03-20
10.1007/s00236-015-0239-9,Compositional construction of most general controllers,Given a system $${\fancyscript{A}}$$A and an objective $$\varPhi $$Φ  the task of controller synthesis is to design a decision making policy that ensures $$\varPhi $$Φ to be satisfied. This article deals with transition system-like system models and controllers that base their decisions on the observables of the actions performed so far. We present a framework for the compositional construction of controllers for conjunctive sequences of linear-time objectives in an online manner. For this approach  it is crucial that the controllers enforce the objectives in a most general manner  being as permissive as possible. We then present game-based algorithms for the construction of such most general controllers for invariance  reachability and $$\omega $$ω-regular objectives.,2019-03-20
10.1007/s00236-006-0027-7,Representation and uniformization of algebraic transductions,This paper explores different means of representation for algebraic transductions  i.e.  word relations realized by pushdown transducers. The relevance of this work lies more in its point of view rather than any particular result. We are aiming at giving specific techniques for obtaining  or perhaps explaining  decompositions of algebraic (and incidentally  rational) relations  relying solely on their “machine” definition rather than some complex algebraic apparatus. From this point of view  we are hoping to have demystified the heavy formalism employed in the present literature. Some of the novelties of our work are: the use of “stack languages” and “embeddings ” which eliminate the need of arbitrary context-free languages in our characterizations  the study of uniformizations for algebraic transductions and the use of the so-called stack transductions for exposing the anatomy of pushdown transducers.,2020-03-20
10.1007/PL00013310,Synchronized extension systems,"Abstract.Synchronized extension systems (SE-systems  for short) are 4-tuples 
$G=(V L_1 L_2 S)$  where V is an alphabet and 
$L_1$  
$L_2$ and S are languages overV. They generate languages extending 
$L_1$ by 
$L_2$ to the left or to the right  and synchronizing on words in S. Such systems appear naturally when considering stacks  queues  grammar-like generative devices  splicing systems  zigzag-codes etc.",2016-03-20
10.1007/BF00265768,An endogenous priority model for load control in combined batch—interactive computer systems,SummaryA relatively high level analytical model for computer systems serving both batch and interactive users is presented. The model is unusual in its employment of an endogenous priority scheme to represent a class of strategies for controlling service to the two types of customers. Numerical methods developed by V. L. Wallace are used to generate steady state probability distributions for the infinite state Markov chain formed by the model. Data from the Michigan Terminal System  which includes a load controlling mechanism of the type modelled  is used to validate the model. Finally  additional parameter studies indicate that the model reflects the dynamic behavior of such system in a reasonable way.,2015-03-20
10.1007/s002360050078,Relational database constraints as counterexamples,Abstract. First order static database constraints are expressed as counterexamples  i.e.  examples that violate the integrity of the database. Examples are data and as such they can be specified and stored as data  and structured into database files for efficient search and retrieval. To express all first order constraints as counterexamples  a new normal form for first order logic is created which  after some syntactic transformation  is amenable to storage in flat files  and efficient search and retrieval. The critical contribution is the ability to manage a large number constraints on secondary storage devices  and eliminate the requirement to transport all constraints to main memory for testing.,2016-03-20
10.1007/BF01237233,Automating the Knuth Bendix ordering,Knuth and Bendix proposed a very versatile technique for ordering terms  based upon assigning weights to operators and then to terms by adding up the weights of the operators they contain. Our purpose in this paper is as follows. First we give some examples to indicate the flexibility of the method. Then we give a simple and practical algorithm  based on solving systems of linear inequalities  for determining whether or not a set of rules can be ordered by a Knuth Bendix ordering. We also describe how this algorithm may be incorporated in a completion procedure which thus considers all possible choices of weights which orient a given equation.,2019-03-20
10.1007/s236-002-8033-8,Minimally adequate teacher synthesizes statechart diagrams,Abstract. We consider the problem of synthesizing UML statechart diagrams from sequence diagrams as a language inference problem  and we solve it in Angluin's framework of minimally adequate teacher. The designer has the role of the teacher who answers membership and equivalence queries made by the algorithm. It turns out that there are several natural methods to decrease the number of membership queries needed  and thus  to make the algorithm practically applicable.,2019-03-20
10.1007/s002360050043,Optimizing the costs of hierarchical quorum consensus,We study the problem of how to minimize the cost of maintaining consistency among at least N copies of an object in an enviroment where the mix of read and write operations can vary. Quorum consensus requires that read and write operations must assemble appropriate quorums before an operation can succeed. The cost of an operation is proportional to the size of a quorum  and the objective is obviously to minimize the cost while still maintaining consistency. It is known that the quorum size can be reduced by organizing a number of copies into logical structures such as grids and hierarchies. In this paper  we show (a) how methods based on grids and hierarchies can be treated in a common framework  and (b) how these hierarchies can be optimized so as to minimize the cost of consensus. Of course  the optimal solution depends upon the mix of read and write operations that is present. Consequently  given N copies of an object and a ratio of write operations F  our algorithms determine the optimal values for the number of levels in the hierarchy and the read/write quorum sizes at each level. The algorithms  which run in O(N1.63) and O(N2) time  were tested  and the results are reported and discussed.,2012-03-20
10.1007/BF00288959,Parsing extended LR(k) grammars,SummaryAn extended LR(k) (ELR(k)) grammar is a context free grammar in which the right sides of the productions are regular expressions and which can be parsed from left to right with k symbol look-ahead. We present a practical algorithm for producing small fast parsers directly from certain ELR(k) grammars  and an algorithm for converting the remaining ELR(k) grammars into a form that can be processed by the first algorithm. This method  when combined with previously developed methods for improving the efficiency of LR(k) parsers  usually produces parsers that are significantly smaller and faster than those produced by previous LR(k) and ELR(k) algorithms.,2011-03-20
10.1007/BF00264283,The instability of self-stabilization,SummaryWe argue that the important property of self-stabilization is  in principle  unstable across system classes. In particular  we first define a very broad notion of simulation. We then define what it means for a simulation to either preserve or force self-stabilization. Given these definitions  we then show that  for a variety of system classes  there is no simulation that preserves or forces self-stabilization.,2011-03-20
10.1007/BF00289513,On non-determinancy in simple computing devices,SummaryThis paper studies one-tape Turing machines with k read-only heads which are restricted to the original input. The main result shows that if any set accepted by such a 3-head non-deterministic Turing machine can be accepted by a deterministic Turing machine with more read-only heads  then the deterministic and non-deterministic context-sensitive languages are identical. Several related results are derived and some tantalizing open problems are discussed.,2014-03-20
10.1007/BF00290340,On the role of unification in mechanical theorem proving,SummaryA generalization of the Skolem-Herbrand-Gödel Theorem is stated and proved  clarifying the role of unification in resolution. It is shown that any of the pre-resolution theorem-proving procedures of the Davis and Putnam variety can be upgraded to incorporate unification.,2018-03-20
10.1007/BF00264358,On some decidable properties of finite state translations,SummaryIn this paper we present algorithms to decide: 1) single-valuedness of nondeterministic finite transducers  2) equivalence of single-valued transducers  and 3) whether a given nondeterministic finite transduction can be realized by a deterministic transducer. When such a deterministic realization is possible our proof gives an effective construction of the deterministic transducer.The decidability of single-valuedness and equivalence for a-transducers has been obtained independently by Blattner and Head [3]. Our results introduce different characterizations for decidability and use a different proof that is interesting on its own.We began this research by generalizing the results about decoding automata presented in [5]. A report of these results with a heavy emphasis placed on applications to crytography appears in [6]. This paper presents results applicable in the more general area of finite state translations.,2011-03-20
10.1007/s00236-005-0176-0,MOMI: a calculus for mobile mixins,MOMI (Mobile Mixins) is a coordination language for mobile processes that communicate and exchange object-oriented code in a distributed context. MOMI's key idea is structuring mobile object-oriented code by using mixin-based inheritance. Mobile code is compiled and typed locally  and can interact successfully with code present on foreign sites only if its type is subtyping-compliant with the type of what is expected by the receiving site. The key feature of the paper is the definition of this subtyping relation on classes and mixins that enables a significantly flexible  yet still simple  communication pattern. We show that communication by subtyping is type-safe in that exchanged code is merged into local code without requiring further type analysis and recompilation.,2018-03-20
10.1007/BF00265990,Relational heuristics for the design of deterministic programs,SummaryIt has been shown that the design of deterministic programs can be formulated as the resolution of relational equations. Because relational calculi are not sufficiently structured  there are no algorithmic solutions to relational equations. In this paper  we formulate some heuristic solutions to these equations.,2018-03-20
10.1007/BF00288772,On the number of active *-operations needed to compute the discrete Fourier transform,SummaryLet M(N) denote the number of active multiplications/divisions needed to compute the discrete Fourier transform of N variables. Winograd showed M(N) ≦ O(N). For N a power of two we analyse his method and find M(N)≦8 N−o(N). Using additional symmetries we improve this to M(N)≦2N−o(N). We also give a very short proof for M(N)≦4N-o(N). Finally we show M(N)≧N − 2 log N.,2018-03-20
10.1007/BF00264617,On real-time cellular automata and trellis automata,SummaryIt is shown that f(n)-time one-way cellular automata are equivalent to f(n)-time trellis automata  the real-time one-way cellular automata languages are closed under reversal  the 2n-time one-way cellular automata are equivalent to real-time cellular automata and the latter are strictly more powerful than the real-time one-way cellular automata.,2013-03-20
10.1007/BF01213208,Update operations in deductive databases with functional dependencies,We study the problem of updating intensional relations in the framework of deductive databases on which integrity constraints (specifically functional dependencies) are defined. First  a formalization of a model-theoretic semantics of updates is provided: the notions ofrepresentability  consistency anddeterminism are introduced to characterize the various cases. Then  a proof-theoretic approach  based on a variant of resolution integrated with the chase procedure  is defined  showing that the method exactly captures the above notions. It turns out that using functional dependencies it is possible to resolve potential ambiguities in several practical cases. Also  precomputations can be performed at definition time to execute update requests more efficiently.,2013-03-20
10.1007/BF01213204,Domain independence and the relational calculus,Several alternative semantics (or interpretations) of the relational (domain) calculus are studied here. It is shown that they all have the same expressive power  i.e.  the selection of any of the semantics neither gains nor loses expressive power.Since the domain is potentially infinite  the answer to a relational calculus query is sometimes infinite (and hence not a relation). The following approaches which guarantee the finiteness of answers to queries are studied here:output-restricted unlimited interpretation  domain independent queries  output-restricted finite andcountable invention  andlimited interpretation. Of particular interest is the output-restricted unlimited interpretation—although the output is restricted to the active domain of the input and query  the quantified variables range over the infinite underlying domain. While this is close to the intuitive interpretation given to calculus formulas  the naive approach to evaluating queries under this semantics calls for the impossible task of examining infinitely many values. We describe here a constructiion which  given a queryQ under the output-restricted unlimited interpretation  yields a domain independent queryQ′  with length no more than exponential in the length ofQ  such thatQ andQ′ (under their respective semantics) express the same function.,2016-03-20
10.1007/BF00286494,On alternation II,SummaryEvery deterministic t(n)-time bounded multitape Turing machine can be simulated by an alternating t(n) loglog t(n)/log t(n)-time bounded Turing machine.If the depth of every directed acyclic graph with n edges can be reduced to log n by removing only o(n) edges  then in linear time nondeterministic multitape Turing machines can recognize mor languages than deterministic multitape Turing machines. For some graphs reduction of the depth to log n requires the removal of Ω(n/loglog n) edges. A graph theoretic condition is given  which implies that obliviousness reduces the power of multitape Turing machines.,2013-03-20
10.1007/BF00267046,Fooling a two-way nondeterministic multihead automaton with reversal number restriction,SummaryWe define a language L and show that it can be recognized by no two-way nondeterministic sensing multihead finite automaton with na reversal bound  where n is the length of input words  and 1/3>a>0 is a real number. Since L is recognized by a two-way deterministic two-head finite automaton working in linear time we obtain  for two-way finite automata  that time  reading heads  and nondeterminism as resources cannot compensate for the reversal number restriction.,2018-03-20
10.1007/BF00289470,Schnelle Multiplikation von Polynomen über Körpern der Charakteristik 2,SummaryPolynomial multiplication of degree N can be accomplished in time O (N · log N) provided the scalar field contains suitable roots of unity. Otherwise at least O (N · log N · log log N) is obtained by a modified version of the Schönhage-Strassen multiplication which employs computations modulo 1 + xn (where N = 2n)  if the field contains 2−1  or modulo 1 + xn + x2N  if 3−1 exists. The latter method covering all fields of characteristic 2 is presented here in detail.,2013-03-20
10.1007/BF01257084,Pattern matching in trees and nets,SummaryRational patterns are used to specify recognizable tree languages. It is shown that  given a rational patternp and a treet  one can decide inO(¦p¦·¦t¦) steps whether there is some match ofp int. Problems of this kind generalized to forests or nets are shown to be NP-complete.,2017-03-20
10.1007/BF03036465,Relating confluence  innermost-confluence and outermost-confluence properties of term rewriting systems,Innermost-confluence is important in giving call-by-value and denotational semantics and outermost-confluence is important in giving call-by-need and lazy semantics of programs. In this paper  we give a few sets of sufficient conditions under which the properties of confluence  innermost-confluence and outermost-confluence coincide.Confluence and innermost-confluence coincide for weakly innermost normalizing overlay systems and confluence and outermost-confluence coincide for outermost normalizing left-linear overlay systems. In general  every weakly innermost (outermost) normalizingconfluent system isinnermost (outermost) confluent but the converse is not true.,2019-03-20
10.1007/BF00289065,Über separatoren in planaren graphen,"SummaryA family of planar graphs Hn is exhibited such that for all n1)Hn is planar and has n nodes2)every separator in the sense of Lipton  Rose and Tarjan [1] has at least 
$$\sqrt {\tfrac{7}{6}} \sqrt n$$
 nodes.",2020-03-20
10.1007/s00236-006-0022-z,Linearly bounded infinite graphs,Linearly bounded Turing machines have been mainly studied as acceptors for context-sensitive languages. We define a natural class of infinite automata representing their observable computational behavior  called linearly bounded graphs. These automata naturally accept the same languages as the linearly bounded machines defining them. We present some of their structural properties as well as alternative characterizations in terms of rewriting systems and context-sensitive transductions. Finally  we compare these graphs to rational graphs  which are another class of automata accepting the context-sensitive languages  and prove that in the bounded-degree case  rational graphs are a strict sub-class of linearly bounded graphs.,2014-03-20
10.1007/BF00263294,Worst case performance of weighted buddy systems,SummaryIn this paper we have studied the worst case performance of the weighted buddy system of memory management. Specifically we have derived lower bounds of two system parameters NETREQ and NETALLOC for a weighted buddy system in case of unrestricted request sequence and stated a few preliminary results for those parameters in case of allocation only request sequence. We have also given bounds for the same system parameters for exact-fit memory management algorithms to compare the results with those for buddy systems.,2012-03-20
10.1007/BF00288768,Depth-first K-trees and critical path analysis,SummaryK-trees are tree representations of digraphs  and depth-first K-trees are Tarjan's depth-first search trees made explicit. Algorithms are given for the construction of depth-first K-trees. The depth-first K-trees are then used as a basis for nonrecursive algorithms for the following: topological ordering of an acyclic digraph  critical path analysis of a scheduling network  determination of longest paths from a single source in an acyclic digraph  and determination of strong components of a digraph. The time complexity of each algorithm is O(m)  where m is the number of arcs in the digraph. Storage structures for K-trees are defined  and the updating of a scheduling network is discussed.,2015-03-20
10.1007/s00236-009-0099-2,Machine structure oriented control code logic,Control code is a concept that is closely related to a frequently occurring practitioner’s view on what is a program: code that is capable of controlling the behaviour of some machine. We present a logical approach to explain issues concerning control codes that are independent of the details of the behaviours that are controlled. Using this approach  such issues can be explained at a very abstract level. We illustrate this among other things by means of an example about the production of a new compiler from an existing one. The approach is based on abstract machine models  called machine structures. We introduce a model of systems that provide execution environments for the executable codes of machine structures and use it to go into portability of control codes.,2017-03-20
10.1007/s002360050075,"Distance measures for point sets and their computation
",Abstract.We consider the problem of measuring the similarity or distance between two finite sets of points in a metric space  and computing the measure. This problem has applications in  e.g.  computational geometry  philosophy of science  updating or changing theories  and machine learning. We review some of the distance functions proposed in the literature  among them the minimum distance link measure  the surjection measure  and the fair surjection measure  and supply polynomial time algorithms for the computation of these measures. Furthermore  we introduce the minimum link measure  a new distance function which is more appealing than the other distance functions mentioned. We also present a polynomial time algorithm for computing this new measure. We further address the issue of defining a metric on point sets. We present the metric infimum method that constructs a metric from any distance functions on point sets. In particular  the metric infimum of the minimum link measure is a quite intuitive. The computation of this measure is shown to be in NP for a broad class of instances; it is NP-hard for a natural problem class.,2013-03-20
10.1007/PL00013304,A polynomial time computable metric between point sets,"Abstract. Measuring the similarity or distance between sets of points in a metric space is an important problem in machine learning and has also applications in other disciplines e.g. in computational geometry  philosophy of science  methods for updating or changing theories  
$\ldots$. Recently Eiter and Mannila have proposed a new measure which is computable in polynomial time. However  it is not a distance function in the mathematical sense because it does not satisfy the trian gle inequality. We introduce a new measure which is a metric while being computable in polynomial time. We also present a variant which computes a normalised metric and a variant which can associate different weights with the points in the set.",2017-03-20
10.1007/BF01213078,Compositional refinements in multiple blackboard systems,In this paper we introduce CONESP  a concurrent system built according to the SMoLCS methodology to provide an abstract model of the coordination language Extended Shared Prolog (ESP)  which is based on the integration of the blackboard paradigm with Logic Programming. CONESP is a hierarchy of blackboard systems  each consisting of a passive blackboard tree and a collection of active components including parallel agents and dynamic (sub)systems. An implementation relationshop between two hierarchies is defined  which is shown to be compositional. Some techniques have also been developed for the direct proof  i.e. the basic step in the inductive proof that one system implements another.ESP is being used in the Oikos environment for software process modelling. The results of this paper are the basis for the formal verification of the correctness of the software process models built by stepwise-refinements in Oikos.,2013-03-20
10.1007/BF00264255,On alternation,SummaryEvery alternating t(n)-time bounded multitape Turing machine can be simulated by an alternating t(n)-time bounded 1-tape Turing machine. Every nondeterministic t(n)-time bounded 1-tape Turing machine can be simulated by an alternating (n + (t(n))1/2)-timebounded 1-tape Turing machine. For wellbehaved functions t(n) every nondeterministic t(n)-time bounded 1-tape Turing machine can be simulated by a deterministic ((nlogn)1/2 + (t(n))1/2)-tape bounded off-line Turing machine. These results improve or extend results by Chandra-Stockmeyer  Lipton-Tarjan and Paterson.,2019-03-20
10.1007/BF01210596,On the expected height of fringe-balanced trees,We study the effect of a well-known balancing heuristic on the expected height of a random binary search tree. After insertion of an element  if any node on the insertion path has a subtree of size precisely 2t+1 for a fixed integert  then the subtree rooted at that node is destroyed and replaced by a new subtree in which the median of the 2t+1 elements is the new root. IfHn denotes the height of the resulting random tree  we show thatHn/logn →c(t) in probability for some functionc(t). In particular c(0)=4.31107... (the ordinary binary search tree) c(1)=3.192570 ... c(3)=2.555539 ... c(10)=2.049289 ... andc(100)=1.623695 ....,2018-03-20
10.1007/s002360050077,"Computational fractal geometry with WFA
",Abstract.We define two measures of “fractalness” of gray-tone images: the degree of self-similarity and the gray-tone fractal dimension as a generalization of Minkovski dimension of compact sets. We show how to compute both these measures from the WFA-representation of a gray-tone image. Since we have developed a WFA-inference algorithm which computes a good approximation of any gray-tone image we can compute a close approximation of both our measures of fractalness for any gray-tone image.,2019-03-20
10.1007/s002360050159,Comparing expressibility of normed BPA and normed BPP processes,"Abstract. We present an exact characterization of those transition systems which can be equivalently (up to bisimilarity) defined by the syntax of normed BPA
$_\tau$ and normed BPP
$_\tau$ processes. We give such a characterization for the subclasses of normed BPA and normed BPP processes as well. Next we demonstrate the decidability of the problem whether for a given normed BPA
$_\tau$ process 
$\Delta$ there is some unspecified normed BPP
$_\tau$ process 
$\Delta'$ such that 
$\Delta$ and 
$\Delta'$ are bisimilar. The algorithm is polynomial. Furthermore  we show that if the answer to the previous question is positive  then (an example of) the process 
$\Delta'$ is effectively constructible. Analogous algorithms are provided for normed BPP
$_\tau$ processes. Simplified versions of the mentioned algorithms which work for normed BPA and normed BPP are given too. As a simple consequence we obtain the decidability of bisimilarity in the union of normed BPA
$_\tau$ and normed BPP
$_\tau$ processes.",2018-03-20
10.1007/s00236-011-0147-6,Using transition set sequences to partition behaviors of petri nets,The transition set semantics (Wang and Jiao  LNCS 6128:84–103  2010) partitions the Petri net behaviors in a canonical way such that behaviors in an equivalence class have the same canonical transition set sequence. This article extends the semantics in two ways: firstly  the semantics is parameterized by the basic relation on the structural transitions to define different variants; secondly  the semantics for the infinite firing sequences of the net is defined. We prove that these extensions still preserve the well-definedness  soundness and completeness of the semantics. Furthermore  we show how to recognize some infinite sequences called back-loops in the view of this new semantics.,2018-03-20
10.1007/BF01209709,OBSCURE a specification language for abstract data types,OBSCURE is a specification language for abstract data types. It differs from classical specification languages by handling models rather than theories. The goal of the paper is to present a complete and precise description ofOBSCURE.First  the different language constructs are illustrated by the help of examples. The syntax and semantics of the language are then defined formally. The consistency of these definitions is stated in two theorems. Next  a set of formulas is associated with each specification. A further theorem states that these formulas guarantee the persistency or  more precisely  the absence of logical inconsistencies. A discussion of further language concepts-such as parameterization and strong typing-follows. Finally  a methodology for the development of software with the help ofOBSCURE is sketched and some practical results are presented.,2018-03-20
10.1007/BF00290144,Thrifty execution of task pipelines,SummaryA sequence of tasks that must be performed on a sequential database can be scheduled in various ways. Schedules will differ with respect to the number of accesses made to peripheral storage devices and the amount of memory space consumed by buffers. Buffer requirements are discussed for task schedules that avoid accesses to peripherals storing the sequential database. The relationship between certain thrifty scheduling policies and loop jamming  a standard code optimization technique  is also identified. Application to UNIX pipelines and to file processing is discussed.,2011-03-20
10.1007/BF00288777,Replaceability and computational equivalence for monotone boolean functions,SummaryReplacement rules have played an important role in the study of monotone boolean function complexity. In this paper  notions of replaceability and computational equivalence are formulated in an abstract algebraic setting  and examined in detail for finite distributive lattices — the appropriate algebraic context for monotone boolean functions. It is shown that when computing an element f of a finite distributive lattice D  the elements of D partition into classes of computationally equivalent elements  and define a quotient of D in which all intervals of the form [t ∧ f  t ∨ f] are boolean. This quotient is an abstract simplicial complex with respect to ordering by replaceability. Other results include generalisations and extensions of known theorems concerning replacement rules for monotone boolean networks. Possible applications of computational equivalence in developing upper and lower bounds on monotone boolean function complexity are indicated  and new directions of research both abstract mathematical and computational  are suggested.,2013-03-20
10.1007/s00236-003-0110-2,A word on 7 letters which is non-repetitive up to mod 5,Abstract. Trying to tile the plane in highly non-periodic ways leads to problems in combinatorics on words. In particular  one wants bisequences where certain subsequences are non-repetitive. The authors construct a perturbed 6-cycle which is non-repetitive up to mod 5. This answers a question of Currie and Simpson.,2020-03-20
10.1007/BF00290705,A formal semantics for concurrent systems with a priority relation,SummaryA formal semantics for the COSY path expressions with a priority relation is proposed. It turns out that in the general case the full aspects of behaviours of systems specified by such expressions cannot be modeled by vector firing sequences (a standard semantics for the case without priorities)  although vector firing sequences (but without interpretation as causality relations) can correctly be extended for expressions with priorities  and some (but not all) aspects of behaviours  like deadlockfreeness and adaquacy properties  can be defined in terms of vector firing sequences. To describe the behaviours of the COSY priority path expressions entirely  a new semantics  called the multiple firing sequence semantics  is introduced and some its properties are proved.,2018-03-20
10.1007/BF00268136,On a gauntlet thrown by David Gries,SummaryIt is requested to design a program that will generate the N! permutations of the values from 0 through N — 1 in such an order that the transition from one permutation to the next is always performed by exactly one swap of two neighbours.,2011-03-20
10.1007/BF00263744,Hierarchies of complete problems,SummaryAn attempt is made to present a framework for the diverse complete problems that have been found. A new concept—a Hierarchy of Complete Problems is defined. Several hierarchies in various domains such as graph theory  automata theory  theorem proving and games are established.,2011-03-20
10.1007/s00236-006-0008-x,Non uniform random generation of generalized Motzkin paths,We consider in this paper the class Mkn of generalized Motzkin paths of length n  that is  lattice paths using steps (1 1)  (1 −1)  (k 0)  where k is a fixed positive integer  starting at the origin (0 0)  running above the x-axis  and ending at (n 0). The area is the region bounded by the path and the x-axis. We first establish a bijection between the area of paths in Mkn and some lattice paths of length n+1. Then  by using a rejection technique  we obtain a linear algorithm with an average time complexity (k mod 2 +1)(n+1).,2016-03-20
10.1007/BF01177742,A transformation method for dynamic-sized tabulation,Tupling is a transformation tactic to obtain new functions  without redundant calls and/or multiple traversals of common inputs. It achieves this feat by allowing each set (tuple) of function calls to be computed recursively from its previous set. In previous works by Chin and Khoo [8 9]  a safe (terminating) fold/unfold transformation algorithm was developed for some classes of functions which are guaranteed to be successfully tupled.However  these classes of functions currently usestatic-sized tables for eliminating the redundant calls. As shown by Richard Bird in [3]  there are also other classes of programs whose redundant calls could only be eliminated by usingdynamic-sized tabulation. This paper proposes a new solution to dynamic-sized tabulation by an extension to the tupling tactic. Our extension useslambda abstractions which can be viewed as either dynamic-sized tables or applications of the higher-order generalisation technique to facilitate tupling. Significant speedups could be obtained after the transformed programs were vectorised  as confirmed by experiment.,2014-03-20
10.1007/BF00264023,On the definition of ELR(k) and ELL(k) grammars,SummaryExtended context free grammars are obtained by allowing regular expressions on the right hand sides of production rules of context free grammars. The LR(k) and LL(k) conditions are made applicable to these grammars by defining canonical transformations of extended grammars into context free grammars.,2020-03-20
10.1007/BF01178922,Proving finiteness of CCS processes by non-standard semantics,We present a semantic method to check the finiteness of CCS terms. The method is interpretative  i.e. it is based on a non-standard CCS operational semantics. According to this semantics it is always possible  given a processp  to build a finite state transition system which  if a condition holds  is a finite representation ofp; otherwise it is a suitable approximation of its semantic behaviour. The method is able to decide the finiteness of a CCS term in a larger number of cases than those captured by known syntactic criteria.,2019-03-20
10.1007/s00236-014-0205-y,Trace- and failure-based semantics for responsiveness,We study open systems modeled as Petri nets with an interface for asynchronous (i.e.  buffered) communication with other open systems. As a minimal requirement for successful communication  we investigate responsiveness  which guarantees that an open system and its environment always have the possibility to communicate. We investigate responsiveness with and without final states and also their respective bounded variants  where the number of pending messages never exceeds a previously known bound. Responsiveness accordance describes when one open system can be safely replaced by another open system. We present a trace-based characterization for each accordance variant. As none of the relations turns out to be compositional (i.e.  it is no precongruence)  we characterize the coarsest compositional relation (i.e.  the coarsest precongruence) that is contained in each relation  using a variation of should testing. For the two unbounded variants  the precongruences are not decidable  but for the two bounded variants we show decidability.,2015-03-20
10.1007/BF00289072,The report on the standard hardware representation for ALGOL 68,At its September  1973  meeting in Los Angeles  Working Group 2.1 of IFIP created a Standing Subcommittee for ALGOL 68 Support. The January  1975  meeting of this Subcommittee in Boston discussed at length a standard hardware representation and authorized a Task Force to draft a proposal incorporating the conclusions of that meeting. An initial draft was presented to the June  1975  meeting of the Informal Information Interchange at Oklahoma State University. Many improvements and alterations suggested at that meeting have been incorporated into this final version. All suggestions were valuable  even those that served only to stimulate discussion. Subsequently  this report was accepted by the August  1975  meeting of Working Group 2.1 in Munich and forwarded to IFIP.,2012-03-20
10.1007/BF01178659,Finding a maximum matching in a permutation graph,We present anO(n log logn) time algorithm for finding a maximum matching in a permutation graph withn vertices  assuming that the input graph is represented by a permutation.,2012-03-20
10.1007/BF00276181,The parsing problem for affix grammars,SummaryAffix grammars are an extension of context-free grammars which retain most of their advantages and eliminate most of their limitations with respect to the definition of programming languages and the specification of their translators. The extension allows definition of context-sensitive syntax features  and also allows semantics to be linked to syntax. In this paper  the parsing problem for affix grammars is explored and shown to be closely related to the parsing problem for context-free grammars. This enables a standard context-free parser constructor to be generalised to a constructor for affix grammars  essentially by addition of a preprocessor. The resulting constructors are compared with previously implemented or proposed constructors.,2017-03-20
10.1007/s00236-005-0164-4,The stuttering principle revisited,It is known that LTL formulae without the ‘next’ operator are invariant under the so-called stutter equivalence of words. In this paper we extend this principle to general LTL formulae with given nesting depths of both ‘next’ and ‘until’ operators. This allows us to prove the semantical strictness of three natural hierarchies of LTL formulae  which are parametrized either by the nesting depth of just one of the two operators  or by both of them. Further  we provide an effective characterization of languages definable by LTL formulae with a bounded nesting depth of the ‘next’ operator.,2015-03-20
10.1007/BF00262975,Information theoretic approximations for M/G/1 and G/G/1 queuing systems,SummaryThis paper presents new results concerning the use of information theoretic inference techniques in system modeling and concerning the widespread applicability of certain simple queuing theory formulas. For the case when an M/G/1 queue provides a reasonable system model but when information about the service time probability density is limited to knowledge of a few moments  entropy maximization and cross-entropy minimization are used to derive information theoretic approximations for various performance distributions such as queue length  waiting time  residence time  busy period  etc. Some of these approximations are shown to reduce to exact M/M/1 results when G = M. For the case when a G/G/1 queue provides a reasonable system model  but when information about the arrival and service distributions is limited to the average arrival and service rates  it is shown that various well known M/M/1 formulas are information theoretic approximations. These results not only provide a new method for approximating the performance distributions  but they help to explain the widespread applicability of the M/M/1 formulas.,2020-03-20
10.1007/BF01210595,On simplest possible solutions for Post Correspondence Problems,We investigate the simplicity of solutions for instances of the Post Correspondence Problem  from the point of view of both index words and terminal words. This leads to the notion of amixed primality type of an instance. Our main result gives an exhaustive characterization of mixed primality types.,2011-03-20
10.1007/s002360050113,"Structured numbers
",Abstract. We introduce a hierarchy of operations on (finite and infinite) binary trees. The operations are obtained by successive repetition of one initial operation. The first three operations are generalizations of the operations of addition  multiplication and exponentiation for positive integers.,2020-03-20
10.1007/s00236-005-0163-5,The weakest specifunction,The weakest specifunction has been introduced to generalise the notions of weakest prespecification and weakest parallel environment. It calculates the weakest specification function whose value refines the target specification when applied to a given component; thus it forms the basis for compositional refinement  an essential ingredient in program derivation. But unlike those previous calculi it is able to deal with several unknown components simultaneously and hence has wider applicability. In this paper we extend the general theory of the weakest specifunction  identifying those spaces in which it behaves miraculously. The par-seq specifunction places an established component in parallel with a required component and the result in sequence with another required component to meet a given specification. We extend the study of the par-seq specifunction in the context of log s  an intermediate-level language for reactive computing in an abstraction of the PRAM and BSP models of computation  and provide a single complete law for its use in program derivation. The resulting calculus is applied to the derivation of a distributed algorithm for dynamic load balancing.,2013-03-20
10.1007/s002360050040,Simple extensions of 1-writer atomic variable constructions to multiwriter ones,We present several simple wait-free constructions of multiwriter multireader multivalued atomic shared variables. These are extensions of two 1-writer constructions in the literature and use a multiwriter multireader fixed-valued atomic variable. All the constructions are intuitive  and their correctness proofs are short and easy to follow. Some constructions are conflictfree  that is  in each execution  no reading of a buffer overlaps with any writing of that buffer. All the conflict-free constructions have the property that there is only one reading of a buffer in a read execution. Some of them have the additional property that there is only one writing of a 1-reader buffer  for each reader  in a write execution.,2019-03-20
10.1007/s00236-016-0265-2,Precise parameter synthesis for stochastic biochemical systems,We consider the problem of synthesising rate parameters for stochastic biochemical networks so that a given time-bounded CSL property is guaranteed to hold  or  in the case of quantitative properties  the probability of satisfying the property is maximised or minimised. Our method is based on extending CSL model checking and standard uniformisation to parametric models  in order to compute safe bounds on the satisfaction probability of the property. We develop synthesis algorithms that yield answers that are precise to within an arbitrarily small tolerance value. The algorithms combine the computation of probability bounds with the refinement and sampling of the parameter space. Our methods are precise and efficient  and improve on existing approximate techniques that employ discretisation and refinement. We evaluate the usefulness of the methods by synthesising rates for three biologically motivated case studies: infection control for a SIR epidemic model; reliability analysis of molecular computation by a DNA walker; and bistability in the gene regulation of the mammalian cell cycle.,2015-03-20
10.1007/s00236-004-0137-z,Reducing non-determinism in right nulled GLR parsers,Abstract.Tomita’s general parsing algorithm is linear on LR(1) grammars but fails to terminate on grammars with hidden left recursion and is not efficient in the presence of $\epsilon$-rules. When Right Nulled (RN) parse tables are used Tomita style GLR algorithms operate correctly and more efficiently on all context free grammars. However  an RN table may contain more conflicts than the corresponding LR table  making the construction of parts of the internal structure redundant. We show that in certain cases conflicts can be removed from an RN table without compromising the correctness of the associated parser. In particular  all conflicts can be removed if the grammar is LR(1). This improves the performance of the parser and allows resolved RN tables for LR(1) grammars to be used with standard (deterministic) LR stack-based parsing algorithms  adding the ‘short-circuiting’ of right nullable reductions to the armoury of efficient implementation techniques for such algorithms.,2019-03-20
10.1007/BF00263929,The universe problem for unrestricted flow languages,SummaryUnrestricted flow languages (UFL's) are denoted by unrestricted flow expressions  namely regular expressions extended with the shuffle operator and its closure. It is shown that the universe problem for UFL's over a binary alphabet is unsolvable. “Over a binary alphabet” should be emphasized since the shuffle operator prevents us from careless application of the usual coding technique. To develop a way of mapping arbitrary unrestricted flow expressions into those over a binary alphabet while preserving as many characteristics as possible is another main purpose of this paper.,2017-03-20
10.1007/BF00291051,A calculus of refinements for program derivations,SummaryA calculus of program refinements is described  to be used as a tool for the step-by-step derivation of correct programs. A derivation step is considered correct if the new program preserves the total correctness of the old program. This requirement is expressed as a relation of (correct) refinement between nondeterministic program statements. The properties of this relation are studied in detail. The usual sequential statement constructors are shown to be monotone with respect to this relation and it is shown how refinement between statements can be reduced to a proof of total correctness of the refining statement. A special emphasis is put on the correctness of replacement steps  where some component of a program is replaced by another component. A method by which assertions can be added to statements to justify replacements in specific contexts is developed. The paper extends the weakest precondition technique of Dijkstra to proving correctness of larger program derivation steps  thus providing a unified framework for the axiomatic  the stepwise refinement and the transformational approach to program construction and verification.,2016-03-20
10.1007/BF00265153,HDTOL matching of computations of multitape automata,SummaryWe discuss the technique for testing the equivalence of two deterministic automata by constructing a language that matches the computations of two equivalent automata on the same input word. Specifically  we propose to use HDTOL languages that are powerful enough to match computations of many equivalent deterministic multitape automata  and at the same time  have nice decidable properties. Using this new technique of HDTOL matching  we show that the inclusion problem between an arbitrary deterministic multitape automaton and a simple one is decidable in both directions. Further  we show that the equivalence for a restricted class of transducers based on deterministic multitape automata is decidable.,2020-03-20
10.1007/BF00264249,Using circular programs to eliminate multiple traversals of data,SummaryThis paper describes a technique for transforming functional programs that repeatedly traverse a data structure into more efficient alternatives that do not. The transformation makes essential use of lazy evaluation and local recursion (such as provided by letrec  or its equivalent) to build a circular program that  on one pass over the structure  determines the effects of the individual traversals and then combines them.,2017-03-20
10.1007/BF00289019,Maintaining range trees in secondary memory,SummaryWhen storing and maintaining a data structure in secondary memory it is important to partition it into parts such that each query and update passes through a small number of parts. In this way the number of disk accesses and the amount of data transport required can be kept low. In Part I of this paper a number of partition schemes were given for partitioning range trees. In this paper we study lower bounds for partitions. In this way we prove that many of the partitions given in Part I are optimal.,2014-03-20
10.1007/BF00271341,Concurrent access to data,SummaryProblems caused by concurrent access to data can be solved by locking. This  however  diminishes efficiency and may cause deadlocks among the accessing processes. In this paper the structuring of data sets is deduced from assertions about accesses which may be performed simultaneously. This structuring supports the development of operations which synchronize concurrent access to these data. Thus the provisions for locking are transferred from programs to data structures where the requests for locking actually arise. The synchronization operations will exclude all undesired interferences and will maximize the number of possible simultaneous accesses in accordance with the original assertions.,2011-03-20
10.1007/BF00265151,Step failures semantics and a complete proof system,SummaryThe (linear) failures semantics is a well-known model for the theoretical version of Hoare's CSP. We generalize this semantics by taking steps (i.e. multisets of simultaneously occurring actions) instead of single actions as the basic execution unit. Hence opposed to the linear semantics — where parallelism is modelled as arbitrary interleaving in order to avoid technical complication — the step failures semantics models parallelism explicitly and is equally easy to manage. In particular a sound and complete proof system is given. Opposed to the linear model divergence is treated uniformly here. The relation to the linear semantics can be established using our newly introduced deparallelize operator.,2014-03-20
10.1007/PL00013320,Efficient recognition algorithms for boundary and linear eNCE graph languages,Abstract. It is well known that every boundary (linear) eNCE graph language that is connected and degree-bounded by a constant is in LOGCFL (NLOG). The present paper proves an upper bound of the complexity of boundary (linear) eNCE graph languages whose component and degree bounds are functions in the size of the graph. As a corollary of this analysis  the known LOGCFL and NLOG results stated above hold even if “connected” is replaced by “component-bounded by log n.”,2020-03-20
10.1007/BF01179370,On efficient entreeings,A data encoding is a formal model of how a logical data structure is mapped into or represented in a physical storage structure. Both structures are complete trees in this paper  and we encode the logical or guest tree in the leaves of the physical or host tree giving a restricted class of encodings called entreeings. The cost of an entreeing is the total amount that the edges of the guest tree are stretched or dilated when they are replaced by shortest paths in the host tree. We are particularly interested in the asymptotic average cost of families of similar entreeings.Our investigation is a continuation of the study initiated by Rosenberg et al. In particular  the paper contains the following results.1.We refute a conjecture of Rosenberg et al. that a particular family of entreeings of binary guests into binary hosts is optimal.2.We provide an efficient family of entreeings fork-ary guests intok-ary hosts  fork≧2.3.We provide an efficient family of entreeings ofk-ary guests into binary hosts  fork≧3.4.We provide a new simple lower-bound technique that can be applied to the entreeings in part 2 to prove that they are very close to optimal. Moreover  it can be adapted for the entreeings of part 3  in which case we are able to show near optimality whenk is sufficiently large.,2017-03-20
10.1007/BF01185682,A model and a fast algorithm for multiple errors spelling correction,A new model for multiple errors spelling correction is proposed. The model handles insert  delete  change  and transpose errors. In the new model  we put constraints on possible editing sequences to reflect the error occurrence phenomenon in spelling  resulting in an error measure different from the traditional editing distance error measure. Properties of the “error distance matrix” between two character strings are studied under the assumptions of the new model. A cut-off criterion has been discovered  which can detect whether the error distance between two character strings is greater than a prespecified value during the calculation. Based on this cut-off criterion  a fast algorithm has been developed to find the nearest neighbors of a given character string in a dictionary. Experiments have been conducted with results showing that the cut-off criterion can greatly cut down the computation time needed for the nearest neighbor searching.,2012-03-20
10.1007/s00236-003-0119-6,Ideal preemptive schedules on two processors,Abstract.An ideal schedule minimizes both makespan and total flow time. It is known that the Coffman-Graham algorithm [Acta Informatica1  200-213  1972] solves in polynomial time the problem of finding an ideal nonpreemptive schedule of unit-execution-time jobs with equal release dates and arbitrary precedence constraints on two identical parallel processors. This paper presents an extension of the algorithm that solves in polynomial time the preemptive counterpart of this problem. The complexity status of the preemptive problem of minimizing just the total flow time has been open.,2013-03-20
10.1007/BF00264276,A general proof rule for procedures in predicate transformer semantics,SummaryA proof rule for the procedure call is derived for procedures with value  result and value-result parameters. It is extended to procedures with unrestricted global variables and to recursive procedures. Like D. Gries's proof rule  it is based on the substitution rule for assignment. However  it is more general and much simpler to apply. Assume that {U} S {V} has been proved about the procedure body S. The proof rule for determining whether a call establishes predicate E is based on finding an “adaptation” A satisfying A∧V ⇒ E′  where E′ is derived from E by some substitution of parameters.,2015-03-20
10.1007/s002360050085,"Dynamic LL(
$k$) parsing
","Abstract.A new class of context-free grammars  called dynamic context-free grammars  is introduced. These grammars have the ability to change the set of production rules dynamically during the derivation of some terminal string. The notion of LL(
$k$) parsing is adapted to this grammar model. We show that dynamic LL(
$k$) parsers are as powerful as LR(
$k$) parsers  i.e. that they are capable to analyze every deterministic context-free language while using only one symbol of lookahead.",2012-03-20
10.1007/BF00289153,The design of a portable programming language,SummaryWe consider the design of a strongly-typed language with userdefined types in which it is arranged that  given that a type is available  it is immaterial to the user whether it is a user-defined type or one of the “primitive types” with representations selected by the implementer. This scheme provides unprecedented freedom in choosing the primitive types; by making these machine-dependent we can ensure production of programs that are easily and efficiently portable between computers of different architectures. A general discussion of the implementer's responsibilities in choosing primitive types appropriate to his machine is illustrated by considering implementation choices for translation of the language into BCPL. Finally we discuss the contribution of the language to the solution of the portability problem.,2013-03-20
10.1007/s00236-007-0068-6,The Boolean closure of linear context-free languages,Closures of linear context-free languages under Boolean operations are investigated. The intersection closure and the complementation closure are incomparable. By closing these closures under further Boolean operations we obtain several new language families. The hierarchy obtained by such closures of closures is proper up to a certain level  where it collapses to the Boolean closure which  in turn  is incomparable with several closures of the family of context-free languages. The Boolean closure of the linear context-free languages is properly contained in the Boolean closure of the context-free languages. A characterization of a class of non-unary languages that cannot be expressed as a Boolean formula over the linear context-free languages is presented.,2017-03-20
10.1007/BF00290732,On some variants of Post's Correspondence Problem,SummaryA variant of Post's Correspondence Problem is considered where two different index words are allowed provided that one of them can be obtained from the other by permuting a fixed number of subwords. It is shown that this variant is undecidable. Post's Correspondence Problem is also extended to circular words  doubly infinite words and doubly infinite powers of words  and shown to be undecidable in all these extensions.,2014-03-20
10.1007/BF00282621,An efficient general iterative algorithm for dataflow analysis,SummaryExisting iterative algorithms for global dataflow analysis have demonstrable shortcomings; either they can be used only for a limited class of problems or they are needlessly inefficient in some cases. We review several algorithms  pointing out weaknesses and develop a new algorithm that can be used for a wide class of problems and has a runtime that compares favorably ro runtimes of existing algorithms.,2014-03-20
10.1007/BF00277388,Optimum checkpoints with age dependent failures,SummaryThis paper presents a method for obtaining the optimum checkpoint interval of a transaction processing computer system subject to time dependent failures. The system uses checkpointing to create a valid system state  and roll-back in order to recover from failures. Maximizing system availability we derive the optimum checkpoint interval as a function of the load of the system and of the time dependent failure rate. The results are illustrated numerically for the Weibull failure rate.,2011-03-20
10.1007/s00236-009-0106-7,Strongly transitive automata and the Černý conjecture,The synchronization problem is investigated for a new class of deterministic automata called strongly transitive. An extension to unambiguous automata is also considered.,2013-03-20
10.1007/s002360100067,Timed tree automata with an application to temporal logic,"Abstract. Finite automata on 
$\omega$-sequences and 
$\omega$-trees were introduced in the sixties by Büchi  McNaughton and Rabin. Finite automata on timed 
$\omega$-sequences were introduced by Alur and Dill. In this paper we extend the theory of timed 
$\omega$-sequences to 
$\omega$-trees. The main motivation is the introduction of a new way to specify real-time systems and to study  using automata-theoretic techniques  branching-time temporal logics with timing constraints. We study closure properties and decision problems for the obtained classes of timed 
$\omega$-tree languages. In particular  we show the decidability of the emptiness problem. As an application of the introduced theory  we give a new decidable branching time temporal logic (STCTL) whose semantics is based upon timed 
$\omega$-trees.",2017-03-20
10.1007/s00236-006-0031-y,Parallel LL parsing,A deterministic parallel LL parsing algorithm is presented. The algorithm is based on a transformation from a parsing problem to parallel reduction. First  a nondeterministic version of a parallel LL parser is introduced. Then  it is transformed into the deterministic version—the LLP parser. The deterministic LLP(q k) parser uses two kinds of information to select the next operation — a lookahead string of length up to k symbols and a lookback string of length up to q symbols. Deterministic parsing is available for LLP grammars  a subclass of LL grammars. Since the presented deterministic and nondeterministic parallel parsers are both based on parallel reduction  they are suitable for most parallel architectures.,2018-03-20
10.1007/BF01191896,A class of coders based on GSM,Using the definition of gsm and finite translators  a new class of coders is proposed. In the first part it is shown that ifM is a weakly-deterministic coder  thenM−1 is also a coder. In the second part  this class of coders is used for solving a problem of secrets transmission.,2019-03-20
10.1007/BF00299633,Attribute (Re)evaluation in OPTRAN,SummaryA transformation of a tree decorated according to some attribute grammar may leave the tree containing attribute inconsistencies. An attribute reevaluation algorithm computes new attribute values for affected attribute instances. It has to guarantee  that never an inconsistent attribute value is accessed. Reps' algorithm performs this task in time  O(¦affected region¦). It is data driven as changed values trigger recomputations of attribute instances dependent on them. After each transformation  a complete update of the effected instances is performed. Reps' algorithm is compared with the data driven reevaluation scheme used in OPTRAN. It uses the same strategic information in the initial attribute evaluation and the reevaluation process. Furthermore  we present a demand driven scheme for attribute reevaluation. It does not have the linear time complexity for each update after one transformation but  depending on the situation  often compares favourably with the data driven scheme for series of transformations. In addition  the linear time complexity of the data driven reevaluation algorithm needs fast convergence using an equality test between old and new attribute values. It is thus necessary  to keep the attribute values at (almost) all instances. The demand driven reevaluator does not need all the old attribute values. It can flexibly trade time for space. We also describe the handling of space consuming attributes  e.g. tables  lists and trees  in the reevaluation algorithm. An integrated version of data driven and demand driven reevaluation using these features has been implemented in the OPTRAN system.,2012-03-20
10.1007/BF00264288,Performance predictions for extended paged memories,SummaryThis paper concerns the problem of obtaining predictions of the extent to which additional core storage would improve the performance of a given paging system based on information that could be obtained from monitoring the system whilst running its normal workload.It is shown that for a large class of replacement algorithms there are efficient techniques for producing exact predictions of the performance improvement  and that for a further class of algorithms statistical predictions can be provided.,2014-03-20
10.1007/BF00288657,A decomposable model of program paging behaviour,SummaryExisting models of program behaviour are shown to give an incomplete account of program locality. A model based on the distinction between short- and long-run equilibrium states in nearly completely decomposable systems is proposed to overcome this deficiency. This distinction leads to the combined use of a Markovian model of the transitions between localities and of separate models for the locality short-term behaviours. This combination is shown to give better estimations of the page fault rate and of the working set size distribution. The conditions under which this distribution is approximately normal and under which the assumptions of independent page references are valid are also clarified. The approach is illustrated by a numerical example  showing in particular that other models presented in the literature may have computer time and space requirements which are beyond practical possibilities.,2011-03-20
10.1007/s00236-013-0192-4,Delay and energy efficiency analysis of multicast cooperative ARQ over wireless networks,This paper investigates the performance of multicast cooperative ARQ (MCARQ) in wireless networks for reducing the system’s waiting time and the sum energy  where the delay and energy analytical model are proposed under equivalent service time and ideal Nyquist pulse. The packet transmission process is modulated by a three-state Markov chain  then the steady-state distribution of the MCARQ is obtained by solving the Markov chain. Further  the queue waiting time and energy efficiency of the multicast ARQ (MARQ) and MCARQ are obtained respectively. Theoretical analysis and simulation results demonstrate that the MCARQ protocol has a better performance than the MARQ in delay and energy efficiency. The presented model has potentially applications in practical systems  e.g. Multi-user MIMO communications.,2020-03-20
10.1007/s00236-013-0188-0,Petri nets with name creation for transient secure association,Transient secure association has been widely accepted as a possible alternative to traditional authentication in the context of Ubiquitous Computing. Two components in a distributed system with transient secure association may share a master-slave relationship  which creates a hierarchical but dynamic structure of components. In this paper we develop several formal models for distributed systems with transient secure association  with incremental expressive power  all based on Petri nets. The first model  that we call transient secure association (TSA) systems  considers finitely many components. Then we consider a small extension of TSA systems  in which slaves are initialized whenever a master-slave relation is broken. Last  we define unbounded TSA (uTSA) systems  for which the number of components is not bounded. For each of the defined formalisms  we establish a link to a known class of Petri nets  thus inheriting the corresponding (un)decidability results from them.,2016-03-20
10.1007/BF01185680,TheSB-tree an index-sequential structure for high-performance sequential access,A variant of aB-tree known as anSB-tree is introduced  with the object of offering high-performance sequential disk access for long range retrievals. The key to this efficiency is a structure that supports multi-page reads (or writes) during sequential access to any node level below the root  even following significant node splitting. In addition  theSB-tree will support a policy to ‘stripe’ successive multi-page blocks on multiple disks to achieve maximum parallelism. Compared to traditionalB-tree structures SB-tree performance characteristics are less subject to degradation resulting from modifications entailed in growing and shrinking;SB-trees are therefore more appropriate for use in situations where frequent reorganization is not possible. A performance analysis reveals the strengths of theSB-tree by comparing its performance under various circumstances to theB+-tree and the bounded disorder (BD) file of [11]. The performance analysis formulates a new useful concept  the ‘effective depth’ of anSB- orB+-tree  defined as the expected number of pages read from disk to perform a random retrieval search given standard buffering behavior. A graph of effective depth against tree size is shown to have a scalloped appearance  reflecting the changing effectiveness of incremental additions to buffer space.,2014-03-20
10.1007/BF00283331,A proof system for distributed processes,SummaryA partial correctness proof system for Brinch Hansen's Distributed Processes (DP) is presented. Two important aspects of the system are: Proofs of individual processes of a DP program are completely isolated from each other; in particular  no assumptions are allowed in the proof of one process about the behavior of the other processes. Secondly a process is characterized by its externally visible behavior  i.e. the sequence of interactions between this process and the other processes of the program. An example demonstrates the use of the system.,2020-03-20
10.1007/BF01261653,Efficient comparison of program slices,Theslice of a program with respect to a componentc is a projection of the program that includes all components that might affect (either directly or transitively) the values of the variables used atc. Slices can be extracted particularly easily from a program representation called a program dependence graph  originally introduced as an intermediate program representation for performing optimizing  vectorizing  and parallelizing transformations. This paper presents a linear-time algorithm for determining whether two slices of a program dependence graph are isomorphic.,2016-03-20
10.1007/BF00289147,Stable duplicate-key extraction with optimal time and space bounds,SummaryWe consider the problem of transforming a list L of records sorted on some key into two sublists L1 and L2 where  for each distinct key in L  L1 contains the first record of L that possesses the key and L2 contains all records of L with duplicate keys. We desire that our duplicate-key extraction algorithm perform the transformation in place and be stable (that is  records within each sublist must obey the original order given by L). This operation is useful in database and related file processing environments whenever only distinct keys need be considered. Moreover  stability in extraction insures that L can be efficiently restored at a later time with a stable merge of L1 and L2. Any procedure for performing duplicate-key extraction on a list of size n must require at least O(n) time and O(1) extra space  although the obvious algorithm for achieving either bound alone violates the other bound. We design a stable algorithm  using block-rearrangement techniques  and show that it is optimal in the theoretical sense that it achieves both lower bounds simultaneously. We also prove that its worst-case number of key comparisons and record exchanges sum to no more than 6 n  suggesting that the algorithm has practical application as well.,2015-03-20
10.1007/s00236-006-0020-1,Refinement verification of the lazy caching algorithm,The lazy caching algorithm of Afek et al. (ACM Trans. Program. Lang. Syst. 15  182–206  1993) is a protocol that allows the use of local caches with delayed updates. It results in a memory model that is not atomic (linearizable) but only sequentially consistent as defined by Lamport. In Distributed Computing 12 (1999)  specifying and proving sequential consistency for the lazy caching algorithm was made into a benchmark for verification models. The present note contains such a specification and proof. It provides a simulation from the implementation to the abstract specification. The concrete verification only relies on the state space and the next-state relation. All behavioural aspects are treated in theories independent of the specific algorithm. The proofs of the underlying theories and of the concrete algorithm have been verified with the proof assistant PVS.,2017-03-20
10.1007/BF00268500,The mathematical analysis of the computer system modeled as a two stage cyclic queue,SummaryThe use of network queueing models to aid in the analysis and design of multiprogrammed computer system is well established. Their use provides qualitative insights as well as quantitative measures. These latter measures may be used either directly to assess system performance  or indirectly to provide a theoretical backstop for the validation of more elaborate simulation modes. Further  we note that the mathematical analysis of these models is of itself interesting and worthy of consideration.In this paper we concentrate on the simplest possible network model  that is  that model which consists of two nodes  through which jobs cyclically and repeatedly pass in their bid for service from the node servers. As we shall hopefully demonstrate a wide variety of situations can be represented by variations of this simple model. In this endeavor we shall include a consideration of several variants which  at least to date  defy exact mathematical analysis. In these latter cases we are therefore much interested in the availability of good quality approximate solutions  and several are discussed.As our title and preceding remarks suggest it is the mathematical analysis of these models on which we concentrate  pointing out for each  of course  what its analysis contributes to the totality of information.In the closing section we review our effort and point out the relationship of our results to more general network models.,2020-03-20
10.1007/BF00289261,Flow languages equal recursively enumerable languages,SummaryRecently  A.C. Shaw introduced a new class of expressions called flow expressions  and conjectured that the formal descriptive power of flow expressions lies somewhat below context-sensitive grammers. In this paper  we give a negative answer for his conjecture  that is  we show that all recursively enumerable languages may be denoted by flow expressions.,2016-03-20
10.1007/s002360200082,A general procedure to check conjunctive query containment,Abstract. In this paper  we present a general procedure to test conjunctive query containment. We divide the containment problem into four categories  taking into account the underlying semantics (set or bag theoretic) and the presence or absence of built-in predicates in the queries.After a brief review of previous work on conjunctive query containment  we present a new procedure  called QCC (Query Containment Checker)  which we show to be a general and uniform procedure to check the containment among conjunctive queries under the four categories mentioned above. We briefly describe the use of QCC to check bag containment of conjunctive queries  and explain in detail how to use QCC to check set containment of conjunctive queries with built-in predicates. In our conclusions  we point out some uses of QCC for other types of containment.,2013-03-20
10.1007/BF01193574,Stacks  queues  and deques with order-statistic operations,Anorder-statistic deque is a deque that also supports the operationfind(k  D)  wherefind(k  D) returns the item inD with rankk. Assumingk is fixed  we show how to implement an order-statistic deque so thatinject(x  D)  eject(D)  push(x  D)  andpop(D) take O(logk) amortized time andfind(k  D) takes worst-case constant time; the time bounds can be made worst case using a technique of Gajewska and Tarjan. We also show our implementations are optimal in the algebraic decision tree model of computation. This deque is applied to three problems: computing order-statistic filters  finding a smallest area convex quadrilateral in the plane  and computing “batched” order statistics.,2020-03-20
10.1007/BF00289067,The correctness of the Schorr-Waite list marking algorithm,SummaryThis paper presents a relatively simple proof of a nontrivial algorithm for marking all the nodes of a list structure. The proof separates properties of the algorithm from properties of the data on which it operates and is a significant application of the method of “intermittent assertions”.,2020-03-20
10.1007/978-3-319-44479-6_14,ARRIVAL: A Zero-Player Graph Game in NP ∩ coNP,,2016-03-20
10.4230/LIPIcs.ICALP.2018.60,ARRIVAL: Next Stop in CLS,,2018-03-20
10.1016/J.IPL.2017.01.004,Did the train reach its destination: The complexity of finding a witness,,2013-03-20
10.1016/j.ipl.2017.01.004,Did the train reach its destination: The complexity of finding a witness,,2016-03-20
10.4230/LIPIcs.ICALP.2018.124,Reachability Switching Games,,2020-03-20
10.1142/S0218195912500045,Optimal Binary Space Partitions for Segments in the Plane,,2018-03-20
10.1016/j.dam.2016.04.016,The VC-dimension of graphs with respect to k-connected subgraphs,,2016-03-20
10.1007/978-3-642-04388-8_13,Towards Relational Schema Uncertainty,,2019-03-20
10.1007/978-3-540-87993-0_24,Optimization of Queries over Interval Probabilistic Data,,2019-03-20
10.1109/ICEIE.2010.5559685,An algorithm of estimation pattern tree number in probabilistic XML data tree,,2020-03-20
10.3923/ITJ.2010.1706.1712,Converting Probabilistic Relational Data to Probabilistic XML Data Tree,,2014-03-20
10.1145/1805286.1805291,A Survey on Uncertainty Management in Data Integration,,2014-03-20
10.1007/s11704-017-7063-z,A survey of uncertain data management,,2017-03-20
10.1007/978-0-387-09680-3_21,Lifting Non-Finite Axiomatizability Results to Extensions of Process Algebras,,2015-03-20
10.1007/978-3-319-25150-9_15,Quotients of Unbounded Parallelism,,2014-03-20
10.1016/S0304-3975(99)00277-7,Shuffle and scattered deletion closure of languages,,2020-03-20
10.1007/978-3-642-21254-3_10,Recognizing Shuffled Languages,,2012-03-20
10.1007/978-3-540-74407-8_2,The Saga of the Axiomatization of Parallel Composition,,2015-03-20
10.1007/978-3-662-55751-8_4,Some Results of Zoltán Ésik on Regular Languages,,2011-03-20
10.1016/J.JCTA.2019.01.004,Word equations with kth powers of variables,,2014-03-20
10.1016/S0304-3975(00)00156-0,Local and global cyclicity in free semigroups,,2016-03-20
10.1007/978-3-319-66396-8_1,Commutation and Beyond - Extended Abstract,,2015-03-20
10.1007/3-540-45007-6_6,Test Sets for Large Families of Languages,,2012-03-20
10.3233/FI-2018-1722,Studying Word Equations by a Method of Weighted Frequencies,,2012-03-20
10.3233/FI-1999-381217,On the Decidability of Some Problems Concerning Morphisms  Regular Sets  and Post Correspondence Problem,,2020-03-20
10.1007/978-3-030-28796-2_4,Independent Systems of Word Equations: From Ehrenfeucht to Eighteen,,2015-03-20
10.1051/ita/1997310302911,Polynomial Size Test Sets for Commutative Languages,,2018-03-20
10.1016/S0304-3975(97)00255-7,On the System of Word Equations x0ui1x1ui2x2ui3x3=y0vi1y1vi2y2vi3y3(i=0  1  2  ...) in a Free Monoid,,2011-03-20
10.1007/3-540-46466-2_13,Transactional Computation: Overview and Discussion,,2014-03-20
10.1007/978-3-662-04058-4,Entity-Relationship Modeling,,2019-03-20
10.1016/j.datak.2006.07.007,Personalisation of web information systems - A term rewriting approach,,2013-03-20
10.1016/S0169-023X(03)00061-2,Consistency preserving updates in deductive databases,,2018-03-20
10.1007/3-540-48321-7,Fundamentals of Computation Theory,,2016-03-20
10.1007/s10270-008-0108-x,Automatic generation of basic behavior schemas from UML class diagrams,,2019-03-20
10.1007/978-3-642-28279-9_8,Foundations for a Fourth Normal Form over SQL-Like Databases,,2012-03-20
10.1007/978-3-642-11447-2_8,Management of UML Clusters,,2012-03-20
10.1007/3-540-44759-8_50,Improving Integrity Constraint Enforcement by Extended Rules and Dependency Graphs,,2015-03-20
10.1007/978-3-540-45275-1_9,Intentions of Operations - Characterization and Preservation,,2011-03-20
10.1016/S1571-0661(04)80885-5,Computability and Decidability Issues in the Theory of Consistency Enforcement,,2017-03-20
10.1007/3-540-45758-5_11,Towards a Tailored Theory of Consistency Enforcement in Databases,,2015-03-20
10.1007/978-3-540-69534-9_23,Decidable Reasoning in UML Schemas with Constraints,,2015-03-20
10.1007/3-540-36596-6_9,Automata-and Logic-Based Pattern Languages for Tree-Structured Data,,2017-03-20
10.1007/978-3-322-84795-9_13,Codesign von Struktur  Verhalten und Interaktion für Datenbankanwendungen mit dem Abstraktionsschichtenmodell,,2015-03-20
10.1109/ASE.2000.873674,Controlled automation of consistency enforcement,,2016-03-20
10.1007/3-540-48321-7_39,A Generalization of Dijkstra's Calculus to Typed Program Specifications,,2013-03-20
10.1109/ADC.2001.904458,Design theory for advanced datamodels,,2015-03-20
10.1109/APSEC.2002.1182975,Refining object-oriented invariants and dynamic constraints,,2012-03-20
10.1007/978-0-387-35693-8_4,Towards Effect Preservation of Updates with Loops,,2016-03-20
10.1023/A:1013112907978,Maximal state independent approximations to minimal real change,,2018-03-20
10.1007/s10115-019-01402-w,Consistent updating of databases with marked nulls,,2016-03-20
10.1007/3-540-36596-6_8,Consistency Enforcement in Databases,,2016-03-20
10.1007/978-3-030-32409-4_14,Consistency Enforcement for Static First-Order Invariants in Sequential Abstract State Machines,,2020-03-20
10.1007/978-3-540-75563-0_15,From Declarative to Imperative UML/OCL Operation Specifications,,2017-03-20
10.1016/S1571-0661(04)00306-8,Towards an Arithmetic Theory of Consistency Enforcement based on Preservation of delta-constraints,,2016-03-20
10.1016/j.jss.2009.03.009,Incremental integrity checking of UML/OCL conceptual schemas,,2019-03-20
10.1016/j.datak.2011.01.003,Generating operation specifications from UML class diagrams: A model transformation approach,,2015-03-20
10.1007/978-3-540-75209-7_14,Deriving operation contracts from UML class diagrams,,2014-03-20
10.1023/A:1026153912205,Database Repairs and Analytic Tableaux,,2017-03-20
10.1007/978-3-540-72677-7_20,A Research Agenda for Conceptual Schema-Centric Development,,2017-03-20
10.1080/23311916.2016.1243982,Non-permutation flow shop scheduling problem with preemption-dependent processing time,,2016-03-20
10.1007/s10878-012-9545-0,Algorithms with limited number of preemptions for scheduling on parallel machines,,2011-03-20
10.1007/S11766-014-3138-X,Parallel machine covering with limited number of preemptions,,2016-03-20
10.1007/978-3-642-29700-7_9,Algorithms with Limited Number of Preemptions for Scheduling on Parallel Machines,,2011-03-20
10.1142/S1793042119500672,The n-dimensional Stern-Brocot tree,,2017-03-20
10.1109/IPDPS.2010.5470458,Load regulating algorithm for static-priority task scheduling on multiprocessors,,2018-03-20
10.1016/j.ejc.2007.10.005,Locating terms in the Stern-Brocot tree,,2012-03-20
10.1007/978-3-319-06251-8_11,Automated Verification of Relational While-Programs,,2016-03-20
10.1007/978-3-642-33314-9_17,Relation Algebras  Matrices  and Multi-valued Decision Diagrams,,2020-03-20
10.1007/978-3-319-24704-5_17,Tool-Based Verification of a Relational Vertex Coloring Program,,2015-03-20
10.1007/978-3-319-19797-5_12,Column-Wise Extendible Vector Expressions and the Relational Computation of Sets of Sets,,2013-03-20
10.1007/978-3-642-21070-9_9,Relational Modelling and Solution of Chessboard Problems,,2013-03-20
10.1016/j.jlamp.2016.12.002,Solving computational tasks on finite topologies by means of relation algebra and the RelView tool,,2020-03-20
10.1007/978-3-642-13321-3_4,On Automated Program Construction and Verification,,2011-03-20
10.1016/j.jlap.2013.02.001,Computing and visualizing banks sets of dominance relations using relation algebra and RelView,,2017-03-20
10.1016/j.jlamp.2015.12.001,Cardinality of relations and relational approximation algorithms,,2014-03-20
10.1016/j.jlap.2012.05.001,Relation-algebraic modeling and solution of chessboard independence and domination problems,,2014-03-20
10.1016/j.ejor.2010.09.006,A relation-algebraic approach to simple games,,2020-03-20
10.1016/j.ejor.2012.11.025,Computing tournament solutions using relation algebra and RelView,,2016-03-20
10.1007/springerreference_22315,Program structure,,2011-03-20
10.1007/978-3-319-47099-3_16,Toward a Parallel Turing Machine Model,,2018-03-20
10.1007/978-3-662-44043-8_7,Graphical Representations of Context-Free Languages,,2019-03-20
10.1145/1937117.1937127,GoHotDraw: evaluating the Go programming language with design patterns,,2013-03-20
10.2514/6.2010-8102,Extensible Software Architecture for a Distributed Engineering Simulation Facility,,2014-03-20
10.1007/978-3-319-17701-4_3,Introduction to Programming Languages,,2020-03-20
10.18297/ETD/1349,Toward an isomorphic diagram of the Backus-Naur form,,2018-03-20
10.3384/DISS.DIVA-116346,Tools and Methods for Analysis  Debugging  and Performance Improvement of Equation-Based Models,,2016-03-20
10.4018/978-1-5225-2845-6.CH007,A Mixed-Criticality Integration in Cyber-Physical Systems: A Heterogeneous Time-Triggered Architecture on a Hybrid SoC Platform,,2016-03-20
10.1007/978-1-84882-555-0_11,The Unification of Data and Algorithms,,2014-03-20
10.20851/SIDS-20,A Scandinavian Perspective,,2016-03-20
10.1007/978-3-642-96707-8,Computer Graphics Programming,,2020-03-20
10.1007/978-3-8351-9101-3_27,Enterprise JavaBeans 3.1,,2014-03-20
10.1007/978-1-84882-555-0_9,The Algol Research Programme,,2020-03-20
10.1007/978-3-319-64110-2,The Mathematical-Function Computation Handbook,,2019-03-20
10.1007/978-3-658-01628-9_14,Höhere Programmiersprachen und C,,2014-03-20
10.1016/j.ins.2011.07.004,A quantitative model for software engineering trends,,2014-03-20
10.3929/ETHZ-A-004751228,Montages ó Engineering of Computer Languages,,2018-03-20
10.1007/978-981-10-5107-4_1,Introduction to Predictive Computing,,2020-03-20
10.1007/978-3-642-59412-0_8,Pascal and Its Successors,,2015-03-20
10.1007/BF00976239,Recursive data structures,,2013-03-20
10.1145/3386323,Origins of the D programming language,,2015-03-20
10.1145/1289971.1289976,Simple and safe SQL queries with c++ templates,,2013-03-20
10.1201/B16812-82,Discipline of Software Engineering: An Overview,,2020-03-20
10.1002/9781118567210.CH10,Running  Debugging and Optimizing Programs,,2019-03-20
10.1145/1283920.1283934,The paradigms of programming,,2020-03-20
10.1145/800022.808308,Efficient Implementation and Optimization of Run-Time Checking in Pascal,,2011-03-20
10.1109/CIT.2007.68,Modelling and Simulating IPv6 Mobility,,2014-03-20
10.3929/ETHZ-A-009997273,Self-construction in the context of cortical growth,,2013-03-20
10.1007/978-3-642-59412-0_28,Abstract Data Types  Then and Now,,2015-03-20
10.1007/978-3-540-31958-0_13,Teaching: People to People - About People A Plea for the Historic and Human View,,2014-03-20
10.1007/BF00289504,An axiomatic definition of the programming language PASCAL,,2012-03-20
10.1016/j.ic.2010.01.004,A thread calculus with molecular dynamics,,2014-03-20
10.1016/j.ipl.2009.11.008,Alphabetic coding with exponential costs,,2017-03-20
10.1109/ISIT.2007.4557207,Tunstall Parse Trees Optimum under Various Criteria,,2016-03-20
10.1109/TIT.2005.860469,A general framework for codes involving redundancy minimization,,2020-03-20
10.1109/ISIT.2006.262027,Renyi to Renyi - Source Coding under Siege,,2011-03-20
10.1016/j.envsoft.2016.07.004,An integrated planning tool for design of recycled water distribution networks,,2014-03-20
10.1109/EMBC.2015.7319881,A network-based approach to enrich gene signatures for the prediction of breast cancer metastases,,2020-03-20
10.1109/ICDE.2019.00041,Bridging the Semantic Gap with SQL Query Logs in Natural Language Interfaces to Databases,,2016-03-20
10.1016/j.ipl.2015.06.015,Reducing the diameter of a unit disk graph via node addition,,2014-03-20
10.1016/S0305-0548(03)00068-6,Multiple multicast tree allocation in IP network,,2019-03-20
10.1007/978-0-387-30165-5_18,Steiner Tree Problems in Telecommunications,,2018-03-20
10.1016/j.comnet.2003.10.009,DSMCast: a scalable approach for DiffServ multicasting,,2013-03-20
10.1007/978-3-540-30549-1_80,Applying Multi-medians Location and Steiner Tree Methods into Agents Distributed Blackboard Architecture Construction,,2020-03-20
10.5772/6337,Greedy Algorithms to Determine Stable Paths and Trees in Mobile Ad hoc Networks,,2018-03-20
10.1109/WIMOB.2005.1512920,Bandwidth-Satisfied Multicast Trees in MANETs,,2013-03-20
10.1109/tvcg.2020.3038154,Multi-level Area Balancing of Clustered Graphs.,,2017-03-20
10.1109/ictai.2007.17,A Path Relinking Approach for Delay-Constrained Least-Cost Multicast Routing Problem,,2016-03-20
10.1109/VTC.2002.1002796,An efficient multi-objective QoS-routing algorithm for wireless multicasting,,2014-03-20
10.1109/CIT.2004.1357332,A degree-delay-constrained genetic algorithm for multicast routing tree,,2015-03-20
10.1007/978-3-642-24488-9_20,Network Design Problems,,2014-03-20
10.1109/WCICA.2006.1712929,The Distributed Multicast Routing Scheme with Delay Constraint using Ant Colony Optimization,,2011-03-20
10.1023/B:TELS.0000014787.61517.25,A Distributed Routing Method for Dynamic Multicasting,,2012-03-20
10.1007/978-3-540-71805-5_5,An Ant Algorithm for the Steiner Tree Problem in Graphs,,2019-03-20
10.1080/15230406.2018.1437359,A spatial one-to-many flow layout algorithm using triangulation  approximate Steiner trees  and path smoothing,,2013-03-20
10.1109/ICFCC.2010.5497614,An efficient opportunistic multicast routing for mobile ad hoc networks,,2011-03-20
10.1016/J.COMCOM.2019.07.025,Design & analysis of a distributed routing algorithm towards Internet-wide geocast,,2013-03-20
10.1364/JOCN.2.000175,All-Optical Network Coding,,2015-03-20
10.1109/COMPSAC.2018.00158,A Solution for Minimum Link Flow Problem with Sparse Modeling,,2014-03-20
10.5220/0004852100400049,Filter-enabled Binary XML Dissemination in Embedded Networks,,2011-03-20
10.1007/978-3-319-01622-1_41,Performance Evaluation of Multicast Routing Algorithms with Fuzzy Sets,,2011-03-20
10.1007/978-3-030-59051-2,Database and Expert Systems Applications: 31st International Conference  DEXA 2020  Bratislava  Slovakia  September 14–17  2020  Proceedings  Part II,,2018-03-20
10.1007/11573036_77,Source-Based Minimum Cost Multicasting: Intermediate-Node Selection with Potentially Low Cost,,2011-03-20
10.1109/MILCOM.2010.5680409,Modeling TDMA-based USAP in JTRS MDL for multicast and unicast traffic,,2017-03-20
10.1016/j.compeleceng.2009.03.009,Real-time multicast for wireless multihop networks,,2017-03-20
10.1002/dac.557,Dynamic group multicast routing with bandwidth reservations,,2013-03-20
10.1007/S00170-010-2651-1,An integrated planning approach for a nanodeposition manufacturing process,,2015-03-20
10.1109/ICPADS.2017.00086,Delay-Guaranteed Minimum Cost Forest for Uncertain Multicast,,2015-03-20
10.1109/GLOCOM.2009.5425858,Iterative Node Deployment in an Unknown Environment,,2015-03-20
10.1109/CSNDSP.2012.6292707,The evaluation of multicast routing algorithms with delay constraints in mesh networks,,2016-03-20
10.1007/978-3-662-04565-7_3,Steiner Tree and TSP,,2015-03-20
10.1109/ICPP.2004.1327931,Complexity results and heuristics for pipelined multicast operations on heterogeneous platforms,,2014-03-20
10.1109/ICCIT.2008.167,Parallel Algorithms for Steiner Tree Problem,,2016-03-20
10.1007/978-3-642-05118-0_10,A Superstabilizing log(n)-Approximation Algorithm for Dynamic Steiner Trees,,2016-03-20
10.1109/ICCCN.2005.1523828,Heterogeneous QoS multicast in Diffserv-like networks,,2018-03-20
10.1002/ett.3932,Load balancing approach for heterogeneous 2‐tiered wireless sensor networks,,2020-03-20
10.1109/JSAC.2002.802069,Multicast server selection: problems  complexity  and solutions,,2020-03-20
10.1109/ICACT.2004.1292950,An efficient dynamic multicast routing algorithm with advance resource reservation awareness,,2011-03-20
10.1109/ICNSC.2010.5461515,A dynamic QoS routing mechanism based on Steiner trees for LEO satellite networks,,2018-03-20
10.1007/978-3-319-03578-9_26,Steiner Problems with Limited Number of Branching Nodes,,2011-03-20
10.1016/j.comnet.2011.07.009,RAD: Recipient-anonymous data delivery based on public routing proxies,,2014-03-20
10.1109/TKDE.2013.85,Efficient Duplication Free and Minimal Keyword Search in Graphs,,2014-03-20
10.7763/IJCTE.2010.V2.172,Delay Bound Multicast Routing Using Hopfield Neural Network,,2016-03-20
10.1007/978-3-319-73447-7_65,Research on Cache Placement in ICN,,2014-03-20
10.1109/ISECS.2009.170,Data Fusion in Wireless Sensor Networks,,2019-03-20
10.1109/JSAC.2013.130507,Spectrum and Energy Efficient Relay Station Placement in Cognitive Radio Networks,,2012-03-20
10.1007/978-3-642-14866-8_5,Realistic Computer Models,,2018-03-20
10.1109/COMST.2008.4483669,An overview of routing optimization for internet traffic engineering,,2013-03-20
10.1109/WOWMOM.2008.4594821,Localized minimum spanning tree based multicast routing with energy-efficient guaranteed delivery in ad hoc and sensor networks,,2017-03-20
10.30844/wi_2020_c4-bichler,Incentive-Compatible Auction Mechanisms for Network Procurement,,2014-03-20
10.1016/j.osnem.2020.100062,Efficiently discovering users connectivity with local information in online social networks,,2011-03-20
10.1080/17445760500033317,Multi-shared-trees based multicast routing control protocol using anycast selection,,2018-03-20
10.1016/j.jpdc.2004.08.007,An efficient algorithm for constructing delay bounded minimum cost multicast trees,,2018-03-20
10.1109/ICC.2006.254783,A Dynamic Managed VPN Service: Architecture And Algorithms,,2019-03-20
10.1007/978-3-319-61382-6_11,Evaluation of Geocast Routing Trees on Random and Actual Networks,,2018-03-20
10.1109/GLOCOM.2009.5425703,Tree-Based Protection of Multicast Services in WDM Mesh Networks,,2020-03-20
10.1109/ICC.2004.1312655,Scalable multicast MPLS protocol for next generation broadband service convergence network,,2015-03-20
10.1109/ICC.2007.276,A Near Optimal Localized Heuristic for Voice Multicasting over Ad Hoc Wireless Networks,,2017-03-20
10.1109/ASPDAC.2015.7059017,Intra-vehicle network routing algorithm for wiring weight and wireless transmit power minimization,,2016-03-20
10.1023/A:1013854808626,An Evaluation of Shared Multicast Trees with Multiple Cores,,2016-03-20
10.1007/11533719_22,Routing and Coloring for Maximal Number of Trees,,2020-03-20
10.31274/ETD-180810-516,Survivability schemes for optical backbone and access networks,,2012-03-20
10.1109/NetSoft48620.2020.9165450,On Optimizing Resource Utilization in AVC-based Real-time Video Streaming,,2019-03-20
10.1007/BF01553886,Fast heuristic algorithms for rectilinear steiner trees,,2014-03-20
10.1109/GLOCOM.2013.6831424,Design integrated RSA for multicast in elastic optical networks with a layered approach,,2011-03-20
10.1007/s00778-019-00556-x,A survey of community search over big graphs,,2011-03-20
10.3389/fict.2016.00014,Mapping Constrained Optimization Problems to Quantum Annealing with Application to Fault Diagnosis,,2012-03-20
10.1109/TNET.2016.2547438,BCCC: An expandable network for data centers,,2019-03-20
10.1007/978-3-319-20328-7_5,Computational Comparison of Algorithms for a Generalization of the Node-Weighted Steiner Tree and Forest Problems,,2013-03-20
10.1109/TNET.2012.2229716,Compressed Data Aggregation: Energy-Efficient and High-Fidelity Data Collection,,
10.1109/SNPD.2007.346,An Energy Efficient Query Processing Algorithm Based on Relevant Node Selection for Wireless Sensor Networks,,2017-03-20
10.1109/WCINS.2010.5544144,A reliable multicast for MANETs based on opportunistic routing and network coding,,2019-03-20
10.1007/978-3-030-23281-8_11,A Keyword Search Approach for Semantic Web Data,,2017-03-20
10.1109/ICTAI.2007.17,A Java-Based Distributed Genetic Algorithm Framework,,2018-03-20
10.7939/R3GB1XT6V,Improved approximation algorithms for Min-Max Tree Cover  Bounded Tree Cover  Shallow-Light and Buy-at-Bulk k-Steiner Tree  and (k  2)-Subgraph,,2011-03-20
10.1186/S40327-017-0042-5,Data completion in building information management: electrical lines from range scans and photographs,,2017-03-20
10.1109/ICMT.2011.6001679,Heuristic Gradient based Multicast routing policy for dynamic network,,2018-03-20
10.1145/3288599.3288629,A simple 2(1-1/l) factor distributed approximation algorithm for steiner tree in the CONGEST model,,2012-03-20
10.1504/IJSOM.2014.058841,A web-based multi-optimisation approach for convergent product networks using the Steiner tree,,2012-03-20
10.1109/BDCloud.2018.00085,Fast Real-Time Scheduling for Ethernet-Based Train Control Networks,,2019-03-20
10.1109/NETWKS.2010.5624921,Multicast Routing Algorithm for packet networks with the application of the Lagrange Relaxation,,2015-03-20
10.1007/978-3-319-14896-0_6,Steiner Tree 1.39-Approximation in Practice,,2013-03-20
10.4230/LIPIcs.ICALP.2018.104,Brief Announcement: Characterizing Demand Graphs for (Fixed-Parameter) Shallow-Light Steiner Network,,2019-03-20
10.1007/978-3-642-17461-2_4,Constrained Surface-Level Gateway Placement for Underwater Acoustic Wireless Sensor Networks,,2011-03-20
10.1109/HPCC.and.EUC.2013.239,An Estimation of Distribution Algorithm for Steiner Tree Problem,,2017-03-20
10.1587/TRANSINF.E96.D.2743,Improvement of Steiner Tree Algorithm: Branch-Based Multi-Cast,,2011-03-20
10.1016/j.comnet.2017.07.014,Source selection problem in multi-source multi-destination multicasting,,2012-03-20
10.1109/INFOCOM.2008.65,Constrained Relay Node Placement in Wireless Sensor Networks to Meet Connectivity and Survivability Requirements,,2014-03-20
10.1504/IJSNET.2009.028025,Adaptive aggregation tree transformation for energy-efficient query processing in sensor networks,,2020-03-20
10.1117/12.904385,A novel PCE-based algorithm for P2MP inter-domain traffic engineering in optical networks,,2017-03-20
10.1109/ICAL.2008.4636269,Routing mobile agent to local regions for data fusion in distributed sensor networks,,2017-03-20
10.1186/gb-2007-8-7-r153,Novel metrics for evaluating the functional coherence of protein groups via protein semantic network,,2016-03-20
10.1109/TNSM.2015.2465371,Routing Algorithms for Network Function Virtualization Enabled Multicast Topology on SDN,,2019-03-20
10.1109/MASS.2011.137,Constrained Relay Node Placement in Energy Harvesting Wireless Sensor Networks,,2019-03-20
10.1145/1506270.1506332,Load-oriented and interference-aware channel assignment for multicasting in wireless mesh networks,,2019-03-20
10.1109/ICUFN.2009.5174306,An interference-free multicast for mesh networks with directional antennas,,2011-03-20
10.1007/978-3-540-39405-1_12,EBM: A New Approach for Scalable DiffServ Multicasting,,2016-03-20
10.1109/MCOM.2007.4378324,Multicast Routing in Wireless Mesh Networks: Minimum Cost Trees or Shortest Path Trees?,,2018-03-20
10.15439/2019F26,Using Relay Nodes in Wireless Sensor Networks: A Review,,2018-03-20
10.1109/ICDCS.2006.44,GMP: Distributed Geographic Multicast Routing in Wireless Sensor Networks,,2017-03-20
10.1515/ttj-2017-0012,Hierarchical Agglomerative Clustering Schemes for Energy-Efficiency in Wireless Sensor Networks,,2011-03-20
10.1155/2014/584197,DCEEMR: A Delay-Constrained Energy Efficient Multicast Routing Algorithm in Cognitive Radio Ad Hoc Networks,,2017-03-20
10.1109/ICCCN49398.2020.9209680,Rapid Top-Down Synthesis of Large-Scale IoT Networks,,2014-03-20
10.1007/s00453-007-9124-4,Models of Greedy Algorithms for Graph Problems,,2014-03-20
10.22456/2175-2745.80525,Algorithms for the power-p Steiner tree problem in the Euclidean plane,,2014-03-20
10.1109/IWQOS.2008.25,Transcasting: Cost-Efficient Video Multicast for Heterogeneous Mobile Terminals,,2015-03-20
10.1109/TCAD.2016.2568203,Delay-Bounded Intravehicle Network Routing Algorithm for Minimization of Wiring Weight and Wireless Transmit Power,,2011-03-20
10.1109/TC.2013.171,Approximation Algorithms for Constrained Relay Node Placement in Energy Harvesting Wireless Sensor Networks,,2014-03-20
10.1109/APPEEC.2014.7066185,Distribution network planning study with distributed generation based on Steiner tree model,,2015-03-20
10.1109/BROADNETS.2008.4769125,Network coding for optical-layer multicast,,2020-03-20
10.1109/TPDS.2007.70711,A Service-Centric Multicast Architecture and Routing Protocol,,2015-03-20
10.1109/ICEIEC.2013.6835509,Network coding based Energy Efficient Multicast Routing for wireless sensor network,,2012-03-20
10.1109/EDCC-7.2008.10,Targeted Distribution of Resource Allocation for Backup LSP Computation,,2018-03-20
10.1109/RIVF.2008.4586329,Solving graphical Steiner tree problem using parallel genetic algorithm,,2013-03-20
10.1145/2658260.2658271,BCCC: An Expandable Network for Data Centers,,2019-03-20
10.1016/j.entcs.2007.07.008,Modelling Multicast QoS Routing by using Best-Tree Search in And-or Graphs and Soft Constraint Logic Programming,,2013-03-20
10.1109/TNET.2020.2971770,A Physarum-Inspired Algorithm for Minimum-Cost Relay Node Placement in Wireless Sensor Networks,,2016-03-20
10.1145/2133803.2184448,Fast local search for the steiner problem in graphs,,2018-03-20
10.1109/CISS.2016.7460487,Differential privacy in networked data collection,,2017-03-20
10.3390/s20133733,Sensor Node Activation Using Bat Algorithm for Connected Target Coverage in WSNs,,2017-03-20
10.1007/978-3-662-47094-7_39,Orientierung großer Bildverbände,,2017-03-20
10.1109/ICPPW.2005.23,An Efficient Distributed Algorithm for Generating Multicast Distribution Trees,,2017-03-20
10.1364/JOCN.3.000323,Cost Bounds and Approximation Ratios of Multicast Light-Trees in WDM Networks,,2014-03-20
10.1016/j.jnca.2003.10.001,TSDLMRA: an efficient multicast routing algorithm based on Tabu search,,2014-03-20
10.1007/s11432-008-0019-z,QoS multicast routing protocol in hierarchical wireless MANET,,2018-03-20
10.1109/IPDPS.2002.1015529,Fault recovery for a distributed SP-based delay constrained multicast routing algorithm,,2016-03-20
10.1142/9789812561794_0031,An Efficient Evolutionary Algorithm for Multicast Routing with Multiple QoS Constraints,,2011-03-20
10.1145/3297001.3297031,Goal-based Ontology Creation for Natural Language Querying in SAP-ERP Platform,,2017-03-20
10.1109/ACCESS.2020.2974580,Adaptive Group Routing and Scheduling in Multicast Time-Sensitive Networks,,2016-03-20
10.1109/GLOCOM.2012.6503528,Proposal of new steiner tree algorithm applied to P2MP traffic engineering,,2020-03-20
10.1109/TPDS.2020.2982137,A Black-Box Fork-Join Latency Prediction Model for Data-Intensive Applications,,2011-03-20
10.1016/j.csi.2004.09.003,Constructing agents blackboard communication architecture based on graph theory,,2012-03-20
10.1109/ICSC.2014.13,A Scalable Approach to Learn Semantic Models of Structured Sources,,2019-03-20
10.1145/2684083.2684093,1-to-N and N-to-1 Communication for Optical Networks,,2013-03-20
10.1007/s10115-014-0736-0,Finding top-$$k\  r$$kr-cliques for keyword search from graphs in polynomial delay,,
10.1109/TPDS.2014.2316829,Exploiting Efficient and Scalable Shuffle Transfers in Future Data Center Networks,,2011-03-20
10.1007/978-3-540-79549-0_19,Efficient Heuristic for Minimum Cost Trees Construction in Multi-Groups Multicast,,2011-03-20
10.1145/2396761.2398460,Fast approximation of steiner trees in large graphs,,2015-03-20
10.1109/MCOM.2002.1047000,On a new multicasting approach in optical burst switched networks,,2011-03-20
10.1109/ICCD.2005.117,X-routing using two Manhattan route instances,,2020-03-20
10.1109/WCNC.2017.7925497,Relay Node Position Optimization in Complex Environment,,2011-03-20
10.1201/9781420010749.pt6,Cost-Efficient Multicast Routing in Ad Hoc and Sensor Networks,,2018-03-20
10.1002/9780470612040.CH2,Hierarchical Multicast Protocols with Quality of Service,,2020-03-20
10.1109/TC.2012.170,An Eight-Approximation Algorithm for Computing Rooted Three-Vertex Connected Minimum Steiner Networks,,2017-03-20
10.1016/S0140-3664(01)00404-2,A fast and efficient heuristic algorithm for the delay- and delay variation-bounded multicast tree problem,,2020-03-20
10.1109/JCN.2011.6112311,On the heterogeneous postal delivery model for multicasting,,2016-03-20
10.1109/CANDAR.2019.00018,2(1 – 1/ℓ)-Factor Steiner Tree Approximation in Õ(n^1/3) Rounds in the CONGESTED CLIQUE,,2019-03-20
10.1002/dac.1055,Optimizing Patching-based multicast for video-on-demand in wireless mesh networks,,2013-03-20
10.14778/2856318.2856323,Approximate Closest Community Search in Networks,,2016-03-20
10.1016/S0377-2217(02)00707-5,Solving group Steiner problems as Steiner problems,,2020-03-20
10.1007/978-3-540-85097-7_26,Two Constant Approximation Algorithms for Node-Weighted Steiner Tree in Unit Disk Graphs,,2016-03-20
10.1145/3240765.3240766,TritonRoute: An Initial Detailed Router for Advanced VLSI Technologies,,2013-03-20
10.3389/fphy.2014.00056,Discrete optimization using quantum annealing on sparse Ising models,,2016-03-20
10.1109/ICCNC.2013.6504201,Efficient real-time information delivery in Future Internet Publish-Subscribe Networks,,2017-03-20
10.15439/2016F424,Token-based autonomous task allocation in flocking systems,,2015-03-20
10.1007/BF00289500,A faster approximation algorithm for the Steiner problem in graphs,,2020-03-20
10.3724/SP.J.1087.2009.02901,Delay-constrained multicast routing algorithm based on shared edges: Delay-constrained multicast routing algorithm based on shared edges,,2019-03-20
10.1109/TCAD.2015.2448680,Efficient Wire Routing and Wire Sizing for Weight Minimization of Automotive Systems,,2016-03-20
10.1504/IJICOT.2011.044677,Minimising delay for video conference with network coding,,2020-03-20
10.1007/s00521-014-1760-4,Key-node-based local search discrete artificial bee colony algorithm for obstacle-avoiding rectilinear Steiner tree construction,,2018-03-20
10.1109/CC.2015.7224698,Steiner tree based optimal resource caching scheme in fog computing,,2018-03-20
10.1109/GLOCOM.2006.16,CAM02-5: On the Number of MPLS LSPs using Multicast Tree Aggregation,,2011-03-20
10.1109/ISSI47111.2019.9043653,Constrained Relay Node Deployment in Wireless Sensor Network for Structural Health Monitoring,,2013-03-20
10.1007/978-3-642-33536-5_27,Brief Announcement: Detecting Users' Connectivity on Online Social Networks,,2018-03-20
10.1007/978-1-84628-663-6_14,LSA-based Landscape Analysis for Multicast Routing,,2019-03-20
10.1016/j.cor.2006.10.001,Genetic local search for multicast routing with pre-processing by logarithmic simulated annealing,,2019-03-20
10.1109/CJECE.2006.259174,An efficient graph-based steiner tree heuristic for the global routing of macro cells,,2013-03-20
10.1142/S1469026804001355,A Hybrid Evolutionary Algorithm For Multiple-Destinations Routing Problem,,2019-03-20
10.5539/cis.v3n2p3,Impact of Route Selection Metrics on the Performance of On-Demand Mesh-based Multicast Ad hoc Routing,,2020-03-20
10.1007/BF03179727,QoS multicast routing with delay constraints,,2017-03-20
10.1016/j.websem.2015.12.003,Learning the Semantics of Structured Data Sources,,2013-03-20
10.1109/NCA.2008.21,Multilayered Video Multiple Trees Multicast Algorithms for Heterogeneous Wireless Ad Hoc Networks,,2014-03-20
10.1007/s11277-020-07880-4,Fiber to the Home (FTTH) Automation Planning  Its Impact on Customer Satisfaction & Cost-Effectiveness,,2020-03-20
10.1109/INFCOM.2007.115,Routing  Anycast  and Multicast for Mesh and Sensor Networks,,2013-03-20
10.1109/CCE.2014.6916710,Group steiner tree model for energy efficient multicast in Duty-Cycle Wireless Sensor Networks,,2015-03-20
10.1145/1143997.1144108,Genetic local search for multicast routing,,2013-03-20
10.1109/TNSM.2015.2507622,OSHI - Open Source Hybrid IP/SDN networking and Mantoo - a set of management tools for controlling SDN/NFV experiments,,2014-03-20
10.1145/2063576.2063833,Skynets: searching for minimum trees in graphs with incomparable edge weights,,2016-03-20
10.1007/978-3-642-29157-9_34,FOMR: Fair Opportunistic Multicast Routing Scheme for Wireless Mesh Networks,,2020-03-20
10.1109/ICON.2008.4772637,On scheduling concurrent multicast sessions over resource reserved network,,2017-03-20
10.1093/comjnl/bxu092,Finding a Friendly Community in Social Networks Considering Bad Relationships,,2019-03-20
10.1016/S0166-218X(03)00259-2,Spanners and message distribution in networks,,2016-03-20
10.1002/dac.736,Algorithms for delay constrained group multicast routing,,2020-03-20
10.1016/j.tcs.2005.03.015,Informative labeling schemes for graphs,,2011-03-20
10.1109/ICON.2003.1266256,Power-efficient multicasting in ad hoc networks,,2013-03-20
10.1007/978-3-030-16250-4_12,Routing and Wavelength ( Spectrum ) Assignment,,2012-03-20
10.1109/ICUMT.2009.5345568,Bandwidth efficient multicast routing in multi-channel multi-radio wireless mesh networks,,2016-03-20
10.1145/944373.944375,A dynamic multicast routing satisfying multiple QoS constraints,,2011-03-20
10.2299/JSP.20.145,An Effective Construction Algorithm for the Steiner Tree Problem Based on Edge Betweenness,,2015-03-20
10.1007/s10766-013-0243-z,A Survey of Parallel and Distributed Algorithms for the Steiner Tree Problem,,2012-03-20
10.1145/1541885.1541892,An O(n log n) approximation scheme for Steiner tree in planar graphs,,2011-03-20
10.1007/s10462-009-9146-1,Genetic algorithm for finding minimal cost light-forest of multicast routing on WDM networks,,2012-03-20
10.1109/TNET.2012.2212452,Duty-Cycle-Aware Minimum-Energy Multicasting in Wireless Sensor Networks,,2018-03-20
10.5860/choice.42-1619a,Spanning trees and optimization problems,,2017-03-20
10.1002/NEM.485,A dynamic multicast routing satisfying multiple QoS constraints,,2011-03-20
10.1109/COMSNETS51098.2021.9352940,Design of Joint Relay Placement and Scheduling Algorithms for Time-Slotted Networks with Half-Duplex Constraints,,2011-03-20
10.1007/11496199_3,Complexity of Minimal Tree Routing and Coloring,,2020-03-20
10.1109/DAC18072.2020.9218667,Routing Topology and Time-Division Multiplexing Co-Optimization for Multi-FPGA Systems,,2014-03-20
10.1002/ETT.3558,A practical data driven approach for the deployment of WSNs on realistic terrains,,2018-03-20
10.1109/ICCCN.2005.1523827,Constructing minimum cost dynamic multicast trees under delay constraint,,2013-03-20
10.1016/S0140-3664(03)00185-3,GA-based heuristic algorithms for bandwidth-delay-constrained least-cost multicast routing,,2011-03-20
10.1007/s00454-003-2948-z,Optimally Cutting a Surface into a Disk,,2016-03-20
10.1109/ICTAI.2007.28,A Path Relinking Approach for Delay-Constrained Least-Cost Multicast Routing Problem,,2020-03-20
10.1007/978-3-319-61824-1_42,Optimizing Least-Cost Steiner Tree in Graphs via an Encoding-Free Genetic Algorithm,,2018-03-20
10.1007/s11276-013-0575-z,Improved heuristics for multicast routing in wireless mesh networks,,2018-03-20
10.1002/dac.635,Two algorithms for multi-constrained optimal multicast routing,,2017-03-20
10.1109/SAHCN.2004.1381902,Reducing data-overhead of mesh-based ad hoc multicast routing protocols by Steiner tree meshes,,2018-03-20
10.1007/978-3-540-73951-7_25,Steiner Tree in Planar Graphs: An O ( n log n ) Approximation Scheme with Singly-Exponential Dependence on Epsilon,,2019-03-20
10.1109/JSAC-OCN.2007.025206,Achieving Shared Protection for Dynamic Multicast Sessions in Survivable Mesh WDM Networks,,2017-03-20
10.1007/s10618-015-0422-1,Efficient and effective community search,,2016-03-20
10.1109/ICDCS.2017.43,Approximation and Online Algorithms for NFV-Enabled Multicasting in SDNs,,2014-03-20
10.4018/978-1-4666-0080-5.CH004,Applications of Graph Theory Algorithms in Mobile Ad hoc Networks,,2019-03-20
10.7939/R3WQ39,Exploiting periodicity within mobile data for routing in delay tolerant mobile networks,,
10.1007/978-3-319-12691-3_16,A Practical Greedy Approximation for the Directed Steiner Tree Problem,,2016-03-20
10.1002/NET.V47:1,Distributed delay constrained multicast routing algorithm with efficient fault recovery,,2019-03-20
10.1109/SECON.2010.5508241,Two-Tiered Constrained Relay Node Placement in Wireless Sensor Networks: Efficient Approximations,,2013-03-20
10.1109/FPL.2015.7294012,ParaLaR: A parallel FPGA router based on Lagrangian relaxation,,2020-03-20
10.1109/SAHCN.2019.8824847,Algorithms for Provisioning Edge Computing Resources to Minimize Data Transport Costs,,2017-03-20
10.1007/978-3-642-25591-5_6,Contraction-Based Steiner Tree Approximations in Practice,,2012-03-20
10.1109/ICNC.2007.177,An Ant Colony System Algorithm for the Multicast Routing Problem,,2017-03-20
10.1109/JLT.2003.808625,Tree-shared multicast in optical burst-switched WDM networks,,2017-03-20
10.1007/11760191_23,A Neural Network Based Application Layer Multicast Routing Protocol,,2019-03-20
10.18419/opus-3144,Konzeption und Implementierung eines OpenFlow-basierten IP-Multicast-Dienstes für Datenzentren,,2013-03-20
10.1145/1322263.1322321,Fair waiting protocol: achieving isolation in wireless sensornets,,2019-03-20
10.1016/j.is.2008.01.002,Efficiently enumerating results of keyword search over data graphs,,2018-03-20
10.1007/978-3-030-31254-1_37,Simulation Studies of Multicast Connections in Ad-Hoc Networks,,2014-03-20
10.1007/BF01187035,An 11/6-approximation algorithm for the network steiner problem,,2013-03-20
10.1145/1185448.1185472,Determining a sequence of stable multicast Steiner trees in mobile ad hoc networks,,2017-03-20
10.1109/MAHSS.2005.1542821,An efficient distributed algorithm for generating multicast distribution trees,,2017-03-20
10.1109/ICCCHINA.2014.7008382,Multicast routing with mutual information accumulation,,2014-03-20
10.1109/SAINT.2005.6,A multicast routing algorithm for overlay network built on leased lines,,2020-03-20
10.1007/978-3-319-03578-9,Structural Information and Communication Complexity,,2013-03-20
10.1201/9781420013481.ch25,Timing-Driven Interconnect Synthesis,,2013-03-20
10.1109/ITNEWS.2008.4488160,A QoS-aware multicast overlay spanning tree protocol for multimedia applications in MANETs,,2014-03-20
10.1007/s11235-007-9031-7,Tabu search based algorithms for bandwidth-delay-constrained least-cost multicast routing,,2019-03-20
10.1109/CONTEL.2005.185918,An application layer multicast routing algorithm based on genetic algorithms,,2014-03-20
10.5120/5684-7728,A Survey of Multicasting in Optical Burst Switched Networks: Future Research Directions,,2014-03-20
10.1016/j.cor.2015.12.013,The Steiner traveling salesman problem with online advanced edge blockages,,2013-03-20
10.1109/TNSM.2015.2400915,Joint Optimization for the Delivery of Multiple Video Channels in Telco-CDNs,,2017-03-20
10.1186/s12859-016-0878-z,Algorithms for reconstruction of chromosomal structures,,2014-03-20
10.23919/JCC.2020.03.013,Cross-layer QoS enabled SDN-like publish/subscribe communication infrastructure for IoT,,2014-03-20
10.1080/1206212X.2006.11441792,Sbmt-Steiner Backup Multicast Tree,,2016-03-20
10.1016/S0140-3664(02)00033-6,Real-time optimal multicast routing,,2015-03-20
10.1007/978-1-4757-3563-5,Multiwavelength Optical Networks,,2011-03-20
10.1109/TNSM.2017.2766159,Improving SDN Scalability With Protocol-Oblivious Source Routing: A System-Level Study,,2020-03-20
10.1109/ICC.2015.7249214,Network Function Virtualization enabled multicast routing on SDN,,2014-03-20
10.1007/978-3-642-21153-9_1,Minimum Hop vs. Minimum Edge Based Multicast Routing for Mobile Ad hoc Networks,,2012-03-20
10.1117/12.635581,A QoS multicast routing algorithm based on tabu-hierarchy genetic algorithm in IP/DWDM optical Internet,,2016-03-20
10.1109/AFRCON.2009.5308172,A new delay-constrained multicast routing algorithm for packet networks,,2020-03-20
10.1016/j.knosys.2014.11.023,A semantic approach to data translation: A case study of environmental observations data,,2011-03-20
10.5220/0004926907400746,Energy-efficient Multicast Routing by using Genetic Local Search,,2015-03-20
10.1109/NETWKS.2014.6959205,Tabu search for bicriteria multipoint-to-multipoint virtual connections,,2016-03-20
10.1561/1000000003,FPGA Design Automation: A Survey,,2013-03-20
10.1145/1007912.1007940,Sharing the cost of multicast transmissions in wireless networks,,2020-03-20
10.1007/s10107-016-0987-5,On the equivalence of the bidirected and hypergraphic relaxations for Steiner tree,,2012-03-20
10.4108/ICST.BROADNETS2009.7245,Topology design and capex estimation for passive optical networks,,2018-03-20
10.1109/IWSDA.2007.4408342,An Improved Genetic Algorithm for QOS Multicast Routing,,2020-03-20
10.1109/TSC.2018.2877733,Exploiting Reliable and Scalable Multicast Services in IaaS Datacenters,,2018-03-20
10.1145/513400.513430,Optimally cutting a surface into a disk,,2017-03-20
10.1364/JON.3.000282,Light-tree routing under optical power budget constraints [Invited],,2019-03-20
10.1016/j.parco.2006.09.002,An efficient distributed algorithm for generating and updating multicast trees,,2011-03-20
10.1016/J.JDA.2007.02.001,Inapproximability and approximability of minimal tree routing and coloring,,2016-03-20
10.1002/NET.V44:4,The Push Tree problem,,2018-03-20
10.1007/978-1-4757-3563-5_8,QоS Guaranteed Multicast,,2018-03-20
10.1109/ICPP.2004.26,Complexity results and heuristics for pipelined multicast operations on heterogeneous platforms,,2017-03-20
10.4230/LIPIcs.ESA.2016.7,Scalable Exact Visualization of Isocontours in Road Networks via Minimum-Link Paths,,2017-03-20
10.1016/j.tcs.2013.07.003,A super-stabilizing log(n)log(n)-approximation algorithm for dynamic Steiner trees,,2014-03-20
10.1016/J.IERI.2014.09.098,Rapid Topology Design based on Shortest Path Betweenness for Virtual Network Construction,,2020-03-20
10.1109/TNET.2016.2615942,Impairment- and Splitting-Aware Cloud-Ready Multicast Provisioning in Elastic Optical Networks,,2019-03-20
10.1201/B17650-12,How to Simulate and Evaluate Multicast Routing Algorithms,,2018-03-20
10.1587/TRANSCOM.E97.B.996,An Artificial Fish Swarm Algorithm for the Multicast Routing Problem,,2019-03-20
10.1007/978-3-642-30284-8_32,Semi-automatically Mapping Structured Sources into the Semantic Web,,2013-03-20
10.1109/TCBB.2019.2904965,Mining Relationships among Multiple Entities in Biological Networks,,2013-03-20
10.1145/1142351.1142377,Finding and approximating top-k answers in keyword proximity search,,2018-03-20
10.1007/978-3-642-14493-6_27,An Algorithm to Determine Multicast Meshes with Maximum Lifetime for Mobile Ad Hoc Networks,,2017-03-20
10.1145/1099423.1099432,Resource-aware service composition for video multicast to heterogeneous mobile users,,2013-03-20
10.14279/DEPOSITONCE-3968,Network flows and network design in theory and practice,,2017-03-20
10.1109/ICCCAS.2006.285048,A Novel Algorithm for Constructing Light-Trees in Mesh WDM Networks,,2014-03-20
10.1016/j.dam.2005.05.027,Worst-case performance of Wong's Steiner tree heuristic,,2015-03-20
10.1016/j.comcom.2005.12.005,A case for tree evolution in QoS multicasting,,2012-03-20
10.1002/net.10019,Light graphs with small routing cost,,2014-03-20
10.1109/ICC.2004.1313219,Power conservation and path efficiency for multicast ad hoc networks,,2014-03-20
10.1016/S1389-1286(01)00260-2,Low-cost  delay-bounded point-to-multipoint communication to support multicasting over WDM networks,,2015-03-20
10.1137/060654827,New Approaches for Virtual Private Network Design,,2013-03-20
10.1109/CEC.2008.4631127,A novel particle swarm optimization for the Steiner tree problem in graphs,,2012-03-20
10.1145/3404397.3404406,Graffix: Efficient Graph Processing with a Tinge of GPU-Specific Approximations,,2019-03-20
10.1109/EURCON.2007.4400670,Performance of Fast Multicast Algorithms in Real Networks,,2020-03-20
10.1007/s11107-010-0297-4,Geography- and infrastructure-aware topology design methodology for broadband access networks (FTTx),,2017-03-20
10.5897/IJPS11.1010,Tree structured encoding based multi-objective multicast routing algorithm,,2013-03-20
10.1016/B978-0-12-800737-2.00003-X,Routing Algorithms: Shortest Path  Widest Path  and Spanning Tree,,2013-03-20
10.4028/www.scientific.net/AMM.373-375.1182,Delay and Delay-Variation Constrained Multicast Routing Algorithm Based on Core Selection,,2011-03-20
10.1109/JIOT.2016.2642643,Multicast Routing for Multimedia Communications in the Internet of Things,,2017-03-20
10.1109/ICW.2005.78,Traffic engineering in enterprise ethernet with multiple spanning tree regions,,2011-03-20
10.1145/318013.318090,Hierarchical Global Wiring for Custom Chip Design,,2019-03-20
10.1109/MASS.2015.87,Software Defined Mobile Multicast,,2019-03-20
10.1109/EURCON.2007.4400621,Heuristic Algorithm for Multicast Connections in Packet Networks,,2016-03-20
10.1007/978-3-642-35527-1_47,Summarizing Semantic Associations Based on Focused Association Graph,,2012-03-20
10.1007/978-3-642-25401-7_20,Netzwerk-Design-Probleme,,2015-03-20
10.5121/IJWMN.2011.3301,Performance Comparison of Minimum Hop vs. Minimum Edge Based Multicast Routing under Different Mobility Models for Mobile Ad hoc Networks,,2013-03-20
10.1016/j.comcom.2007.05.029,Demand-scalable geographic multicasting in wireless sensor networks,,2016-03-20
10.1002/net.20090,Distributed delay constrained multicast routing algorithm with efficient fault recovery,,2011-03-20
10.1109/BROADNETS.2006.4374398,Robust Demand-Driven Video Multicast over Ad hoc Wireless Networks,,2020-03-20
10.1109/VLSISOC.2006.313243,Directed Convergence Heuristic: A fast & novel approach to Steiner Tree Construction,,2016-03-20
10.1007/978-3-642-01156-6_17,RELAY - On the Performance and Resource Utilisation of Time-Dependent Large-Scale Distributed Systems,,2016-03-20
10.1109/ICC.2002.997049,Multipoint-to-multipoint routing for multimedia communication service,,2019-03-20
10.1109/NOMS.2010.5488370,Improved steiner tree algorithm applied to P2MP traffic engineering,,2014-03-20
10.1007/978-3-540-72588-6_70,On Efficiency Group Multicasting Algorithm with Multiple Minimum Steiner Trees,,2017-03-20
10.1145/1838002.1838013,QoS-based MPLS multicast tree selection algorithms,,2013-03-20
10.1137/050629665,Cost-Distance: Two Metric Network Design,,2016-03-20
10.1201/9781420013481.ch24,Minimum Steiner Tree Construction,,2016-03-20
10.1016/s0898-1221(99)90403-0,Steiner Minimal Trees,,2015-03-20
10.1109/WCSE.2009.821,Fusion Coding Algorithm of Node Energy in Wireless Sensor Networks,,2019-03-20
10.1134/S0005117909030187,Combinatorial optimization in system configuration design,,2018-03-20
10.1109/CNSM.2016.7818399,A Steiner tree-based verification approach for handling topology changes in self-organizing networks,,2011-03-20
10.1145/3299903,Strong Steiner Tree Approximations in Practice,,2015-03-20
10.1007/978-3-540-25978-7_45,Efficient Algorithm for Reducing Delay Variation on Bounded Multicast Trees,,2014-03-20
10.1038/s41467-020-17189-2,Exploring the SARS-CoV-2 virus-host-drug interactome for drug repurposing,,2016-03-20
10.1007/978-3-540-89985-3_92,Bandwidth-Delay Constrained Least Cost Multicast Routing for Multimedia Communication,,2017-03-20
10.1007/3-540-45706-2_102,On Multicasting with Minimum Costs for the Internet Topology,,2011-03-20
10.1007/11751595_114,Multicast omega-Trees Based on Statistical Analysis,,2014-03-20
10.1109/TMC.2011.126,Two-Tiered Constrained Relay Node Placement in Wireless Sensor Networks: Computational Complexity and Efficient Approximations,,2018-03-20
10.1007/s12243-008-0058-x,Class-based multicast routing in interdomain scenarios,,2018-03-20
10.1016/j.compenvurbsys.2009.01.006,Optimizing query processing using selectivity-awareness in Wireless Sensor Networks,,2019-03-20
10.1007/11523468_93,New Approaches for Virtual Private Network Design,,2020-03-20
10.1007/978-3-319-27122-4_31,Accelerated Steiner Tree Problem Solving on GPU with CUDA,,2019-03-20
10.1109/ICCCAS.2008.4657839,Shared protection in multicast optical networks,,2013-03-20
10.2991/ICECEE-15.2015.7,An Optimized Link Selection Function for Solving Delay-constrained Multicast Routing Problem,,2019-03-20
10.1201/9781315116242-105,Branch pipe routing method based on a 3D network and improved genetic algorithm,,2015-03-20
10.1109/cc.0.7560887,A centralized algorithm for assigning MDC video application in virtual network,,2014-03-20
10.1109/IWQoS.2016.7590417,Multicast routing with uncertain sources in software-defined network,,2014-03-20
10.1007/978-3-319-61382-6,Wired/Wireless Internet Communications,,2020-03-20
10.1109/INFOCOMWKSHPS50562.2020.9162677,Information Classification Strategy for Blockchain-based Secure SDN in IoT Scenario,,2016-03-20
10.1007/978-3-319-27030-2_6,Leveraging Efficient XML Interchange (EXI) for Filter-Enabled Data Dissemination in Embedded Networks,,2014-03-20
10.1007/s10878-015-9925-3,Directed Steiner trees with diffusion costs,,2011-03-20
10.1109/GLOCOM.2010.5684179,Approximation Ratios of Multicast Light-Trees in WDM Networks,,2013-03-20
10.1016/S1389-1286(03)00294-9,AMRST: adaptive multicast routing protocol for satellite-terrestrial networks,,2019-03-20
10.1145/1662529.1662532,Group communication techniques in overlay networks,,2011-03-20
10.1109/ICNS.2007.56,Efficiency Analysis of Multicast Routing Algorithms in Large Networks,,2016-03-20
10.1002/dac.1137,ESC: Estimation of selecting core for reducing multicast delay variation under delay constraints,,2018-03-20
10.4271/2014-01-0320,Electrical Architecture Optimization and Selection - Cost Minimization via Wire Routing and Wire Sizing,,2013-03-20
10.1287/ijoc.14.3.228.116,A Hybrid GRASP with Perturbations for the Steiner Problem in Graphs,,2016-03-20
10.1109/JCN.2005.6389811,General algorithms for construction of broadcast and multicast trees with applications to wireless networks,,2012-03-20
10.1007/BF01758765,Path-distance heuristics for the Steiner problem in undirected networks,,2020-03-20
10.1109/INFCOM.2004.1354691,Multicast routing under optical layer constraints,,2014-03-20
10.1016/J.COMCOM.2007.01.017,A QoS multicast routing protocol for clustering mobile ad hoc networks,,2016-03-20
10.1007/11751588_31,Minimum Cost Multicast Routing Based on High Utilization MC Nodes Suited to Sparse-Splitting Optical Networks,,2014-03-20
10.1016/j.watres.2020.116475,Exploring the structural factors of resilience in urban drainage systems: a large-scale stochastic computational experiment.,,2019-03-20
10.22028/D291-25965,Searching and ranking in entity-relationship graphs,,2016-03-20
10.4156/IJIPM.VOL1.ISSUE1.1,A Simulation-based Performance Analysis of Multicast Routing in Mobile Ad hoc Networks,,2012-03-20
10.1016/j.ipm.2008.12.005,Practical and effective IR-style keyword search over semantic web,,2019-03-20
10.1007/978-3-642-31217-5_36,The Evaluation of Unconstrained Multicast Routing Algorithms in Ad-Hoc Networks,,2020-03-20
10.1007/978-3-642-17461-2_23,Constrained Low-Interference Relay Node Deployment for Underwater Acoustic Wireless Sensor Networks,,2017-03-20
10.1016/j.comcom.2008.03.031,Proactive rearrangement in delay constrained dynamic membership multicast,,2014-03-20
10.1007/978-3-642-21527-8_16,Stabilized Branch-and-Price for the Rooted Delay-Constrained Steiner Tree Problem,,2016-03-20
10.1109/IFITA.2010.338,The Research of Data Aggregation in Wireless Sensor Networks,,2015-03-20
10.1177/0020720918822757,A delay-bounded low-cost multicast routing algorithm for mobile ad hoc networks,,2012-03-20
10.1080/01426390220128640,Graph Theory and Open-space Network Design,,2011-03-20
10.1109/TC.2002.1004596,On Finding Feasible Solutions for the Delay Constrained Group Multicast Routing Problem,,2015-03-20
10.1007/978-3-319-65636-6_20,A New Two-Stage Algorithm for Constructing Group Multicast Tree with Bandwidth Constraint,,2019-03-20
10.1109/AINA.2006.237,Multicast routing using genetic algorithm seen as a permutation problem,,2018-03-20
10.1109/INFOCOM.2014.6848151,Delay-Constrained Caching in Cognitive Radio Networks,,2020-03-20
10.1109/TC.2015.2512862,On the Construction of Data Aggregation Tree with Minimum Energy Cost in Wireless Sensor Networks: NP-Completeness and Approximation Algorithms,,2016-03-20
10.1007/11847366_46,On Multicasting Steiner Trees for Delay and Delay Variation Constraints,,2014-03-20
10.1109/INFCOM.2012.6195659,On the construction of data aggregation tree with minimum energy cost in wireless sensor networks: NP-completeness and approximation algorithms,,2015-03-20
10.1109/ICNC.2010.5583217,A particle swarm optimization for steiner tree problem,,2020-03-20
10.1109/SmartWorld.2018.00048,Multicast Tree Generation Technique Using Reinforcement Learning in SDN Environments,,2020-03-20
10.1016/S0140-3664(02)00195-0,A case for tree migration and integrated tree maintenance in QoS multicasting,,2016-03-20
10.1109/COMST.2003.5342226,Constraint-based routing in the internet: Basic principles and recent research,,2013-03-20
10.1145/1230040.1230065,Applicability of group communication for increased scalability in MMOGs,,2016-03-20
10.1080/17445760600568048,Multicast ad hoc routing through mobility-aware Steiner tree meshes with consistency across different mobility models,,2014-03-20
10.1134/S1064230718030085,Minimization of Multicast Traffic and Ensuring Its Fault Tolerance in Software-Defined Networks,,2016-03-20
10.1109/CyberC.2011.28,A Label Based Greedy Algorithm for Minimum Energy Consumption Multicast Routing in Ad Hoc Networks,,2011-03-20
10.1109/SOFTCOM.2014.7039117,Prototype for customized multicast services in software defined networks,,2012-03-20
10.1007/978-3-319-07176-3_58,The Linguistic Modeling of Fuzzy System as Multicriteria Evaluator for the Multicast Routing Algorithms,,2019-03-20
10.1109/JIOT.2014.2301819,A Novel Deployment Scheme for Green Internet of Things,,2015-03-20
10.1109/SERVICES.2011.24,Minimum Steiner Tree for Automatic SQL Query Generation Applied on a Medical Record Database,,2016-03-20
10.1109/NGI.2006.1678265,Improved dual-forest for multicast protection,,2012-03-20
10.1109/CNSM.2013.6727829,Joint Optimization for the Delivery of Multiple Video Channels in Telco-CDNs,,2015-03-20
10.1109/TMC.2015.2426715,Delay-Constrained Caching in Cognitive Radio Networks,,2018-03-20
10.14778/2994509.2994536,ATHENA: An Ontology-Driven System for Natural Language Querying over Relational Data Stores,,2018-03-20
10.1007/978-3-319-08783-2_23,Directed Steiner Tree with Branching Constraint,,2013-03-20
10.1109/ICICT.2007.375405,A Hybrid Jumping Genes Genetic Algorithm Based Request Scheduling Approach in Multiple Destination Routing,,2019-03-20
10.14778/3099622.3099626,Attribute-Driven Community Search,,2018-03-20
10.1007/978-3-540-74742-0_35,An Optimal Share Transfer Problem on Secret Sharing Storage Systems,,2012-03-20
10.1007/978-0-387-35608-2_11,Symmetric Connectivity with Minimum Power Consumption in Radio Networks,,2017-03-20
10.1109/ICIT.2006.22,A Tabu Search Based Algorithm for Multicast Routing with QoS Constraints,,2016-03-20
10.1109/ISIAS.2011.6122828,Energy efficient delay leap routing in multicast using feed back neural networks,,2011-03-20
10.1109/ACCESS.2020.3043762,Fast Multicast With Adjusting Transmission Power and Active Slots in Software Define IoT,,2018-03-20
10.1109/CEC.2010.5585942,Multicast flow routing: Evaluation of heuristics and multiobjective evolutionary algorithms,,2020-03-20
10.1109/SNPD.2007.228,Dependable distributed embedded system assessment platform design,,2015-03-20
10.1007/11751595_118,An Efficient Multicast Tree with Delay and Delay Variation Constraints,,2015-03-20
10.1007/978-3-540-70561-1_10,Genetic Algorithm and Variable Neighborhood Search for Point to Multipoint Routing Problem,,2015-03-20
10.1109/GLOCOM.2003.1259016,Forwarding state reduction for delay-constrained multicasting in IP networks,,2020-03-20
10.1109/CCECE.2004.1349688,Distributed QoS constrained multicast algorithms,,2015-03-20
10.1201/9781351235426-20,Cost-Efficient Multicast Routing in Ad Hoc and Sensor Networks.,,
10.1109/SoutheastCon42311.2019.9020619,Energy-efficient Data Replication in Virtualized Sensor Networks with Decoupled Service Model,,2020-03-20
10.1007/s00291-020-00597-7,Strategyproof auction mechanisms for network procurement,,2016-03-20
10.1007/11751595_107,Using UML Packages for Designing Secure Data Warehouses,,2012-03-20
10.1016/j.comcom.2006.07.019,Landscape analysis for multicast routing,,2013-03-20
10.1007/978-3-030-36987-3_7,Round-Message Trade-Off in Distributed Steiner Tree Construction in the CONGEST Model,,2016-03-20
10.1007/978-0-387-74759-0_645,Steiner Tree Problems,,2013-03-20
10.1109/ITRE.2005.1503098,An efficient distributed approach for dynamic multicast trees,,2017-03-20
10.1007/11561354_22,Heuristic Algorithms for Minimum Bandwith Consumption Multicast Routing in Wireless Mesh Networks,,2015-03-20
10.1155/2014/131870,Data Fusion in Wireless Sensor Networks,,2018-03-20
10.1145/2993717.2993721,Multicast routing tree for sequenced packet transmission in software-defined networks,,2012-03-20
10.1109/GLOCOM.2011.6134260,A Proposed Topology Design and Admission Control Approach for Improved Network Robustness in Network Virtualization,,2011-03-20
10.1007/978-3-642-35176-1_35,Rapidly Integrating Services into the Linked Data Cloud,,2013-03-20
10.1002/9780470487068.CH23,Routing for Statistical Inference in Sensor Networks,,2020-03-20
10.1109/CISE.2010.5677025,A New Effective Heuristic for Solving Minimal Steiner Tree Problem on Graphs,,2013-03-20
10.1093/bioinformatics/btq203,Assessing the functional coherence of gene sets with metrics based on the Gene Ontology graph,,2013-03-20
10.1002/9780470050118.ecse255,Multicast Protocols and Algorithms,,2020-03-20
10.1007/11557654_4,On Multicast Communications with Minimum Resources,,2011-03-20
10.1007/s10310-013-0432-z,A comparative study of heuristic algorithms for the multiple target access problem,,2014-03-20
10.1587/TRANSINF.2015EDP7417,Multi-Agent Steiner Tree Algorithm Based on Branch-Based Multicast,,2013-03-20
10.1007/s00500-017-2630-7,A self-adaptive and stagnation-aware breakout local search algorithm on the grid for the Steiner tree problem with revenue  budget and hop constraints,,2018-03-20
10.3390/su11236531,Optimization of a Bikeway Network with Selective Nodes,,2011-03-20
10.4018/978-1-4666-1613-4.CH013,Clean-Slate Information-Centric Publish Subscribe Networks,,2016-03-20
10.1155/2015/937673,Delay Bounded Roadside Unit Placement in Vehicular Ad Hoc Networks,,2018-03-20
10.1002/WCM.V9:4,Channel assignment for multicast in multi-channel multi-radio wireless mesh networks,,2012-03-20
10.1145/3337821.3337825,NFV-Enabled Multicasting in Mobile Edge Clouds with Resource Sharing,,2018-03-20
10.1016/S1004-4132(08)60146-2,Algorithms for degree-constrained Euclidean Steiner minimal tree * * This project was supported by t,,2013-03-20
10.1109/NOMS.2016.7502829,Joint NFV placement and routing for multicast service on SDN,,2014-03-20
10.3837/tiis.2011.02.002,Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for Wireless Mesh Networks,,2014-03-20
10.1109/ICTEL.2009.5158621,On the methodology for the evaluation of unconstrained multicast routing algorithms,,2020-03-20
10.1007/BF00420283,Neural network for optimal steiner tree computation,,2019-03-20
10.1109/IPCCC.2002.995133,An efficient distributed QoS based multicast routing algorithm,,2018-03-20
10.1109/FUZZY.2009.5277219,An artificial fish swarm algorithm for steiner tree problem,,2015-03-20
10.1109/TII.2019.2925538,Online Scheduling for Dynamic VM Migration in Multicast Time-Sensitive Networks,,2013-03-20
10.1007/s11277-011-0317-4,Solve the Tree Setup Problem and Minimize Control Overhead for High-Density Members in Delay-Bounded Distributed Multicast Networks,,2012-03-20
10.1016/j.ins.2013.03.006,On QoS multicast routing algorithms using k-minimum Steiner trees,,2012-03-20
10.1109/DAC18072.2020.9218569,Time-Division Multiplexing Based System-Level FPGA Routing for Logic Verification*,,2016-03-20
10.1504/IJWMC.2011.044116,An improved ant colony optimisation and its application on multicast routing problem,,2015-03-20
10.1145/1454503.1454547,A QoS-aware multicast routing protocol for multimedia applications in mobile ad hoc networks,,2019-03-20
10.1016/j.comcom.2005.09.004,Dynamic multicast routing under delay constraints in WDM networks with heterogeneous light splitting capabilities,,2012-03-20
10.1109/FCST.2010.102,OM: Opportunistic Multicast Routing for Wireless Mesh Networks,,2016-03-20
10.1109/ICFCC.2010.5497571,Steiner tree heuristic algorithm based on weight,,2012-03-20
10.1016/S0950-7051(03)00032-7,GA-Based Heuristic Algorithms for QoS Based Multicast Routing,,2012-03-20
10.1109/SIMSYM.2002.1000077,On the performance of STAR: an efficient delay-bound  low-cost multicast algorithm,,2012-03-20
10.1016/j.cosrev.2009.07.001,A survey of repair methods used as constraint handling techniques in evolutionary algorithms,,2017-03-20
10.31274/RTD-180813-10977,Managing dynamic groups in qos and overlay multicasting,,2014-03-20
10.1007/978-3-662-04565-7,Approximation Algorithms,,2017-03-20
10.1007/978-3-540-24693-0_17,On Core Selection Algorithm for Reducing Delay Variation of Many-to-Many Multicasts with Delay-Bounds,,2014-03-20
10.1007/978-1-4615-1507-4_2,Reactive Tabu Search with Path-Relinking for the Steiner Problem in Graphs,,2014-03-20
10.1109/TWC.2015.2512272,On the Interaction Between Scheduling and Compressive Data Gathering in Wireless Sensor Networks,,2020-03-20
10.1109/QSHINE.2004.15,Constrained diameter Steiner trees for multicast conferences in overlay networks,,2020-03-20
10.1109/TWC.2017.2658598,Optimal Placement of Relay Nodes Over Limited Positions in Wireless Sensor Networks,,2019-03-20
10.1109/ICNC.2012.11,Approximate Algorithms for Survivable Network Design,,2015-03-20
10.1080/17445760.2011.575049,Reliable and efficient opportunistic multicast routing for MANETs,,2019-03-20
10.1109/SCVT.2014.7046701,Connecting the houses at FttH with respect for social costs: Solving a Steiner tree problem with timing benefits,,2012-03-20
10.4028/www.scientific.net/AMM.152-154.1834,A Delay-Constrained Multicast Routing Balanced-Optimization Algorithm of Link-Sharing,,2016-03-20
10.1109/ICON.2008.4772657,Delay bound multicast routing algorithm using evolutionary programming,,2019-03-20
10.1109/ICCNMC.2003.1243082,On the model of OoS multicast routing problems in active networks,,2015-03-20
10.1109/GLOCOM.2010.5684182,Placement of Multicast Capable Nodes in Power Constrained All-Optical WDM Networks,,2012-03-20
10.1007/s11276-013-0624-7,Weighted relay node placement for wireless sensor network connectivity,,2015-03-20
10.1002/dac.2958,Virtual network construction with K-shortest path algorithm and optimization problems for robust physical networks,,2018-03-20
10.1098/rspb.2018.2727,Neural arbors are Pareto optimal,,2012-03-20
10.1093/ietcom/e89-b.9.2385,On Efficient Core Selection for Reducing Multicast Delay Variation under Delay Constraints,,2014-03-20
10.1109/NOC.2014.6996836,Fast roll-out of fibre to the Cabinet: Practical approach for activation of cabinets,,2016-03-20
10.1007/978-3-319-26626-8_44,The Influence of Preprocessing on Steiner Tree Approximations,,2019-03-20
10.3390/ELECTRONICS7010010,Delay Bounded Multi-Source Multicast in Software-Defined Networking,,2019-03-20
10.1007/978-3-642-11169-3_2,A Variable Neighborhood Descent Search Algorithm for Delay-Constrained Least-Cost Multicast Routing,,2016-03-20
10.1145/3106237.3117765,Natural language querying in SAP-ERP platform,,2018-03-20
10.1093/ietfec/e90-a.11.2458,An Optimal Share Transfer Problem on Secret Sharing Storage Systems,,2016-03-20
10.1016/j.adhoc.2007.06.005,On the stability of paths  Steiner trees and connected dominating sets in mobile ad hoc networks,,2013-03-20
10.4230/LIPIcs.IPEC.2020.16,Approximation Algorithms for Steiner Tree Based on Star Contractions: A Unified View,,2015-03-20
10.1109/JSAC-OCN.2007.021305,All-optical multicast routing in sparse splitting WDM networks,,2012-03-20
10.1109/ACCESS.2020.2994268,Topic-Oriented Bucket-Based Fast Multicast Routing in SDN-Like Publish/Subscribe Middleware,,2014-03-20
10.1177/1748301816640714,A Steiner point candidate-based heuristic framework for the Steiner tree problem in graphs,,2016-03-20
10.5121/CSIT.2012.2231,A NOVEL ANT COLONY ALGORITHM FOR MULTICAST ROUTING IN WIRELESS AD H OC NETWORKS,,2018-03-20
10.1080/21681015.2013.846943,A web-based methodology for convergent product fuzzy networks using the Steiner tree,,2012-03-20
10.1109/HPSR.2016.7525655,Multicast tree construction algorithm for stabilization of power quality in smart grid,,2012-03-20
10.1007/978-3-540-79996-2_3,Efficient Data Collection and Selective Queries in Sensor Networks,,2014-03-20
10.1109/ICVD.2004.1261038,Shrubbery: a new algorithm for quickly growing high-quality Steiner trees,,2020-03-20
10.1109/JCN.2009.6388394,On minimum cost multicast routing based on cost prediction,,2020-03-20
10.1109/TMC.2008.38,Bandwidth-Satisfied Multicast Trees in MANETs,,2012-03-20
10.1002/WCM.V9:3,Energy-efficient geographic multicast routing for error-prone wireless sensor networks,,2020-03-20
10.1109/COMPSYM.2010.5685453,The study of interference-free multicast using non-orthogonal channels for multi-radio and multi-channel wireless mesh networks,,2017-03-20
10.1016/j.cor.2003.12.007,A survey of combinatorial optimization problems in multicast routing,,2013-03-20
10.1007/978-3-319-29608-1_4,Optimization Algorithms for Shared Groups in Multicast Routing,,2017-03-20
10.1109/DASC.2011.201,Maximum Reliable Tree for Social Network Search,,2020-03-20
10.1109/ICNIDC.2010.5657860,OM: Opportunistic multicast routing for mobile ad hoc networks,,2014-03-20
10.1155/2013/432686,Minimum Cost Multicast Routing Using Ant Colony Optimization Algorithm,,2018-03-20
10.1364/JOCN.5.000836,Efficient resource allocation for all-optical multicasting over spectrum-sliced elastic optical networks,,2017-03-20
10.1109/DCOSS.2011.5982160,Data quality maximization in sensor networks with a mobile sink,,2015-03-20
10.1007/978-1-4614-0311-1,Mathematical Aspects of Network Routing Optimization,,2015-03-20
10.1016/j.comnet.2012.07.019,Protecting multicast services in optical internet backbones,,2017-03-20
10.1109/JCN.2004.6596834,Mobility-aware mesh construction algorithm for low data-overhead multicast ad hoc routing,,2016-03-20
10.12720/jcm.14.5.408-422,Multicast Routing Problem in Communication Networks: State of the Art,,2020-03-20
10.1016/j.softx.2020.100516,SeMi: A SEmantic Modeling machIne to build Knowledge Graphs with graph neural networks,,2012-03-20
10.1007/978-3-319-29770-5_5,Network coding for application layer multicast,,2015-03-20
10.1109/TPDS.2015.2511725,GBC3: A Versatile Cube-Based Server-Centric Network for Data Centers,,2017-03-20
10.1007/s00453-001-0122-7,"Extending Greedy Multicast Routing to Delay Sensitive Applications 
",,2018-03-20
10.1109/IWQOS.2011.5931318,Solve tree setup-break problem and minimize control overhead in delay-bounded distributed wireless multicast QoS routing,,2013-03-20
10.1109/INFCOM.2011.5934921,Exploring efficient and scalable multicast routing in future data center networks,,2020-03-20
10.14257/IJCA.2015.8.2.39,Inspired Energy Efficient Data Delivery Based on Redundant Data Elimination using Discrete Cuckoo Search Optimization,,2013-03-20
10.1364/JOCN.10.000633,Classifiers applied to dimensioning of splitters in PON design,,2017-03-20
10.1109/TNET.2014.2317911,On the Solution of the Steiner Tree NP-Hard Problem via Physarum BioNetwork,,2012-03-20
10.1109/cc.2015.7224698,Steiner tree based optimal resource caching scheme in fog computing,,2012-03-20
10.1109/JSAC.2019.2906764,Embedding Service Function Tree With Minimum Cost for NFV-Enabled Multicast,,2013-03-20
10.1109/JCN.2002.6596917,Efficient implementations of a delay-constrained least-cost multicast algorithm,,2014-03-20
10.1109/ISCC.2005.34,Approximating optimal multicast trees in wireless multihop networks,,2020-03-20
10.1002/ETT.3630,Fault‐tolerant data transport backbone for 3D wireless sensor networks,,2011-03-20
10.4018/ijdsst.2020070101,Equitable Optimization for Multicast Communication,,2015-03-20
10.1016/j.knosys.2019.105276,Optimizing co-existing multicast routing trees in IP network via discrete artificial fish school algorithm,,2019-03-20
10.1007/978-3-642-13986-4_19,Automatic Link Numbering and Source Routed Multicast,,2015-03-20
10.1142/S0129054120500367,Distributed Approximation Algorithms for Steiner Tree in the CONGESTED CLIQUE,,2016-03-20
10.14778/2021017.2021025,Keyword Search in Graphs: Finding r-cliques,,2018-03-20
10.1109/CSNDSP16145.2010.5580308,The evaluation of the quality of multicast routing algorithms in packet networks,,2016-03-20
10.1016/j.comnet.2012.04.019,Optimized relay node placement for connecting disjoint wireless sensor networks,,2012-03-20
10.1007/978-0-387-30165-5_25,Optimization Problems in Multicast Tree Construction,,2012-03-20
10.1007/978-3-642-02026-1_4,A PTAS for Node-Weighted Steiner Tree in Unit Disk Graphs,,2019-03-20
10.1145/1582379.1582518,Approximating node-weighted multicast trees in wireless ad-hoc networks,,2011-03-20
10.1109/TIE.2010.2050292,Mobile Web Navigation in Digital Ecosystems Using Rooted Directed Trees,,2019-03-20
10.1109/TII.2019.2955144,Effective and Efficient Dense Subgraph Query in Large-Scale Social Internet of Things,,2013-03-20
10.1016/j.comcom.2008.01.022,On multicast routing in wireless mesh networks,,2014-03-20
10.1109/CASoN.2009.19,Genetic Algorithms for Network Optimization,,2011-03-20
10.1145/2070942.2070986,Poster: Node placement adviser for sensor network deployment,,2012-03-20
10.1109/TC.2011.123,Efficient 2-Approximation Algorithms for Computing 2-Connected Steiner Minimal Networks,,2019-03-20
10.1109/ICDCS.2018.00023,Optimal Service Function Tree Embedding for NFV Enabled Multicast,,2017-03-20
10.1109/CGC.2012.64,A Network-Flow Based Influence Propagation Model for Social Networks,,2020-03-20
10.1145/2829953,Network Coding-Aware Compressive Data Gathering for Energy-Efficient Wireless Sensor Networks,,2013-03-20
10.1002/DAC.V23:9/10,Optimizing Patching-based multicast for video-on-demand in wireless mesh networks,,2013-03-20
10.1016/j.future.2019.10.033,Efficient in-network aggregation mechanism for data block repairing in data centers,,2016-03-20
10.1117/12.565822,An effective genetic algorithm for multicast routing tree with degree delay constrain,,2020-03-20
10.3745/KIPSTA.2003.10A.4.369,A Study of Ant Colony System Design for Multicast Routing,,2011-03-20
10.1109/TVT.2013.2288798,MEGCOM: Minimum-Energy Group COMmunication in Multihop Wireless Networks,,2018-03-20
10.1142/S1793830912500103,Constrained Relay Node Deployment for Underwater acoustic Wireless Sensor Networks,,2016-03-20
10.1109/ICECENG.2011.6057747,Performance analysis of data aggregation algorithms in wireless sensor networks,,2011-03-20
10.1504/IJAOM.2015.068310,A heuristic zero/one programming for a bi-objective web-based convergent product networks,,2019-03-20
10.1093/bioinformatics/btu799,Graphical algorithm for integration of genetic and biological data: proof of principle using psoriasis as a model,,2018-03-20
10.1109/ICC.2014.6883307,A Knapsack Constrained Steiner Tree model for continuous coverage over urban VANETs,,2015-03-20
10.1007/978-3-319-14896-0,Mathematical and Engineering Methods in Computer Science,,2018-03-20
10.1109/GLOCOM.2007.464,Hierarchically Distributed PCE for Flexible Multicast Traffic Engineering,,2012-03-20
10.1109/MUSIC.2012.34,Data Overhead Impact of Multipath Routing for Multicast in Wireless Mesh Networks,,2013-03-20
10.1109/PDCAT.2012.103,On Robust Multicast in Multi-channel Multi-radio Wireless Mesh Networks,,2014-03-20
10.1109/TNET.2011.2169985,ESM: Efficient and Scalable Data Center Multicast Routing,,2014-03-20
10.1007/978-2-287-99037-3_20,Problémes de conception de réseaux,,2017-03-20
10.1109/HPSR.2009.5307420,A unified approach for Multiple Multicast Tree Construction and Max-Min Fair rate allocation,,2020-03-20
10.1007/s10878-016-0074-0,A practical greedy approximation for the directed Steiner tree problem,,2015-03-20
10.1007/s11276-005-5275-x,Power Efficient Range Assignment for Symmetric Connectivity in Static Ad Hoc Wireless Networks,,2018-03-20
10.1109/ICPP.2006.13,A Service-Centric Multicast Architecture and Routing Protocol,,2014-03-20
10.1109/ASICON47005.2019.8983638,An Effective Detailed Routing Algorithm Considering Advanced VLSI Technologies,,2016-03-20
10.1145/3018009.3018012,A genetic algorithm-based multicast tree for routing in pub/sub system,,2018-03-20
10.1109/AICT.2009.77,Analysis of the Influence of Group Members Arrangement on the Multicast Tree Cost,,2018-03-20
10.5120/5578-7685,Performance of Video Conferencing using Protocol Independent Multicast Routing with Core failure,,2020-03-20
10.3724/sp.j.1001.2013.04291,Low-Interference Multicast in Wireless Mesh Networks,,2020-03-20
10.1145/2593069.2593088,An efficient wire routing and wire sizing algorithm for weight minimization of automotive systems,,2015-03-20
10.12691/jcn-5-1-2,Replacement Algorithm of Virtual Service Resources with Dynamic Resource Allocation Based on Traffic Change in Virtual Networks,,2015-03-20
10.1201/9780203909041.CH6,Routing And Path Establishment For Point-to-point And Point-to-multipoint Communications Over Wdm Networks,,2012-03-20
10.1109/ICSMC.2002.1176009,A novel computational intelligence approach for multiple-point routing in communication networks,,2015-03-20
10.1007/978-88-470-1523-4_20,Problemi di progettazione di reti,,2018-03-20
10.1109/ITNEWS.2008.4488140,A quasipolynomial-time and deterministic source-based heuristic for multicasting multimedia information,,2012-03-20
10.1109/ICDE.2009.64,STAR: Steiner-Tree Approximation in Relationship Graphs,,2019-03-20
10.1002/9780470487068.ch23,Routing for Statistical Inference in Sensor Networks,,2011-03-20
10.3390/ijms161226148,Bioinformatics Mining and Modeling Methods for the Identification of Disease Mechanisms in Neurodegenerative Disorders,,2011-03-20
10.1109/WICOM.2010.5600950,A Reliable Multicast for MANETs Based on Opportunistic Routing,,2013-03-20
10.1007/3-540-36087-5_32,A Genetic Algorithm for Steiner Tree Optimization with Multiple Constraints Using Prüfer Number,,2011-03-20
10.1007/978-3-642-12963-6_27,Cost Bounds of Multicast Light-Trees in WDM Networks,,2013-03-20
10.1109/GLOCOM.2014.7036798,Hotspot discovery algorithms in coverage selection model over VANETs,,2018-03-20
10.1109/LCOMM.2018.2798668,Optimization of Multicast Source-Routing Based on Bloom Filter,,2017-03-20
10.1023/B:WINE.0000023861.10684.F1,QM2RP: A QoS-Based Mobile Multicast Routing Protocol Using Multi-Objective Genetic Algorithm,,2020-03-20
10.1002/dac.685,A new delay-constrained algorithm for multicast routing tree construction,,2018-03-20
10.1109/TCOMM.2018.2881438,Efficient NFV-Enabled Multicasting in SDNs,,2016-03-20
10.1109/LCN.2006.322092,LEMA: Localized Energy-Efficient Multicast Algorithm based on Geographic Routing,,2011-03-20
10.1109/AINA.2005.130,Bandwidth fragmentation avoided QoS multicast routing by employing admission control,,2020-03-20
10.18653/v1/D18-1384,ExtRA: Extracting Prominent Review Aspects from Customer Feedback,,2018-03-20
10.1109/CHICC.2006.280854,Solving the Problem of the Link Optimizing and Delay-constrained Multicast Routing Based on GA,,2017-03-20
10.1109/HPSR.2004.1303497,A heuristic for multi-constrained multicast routing,,2012-03-20
10.1142/S0129054102001527,The Effect of Asymmetry on the On-Line Multicast Routing Problem,,2013-03-20
10.1109/TWC.2009.070602,Minimum-energy all-to-all multicasting in wireless ad hoc networks,,2019-03-20
10.1109/TNET.2009.2033273,Constrained Relay Node Placement in Wireless Sensor Networks: Formulation and Approximations,,2014-03-20
10.1364/OFC.2012.OTH3B.7,Performance analysis of multicast traffic over spectrum elastic optical networks,,2017-03-20
10.1007/978-3-642-41335-3_38,A Graph-Based Approach to Learn Semantic Descriptions of Data Sources,,2011-03-20
10.1016/j.comnet.2013.05.012,On multi-stream multi-source multicast routing,,2013-03-20
10.1007/978-3-642-40316-3_18,Efficient Clustering of Cabinets at FttCab,,2018-03-20
10.2200/S00928ED1V01Y201906DTM061,Community Search over Big Graphs,,2020-03-20
10.14288/1.0073313,Analytical models for accelerating FPGA architecture development,,2019-03-20
10.1016/j.comcom.2018.11.001,Cross-layer access control in publish/subscribe middleware over software-defined networks,,2016-03-20
10.1109/TSC.2017.2753260,Minimal Fault-Tolerant Coverage of Controllers in IaaS Datacenters,,2016-03-20
10.1111/cgf.13923,Greedy Cut Construction for Parameterizations,,2017-03-20
10.1007/BF02139130,Optimal multicast routing with quality of service constraints,,2016-03-20
10.31274/ETD-180810-2512,On Traffic Grooming and Survivability in WDM Optical Networks,,2020-03-20
10.1016/j.comnet.2008.06.003,Evaluating Steiner-tree heuristics and diameter variations for application layer multicast,,2018-03-20
10.1007/978-3-319-05227-4_11,C-Code for Routing Routines,,2015-03-20
10.5771/9783845281759-123,Chapter 4: Heuristics,,2014-03-20
10.1109/ICCT.2008.4716117,Centralized joint routing and scheduling algorithm with minimum delay for multi-flow in WMNs with single-transceiver and multi-channel,,2011-03-20
10.1007/S11235-017-0390-4,MIP model for efficient dimensioning of real-world FTTH trees,,2020-03-20
10.1109/TPDS.2020.2983918,Efficient Algorithms for Delay-Aware NFV-Enabled Multicasting in Mobile Edge Clouds With Resource Sharing,,2014-03-20
10.1145/2068897.2068914,Monitoring quality optimization in wireless sensor networks with a mobile sink,,2012-03-20
10.1109/SUSTECH.2016.7897149,Improved protection scheme for data attack on strategic buses in the Smart Grid,,2019-03-20
10.1109/TPDS.2016.2628024,Repair Tree: Fast Repair for Single Failure in Erasure-Coded Distributed Storage Systems,,2018-03-20
10.1007/0-387-33406-8_31,Cryptographically Enforced Personalized Role-Based Access Control,,2012-03-20
10.1186/1753-6561-7-S7-S2,Conceptualization of molecular findings by mining gene annotations,,2019-03-20
10.1109/NGI.2006.1678266,An efficient IP based approach for multicast routing optimisation in multi-homing environments,,2016-03-20
10.1007/11576235_36,A Heuristic Routing Algorithm for Degree-Constrained Minimum Overall Latency Application Layer Multicast,,2014-03-20
10.1109/CYBERC.2009.5342205,An adaptive feedback timing control algorithm of delay-constrained data aggregation in wireless sensor networks,,2017-03-20
10.1017/CBO9781139177801.009,Approximation Algorithms,,2014-03-20
10.1016/j.endm.2004.06.011,Performance Analysis of Algorithms for the Steiner Problem in Directed Networks,,2017-03-20
10.1016/j.tcs.2006.09.004,Sharing the cost of multicast transmissions in wireless networks,,2013-03-20
10.1007/978-3-030-59051-2_21,Theme-Based Summarization for RDF Datasets,,2019-03-20
10.1016/j.comcom.2020.01.025,Survivable services oriented protection level-aware virtual network embedding,,2016-03-20
10.1109/ICC.2017.7996598,A failure avoidance oriented approach for virtual network reliability enhancement,,2017-03-20
10.1016/S0140-3664(02)00198-6,QoS-guaranteed one-to-many and many-to-many multicast routing,,2014-03-20
10.1007/978-0-387-30165-5_31,Optimization in Wireless Networks,,2011-03-20
10.1109/INFCOMW.2019.8845271,Local View Based Connectivity Search in Online Social Networks,,2017-03-20
10.1002/dac.728,Tightest constraint first: An efficient delay sensitive multicast routing algorithm,,2013-03-20
10.3929/ETHZ-A-005898562,Routing on the geometry of wireless ad hoc networks,,2020-03-20
10.1109/GreenCom.2012.6519614,Multipath routing for reducing network energy,,2018-03-20
10.1016/j.comnet.2018.03.028,NEMO: Novel and efficient multicast routing schemes for Hybrid Data Center Networks,,2014-03-20
10.1109/MELECON.2002.1014595,Modified distributed quality-of-service routing in wireless mobile ad-hoc networks,,2018-03-20
10.1162/evco_a_00200,Performance Analysis of Evolutionary Algorithms for Steiner Tree Problems,,2016-03-20
10.1145/1838552.1838557,Unicast and multicast QoS routing with soft-constraint logic programming,,2015-03-20
10.1155/2008/536913,Genetic algorithm for finding minimal cost light forest of multicast routing on WDM networks,,2011-03-20
10.1007/s10878-009-9229-6,Node-weighted Steiner tree approximation in unit disk graphs,,2015-03-20
10.1007/978-3-319-07644-7_5,A Partition-Based Heuristic for the Steiner Tree Problem in Large Graphs,,2014-03-20
10.1109/JSAC.2014.140110,On-Line Multicast Scheduling with Bounded Congestion in Fat-Tree Data Center Networks,,2016-03-20
10.1016/S0020-0190(02)00220-X,Algorithms for multicast connection under multi-path routing model,,2014-03-20
10.1007/978-3-540-30573-6_38,Unicast and Multicast QoS Routing with Multiple Constraints,,2012-03-20
10.1002/wcm.701,Channel assignment for multicast in multi-channel multi-radio wireless mesh networks,,2013-03-20
10.4018/978-1-930708-29-7.CH014,Multicast: concept  problems  routing protocols  algorithms and QoS extensions,,2017-03-20
10.1109/GLOCOM.2005.1577363,Survivable low-cost low-delay multicast trees,,2017-03-20
10.1109/LCN.2002.1181832,Scalable multicast routing protocol using anycast and hierarchical-trees,,2020-03-20
10.6688/JISE.2005.21.1.5,A Genetic Algorithm for Multicast Routing under Delay Constraint in WDM Network with Different Light Splitting,,2015-03-20
10.1007/s00291-013-0358-z,The dynamic replica placement problem with service levels in content delivery networks: a model and a simulated annealing heuristic,,2011-03-20
10.7763/IJCTE.2011.V3.307,QoS Constraints Multicast Routing for Residual Bandwidth Optimization using Evolutionary Algorithm,,2015-03-20
10.1007/0-387-22584-6_7,Optical Burst Switching: Quality of Service  Multicast  and Operation and Maintenance,,2018-03-20
10.1145/1835804.1835923,The community-search problem and how to plan a successful cocktail party,,2012-03-20
10.1016/S1571-0661(04)80349-9,A Declarative Debugging System for Lazy Functional Logic Programs,,2018-03-20
10.1007/s10990-007-9002-4,A new generic scheme for functional logic programming with constraints,,2013-03-20
10.1016/j.entcs.2004.06.030,Constraint Functional Logic Programming Revisited,,2019-03-20
10.1016/j.jlap.2003.10.001,Computable total functions on metric algebras  universal algebraic specifications and dynamical systems,,2013-03-20
10.1145/1599410.1599418,A higher-order logical framework for the algorithmic debugging and verification of declarative programs,,2017-03-20
10.1017/S1471068402001527,Composing Programs in a Rewriting Logic for Declarative Programming,,2016-03-20
10.4028/www.scientific.net/AMM.44-47.4131,Composing Multi-Resource Systems by Category Theory,,2018-03-20
10.1145/3422822,The Reachability Problem for Petri Nets Is Not Elementary,,2018-03-20
10.1007/978-3-642-04081-8_31,On the Relationship between π-Calculus and Finite Place/Transition Petri Nets,,2014-03-20
10.1007/978-3-642-35524-0_6,Complex Functional Rates in Rule-Based Languages for Biochemistry,,2017-03-20
10.1007/978-3-642-16310-4_13,Multiset Rewriting: A Semantic Framework for Concurrency with Name Binding,,2018-03-20
10.1007/978-3-642-02930-1_3,Deciding Safety Properties in Infinite-State Pi-Calculus via Behavioural Types,,2016-03-20
10.1016/j.jlap.2008.08.002,Distributed semantics for the pi-calculus based on Petri nets with inhibitor arcs,,2014-03-20
10.1007/978-3-030-45190-5_22,KReach: A Tool for Reachability in Petri Nets,,2019-03-20
10.1145/3313276.3316369,The reachability problem for Petri nets is not elementary,,2015-03-20
10.1007/978-3-662-44584-6_25,Bounds on Mobility,,2016-03-20
10.4230/LIPIcs.CONCUR.2020.48,Reachability in fixed dimension vector addition systems with states,,2011-03-20
10.1007/978-3-642-32940-1_31,A Polynomial Translation of π-Calculus (FCP) to Safe Petri Nets,,2016-03-20
10.1007/s40595-015-0051-z,Language representability of finite place/transition Petri nets,,2020-03-20
10.3233/FI-2009-138,A Practical Approach to Verification of Mobile Systems Using Net Unfoldings,,2011-03-20
10.1007/978-3-642-14295-6_19,Petruchio: From Dynamic Networks to Nets,,2011-03-20
10.1007/978-3-662-49498-1_7,On Hierarchical Communication Topologies in the \pi -calculus,,2014-03-20
10.1007/978-3-642-15349-5_11,Depth Boundedness in Multiset Rewriting Systems with Name Binding,,2019-03-20
10.1007/978-0-387-09680-3_32,On Boundedness in Depth in the pi-Calculus,,2015-03-20
10.1109/ACSD.2009.8,Checking pi-Calculus Structural Congruence is Graph Isomorphism Complete,,2011-03-20
10.1016/j.ic.2012.01.006,Deciding safety properties in infinite-state pi-calculus via behavioural types,,2017-03-20
10.1109/ACSD.2012.11,Translating Structural Process Properties to Petri Net Markings,,2016-03-20
10.1007/978-3-540-68746-7_22,A Practical Approach to Verification of Mobile Systems Using Net Unfoldings,,2014-03-20
10.4204/EPTCS.41.6,A Process Calculus for Expressing Finite Place/Transition Petri Nets,,2019-03-20
10.1145/2893582.2893585,The complexity of reachability in vector addition systems,,2018-03-20
10.2168/LMCS-9(3:18)2013,A Polynomial Translation of pi-calculus FCPs to Safe Petri Nets,,2012-03-20
10.1007/978-3-642-40184-8_14,A Theory of Name Boundedness,,2018-03-20
10.1016/J.IC.2012.03.004,Multiset rewriting for the verification of depth-bounded processes with name binding,,2012-03-20
10.1007/978-3-540-85778-5_8,Complexity of Metric Temporal Logics with Counting and the Pnueli Modalities,,2015-03-20
10.1007/978-0-387-34685-4_5,Temporal Reasoning Of Reactive Web Services,,2017-03-20
10.1093/comjnl/bxm018,Service Availability in Concurrent Systems - Part II: Analysis and Case Studies Using HSIP,,2017-03-20
10.13128/PHE_MI-19641,Neuroscience and Phenomenology,,2013-03-20
10.1007/978-3-540-30538-5_33,Adaptive Stabilization of Reactive Protocols,,2013-03-20
10.1109/INDIN.2007.4384943,Sequential Axiomatic Model for Execution of Basic Function Blocks in IEC61499,,2015-03-20
10.1007/0-306-48734-9_8,A UML Profile for Real-Time System Modelling with Rate Monotonic Analysis,,2014-03-20
10.1080/0952813031000119719,Formal verification of multi-agent systems behaviour emerging from cognitive task analysis,,2013-03-20
10.1007/s00446-010-0095-3,Proof labeling schemes,,2018-03-20
10.1007/BF02946611,Completeness of the accumulation calculus,,2017-03-20
10.1007/BF02943525,Hybridity in embedded computing systems,,2011-03-20
10.1007/978-3-540-76627-8_8,Stabilization in Dynamic Systems with Varying Equilibrium,,2011-03-20
10.1007/11821069_43,An Expressive Temporal Logic for Real Time,,2019-03-20
10.1007/978-3-642-17164-2_1,A Calculus for Hybrid CSP,,2014-03-20
10.1016/j.ic.2011.11.003,Continuous time temporal logic with counting,,2012-03-20
10.1007/s00165-004-0035-8,Completeness of a combination of neighbourhood logic and temporal logic,,2020-03-20
10.1023/A:1026585115440,Extending the SCR Method for Real-Time Systems,,2014-03-20
10.1023/A:1008129319165,Application of Partial-Order Methods to Reactive Programs with Event Memorization,,2020-03-20
10.1016/S0304-3975(02)00036-1,Hybrid diagrams,,2020-03-20
10.1007/978-3-540-39910-0_12,Game Models for Open Systems,,2019-03-20
10.1016/j.tcs.2010.03.017,Complexity of metric temporal logics with counting and the Pnueli modalities,,2019-03-20
10.1145/1073814.1073817,Proof labeling schemes,,2011-03-20
10.2168/LMCS-3(1:3)2007,Expressiveness of Metric modalities for continuous time,,2020-03-20
10.1016/j.ic.2004.12.002,Timer formulas and decidable metric temporal logic,,2016-03-20
10.1007/978-3-030-48006-6_16,The Expressive Power of Temporal and First-Order Metric Logics,,2016-03-20
10.1016/j.ic.2008.08.004,Decidable metric logics,,2013-03-20
10.1007/s00165-019-00500-4,Zohar Manna (1939–2018),,2020-03-20
10.1007/11753728_23,Expressiveness of Metric Modalities for Continuous Time,,2013-03-20
10.1007/978-3-030-48006-6,Fields of Logic and Computation III: Essays Dedicated to Yuri Gurevich on the Occasion of His 80th Birthday,,2016-03-20
10.1007/978-3-642-24310-3_6,Probabilistic Real-Time Rewrite Theories and Their Expressive Power,,2020-03-20
10.1016/j.ic.2006.11.002,Temporal logics with incommensurable distances are undecidable,,2019-03-20
10.1007/978-3-642-24310-3,Formal Modeling and Analysis of Timed Systems,,2014-03-20
10.1007/s10990-007-9001-5,Semantics and pragmatics of Real-Time Maude,,2013-03-20
10.1007/3-540-34874-3_6,A Theory of Interactive Computation,,2016-03-20
10.1002/NET.V47:2,Fixed tree games with multilocated players,,2015-03-20
10.1007/s001820200099,Sharing the cost of a network: core and core allocations,,2020-03-20
10.1007/s00186-006-0088-y,The nucleolus of trees with revenues,,2011-03-20
10.2478/v10152-012-0031-y,Generic competencies in postgraduate medical training:their importance illustrated by a doctor’s narrative on competency-based practice,,2015-03-20
10.15807/JORSJ.53.62,REDUCTION OF ULTRAMETRIC MINIMUM COST SPANNING TREE GAMES TO COST ALLOCATION GAMES ON ROOTED TREES,,2017-03-20
10.1002/net.20093,Fixed tree games with multilocated players,,2019-03-20
10.1007/s00182-009-0176-3,The nucleolus of a standard tree game revisited: a study of its monotonicity and computational properties,,2016-03-20
10.1007/978-0-387-77247-9_7,Algorithmic Cooperative Game Theory,,2011-03-20
10.2139/ssrn.556124,Fixed Tree Games with Repeated Players,,2020-03-20
10.1007/978-1-4419-7997-1_2,Online and Semi-online Scheduling,,2015-03-20
10.1007/978-3-642-14403-5_2,Semi-online Preemptive Scheduling: Study of Special Cases,,2019-03-20
10.1145/2993749.2993765,SIGACT News Online Algorithms Column 29,,2014-03-20
10.1145/3056461,Online Algorithms with Advice,,2020-03-20
10.1007/s00224-010-9287-2,Semi-Online Preemptive Scheduling: One Algorithm for All Variants,,2012-03-20
10.4230/LIPIcs.STACS.2009.1840,Semi-Online Preemptive Scheduling: One Algorithm for All Variants,,2014-03-20
10.1145/2993749.2993766,Online Algorithms with Advice: A Survey,,2014-03-20
10.1007/978-3-642-32589-2_55,Weakly-Synchronized Ground Tree Rewriting - (with Applications to Verifying Multithreaded Programs),,2017-03-20
10.2478/s11532-012-0008-3,Preconcentration procedures for the determination of chromium using atomic spectrometric techniques: A review,,2013-03-20
10.2478/s11532-012-0082-6,Corrosion resistance of stainless steel covered by 4-aminobenzoic acid films,,2012-03-20
10.1007/978-3-319-45994-3_11,Decidable Models of Integer-Manipulating Programs with Recursive Parallelism,,2013-03-20
10.1145/2629679,Refining the Process Rewrite Systems Hierarchy via Ground Tree Rewrite Systems,,2014-03-20
10.1016/j.ic.2009.01.003,Reachability is decidable for weakly extended process rewrite systems,,2013-03-20
10.1515/sg-2012-0012,Physiological and Protein Responses to Drought in Four Pine Seedlings,,2019-03-20
10.1007/978-3-319-03542-0_3,Model Checking Dynamic Pushdown Networks,,2012-03-20
10.1016/j.tcs.2018.04.050,Decidable models of integer-manipulating programs with recursive parallelism,,2011-03-20
10.1145/2603088.2603112,Senescent ground tree rewrite systems,,
10.1007/s00165-014-0330-y,Model checking dynamic pushdown networks,,2015-03-20
10.1016/j.entcs.2009.05.033,On Decidability of LTL+Past Model Checking for Process Rewrite Systems,,2013-03-20
10.1007/978-3-642-23217-6_36,Refining the Process Rewrite Systems Hierarchy via Ground Tree Rewrite Systems,,2020-03-20
10.1007/978-3-540-69507-3_2,Model-Checking Large Finite-State Systems and Beyond,,2019-03-20
10.1016/j.rbms.2016.06.002,The Indian IVF saga: a contested history,,2015-03-20
10.1007/978-3-319-57666-4_5,Compositionality  Decompositionality and Refinement in Input/Output Conformance Testing,,2017-03-20
10.1016/j.entcs.2004.08.017,Topological (Bi-)Simulation,,2020-03-20
10.1007/s10703-007-0034-5,Timed substitutions for regular signal-event languages,,2014-03-20
10.1142/S0129054107004589,Reasoning about Transfinite Sequences,,2014-03-20
10.1016/j.ic.2006.08.006,Quantitative temporal logics over the reals: PSpace and below,,2019-03-20
10.1007/11901914_18,Controller Synthesis and Ordinal Automata,,2014-03-20
10.1109/SYNASC.2007.67,Strategy-Based and Knowledge-Based Models of Information Flow: Equivalence and Decidability,,2019-03-20
10.1007/11867340_6,Refinements and Abstractions of Signal-Event (Timed) Languages,,2012-03-20
10.1016/j.ipl.2003.11.010,A Kleene theorem for splitable signals,,2020-03-20
10.1484/j.rm.5.120430,Habilitation à Diriger des Recherches,,2019-03-20
10.1007/11562948_20,Reasoning About Transfinite Sequences,,2016-03-20
10.1007/3-540-44957-4_7,Coverability of Reset Petri Nets and Other Well-Structured Transition Systems by Partial Deduction,,2016-03-20
10.1007/3-540-44685-0_19,On the Power of Labels in Transition Systems,,2016-03-20
10.1017/S1471068411000627,Generalization Strategies for the Verification of Infinite State Systems,,2017-03-20
10.1007/3-540-62034-6_40,Weak Bisimulation and Model Checking for Basic Parallel Processes,,2018-03-20
10.1007/978-3-540-27755-2_11,Unbounded Petri Net Synthesis,,2014-03-20
10.1007/978-3-642-24372-1_10,Model Checking EGF on Basic Parallel Processes,,2018-03-20
10.1007/3-540-62503-8_1,Logical and Operational Methods in the Analysis of Programs and Systems,,2018-03-20
10.1007/978-3-540-75292-9_23,Deciding Weak Bisimilarity of Normed Context-Free Processes Using Tableau,,2018-03-20
10.1145/332740.332746,Composite model-checking: verification with type-specific symbolic representations,,2015-03-20
10.1007/978-3-642-16242-8_6,Extended Computation Tree Logic,,2015-03-20
10.1007/978-3-319-57861-3_10,Extended Dependency Graphs and Efficient Distributed Fixed-Point Computation,,2015-03-20
10.1007/978-3-642-41036-9_16,Branching-Time Model Checking Gap-Order Constraint Systems,,2020-03-20
10.1007/978-3-642-33260-9_1,Formalising Security in Ubiquitous and Cloud Scenarios,,2012-03-20
10.1145/3314221.3322484,Verifying message-passing programs with dependent behavioural types,,2013-03-20
10.1007/978-3-642-14162-1_40,Reachability Games on Extended Vector Addition Systems with States,,2011-03-20
10.1145/317636.317908,Verification of Erlang programs using abstract interpretation and model checking,,2017-03-20
10.1007/3-540-48745-X_14,Theoretical Aspects of Recursive Petri Nets,,2017-03-20
10.1007/3-540-60218-6_2,Compositional Proof Systems for Model Checking Infinite State Processes,,2020-03-20
10.4204/EPTCS.112.8,How to Be Both Rich and Happy: Combining Quantitative and Qualitative Strategic Reasoning about Multi-Player Games (Extended Abstract),,2019-03-20
10.1007/BFb0028751,Multiple Counters Automata  Safety Analysis and Presburger Arithmetic,,2014-03-20
10.1007/978-3-642-30982-3_6,Abstractions for Validation in Action,,
10.1007/3-540-44957-4_51,Decidability Results for the Propositional Fluent Calculus,,2019-03-20
10.1145/325478.325480,Model-checking concurrent systems with unbounded integer variables: symbolic representations  approximations  and experimental results,,2015-03-20
10.7551/mitpress/4283.003.0014,Model Checking,,2014-03-20
10.1007/10720327_5,Infinite State Model Checking by Abstract Interpretation and Program Specialisation,,2015-03-20
10.3233/FI-2012-738,Improving Reachability Analysis of Infinite State Systems by Specialization,,2015-03-20
10.1016/j.jlap.2004.03.004,Sequent calculi for process verification: Hennessy-Milner logic for an arbitrary GSOS,,2019-03-20
10.1145/581339.581362,Verification support for workflow design with UML activity graphs,,2015-03-20
10.1007/978-3-540-28644-8_9,Characterizing EF and EX Tree Logics,,2011-03-20
10.1142/S0129054101000898,On Reachability and Safety in Infinite-State Systems,,2016-03-20
10.1007/3-540-45251-6_6,How to Make FDR Spin LTL Model Checking of CSP by Refinement,,2015-03-20
10.1016/j.entcs.2008.04.065,Decidability of Weak Bisimilarity for a Subset of BPA,,2019-03-20
10.1109/TSE.2010.98,Automated Abstractions for Contract Validation,,2020-03-20
10.1007/978-3-642-21834-7_4,Forward Analysis and Model Checking for Trace Bounded WSTS,,2020-03-20
10.1016/j.entcs.2006.10.053,On Symbolic Verification of Weakly Extended PAD,,2020-03-20
10.1007/3-540-44612-5_38,Conter Machines: Decidable Properties and Applications to Verification Problems,,2016-03-20
10.1016/S0304-3975(01)00127-X,Analysis issues in Petri nets with inhibitor arcs,,2019-03-20
10.1007/978-3-642-30982-3,Formal Methods for Model-Driven Engineering,,2018-03-20
10.1016/j.cosrev.2010.06.002,Linear Temporal Logic Symbolic Model Checking,,2016-03-20
10.1007/978-3-540-30579-8_19,Model Checking for Process Rewrite Systems and a Class of Action-Based Regular Properties,,2014-03-20
10.1016/j.entcs.2004.08.018,Verifying a Behavioural Logic for Graph Transformation Systems,,2019-03-20
10.1109/TIME.2001.930718,Checking linear temporal formulas on sequential recursive Petri nets,,2019-03-20
10.1007/978-3-540-39958-2_7,Temporal Logic Based Static Analysis for Non-uniform Behaviours,,2018-03-20
10.1109/TSE.2004.33,Tool support for verifying UML activity diagrams,,2013-03-20
10.1007/978-3-540-69516-5_3,Computational Complexity of,,2011-03-20
10.1007/s100090050030,Pragmatics of model checking: an STTT special section,,2017-03-20
10.1007/s10703-011-0120-6,Specification and encoding of transaction interaction properties,,2018-03-20
10.1142/S0129054108006066,Reachability Analysis in Verification via Supercompilation,,2011-03-20
10.1016/j.ic.2010.01.003,On the complexity of checking semantic equivalences between pushdown processes and finite-state processes,,2017-03-20
10.1016/B978-044482830-9/50027-8,Verification on Infinite Structures,,2016-03-20
10.1016/S0304-3975(00)00027-X,Deciding bisimulation-like equivalences with finite-state processes,,2017-03-20
10.1016/S0304-3975(02)00646-1,Undecidable problems in unreliable computations,,2019-03-20
10.1007/3-540-44674-5_12,Reachability and Safety in Queue Systems,,2017-03-20
10.1007/3-540-45071-8_17,Petri Nets with Simple Circuits,,2014-03-20
10.1007/978-3-642-20551-4_11,Program Specialization for Verifying Infinite State Systems: An Experimental Evaluation,,
10.1007/3-540-45510-8_1,Model Checking: A Tutorial Overview,,2013-03-20
10.1007/s002240000127,Integer Linear Programming and the Analysis of Some Petri Net Problems,,2014-03-20
10.1017/S0960129504004657,Periodic Linear Programming with applications to real-time scheduling,,2019-03-20
10.1006/inco.1999.2826,Process Rewrite Systems,,2018-03-20
10.1007/3-540-36137-5_3,Equivalence-Checking with Infinite-State Systems: Techniques and Results,,2020-03-20
10.1006/inco.1997.2680,Proving Properties of Dynamic Process Networks,,2017-03-20
10.18419/OPUS-2555,Analysis and verification of systems with dynamically evolving structure,,2011-03-20
10.1145/2463664.2467796,Foundations of data-aware process analysis: a database theory perspective,,2011-03-20
10.1007/3-540-45619-8_9,Constraint-Based Infinite Model Checking and Tabulation for Stratified CLP,,2018-03-20
10.1007/978-3-642-22993-0_13,Model Checking Coverability Graphs of Vector Addition Systems,,2011-03-20
10.1016/S1571-0661(05)80679-6,Semantic reachability,,2011-03-20
10.1016/j.tcs.2006.05.003,Model checking for process rewrite systems and a class of action-based regular properties,,2014-03-20
10.1007/978-1-4757-3550-5,Modal and Temporal Properties of Processes,,2020-03-20
10.1142/S0129054102000984,Verification in Queue-Connected Multicounter Machines,,2011-03-20
10.1007/10719839_37,Undecidable Problems in Unreliable Computations,,2016-03-20
10.1142/S0129054108006042,On Counter Machines  Reachability Problems  and Diophantine Equations,,2017-03-20
10.1007/3-540-44622-2_17,Flatness Is Not a Weakness,,2016-03-20
10.1007/11591191_24,Monotone AC-Tree Automata,,2017-03-20
10.1007/978-3-030-50086-3_11,Tutorial: Parameterized Verification with Byzantine Model Checker,,2012-03-20
10.3233/FI-2018-1707,A Distributed Fixed-Point Algorithm for Extended Dependency Graphs,,2011-03-20
10.1007/BFb0054183,Set-Based Analysis of Reactive Infinite-State Systems,,2020-03-20
10.1016/j.jsc.2008.04.005,State space analysis of Petri nets with relation-algebraic methods,,2018-03-20
10.1007/3-540-44618-4_15,Reachability Analysis for Some Models of Infinite-State Transition Systems,,2012-03-20
10.1007/978-3-540-79228-4_17,More on Weak Bisimilarity of Normed Basic Parallel Processes,,2014-03-20
10.1016/S0304-3975(00)00101-8,Decidability of model checking with the temporal logic EF,,2017-03-20
10.1007/11590156_17,Reachability of Hennessy-Milner Properties for Weakly Extended PRS,,2011-03-20
10.1007/3-540-63141-0_23,Model Checking PA-Processes,,2018-03-20
10.3233/FI-2013-845,Controlling Polyvariance for Specialization-based Verification,,2018-03-20
10.1017/S1471068406002651,Equivalence-checking on infinite-state systems: Techniques and results,,2020-03-20
10.1016/S1571-0661(05)80473-6,Process rewrite systems,,2012-03-20
10.1093/ietisy/e88-d.9.2113,Petri Nets with Simple Circuits,,2016-03-20
10.1016/j.tcs.2006.01.018,Characterizing EF and EX tree logics,,2018-03-20
10.1016/j.jcss.2017.09.004,A generic framework for checking semantic equivalences between pushdown automata and finite-state automata,,2017-03-20
10.1007/s10485-015-9409-8,Dynamical Systems in Categories,,2015-03-20
10.1016/j.tcs.2016.04.020,Forward analysis and model checking for trace bounded WSTS,,2019-03-20
10.1007/978-1-4615-4493-7_48,Modelling and Analyzing Systems with Recursive Petri Nets,,2012-03-20
10.1145/351268.351298,Solving coverability problems of petri nets by partial deduction,,2014-03-20
10.1016/S0304-3975(01)00268-7,Counter Machines and Verification Problems,,2019-03-20
10.1007/3-540-49116-3_30,Model Checking Lossy Vector Addition Systems,,2016-03-20
10.1007/1-4020-8141-3_31,A Generic Framework for Checking Semantic Equivalences between Pushdown Automata and Finite-State Automata,,2019-03-20
10.1007/978-3-540-85758-7_24,Efficient Compliance Checking Using BPMN-Q and Temporal Logic,,2013-03-20
10.1093/comjnl/bxp003,Reachability Analysis of Augmented Marked Graphs via Integer Linear Programming,,2013-03-20
10.1007/3-540-48320-9_26,Weak Bisimilarity with Infinite-State Systems Can Be Decided in Polynomial Time,,2019-03-20
10.1007/3-540-45832-8_4,Approximating the Behaviour of Graph Transformation Systems,,2016-03-20
10.1007/978-3-540-33461-3_14,Introduction to Petri Net Theory,,2015-03-20
10.1007/978-3-030-50086-3,Formal Techniques for Distributed Objects  Components  and Systems: 40th IFIP WG 6.1 International Conference  FORTE 2020  Held as Part of the 15th International Federated Conference on Distributed Computing Techniques  DisCoTec 2020  Valletta  Malta  June 15–19  2020  Proceedings,,2014-03-20
10.1007/978-3-642-24288-5_15,Improving Reachability Analysis of Infinite State Systems by Specialization,,2011-03-20
10.1007/BFb0014567,Combining Petri Nets and PA-Processes,,2019-03-20
10.1007/3-540-65306-6_20,Decidability and Complexity of Petri Net Problems - An Introduction,,2015-03-20
10.3233/FI-2016-1317,Branching-Time Model Checking Gap-Order Constraint Systems,,2013-03-20
10.1016/S0304-3975(01)00094-9,Weak bisimilarity between finite-state systems and BPA or normed BPP is decidable in polynomial time,,2014-03-20
10.1016/j.tcs.2008.01.018,Calculi  types and applications: Essays in honour of M. Coppo  M. Dezani-Ciancaglini and S. Ronchi Della Rocca,,2018-03-20
10.1109/IDEAS.2002.1029652,Interval processing with the UB-Tree,,2020-03-20
10.1007/BF01186643,Variance of storage requirements for B+-trees,,2017-03-20
10.1016/S0169-023X(02)00023-X,A retrieval technique for high-dimensional data and partially specified queries,,2013-03-20
10.1007/11546924_20,Adaptive Query Processing in Point-Transformation Schemes,,2018-03-20
10.1109/TKDE.2003.1198400,Persistently Cached B-Trees,,2019-03-20
10.18419/OPUS-3589,Supporting multi-tenancy in Relational Database Management Systems for OLTP-style software as a service applications,,2018-03-20
10.1016/J.DATAK.2006.08.001,Processing partially specified queries over high-dimensional databases,,2014-03-20
10.1561/0400000014,Algorithms and Data Structures for External Memory,,2020-03-20
10.1007/978-3-540-77105-0_49,A PSPACE-complete Sperner Triangle Game,,2020-03-20
10.1007/978-3-540-74565-5_29,Learning How to Play Hex,,2012-03-20
10.1007/978-3-540-24687-9_84,Parallel Chip Firing Game Associated with n- cube Edges Orientations,,2017-03-20
10.1007/978-3-642-36899-8_34,Remarks on History and Presence of Game Tree Search and Research,,2013-03-20
10.2197/ipsjjip.20.723,NP-Completeness of Pandemic,,2014-03-20
10.1109/FSKD.2007.185,Apply Heuristic Search to Discover a New Winning Solution in Hex Game,,2018-03-20
10.1201/b10581,Games  puzzles and computation,,2012-03-20
10.1016/j.ipl.2020.105995,QUIXO is EXPTIME-complete,,2012-03-20
10.1016/S0004-3702(01)00152-7,Games solved: Now and in the future,,2014-03-20
10.1016/j.geb.2009.04.019,Topological games at Princeton  a mathematical memoir,,2018-03-20
10.1109/TG.2017.2785042,Move Prediction Using Deep Convolutional Neural Networks in Hex,,2015-03-20
10.1007/978-3-7643-7400-6_5,Dead Cell Analysis in Hex and the Shannon Game,,2013-03-20
10.1007/978-3-319-57969-6_1,Neurohex: A Deep Q-learning Hex Agent,,2012-03-20
10.1016/j.tcs.2016.06.033,On the complexity of connection games,,2020-03-20
10.1109/ITW.2010.5593334,On the huge benefit of decisive moves in Monte-Carlo Tree Search algorithms,,2020-03-20
10.1007/978-3-319-27992-3_15,Draws  Zugzwangs  and PSPACE-Completeness in the Slither Connection Game,,2013-03-20
10.1007/978-3-319-00119-7_5,The Complexity of Computations,,2019-03-20
10.1016/j.tcs.2005.09.042,Solving 7x7 Hex with domination  fill-in  and virtual connections,,2015-03-20
10.1109/TCIAIG.2014.2345398,Stronger Virtual Connections in Hex,,2014-03-20
10.1109/CEC.2003.1299946,Towards staged evolution of an artificial player for Hex by enlarging the boardsize during training,,2014-03-20
10.1300/J123v47n01_09,Everything You Always Wanted to Know About SFX but Were Afraid to Ask,,2012-03-20
10.1017/CBO9780511807251.015,Amazons  Konane  and Cross Purposes are PSPACE-complete,,2014-03-20
10.1515/9783110298161.75,Captured-Reversible Moves and Star Decomposition Domination in Hex,,2011-03-20
10.1080/15427951.2008.10129176,Atropos: A PSPACE-Complete Sperner Triangle Game,,2011-03-20
10.3233/ICG-2010-33104,Stonehenge: Outcome of All First Moves and PSPACE-Completeness,,2012-03-20
10.3233/ICG-2006-29405,Nim is Easy  Chess is Hard - But Why??,,2017-03-20
10.1016/j.tcs.2012.05.032,An algorithmic analysis of the Honey-Bee game,,2012-03-20
10.4230/LIPIcs.ICALP.2017.90,The Parameterized Complexity of Positional Games,,2016-03-20
10.1016/S0004-3702(01)00154-0,A hierarchical approach to computer Hex,,2011-03-20
10.1016/S0304-3975(01)00179-7,Endgame problems of Sim-like graph Ramsey avoidance games are PSPACE-complete,,2015-03-20
10.1007/978-3-319-09165-5_15,Havannah and TwixT are PSPACE-complete,,2017-03-20
10.1515/integ.2011.113,On the Complexity of Chooser–Picker Positional Games,,2012-03-20
10.1080/00029890.2007.11920428,Random-Turn Hex and Other Selection Games,,2013-03-20
10.4230/LIPIcs.ITCS.2020.21,Strategy-Stealing is Non-Constructive,,2017-03-20
10.3233/ICG-180055,A transferable neural network for Hex,,2016-03-20
10.1007/978-3-642-17928-0_1,Solving Hex: Beyond Humans,,2017-03-20
10.1016/B978-0-444-53766-9.00015-X,Theory of Combinatorial Games,,2015-03-20
10.1016/j.tcs.2020.04.007,NP-completeness of the game KingdominoTM,,2012-03-20
10.1080/08993400500222066,The machine intelligence Hex project,,2014-03-20
10.1016/j.dam.2003.11.011,TantrixTM rotation puzzles are intractable,,2011-03-20
10.1007/978-3-030-51825-7_31,Positional Games and QBF: The Corrective Encoding,,2012-03-20
10.1007/978-3-642-12993-3_9,Hex  Braids  the Crossing Rule  and XH-Search,,2014-03-20
10.3166/ria.23.183-202,Utilisation de la recherche arborescente Monte-Carlo au Hex,,2017-03-20
10.1007/978-0-387-35706-5_17,Solving 7x7 Hex: Virtual Connections and Game-State Reduction,,2011-03-20
10.1090/mbk/101,Game Theory  Alive,,2020-03-20
10.1007/978-3-540-30124-0_27,A Third-Order Bounded Arithmetic Theory for PSPACE,,2011-03-20
10.23943/princeton/9780691171920.003.0017,Multinational War is Hard,,2016-03-20
10.1016/J.DISC.2006.01.029,Hex and combinatorics,,2014-03-20
10.1017/CBO9780511807251.007,A puzzling Hex primer,,2012-03-20
10.1109/CCC.2008.35,Constraint Logic: A Uniform Framework for Modeling Computation as Games,,2019-03-20
10.1016/j.entcom.2012.10.004,Square++: Making a connection game win-lose complementary and playing-fair,,2018-03-20
10.1007/978-3-540-75538-8_10,Automatic Strategy Verification for Hex,,2014-03-20
10.14232/phd.1010,The Chooser-Picker games,,
10.4018/JITR.2017040101,A Model Driven Engineering Approach to Reduce Large Queueing Networks,,2011-03-20
10.1145/2851553.2858658,Predicting the System Performance by Combining Calibrated Performance Models of its Components: A Preliminary Study,,2018-03-20
10.1007/978-3-319-25226-1_6,Textual Information Localization and Retrieval in Document Images Based on Quadtree Decomposition,,2012-03-20
10.1109/IT4OD.2016.7479303,Applying the reduction approach to EQNM2L large models,,2011-03-20
10.4204/EPTCS.55.4,Refinement by interpretation in π-institutions,,2014-03-20
10.1007/11560647_22,Externalized and Internalized Notions of Behavioral Refinement,,2015-03-20
10.1007/978-3-642-28412-0_15,Algebraic signatures enriched by dependency structure,,2011-03-20
10.1007/978-3-642-03741-2_25,Views on Behaviour Protocols and Their Semantic Foundation,,2011-03-20
10.2168/LMCS-11(3:3)2015,Service-Oriented Logic Programming,,2012-03-20
10.1016/j.scico.2017.04.005,Specification refinements: Calculi  tools  and applications,,2016-03-20
10.1007/978-3-540-74107-7_5,Logics of Specification Languages,,2018-03-20
10.1007/978-3-540-27815-3_18,A Language for Configuring Multi-level Specifications,,2014-03-20
10.1360/02ye0122,A development calculus for specifications,,2019-03-20
10.1007/978-3-540-24626-8_5,Toward Component-Oriented Formal Software Development: An Algebraic Approach,,2020-03-20
10.1016/S0304-3975(01)00317-6,Logical systems for structured specifications,,2013-03-20
10.1007/978-3-642-22944-2_11,Refinement Trees: Calculi  Tools  and Applications,,2012-03-20
10.1007/b94458,Recent Trends in Algebraic Development Techniques,,2011-03-20
10.1007/978-3-540-40020-2_7,Type Checking Parametrised Programs and Specifications in ASL+FPC,,2012-03-20
10.1007/11780274_18,Proving Behavioral Refinements of COL-specifications,,2017-03-20
10.1007/978-3-319-15545-6_17,The Foundational Legacy of ASL,,2017-03-20
10.3217/jucs-012-08-1020,Behavioral Institutions and Refinements in Generalized Hidden Logics,,2012-03-20
10.1007/978-3-540-74107-7,Logics of Specification Languages,,2019-03-20
10.1016/S0890-5401(02)93115-9,Prelogical relations,,2019-03-20
10.3233/FI-2019-1804,Satisfiability Calculus: An Abstract Formulation of Semantic Proof Systems,,2014-03-20
10.1007/11548133_28,Property Preserving Redesign of Specifications,,2019-03-20
10.1016/S0304-3975(01)00333-4,Observational proofs by rewriting,,2015-03-20
10.1007/11780274_16,Horizontal Composability Revisited,,2018-03-20
10.1016/j.entcs.2004.04.035,A Logic with Temporal Glue for Mixed Specifications,,2015-03-20
10.1007/978-3-540-40020-2_21,Foundations of Heterogeneous Specification,,2018-03-20
10.1007/s001650200013,Institution Morphisms,,2019-03-20
10.1007/978-3-540-31959-7_10,A Simple Refinement Language for Casl,,2019-03-20
10.1007/3-540-36208-8_2,Generative Programming,,2011-03-20
10.1007/978-3-642-54830-7_29,A Relatively Complete Calculus for Structured Heterogeneous Specifications,,2011-03-20
10.1017/S0960129502003687,A Theory of Mixin Modules: Algebraic Laws and Reduction Semantics,,2011-03-20
10.1007/BF01178505,Observational implementation of algebraic specifications,,2012-03-20
10.1145/1512762.1512765,Institutions  property-aware programming and testing,,2019-03-20
10.1016/S1571-0661(05)80493-1,Composition and refinement of specifications and parameterised data types,,2012-03-20
10.1007/978-3-642-28412-0_8,Lambda Expressions in Casl Architectural Specifications,,2016-03-20
10.1016/j.tcs.2011.10.025,Generic constructions for behavioral specifications,,2016-03-20
10.1007/978-3-540-73094-1_4,Toward Specifications for Reconfigurable Component Systems,,2013-03-20
10.1017/S0960129507006536,Observational interpretation of Casl specifications,,2012-03-20
10.1016/j.tcs.2018.03.004,A logic for the stepwise development of reactive systems,,2020-03-20
10.1002/stvr.1598,Exhaustive test sets for algebraic specifications,,2019-03-20
10.1007/978-3-642-03429-9_18,Heterogeneous Logical Environments for Distributed Specifications,,2019-03-20
10.1007/978-3-540-68679-8_37,Observability Concepts in Abstract Data Type Specification  30 Years Later,,2011-03-20
10.1007/s11225-013-9498-z,A Coalgebraic Perspective on Logical Interpretations,,2012-03-20
10.1007/978-3-642-17336-3,Foundations of Algebraic Specification and Formal Software Development,,2018-03-20
10.1007/978-3-319-46750-4_24,Dynamic Logic with Binders and Its Application to the Development of Reactive Systems,,2020-03-20
10.1016/S0304-3975(01)00368-1,CASL: the Common Algebraic Specification Language,,2018-03-20
10.1006/inco.2002.3115,Prelogical Relations,,2020-03-20
10.1109/TSE.2003.1214327,General Test Result Checking with Log File Analysis,,2012-03-20
10.1007/3-540-45687-2_1,Global Development via Local Observational Construction Steps,,2013-03-20
10.1109/SEFM.2009.35,Refinement via Interpretation,,2014-03-20
10.1007/978-3-030-16722-6_5,A Hybrid Dynamic Logic for Event/Data-based Systems,,2018-03-20
10.1016/j.tcs.2005.09.065,A language for configuring multi-level specifications,,2014-03-20
10.1016/j.tcs.2008.11.020,HasCasl: Integrated higher-order specification and program development,,2013-03-20
10.1093/logcom/14.2.145,ÉTOILE-specifications: An Object-oriented Algebraic Formalism with Refinement,,2016-03-20
10.1145/2699721,On Transience and Recurrence in Irreducible Finite-State Stochastic Systems,,2011-03-20
10.1155/2009/791750,The Efficiency of Variance Reduction in Manufacturing and Service Systems: The Comparison of the Control Variates and Stratified Sampling,,2015-03-20
10.1109/HICSS.2007.24,A Multipurpose Code Coverage Tool for Java,,2016-03-20
10.1007/978-3-540-73094-1_12,History-Dependent Petri Nets,,2017-03-20
10.3233/FI-2013-783,Refinement of Synchronizable Places with Multi-workflow Nets,,2019-03-20
10.1007/978-3-642-38143-0,Transactions on Petri Nets and Other Models of Concurrency VII,,2017-03-20
10.1142/S0129054111008428,On Yen's Path Logic for Petri Nets,,2013-03-20
10.1007/978-3-642-21834-7_9,Refinement of Synchronizable Places with Multi-workflow Nets - Weak Termination Preserved!,,2020-03-20
10.1007/978-3-642-38143-0_4,Business Process Modeling Using Petri Nets,,2017-03-20
10.1007/978-3-319-96154-5_11,Some Interactions with Carl Adam Petri over Three Decades,,2016-03-20
10.1007/BF02679458,Deciding a class of path formulas for conflict-free petri nets,,2012-03-20
10.4204/EPTCS.54.2,Symbolic Model Checking with Isomorphism Exploiting Transition Relations,,2017-03-20
10.1145/1182613.1182617,On compositionality and its limitations,,2019-03-20
10.1145/511446.511470,Model checking cobweb protocols for verification of HTML frames behavior,,2016-03-20
10.1007/BF02280829,Wait-free linearization with an assertional proof,,2013-03-20
10.1007/BF00244290,On the role of automated theorem proving in the compile-time derivation of concurrency,,2011-03-20
10.1109/CISE.2010.5676835,Modeling Traverse Feature in Concurrent Software System with UML Statecharts,,2014-03-20
10.1145/2103776.2103782,A hoare calculus for the verification of synchronous languages,,2015-03-20
10.1016/S0304-3975(00)00421-7,Correctness of substring-preprocessing in Boyer-Moore's pattern matching algorithm,,2014-03-20
10.1109/CSSE.2008.844,Research on Modeling Traversing Features in Concurrent Software System,,2016-03-20
10.1109/JPROC.2018.2834926,Layering Assume-Guarantee Contracts for Hierarchical System Design,,2018-03-20
10.1007/s001650200023,On Verification of Parallel Message-Passing Processes,,2020-03-20
10.1109/MEMCOD.2012.6292302,Interactive verification of synchronous systems,,2012-03-20
10.1007/BF01872845,Semantics and verification of monitors and systems of monitors and processes,,2020-03-20
10.1007/s10992-011-9195-1,Fine-grained Concurrency with Separation Logic,,2014-03-20
10.22028/D291-26012,On the formal foundation of a verification approach for system-level concurrent programs,,2015-03-20
10.1007/BF01221097,Process algebra with guards: Combining Hoare logic with process algebra,,2011-03-20
10.2168/LMCS-8(1:26)2012,Static Analysis of Run-Time Errors in Embedded Real-Time Parallel C Programs,,2015-03-20
10.1007/978-3-319-21410-8_46,Novel Designs for Memory Checkers Using Semantics and Digital Sequential Circuits,,2018-03-20
10.1007/978-3-540-87873-5_15,A Verification Approach for System-Level Concurrent Programs,,2015-03-20
10.3233/978-1-58603-873-1-63,Formal Methods for Verification of Clinical Practice Guidelines,,2014-03-20
10.1007/3-540-36103-0_5,Unifying Theories of Parallel Programming,,2020-03-20
10.1049/ip-sen:20030131,Predicate transformers in the semantics of Circus,,2013-03-20
10.1007/978-3-319-08915-7_4,Using Models at Runtime to Address Assurance for Self-Adaptive Systems,,2017-03-20
10.1109/ICMSAO.2011.5775479,Formal methods and automation for system verification,,2018-03-20
10.1016/B978-0-12-373892-9.00010-4,Verification and Security Issues in On-Chip Communication Architecture Design,,2017-03-20
10.1109/Correctness.2018.00012,Towards Deductive Verification of Message-Passing Parallel Programs,,2019-03-20
10.1145/581339.581395,Assuring and evolving concurrent programs: annotations and policy,,2018-03-20
10.1007/978-3-030-03421-4_7,A Language-Independent Program Verification Framework,,2013-03-20
10.1109/MAHC.2003.1203057,The Early Search for Tractable Ways of Reasoning about Programs,,2014-03-20
10.1109/ICCASM.2010.5622348,Aspect-oriented modeling concurrent software system with UML statecharts,,2015-03-20
10.21236/ada422193,Information Assurance Science and Engineering Project,,2017-03-20
10.1007/BF01211458,The semantics of the combination of atomized statements and parallel choice,,2014-03-20
10.1109/CSD.1998.657551,Verifying fault tolerance of distributed algorithms formally-an example,,2012-03-20
10.5445/IR/1000045641,Deductive Verification of Concurrent Programs,,2015-03-20
10.1007/BF01211310,Axiomatic treatment of processes with shared variables revisited,,2019-03-20
10.1016/S1567-8326(02)00035-8,Syntax-directed model checking of sequential programs,,2012-03-20
10.1016/j.jss.2010.03.076,A model checker for WS-CDL,,2019-03-20
10.1007/BF01212527,Verifying a distributed list system: A case history,,2015-03-20
10.1007/3-540-45619-8_3,An Abductive Approach for Analysing Event-Based Requirements Specifications,,2017-03-20
10.1109/ACC.2016.7525009,Symbolic construction of GR(1) contracts for systems with full information,,2020-03-20
10.1007/978-3-319-40946-7_16,Implementation of Code Properties via Transducers,,2017-03-20
10.1007/978-3-540-30550-7_11,On Codes Defined by Bio-Operations,,2018-03-20
10.1016/j.tcs.2014.07.015,On the maximality of languages with combined types of code properties,,2016-03-20
10.1016/j.tcs.2006.08.022,Codes defined by multiple sets of trajectories,,2018-03-20
10.1007/978-3-540-30550-7_14,Semantic Shuffle on and Deletion Along Trajectories,,2018-03-20
10.1016/j.tcs.2006.08.010,Algebraic properties of substitution on trajectories,,2016-03-20
10.1007/978-3-319-19225-3_12,Transducer Descriptions of DNA Code Properties and Undecidability of Antimorphic Problems,,2020-03-20
10.1142/S0129054105003145,Operations on trajectories with applications to coding and bioinformatics,,2012-03-20
10.25596/jalc-2018-243,Symbolic Manipulation of Code Properties,,2019-03-20
10.1007/978-3-030-51466-2_25,Theoretical and Implementational Aspects of the Formal Language Server (LaSer),,2020-03-20
10.1016/j.ic.2017.09.004,Transducer Descriptions of DNA Code Properties and Undecidability of Antimorphic Problems,,2011-03-20
10.1007/978-3-030-51466-2,Beyond the Horizon of Computability: 16th Conference on Computability in Europe  CiE 2020  Fisciano  Italy  June 29–July 3  2020  Proceedings,,2015-03-20
10.1007/978-3-319-94631-3_5,Site-Directed Insertion: Decision Problems  Maximality and Minimality,,2013-03-20
10.1007/978-3-319-60252-3_4,Applications of Transducers in Independent Languages  Word Distances  Codes,,2014-03-20
10.1016/j.tcs.2014.07.016,Decidability of involution hypercodes,,2016-03-20
10.25596/jalc-2016-311,Embedding rationally independent languages into maximal ones,,2015-03-20
10.1142/S0129054112400059,Formal Descriptions of Code Properties: Decidability  Complexity  Implementation,,2018-03-20
10.1007/s11047-006-9022-8,Bond-free DNA language classes,,2013-03-20
10.1016/j.tcs.2006.10.007,On codes defined by bio-operations,,2013-03-20
10.4204/EPTCS.31.1,On Formal Descriptions of Code Properties: Invited Presentation at the Twelfth Annual Workshop on Descriptional Complexity of Formal Systems,,2017-03-20
10.1016/J.TCS.2019.04.019,Site-directed insertion: Language equations and decision problems,,2020-03-20
10.1007/978-3-319-77313-1_7,On the synchronization of planar automata,,2017-03-20
10.1007/978-3-540-70583-3_4,Finite Automata  Digraph Connectivity  and Regular Expression Size,,2017-03-20
10.4204/EPTCS.151.2,From Finite Automata to Regular Expressions and Back-A Summary on Descriptional Complexity,,2012-03-20
10.1142/S0129054115400110,From Finite Automata to Regular Expressions and Back - A Summary on Descriptional Complexity,,2017-03-20
10.25596/jalc-2005-407,Regular Expressions: New Results and Open Problems,,2011-03-20
10.1017/S0960129519000057,Decidability of regular language genus computation,,2015-03-20
10.1017/S0960129516000037,The genus of regular languages,,2011-03-20
10.1145/857076.857079,Requirements interaction management,,2012-03-20
10.1007/BF03037451,A functional style of programming with CSP-like communication mechanisms,,2015-03-20
10.1145/1453101.1453133,Requirements engineering: from craft to discipline,,2011-03-20
10.2478/ast-2018-0009,Genetic Diversity Among Strains of Pleurotus species (oyster mushroom) Using Morphometric Traits Under Varied Temperature and pH,,2012-03-20
10.1007/BF00871691,Towards a derivational style of distributed system design — An example,,2011-03-20
10.1007/978-3-540-39993-3_14,Iterative Synthesis of Control Guards Ensuring Invariance and Inevitability in Discrete-Decision Games,,2015-03-20
10.2478/msp-2019-0044,Effect of the electrodeposition potential on the magnetic properties of FeCoNi films,,2017-03-20
10.2478/trser-2018-0019,Morphology of Lernanthropinus trachuri (Brian  1903)(Copepoda  Siphonostomatoida  Lernanthropidae) from Bandirma Bay(Turkey),,2016-03-20
10.2478/s11756-006-0041-9,First faunistic records of chironomids (Diptera  Chironomidae) from Slovakia,,2016-03-20
10.1109/TSE.2014.2312954,Analyzing Critical Decision-Based Processes,,2012-03-20
10.1109/TSE.2014.2372785,The Oracle Problem in Software Testing: A Survey,,2018-03-20
10.2478/s11756-006-0129-2,Macrozoobenthos of two different catchment areas of the tatra mountain lakes with a special reference on the effects of acidification,,2012-03-20
10.4067/S0718-33052014000200010,La especificación formal en contexto: actual y futuro,,2017-03-20
10.1007/978-3-540-39800-4_2,From System Goals to Software Architecture,,2011-03-20
10.1007/BF00289237,An approach to automating the verification of compact parallel coordination programs. I,,2014-03-20
10.1007/978-3-540-70594-9_18,Synthesis of Optimal Control Policies for Some Infinite-State Transition Systems,,2019-03-20
10.2478/amb-2018-0011,Non-Invasive and Minimum Invasive Concepts in Prevention  Cariology and Endodontics – from Research and Science to Practice,,2016-03-20
10.1109/TSE.1987.233146,Algebraic Specifications as Solutions of Implementation Equations,,2018-03-20
10.1007/978-3-642-67485-3_9,Graphentheoretische Modelle und Methoden,,2014-03-20
10.1145/960126.806908,Make more of data types,,2016-03-20
10.1016/0304-3975(79)90059-8,Data types  abstract data types and their specification problem,,2020-03-20
10.1145/960128.806908,Make more of data types,,2012-03-20
10.1007/BF01070105,Application of the PL-1 language to the implementation of structured-memory algorithms,,2014-03-20
10.1145/800177.810069,Logical Structure Specification and data type definition,,2019-03-20
10.1016/j.dam.2010.08.030,Maximal pivots on graphs with an application to gene assembly,,2020-03-20
10.1007/978-3-540-88869-7_7,Reality-and-Desire in Ciliates,,2020-03-20
10.1007/978-3-540-92910-9_37,Computational Nature of Gene Assembly in Ciliates,,2011-03-20
10.1007/978-3-642-40193-0_13,The Algebra of Gene Assembly in Ciliates,,2020-03-20
10.1007/978-3-540-73208-2_14,Characterizing Reduction Graphs for Gene Assembly in Ciliates,,2012-03-20
10.2527/jas.2013-6796,Effect of intravenous or oral sodium chlorate administration on the fecal shedding of Escherichia coli in sheep.,,2011-03-20
10.1145/1150334.1150335,A loopless Gray code for rooted trees,,2017-03-20
10.1017/S0960129515000067,A Gray code for cross-bifix-free sets,,2013-03-20
10.1007/s00236-004-0139-x,Exhaustive generation of combinatorial objects by ECO,,2017-03-20
10.1007/s12095-014-0105-6,Prefix partitioned gray codes for particular cross-bifix-free sets,,2013-03-20
10.1080/02522667.2003.10699586,On the reconstruction of a Motzkin Tree from its code,,2018-03-20
10.1016/j.dam.2003.06.002,Gray code for derangements,,2014-03-20
10.1016/j.disc.2006.09.007,Gray code for permutations with a fixed number of cycles,,2017-03-20
10.1016/j.ipl.2009.03.025,More restrictive Gray codes for some classes of pattern avoiding permutations,,2019-03-20
10.1016/j.tcs.2007.12.002,Combinatorial Gray codes for classes of pattern avoiding permutations,,2015-03-20
10.1007/s00236-007-0053-0,A general exhaustive generation algorithm for Gray structures,,2011-03-20
10.1007/978-3-319-72453-9_25,Right-Justified Characterization for Generating Regular Pattern Avoiding Permutations,,2018-03-20
10.1145/974734.974735,Combining importance sampling and temporal difference control variates to simulate Markov Chains,,2018-03-20
10.1007/978-3-540-45187-7_29,Relating Fairness and Timing in Process Algebras,,2013-03-20
10.4204/EPTCS.64.3,Read Operators and their Expressiveness in Process Algebras,,
10.1016/j.entcs.2004.11.027,Fairness of Components in System Computations,,2020-03-20
10.1007/978-3-540-95891-8_20,Time and Fairness in a Process Algebra with Non-blocking Reading,,2015-03-20
10.1007/11817949_10,Checking a Mutex Algorithm in a Process Algebra with Fairness,,2015-03-20
10.1016/j.jlamp.2019.01.004,Keep it fair: Equivalence and composition,,2015-03-20
10.1016/j.entcs.2006.10.051,Fair Pi,,2017-03-20
10.1007/11560647_36,Using Fairness Constraints in Process-Algebraic Verification,,2011-03-20
10.4204/EPTCS.261.4,Keep it Fair: Equivalences,,2013-03-20
10.2168/LMCS-5(2:15)2009,Explicit fairness in testing semantics,,2013-03-20
10.1016/J.JLAMP.2019.100480,Ensuring liveness properties of distributed systems: Open problems,,2020-03-20
10.7551/mitpress/11469.003.0004,Fair Π ?,,2017-03-20
10.1016/J.ENTCS.2006.10.051,Fair Π,,2016-03-20
10.1016/j.tcs.2006.02.011,Fairness of components in system computations,,2020-03-20
10.1007/3-540-45694-5_31,Traces  Pomsets  Fairness and Full Abstraction for Communicating Processes,,2017-03-20
10.1145/3329125,Progress  Justness  and Fairness,,2014-03-20
10.4204/EPTCS.54.4,Automated Analysis of MUTEX Algorithms with FASE,,2012-03-20
10.1016/bs.pbr.2017.05.006,Fundamental computational constraints on the time course of perception and action.,,2012-03-20
10.1002/spe.1133,Language design and analyzability: a retrospective,,2012-03-20
10.1007/s00453-004-1081-6,"Solving Systems of Difference Constraints Incrementally with Bidirectional
Search",,2014-03-20
10.1007/BF01190506,Dynamic expression trees,,2017-03-20
10.1109/UV.2018.8642111,Program Procedure Pattern Mining Model for Legacy Code,,2020-03-20
10.1109/IGIC.2013.6659163,Digital game playing as storyboard interpretation,,2015-03-20
10.1016/j.cosrev.2018.04.001,Graph grammars according to the type of input and manipulated data: A survey,,2018-03-20
10.1109/WCNCW.2014.6934883,Cognitive packet network for QoS adaptation of asymmetric connections,,2014-03-20
10.1109/PRISMS.2013.6927181,Security for smart mobile networks: The NEMESYS approach,,2013-03-20
10.1007/978-3-319-01604-7_42,Mobile Network Anomaly Detection and Mitigation: The NEMESYS Approach,,2019-03-20
10.1109/PerComW.2014.6815227,Capacity based evacuation with dynamic exit signs,,2013-03-20
10.1109/TETC.2015.2446751,Errors and Power When Communicating With Spins,,2014-03-20
10.3390/fi6020203,Routing Diverse Evacuees with the Cognitive Packet Network Algorithm,,2014-03-20
10.1007/BF00268317,Probabilistic models of computer systems,,2016-03-20
10.3390/fi5020128,Energy-QoS Trade-Offs in Mobile Service Selection,,2019-03-20
10.3390/ELECTRONICS8060711,A Survey of Algorithms and Systems for Evacuating People in Confined Spaces,,2015-03-20
10.1007/978-3-319-01604-7_36,NEMESYS: Enhanced Network Security for Seamless Service Provisioning in the Smart Mobile Ecosystem,,2012-03-20
10.1109/GHTCE.2013.6767242,Security for smart mobile networks: The NEMESYS approach,,2018-03-20
10.1109/PerComW.2013.6529552,Graph and analytical models for emergency evacuation,,2016-03-20
10.1002/QRE.577,Approximate Reliability and Availability Models for High Availability and Fault‐tolerant Systems with Repair,,2017-03-20
10.1007/s42979-019-0033-9,Diffusion Approximation for an Open Queueing Network with Limited Number of Customers and Time-Dependent Service,,2014-03-20
10.3390/fi5010046,Graph and analytical models for emergency evacuation,,2014-03-20
10.1017/S0269964816000012,FESTSCHRIFT FOR EROL GELENBE'S 70TH BIRTHDAY,,2014-03-20
10.3390/fi5030336,Future Research on Cyber-Physical Emergency Management Systems,,2015-03-20
10.1109/PerComW.2014.6815220,Routing diverse evacuees with Cognitive Packets,,2016-03-20
10.1109/PerComW.2014.6815224,Near-optimal emergency evacuation with rescuer allocation,,2011-03-20
10.1504/IJAIP.2014.059585,Modelling and analysis of gene regulatory networks based on the G-network,,2013-03-20
10.1007/S42979-019-0008-X,Energy Packet Networks: an Annotated Bibliography,,2018-03-20
10.1007/BF00265766,The behaviour of a single queue in a general queueing network,,2020-03-20
10.1007/BF00975885,Multivariate point process models for response times in multiprogrammed systems,,2018-03-20
10.1109/JSAC.2016.2525518,Big Data for Autonomic Intercontinental Overlays,,2015-03-20
10.1109/TCBB.2011.153,Stochastic Gene Expression Modeling with Hill Function for Switch-Like Gene Responses,,2014-03-20
10.1051/ro:2005008,About the cumulative idle time in multiphase queues,,2011-03-20
10.1007/0-387-34167-6_11,Modeling Grids in (Near) Real Time,,2011-03-20
10.1109/PerComW.2013.6529555,Disruption tolerant communications for large scale emergency evacuation,,2012-03-20
10.1145/2160803.2160853,Search in non-homogenous random environments?,,2013-03-20
10.1109/NCCA.2012.16,Choosing a Local or Remote Cloud,,2011-03-20
10.1109/SASO.2011.40,Self-Aware Networks,,2011-03-20
10.1007/978-3-319-12148-2_1,Search in Big Networks and Big Data,,2012-03-20
10.1007/978-3-319-95189-8_12,Signaling attacks in mobile telephony,,2016-03-20
10.25560/9291,Performance modelling and optimisation of multi-hop networks,,2013-03-20
10.1007/978-3-319-22635-4_1,ISCIS and Erol Gelenbe's Contributions,,2018-03-20
10.1111/j.1834-7819.1983.tb01117.x,News from New Zealand,,2011-03-20
10.5220/0005019802060212,Signaling attacks in mobile telephony,,2011-03-20
10.1109/MNET.2014.6863127,Search in the universe of big networks and data,,2016-03-20
10.1109/MASCOTS.2016.62,Evacuee Flow Optimisation Using G-Network with Multiple Classes of Positive Customers,,2018-03-20
10.1109/TII.2014.2321740,Cognitive Packet Network for Bilateral Asymmetric Connections,,2018-03-20
10.1017/S0269964817000171,G-NETWORKS AND THEIR APPLICATIONS TO MACHINE LEARNING  ENERGY PACKET NETWORKS AND ROUTING: INTRODUCTION TO THE SPECIAL ISSUE,,2011-03-20
10.1109/TETC.2015.2389662,Modeling and Analysis of RRC-Based Signalling Storms in 3G Networks,,2016-03-20
10.1109/ACCESS.2015.2453341,Managing Crowds in Hazards With Dynamic Grouping,,2013-03-20
10.1093/comjnl/bxq092,A Framework for Energy-Aware Routing in Packet Networks,,2013-03-20
10.1186/s12864-020-06937-9,Analysis of two mechanisms of telomere maintenance based on the theory of g-Networks and stochastic automata networks,,2014-03-20
10.2478/V10179-012-0016-1,Optimising Server Energy Consumption and Response Time,,2020-03-20
10.1109/PerComW.2013.6529540,Quality of information and energy provisioning (invited paper),,2020-03-20
10.1017/S0269964816000024,EROL GELENBE: A CAREER IN MULTI-DISCIPLINARY PROBABILITY MODELS,,2017-03-20
10.1145/2642687.2642688,Storms in mobile networks,,2018-03-20
10.1017/S0269964819000305,INTRODUCTION TO THE SPECIAL ISSUE ON LEARNING  OPTIMIZATION  AND THEORY OF G-NETWORKS,,2014-03-20
10.4108/ICST.SIMUTOOLS.2012.247805,Energy packet networks: smart electricity storage to meet surges in demand,,2015-03-20
10.1145/ 1895419.1899474,An Interview with Erol Gelenbe,,2017-03-20
10.1109/WSC.1988.716182,Implementation parallelized queueing network simulations using FORTRAN and data abstraction,,2018-03-20
10.1007/978-3-030-00262-6_9,Key Software Engineering Paradigms and Modeling Methods,,2013-03-20
10.6688/JISE.2002.18.3.4,Why is 1+1=2 ? *,,2018-03-20
10.1007/978-3-030-29933-0_29,Preference Learning Based Decision Map Algebra: Specification and Implementation,,2012-03-20
10.1007/BF01720169,On specifying software quality,,2014-03-20
10.1007/BF02252958,A complete axiomatic semantics of spawning,,2015-03-20
10.1007/978-3-540-92859-1_15,A Grid-Aware Web Portal with Advanced Service Trading for Linear Algebra Calculations,,2020-03-20
10.1145/1985793.1985820,Inferring better contracts,,2013-03-20
10.1002/SPE.V35:6,Model variables: cleanly supporting abstraction in design by contract: Research Articles,,2013-03-20
10.1109/APSEC.2008.28,Emergent Properties in Reactive Systems,,2016-03-20
10.1007/978-3-030-02928-9_2,An Illustrated Guide to the Model Theory of Supertype Abstraction and Behavioral Subtyping,,2011-03-20
10.1007/BF00283330,A second order theory of data types,,2016-03-20
10.1007/11814771_50,Consistency and Completeness of Rewriting in the Calculus of Constructions,,2020-03-20
10.1109/TSE.2013.33,Equality to Equals and Unequals: A Revisit of the Equivalence and Nonequivalence Criteria in Class-Level Testing of Object-Oriented Software,,2020-03-20
10.1007/978-3-540-32033-3_13,A Sufficient Completeness Reasoning Tool for Partial Specifications,,2011-03-20
10.1145/1363102.1363105,Developing and debugging algebraic specifications for Java classes,,2020-03-20
10.1109/TSE.2012.63,Automated API Property Inference Techniques,,2014-03-20
10.1142/S1793351X09000641,A Hindsight on Formal Methods and Prospects of Semantic Computing in Software Engineering,,2014-03-20
10.1145/3368640.3368644,Instructed late binding,,2019-03-20
10.1007/3-540-45832-8_15,Abstraction and Control for Shapely Nested Graph Transformation,,2012-03-20
10.1016/j.entcs.2007.03.010,An End-To-End Approach to Distributed Policy Language Implementation: (Extended Abstract),,2011-03-20
10.1007/978-3-642-31365-3_20,Rewriting Induction + Linear Arithmetic = Decision Procedure,,2014-03-20
10.1007/3-540-45648-1_1,Theories  Implementations  and Transformations,,2020-03-20
10.1007/978-3-642-39038-8_2,Feature-Oriented Programming with Object Algebras,,2019-03-20
10.1201/9781439889503-22,Levels of Testing,,2012-03-20
10.4108/icst.pervasivehealth.2014.254949,Data-dependent controller synthesis to enable reliable and safe interoperability of medical devices,,2013-03-20
10.1007/978-3-540-78917-8_7,Testing Data Types Implementations from Algebraic Specifications,,2011-03-20
10.1007/978-3-540-31847-7_15,Relationships Between Equational and Inductive Data Types,,2016-03-20
10.3929/ETHZ-A-006154473,Applying Data Mining to Contract Inference,,2017-03-20
10.1007/978-3-642-13953-6_14,Moles: Tool-Assisted Environment Isolation with Closures,,2015-03-20
10.1145/1621607.1621612,The axioms strike back: testing with concepts and axioms in C++,,2017-03-20
10.14279/tuj.eceasst.10.155,Using Graph Transformation Systems to Specify and Verify Data Abstractions,,2011-03-20
10.1002/spe.649,Model variables: cleanly supporting abstraction in design by contract,,2017-03-20
10.1016/j.jal.2011.09.001,Sufficient completeness verification for conditional and constrained TRS,,2017-03-20
10.1007/BF01530799,Proving Ramsey's theorem by the cover set induction: A case and comparison study,,2012-03-20
10.1111/TGIS.12030,An Algebra for Spatiotemporal Data: From Observations to Events,,2018-03-20
10.1007/978-3-642-15057-9_9,Specifying Reusable Components,,2016-03-20
10.1007/978-3-030-47147-7_4,How to Specify It! - A Guide to Writing Properties of Pure Functions,,2011-03-20
10.1007/BF02943357,NDAUTO: An experimental software automation system,,2019-03-20
10.1145/1173706.1173740,Roadmap for enhanced languages and methods to aid verification,,2013-03-20
10.1007/978-3-319-78813-5_26,Defining and Detecting Environment Discrimination in Android Apps,,2012-03-20
10.1007/978-3-642-34407-7_8,Model Based Testing with Logical Properties versus State Machines,,2015-03-20
10.4018/jcini.2008040106,Deductive Semantics of RTPA,,2013-03-20
10.34096/ICS.I23.748,Tipo abstracto de datos «Biblioteca»,,2016-03-20
10.1007/3-540-15198-2_7,Three Approaches to Type Structure,,2019-03-20
10.1007/BF01786251,Algebraic specification and proof of a distributed recovery algorithm,,2011-03-20
10.1145/1294948.1294972,Efficient recovery of algebraic specifications for stateful components,,2019-03-20
10.1145/1507244.1507250,Simultaneous checking of completeness and ground confluence for algebraic specifications,,2015-03-20
10.1016/j.knosys.2008.11.001,Document based rational software development,,2015-03-20
10.1007/3-540-45788-7_1,Formal Methods in CafeOBJ,,2014-03-20
10.1109/ICSM.2006.31,Improving Effectiveness of Automated Software Testing in the Absence of Specifications,,2017-03-20
10.4230/LIPIcs.ECOOP.2018.5,A Characteristic Study of Parameterized Unit Tests in .NET Open Source Projects,,2019-03-20
10.1007/BF01752392,Algebraic specification of data types: A synthetic approach,,2015-03-20
10.1007/978-3-540-71351-7_49,Semantic-Based Service Trading: Application to Linear Algebra,,2014-03-20
10.1007/978-3-319-99933-3_9,Developing A New Language to Construct Algebraic Hierarchies for Event-B,,2012-03-20
10.1007/978-3-319-63946-8_28,Modeling Spatio-Temporal Variations for the Language-Driven Development of Simulated Environment Generators,,2015-03-20
10.4236/jsea.2009.22012,Refinement in Formal Proof of Equivalence in Morphisms over Strongly Connected Algebraic Automata,,2018-03-20
10.1007/s00165-007-0026-7,Specification and verification challenges for sequential object-oriented programs,,2013-03-20
10.1109/ICSE.2004.1317467,A tool for writing and debugging algebraic specifications,,2014-03-20
10.5121/ijpla.2018.8401,Pattern-Level Programming with Asteroid,,2017-03-20
10.1109/TASE.2016.13,Complete Contracts through Specification Drivers,,2019-03-20
10.1017/S0960129504004426,Definitions by rewriting in the Calculus of Constructions,,2012-03-20
10.1145/1882362.1882447,Future of developer testing: building quality in code,,2020-03-20
10.1051/JP4:2004114072,H-T phase diagram of λ-(BETS)2FeCl4 under pressure,,2013-03-20
10.1007/978-3-642-12029-9_17,Automatic Cross Validation of Multiple Specifications: A Case Study,,2018-03-20
10.1109/ISSRE.2005.12,Automatically identifying special and common unit tests for object-oriented programs,,2011-03-20
10.1007/978-3-319-11653-2_17,Modelling Adaptation Policies as Domain-Specific Constraints,,2019-03-20
10.1145/1869542.1869570,Teaching and training developer-testing techniques and tool support,,2012-03-20
10.1007/978-3-642-16242-8_42,Constructors  Sufficient Completeness  and Deadlock Freedom of Rewrite Theories,,2015-03-20
10.1145/2393216.2393304,A comparative study of two formal specification languages: Z-notation & B-method,,2012-03-20
10.1145/2505879.2505880,Random testing of purely functional abstract datatypes: guidelines for dealing with operation invariance,,2014-03-20
10.1016/j.compenvurbsys.2007.08.007,An algebra for multicriteria spatial modeling,,2015-03-20
10.2168/LMCS-4(3:8)2008,Consistency and Completeness of Rewriting in the Calculus of Constructions,,2018-03-20
10.2168/LMCS-10(1:1)2014,The role of logical interpretations in program development,,2017-03-20
10.1007/978-3-030-32505-3_20,Solving the Expression Problem in C++  á la LMS,,2013-03-20
10.1016/j.jsc.2010.01.008,Reducibility of operation symbols in term rewriting systems and its application to behavioral specifications,,2017-03-20
10.4236/jsea.2010.38093,Verifying Monoid and Group Morphisms over Strongly Connected Algebraic Automata,,2019-03-20
10.1007/978-3-540-24617-6_5,Mutually Enhancing Test Generation and Specification Inference,,2018-03-20
10.1145/1028664.1028785,Automatic identification of common and special object-oriented unit tests,,2018-03-20
10.1007/978-3-030-47147-7,Trends in Functional Programming: 20th International Symposium  TFP 2019  Vancouver  BC  Canada  June 12–14  2019  Revised Selected Papers,,2018-03-20
10.1007/0-387-21658-8_6,Levels of Testing,,2015-03-20
10.1007/s11225-009-9213-2,Meta-Argumentation Modelling I: Methodology and Techniques,,2018-03-20
10.1007/978-3-642-41707-8_15,Guided Algebraic Specification Mining for Failure Simplification,,2017-03-20
10.1007/BF01888215,A reification calculus for model-oriented software specification,,2016-03-20
10.1007/3-540-45672-4_13,An Informal Formal Method for Systematic JUnit Test Case Generation,,2019-03-20
10.1007/978-3-642-31057-7_2,Extensibility for the Masses - Practical Extensibility with Object Algebras,,2020-03-20
10.5381/jot.2011.10.1.a10,Testing with Axioms in C++ 2011,,2013-03-20
10.1109/SIBIRCON48586.2019.8958211,Seamless Object-Oriented Requirements,,2016-03-20
10.1080/13658810310001596067,Formal information modelling for standardisation in the spatial domain,,2012-03-20
10.1007/BF00999725,Comparing data type specifications via their normal forms,,2013-03-20
10.1007/11814771_14,A Sufficient Completeness Checker for Linear Order-Sorted Specifications Modulo Axioms,,2016-03-20
10.1080/17538947.2017.1305457,Semantic typing of linked geoprocessing workflows,,2013-03-20
10.1007/978-3-540-69839-5_12,A Mathematical Tool to Extend 2D Spatial Operations to Higher Dimensions,,2020-03-20
10.31274/RTD-20200803-315,An Object-Oriented Event Calculus,,2011-03-20
10.1007/978-3-319-99927-2_4,JMCTest: Automatically Testing Inter-Method Contracts in Java,,2018-03-20
10.1142/S1793351X10000833,On Formal and Cognitive Semantics for Semantic Computing,,2012-03-20
10.1007/BF01001954,Methodical specification of abstract data types via rewriting systems,,2012-03-20
10.1007/978-3-319-33783-8_3,Question-Based Spatial Computing - A Case Study,,2012-03-20
10.1007/978-3-319-99927-2,Testing Software and Systems: 30th IFIP WG 6.1 International Conference  ICTSS 2018  Cádiz  Spain  October 1-3  2018  Proceedings,,2018-03-20
10.1109/TSE.2007.70705,Discovering Documentation for Java Container Classes,,2012-03-20
10.1016/j.jss.2017.07.014,Temporal algebraic query of test sequences,,2020-03-20
10.15439/2019F61,Composition of Languages Embedded in Scala,,2014-03-20
10.15388/INFEDU.2014.12,Implementation of Abstract Data Types in Dynamic Sketches for Learning Geometry.,,2020-03-20
10.1145/505372.505375,Abstract computability and algebraic specification,,2015-03-20
10.1007/978-3-642-54624-2_14,Synthesis of Infinite-State Abstractions and Their Use for Software Validation,,2014-03-20
10.1007/BF01094341,Tools for specifying real-time systems,,2020-03-20
10.1007/978-3-642-34359-9_1,Researching Cognitive and Linguistic Aspects of Geographic Space: Las Navas Then and Now,,2013-03-20
10.14279/TUJ.ECEASST.10.155.155,Using Graph Transformation Systems to Specify and Verify Data Abstractions,,2018-03-20
10.1016/j.entcs.2005.11.029,Mathematical Service Trading Based on Equational Matching,,2014-03-20
10.1007/978-3-540-73414-7_8,TerraHS: Integration of Functional Programming and Spatial Databases for GIS Application Development,,2012-03-20
10.15388/infedu.2014.03,Implementation of Abstract Data Types in Dynamic Sketches for Learning Geometry,,2012-03-20
10.1007/b11832,ECOOP 2003 – Object-Oriented Programming,,2013-03-20
10.1007/978-1-4419-0516-1_6,Object-Oriented Programs,,2015-03-20
10.1007/978-3-540-45070-2_19,Discovering Algebraic Specifications from Java Classes,,2013-03-20
10.1023/A:1015365901501,Parallel Self-Index Integer Sorting,,2012-03-20
10.1016/j.entcs.2009.07.010,Harnessing a Refinement Theory to Compute Loop Functions,,2020-03-20
10.1016/j.jsc.2008.11.007,Reflexive transitive invariant relations: A basis for computing loop functions,,2013-03-20
10.1007/s11334-012-0189-0,Invariant relations  invariant functions  and loop functions,,2012-03-20
10.1007/978-1-4471-2350-7,Patterns  Programming and Everything,,2013-03-20
10.1109/SCAM.2007.26,Source Code Composition with the Reuseware Composition Framework,,2018-03-20
10.1109/SCAM.2007.33,Towards Path-Sensitive Points-to Analysis,,2013-03-20
10.1109/DEPCOS-RELCOMEX.2007.14,Dataflow Analysis of Distributed Programs Using Generalized Marked Nets,,2018-03-20
10.1007/978-3-540-78791-4_7,Control Flow Emulation on Tiled SIMD Architectures,,2017-03-20
10.1109/BEC.2010.5630890,Medical and context data acquisition system for patient home monitoring,,2011-03-20
10.7282/T3M9091Z,Improving software reliability using exception analysis of object oriented programs,,2013-03-20
10.1145/1453101.1453111,A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications,,2012-03-20
10.7282/T3CV4HWH,Practical analysis of framework-intensive applications,,2019-03-20
10.1007/978-3-540-71316-6_19,Small Witnesses for Abstract Interpretation-Based Proofs,,2013-03-20
10.1007/3-540-36579-6,Compiler Construction,,2019-03-20
10.1145/1993498.1993539,A security policy oracle: detecting security holes using multiple API implementations,,2013-03-20
10.1007/3-540-36579-6_10,Dimensions of Precision in Reference Analysis of Object-Oriented Programming Languages,,2019-03-20
10.1145/1787275.1787345,Scalable simulation of complex network routing policies,,2012-03-20
10.1109/CSMR.2003.1192431,JSPick-a server pages design recovery tool,,2019-03-20
10.1016/S1571-0661(04)80736-9,A Low-Level Analysis Library for Architecture Recovery,,2016-03-20
10.1145/1040291.1040292,Flow analysis for verifying properties of concurrent software systems,,2016-03-20
10.2197/IPSJDC.1.349,Java Obfuscation Approaches to Construct Tamper-Resistant Object-Oriented Programs,,2011-03-20
10.1145/1353482.1353488,AJANA: a general framework for source-code-level interprocedural dataflow analysis of AspectJ software,,2020-03-20
10.1109/scam.2007.26,Towards Path-Sensitive Points-to Analysis,,2013-03-20
10.1007/978-1-4471-2350-7_7,SSA-Based Simulated Execution,,2016-03-20
10.1007/978-3-319-12736-1_21,Syntax-Directed Divide-and-Conquer Data-Flow Analysis,,2016-03-20
10.1109/TSE.2003.1237170,Searching for Points-To Analysis,,2018-03-20
10.1016/j.scico.2009.09.009,Mathematics for reasoning about loop functions,,2013-03-20
10.1007/s41019-017-0054-0,Reordering Transaction Execution to Boost High-Frequency Trading Applications,,2016-03-20
10.1145/1075382.1075385,Interprocedural parallelization analysis in SUIF,,2016-03-20
10.1109/ISSREW.2014.75,A Memory Model Based on Three-Valued Matrix for Static Defect Detection,,2013-03-20
10.1109/SCAM.2008.26,Fast and Precise Points-to Analysis,,2020-03-20
10.1145/1863523.1863539,Hoopl: a modular  reusable library for dataflow analysis and transformation,,2019-03-20
10.1007/978-3-319-63564-4_14,Reordering Transaction Execution to Boost High Frequency Trading Applications,,2020-03-20
10.1145/2088456.1863539,Hoopl: a modular  reusable library for dataflow analysis and transformation,,2018-03-20
10.1016/S1477-8424(03)00012-5,Bidirectional data flow analysis for type inferencing,,2013-03-20
10.1109/SCAM.2010.10,Parallel Reachability and Escape Analyses,,2013-03-20
10.2172/1078549,Compositional Dataflow Via Abstract Transition Systems,,2020-03-20
10.1016/j.jss.2015.01.037,On applying machine learning techniques for design pattern detection,,2011-03-20
10.1023/A:1023896821228,Decidability of the Analysis Problem for Dataflow Models of Programs,,2011-03-20
10.1007/3-540-58485-4_50,Finding Fixpoints in Finite Function Spaces Using Neddedness Analysis and Chaotic Iteration,,2011-03-20
10.1016/j.infsof.2009.04.012,Fast and precise points-to analysis,,2015-03-20
10.1016/j.scico.2010.03.006,Application of static analyses for state-space reduction to the microcontroller binary code,,2011-03-20
10.1007/978-3-540-75414-5_1,On Generalizations of Weighted Finite Automata and Graphics Applications,,2015-03-20
10.25596/jalc-2007-525,On Computability and some Decision Problems of Parametric Weighted Finite Automata,,2018-03-20
10.3217/jucs-016-05-0586,On Succinct Representations of Textured Surfaces by Weighted Finite Automata,,2019-03-20
10.1145/1363686.1363747,IELR(1): practical LR(1) parser tables for non-LR(1) grammars with conflict resolution,,2019-03-20
10.1007/BF01407953,Parallel construction of SLR (1) and LALR (1) parsers,,2017-03-20
10.4230/LIPIcs.MFCS.2016.79,Symbolic Lookaheads for Bottom-up Parsing,,2014-03-20
10.1016/j.scico.2009.08.001,The IELR(1) algorithm for generating minimal LR(1) parser tables for non-LR(1) grammars with conflict resolution,,2014-03-20
10.1016/j.cola.2020.100944,Morbig: A Static parser for POSIX shell,,2014-03-20
10.1007/978-3-642-28869-2_20,Validating LR(1) Parsers,,2019-03-20
10.1145/1992896.1992907,Full LR(1) parser generator Hyacc and study on the performance of LR(1) algorithms,,2017-03-20
10.4230/LIPIcs.ECOOP.2020.6,Don't Panic! Better  Fewer  Syntax Errors for LR Parsers,,2018-03-20
10.1007/s10515-010-0063-y,Efficient monitoring of parametric context-free patterns,,2016-03-20
10.1007/978-3-319-09704-6_8,Complexity of Extended vs. Classic LR Parsers,,2018-03-20
10.1109/ASWEC.2005.36,Parsing and semantic modelling for software engineering applications,,2013-03-20
10.1145/3064848,A Simple  Possibly Correct LR Parser for C11,,2017-03-20
10.1145/3276604.3276615,Morbig: a static parser for POSIX shell,,2018-03-20
10.1007/11663881_15,On Multivalued Dependencies in Fixed and Undetermined Universes,,2018-03-20
10.2200/S00435ED1V01Y201207DTM029,Incomplete Data and Data Dependencies in Relational Databases,,2020-03-20
10.1145/1376916.1376938,The chase revisited,,2017-03-20
10.2200/S00805ED1V01Y201709DTM046,Answering Queries Using Views,,2011-03-20
10.1016/j.jcss.2011.12.012,Characterisations of multivalued dependency implication over undetermined universes,,2015-03-20
10.1007/s10472-005-9015-9,Functional and multivalued dependencies in nested databases generated by record and list constructor,,2014-03-20
10.2200/S00884ED2V01Y201811DTM054,Answering Queries Using Views  Second Edition,,2013-03-20
10.1007/11733836_44,Containment of Conjunctive Queries over Conceptual Schemata,,2016-03-20
10.1007/978-3-540-75563-0_18,Querying Incomplete Data with Logic Programs: ER Strikes Back,,2015-03-20
10.1017/S1471068410000104,Querying incomplete data over extended ER schemata,,2018-03-20
10.4230/DFU.Vol5.10452.1,The Chase Procedure and its Applications in Data Exchange,,2014-03-20
10.1007/11780885_16,Parsing with Lexicalized Probabilistic Recursive Transition Networks,,2020-03-20
10.1007/978-3-642-00982-2_35,Towards a Taxonomy for ECFG and RRPG Parsing,,2015-03-20
10.1007/978-3-642-38613-8_25,Program Equivalence by Circular Reasoning,,2013-03-20
10.1007/978-3-642-02658-4_44,Equivalence Checking of Static Affine Programs Using Widening to Handle Recurrences,,2011-03-20
10.1145/3060143,Verifying Procedural Programs via Constrained Rewriting Induction,,2014-03-20
10.1007/978-3-642-13754-9_8,Inference Rules for Proving the Equivalence of Recursive Procedures,,2014-03-20
10.1007/S10703-018-0322-2,Abstract semantic diffing of evolving concurrent programs,,2015-03-20
10.25596/jalc-2007-455,Weighted Muller Tree Automata and Weighted Logics,,2020-03-20
10.25596/jalc-2003-219,Formal Tree Series,,2019-03-20
10.1201/9780203009642.ch40,DNA Tree Structures,,2017-03-20
10.1007/3-540-45007-6_34,Alphabetic Pushdown Tree Transducers,,2013-03-20
10.3233/ica-200627,Multi-behaviors coordination controller design with enzymatic numerical P systems for robots,,2012-03-20
10.1007/978-3-642-54239-8_18,Enzymatic Numerical P Systems Using Elementary Arithmetic Operations,,2012-03-20
10.1007/978-3-642-54239-8_4,Some Open Problems about Catalytic  Numerical  and Spiking Neural P Systems - (Extended Abstract),,2011-03-20
10.1007/978-981-15-8760-3_17,Generating the n-tuples of Natural Numbers by Enzymatic Numerical P System,,2020-03-20
10.1109/AUTEEE48671.2019.9033221,Towards An Automated Wheelchair Control Strategy Based On Enzymatic Numerical P-Systems (ENPS),,2016-03-20
10.1007/s11432-017-9103-5,Universal enzymatic numerical P systems with small number of enzymatic variables,,2016-03-20
10.3390/molecules24071235,A Resolution-Free Parallel Algorithm for Image Edge Detection within the Framework of Enzymatic Numerical P Systems,,2014-03-20
10.1016/j.tcs.2017.12.016,The computational power of enzymatic numerical P systems working in the sequential mode,,2018-03-20
10.1016/J.ECOLMODEL.2017.06.030,Evolutionary response of a native butterfly to concurrent plant invasions: Simulation of population dynamics,,2017-03-20
10.1109/SYNASC.2017.00014,Numerical P Systems (After Ten Years),,2015-03-20
10.1016/J.TCS.2019.03.021,Numerical P systems with Boolean condition,,2017-03-20
10.1016/j.ins.2020.07.033,Design and analysis of a decision intelligent system based on enzymatic numerical technology,,2013-03-20
10.1016/j.tcs.2017.02.026,Numerical P systems with production thresholds,,2016-03-20
10.1007/978-981-15-8760-3,Recent Advances in Data Science: Third International Conference on Data Science  Medicine  and Bioinformatics  IDMB 2019  Nanning  China  June 22–24  2019  Revised Selected Papers,,2014-03-20
10.3233/FI-2016-1372,On String Languages Generated by Sequential Numerical P Systems,,2017-03-20
10.1109/ACCESS.2020.2973613,Stochastic Numerical P Systems With Application in Data Clustering Problems,,2012-03-20
10.15837/IJCCC.2016.2.2262,Numerical P Systems with Thresholds,,2015-03-20
10.1016/j.biosystems.2019.104067,Multi-ENPS simulator support tool with automatic file inter-conversion and multi-membrane execution,,2011-03-20
10.1007/s10586-017-1331-4,Assembly sequence planning method based on particle swarm algorithm,,2018-03-20
10.1142/S0129054113500202,Research Frontiers of membrane Computing: Open Problems and Research Topics,,2018-03-20
10.3233/ICA-150503,Design and implementation of membrane controllers for trajectory tracking of nonholonomic wheeled mobile robots,,2012-03-20
10.1080/00207160.2012.748897,Universality of Enzymatic Numerical P systems,,
10.1109/ACCESS.2018.2876364,A Parallel Bioinspired Framework for Numerical Calculations Using Enzymatic P System With an Enzymatic Environment,,2012-03-20
10.1016/j.biosystems.2020.104186,GPUPeP: Parallel Enzymatic Numerical P System simulator with a Python-based interface,,2013-03-20
10.1007/978-3-319-55989-6_6,Robot Control with Membrane Systems,,2018-03-20
10.15837/IJCCC.2016.1.2160,Membrane Computing and Economics: A General View,,2018-03-20
10.1016/j.tcs.2016.06.004,Numerical P systems with migrating variables,,2018-03-20
10.1007/BFb0028255,Shallow Interdistnace Selection and Interdistance Enumeration,,2014-03-20
10.1007/BFb0035760,A Singly-Expenential Stratification Scheme for Real Semi-Algebraic Varieties and Its Applications,,2018-03-20
10.1145/98524.98597,Selecting distances in the plane,,2013-03-20
10.1016/0304-3975(91)90261-Y,A Singly Exponential Stratification Scheme for Real Semi-Algebraic Varieties and its Applications,,2018-03-20
10.1016/S0747-7171(08)80065-X,An Algorithm for Generalized Point Location and its Applications,,2020-03-20
10.1007/3-540-44450-5_3,Irregularities of Distribution  Derandomization  and Complexity Theory,,2018-03-20
10.1007/BF02090398,Selection and sorting in totally monotone arrays,,2015-03-20
10.1007/BF01187037,Selecting distances in the plane,,2020-03-20
10.1016/j.jlap.2005.10.006,Verifying an infinite systolic algorithm using third-order equational methods,,2012-03-20
10.1016/j.amc.2009.04.058,Unifying computers and dynamical systems using the theory of synchronous concurrent algorithms,,2018-03-20
10.1016/S0022-0000(03)00048-5,Proof theory of higher-order equations: conservativity  normal forms and term rewriting,,2019-03-20
10.1007/978-3-319-90530-3_2,Lower Bounds for Unrestricted Boolean Circuits: Open Problems,,2012-03-20
10.1007/978-3-642-30870-3_44,A 5n - o(n) Lower Bound on the Circuit Size over U 2 of a Linear Boolean Function,,2011-03-20
10.1007/s00224-014-9590-4,New Lower Bounds on Circuit Size of Multi-output Functions,,2015-03-20
10.1016/S0020-0255(02)00303-1,Regular biosequence pattern matching with cellular automata,,2018-03-20
10.1007/978-0-387-30440-3_54,Cellular Automata and Language Theory,,2011-03-20
10.1016/j.artmed.2012.11.001,A growth model of human papillomavirus type 16 designed from cellular automata and agent-based models,,2013-03-20
10.4230/LIPIcs.CSL.2012.274,Descriptive complexity for pictures languages,,2014-03-20
10.1007/978-3-030-48516-0,Developments in Language Theory: 24th International Conference  DLT 2020  Tampa  FL  USA  May 11–15  2020  Proceedings,,2013-03-20
10.1007/978-0-387-30440-3_4,Additive Cellular Automata,,2013-03-20
10.1002/3527602968.CH4,Computation in Cellular Automata: A Selected Review,,2013-03-20
10.14569/IJACSA.2011.020517,Generating PNS for Secret Key Cryptography Using Cellular Automaton,,2012-03-20
10.1007/978-3-030-20981-0_2,Complexity-Theoretic Aspects of Expanding Cellular Automata,,2017-03-20
10.1016/j.jcss.2016.01.005,A logical approach to locality in pictures languages,,2013-03-20
10.1016/S0304-3975(03)00083-5,Simulation of one-dimensional cellular automata by uniquely parallel parsable grammars,,2013-03-20
10.1007/978-3-030-48516-0_19,Sublinear-Time Language Recognition and Decision by One-Dimensional Cellular Automata,,2011-03-20
10.1007/s11047-020-09814-2,Complexity-theoretic aspects of expanding cellular automata,,2011-03-20
10.1007/BF00365332,A local area network architecture for communication in distributed real-time systems,,2012-03-20
10.1109/ICDCSW.2003.1203534,Simulated performance evaluation of a hybrid MAC-layer protocol for dependable multi-channel distributed systems with hard real-time requirements,,2013-03-20
10.1109/TPDS.2002.1158259,Energy-Efficient Routing in the Broadcast Communication Model,,2014-03-20
10.1007/S42979-019-0013-0,An Experiment with Denotational Semantics,,2014-03-20
10.13140/RG.2.2.31272.42249,An experiment with denotational semantics,,2012-03-20
10.1007/BF01211604,Predicate transformers as power operations,,2012-03-20
10.13140/RG.2.2.23355.67366,An Experiment with a User Manual of a Programming Language Based on a Denotational Semantics,,2013-03-20
10.1515/trser-2015-0083,A History of Pebbles and Silt – Fluvial Sediment Transport  Hydropower and Technical Expertise at the Austrian Danube and its Tributaries,,2011-03-20
10.1007/s001650050056,Sharp Retrenchment  Modulated Refinement and Simulation,,2011-03-20
10.13140/RG.2.2.27499.39201/3,A Denotational Engineering of Programming Languages,,2018-03-20
10.1007/3-540-45648-1_3,Controlling Control Systems: An Application of Evolving Retrenchment,,2018-03-20
10.1016/j.scico.2007.04.002,Engineering and theoretical underpinnings of retrenchment,,2011-03-20
10.1504/IJWET.2008.016106,NBDT: an efficient P2P indexing scheme for web service discovery,,2017-03-20
10.1109/BICAME45512.2018.1570506382,Towards Optimal Search: An Efficient Search Algorithm for Arabic Text using Secant Method,,2020-03-20
10.1080/00207160802132871,Two-way chaining for non-uniform distributions,,2013-03-20
10.1007/11764298_13,Faster Adaptive Set Intersections for Text Searching,,2014-03-20
10.1145/1877766.1877767,Efficient set intersection for inverted indexing,,2019-03-20
10.1007/978-3-540-39658-1_31,Improved Bounds for Finger Search on a RAM,,2019-03-20
10.1016/j.jss.2008.11.845,Dynamic Web Service discovery architecture based on a novel peer based overlay network,,2018-03-20
10.1145/3299869.3300075,Efficiently Searching In-Memory Sorted Arrays: Revenge of the Interpolation Search?,,2020-03-20
10.1145/2911451.2911518,Leveraging Context-Free Grammar for Efficient Inverted Index Compression,,2014-03-20
10.1109/ELEKTRO.2018.8398256,Common frequency extraction for bandpass sampling based frequency de-hopper,,2017-03-20
10.1109/ICCSIT.2009.5234756,Research on Web service discovery based on domain ontology,,2016-03-20
10.1007/BF02238298,Robust variations of interpolation search: An asymptotic analysis,,2013-03-20
10.1108/02644400310467180,Fast search algorithms for look‐up tables,,2018-03-20
10.5120/IJCA2016912584,Equipartition Search a New Algorithm for Searching,,2020-03-20
10.1007/11786986_34,Dynamic Interpolation Search Revisited,,2017-03-20
10.1049/EL.2019.1965,Optimal search algorithm in a big database using interpolation–extrapolation method,,2014-03-20
10.1561/1900000028,Modern B-Tree Techniques,,2016-03-20
10.1515/eko-2016-0012,Assessing of landscape potential for water management regarding its surface water (using the example of the micro-region Minčol),,2011-03-20
10.1016/j.ic.2019.104465,Dynamic Interpolation Search revisited,,2013-03-20
10.1145/3332466.3374542,Non-blocking interpolation search trees with doubly-logarithmic running time,,2011-03-20
10.1109/ICYCS.2008.465,Multiple-Choice Allocations with Fixed Densities,,2011-03-20
10.1109/ICDIM.2007.369235,Does Knowledge about Search Domain Lead to More Efficient Search in Information Retrieval Applications?,,2017-03-20
10.1109/ICDE.2011.5767956,Modern B-tree techniques,,2018-03-20
10.1007/s00453-012-9636-4,Improved Bounds for Finger Search on a RAM,,2020-03-20
10.1080/15570274.2018.1535048,Africa’s Muslim Authorities and Ahmadis: Curbed Freedoms  Circumvented Legalities,,2015-03-20
10.1007/978-3-540-27798-9_20,Regular Expressions for Languages over Infinite Alphabets,,2018-03-20
10.1016/S0304-3975(03)00246-9,An algebraic characterization of deterministic regular languages over infinite alphabets,,2015-03-20
10.23919/FMCAD.2018.8603013,The ELDARICA Horn Solver,,2018-03-20
10.1109/SYNASC49474.2019.00010,The Science  Art  and Magic of Constrained Horn Clauses,,2020-03-20
10.1109/FMCAD.2016.7886663,Optimizing horn solvers for network repair,,2015-03-20
10.34727/2020/isbn.978-3-85448-042-6_13,Thread-modular Counter Abstraction for Parameterized Program Safety,,2013-03-20
10.1007/978-3-319-57288-8_18,Systematic Predicate Abstraction Using Variable Roles,,2020-03-20
10.1007/s10703-017-0293-8,Automating regression verification of pointer programs by predicate abstraction,,2020-03-20
10.23919/FMCAD.2018.8603023,Bit-Vector Interpolation and Quantifier Elimination by Lazy Reduction,,2011-03-20
10.1007/978-3-030-53291-8_7,Global Guidance for Local Generalization in Model Checking,,2013-03-20
10.1007/978-3-540-75520-3_19,Radix Sorting with No Extra Space,,2015-03-20
10.1016/j.tcs.2014.06.012,Selection from read-only memory with limited workspace,,2012-03-20
10.1137/1.9781611975062.2,Quicksort Is Optimal For Many Equal Keys,,
10.1007/978-3-540-24698-5_20,Space-E.cient Algorithms for Computing the Convex Hull of a Simple Polygonal Line in Linear Time,,2014-03-20
10.1007/11534273_14,Line-Segment Intersection Made In-Place,,2018-03-20
10.1016/J.COMGEO.2006.03.006,Space-efficient geometric divide-and-conquer algorithms,,2015-03-20
10.1142/S0218654308001129,Genus and Dimension of Digital Images and their Time- and Space-Efficient Computation,,2018-03-20
10.1016/j.comgeo.2005.11.005,Space-efficient algorithms for computing the convex hull of a simple polygonal line in linear time,,2018-03-20
10.1145/3168005,Selection and Sorting in the “Restore” Model,,2016-03-20
10.1007/s00224-006-1311-1,Sorting Stably  in Place  with O(n log n) Comparisons and O(n) Moves,,2016-03-20
10.1016/j.comgeo.2006.09.001,Line-segment intersection made in-place,,2014-03-20
10.1007/978-3-642-00826-9_12,Constant-Working-Space Algorithms for Image Processing,,2016-03-20
10.1007/978-3-642-38768-5_15,Selection from Read-Only Memory with Limited Workspace,,2012-03-20
10.1007/978-3-540-89639-5_64,Linear Time Constant-Working Space Algorithm for Computing the Genus of a Digital Object,,2017-03-20
10.1016/j.jlap.2007.07.001,Algebraic models of behaviour and correctness of SMT and CMT processors,,2016-03-20
10.1017/S0960129507006548,Maurer computers for pipelined instruction processing,,2016-03-20
10.1515/pac-2013-1213,Electrolytes for vanadium redox flow batteries,,2019-03-20
10.1007/978-3-319-98355-4_16,Small Complexity Gaps for Comparison-Based Sorting,,2017-03-20
10.1145/1877766.1877768,Engineering basic algorithms of an in-memory text search engine,,2015-03-20
10.1109/IPDPSW.2010.5470886,Efficient lists intersection by CPU-GPU cooperative computing,,2016-03-20
10.1109/ITNG.2008.225,A Search-Free Intersection Algorithm,,2020-03-20
10.4230/LIPIcs.ISAAC.2016.51,On the Optimality of Tape Merge of Two Lists with Similar Size,,2018-03-20
10.14778/3303753.3303755,Document Reordering for Faster Intersection,,2020-03-20
10.1007/11780441_4,Adaptive Searching in Succinctly Encoded Binary Relations and Tree-Structured Documents,,2017-03-20
10.1007/978-3-319-62127-2_41,Improved Average Complexity for Comparison-Based Sorting,,2016-03-20
10.1145/1498698.1564507,An experimental investigation of set intersection algorithms for text searching,,2015-03-20
10.1016/J.TCS.2019.06.032,Improved average complexity for comparison-based sorting,,2014-03-20
10.1137/1.9781611972870.7,Intersection in Integer Inverted Indices,,2011-03-20
10.1145/2063576.2063656,Workload-aware indexing for keyword search in social networks,,2017-03-20
10.5445/IR/1000015824,Algorithms and data structures for in-memory text search engines,,2019-03-20
10.1145/1328911.1328915,Alternation and redundancy analysis of the intersection problem,,2016-03-20
10.1016/j.ipl.2006.09.001,The Ford-Johnson algorithm still unbeaten for less than 47 elements,,2019-03-20
10.14778/1687627.1687722,Improving the Performance of List Intersection,,2019-03-20
10.1007/s00453-020-00690-x,On the Optimality of Tape Merge of Two Lists with Similar Size,,2016-03-20
10.5485/TMCS.2013.0340,A didactic analysis of merge sort,,2018-03-20
10.1214/AOAP/1075828056,A general limit theorem for recursive algorithms and combinatorial structures,,2016-03-20
10.1007/978-3-0348-8211-8_18,On the Number of Heaps and the Cost of Heap Construction,,2011-03-20
10.1145/3127585,Exact and Asymptotic Solutions of a Divide-and-Conquer Recurrence Dividing at Half,,2012-03-20
10.1016/S0304-3975(98)00181-9,Presorting algorithms: An average-case point of view,,2015-03-20
10.4230/lipics.aofa.2018.36,Average Cost of QuickXsort with Pivot Sampling,,2011-03-20
10.1007/s00453-019-00634-0,QuickXsort: A Fast Sorting Scheme in Theory and Practice,,2020-03-20
10.1145/1064546.1180619,Approximating interval coloring and max-coloring in chordal graphs,,2014-03-20
10.1016/S0304-3975(97)00270-3,Algebraic Processing of Programming Languages,,2016-03-20
10.1017/cbo9781139519793.015,Chromatic Scheduling,,2019-03-20
10.1007/978-1-4613-0303-9_16,The Graph Coloring Problem: A Bibliographic Survey,,2013-03-20
10.2478/v10015-012-0017-5,VERBAL WARFARE IN THE POLISH MEDIA: AN ANALYSIS OF CONCEPTUAL METAPHORS IN POLITICAL DISCOURSE,,2011-03-20
10.1007/978-3-642-33078-0_38,Comparing Checkpoint and Rollback Recovery Schemes in a Cluster System,,2016-03-20
10.1117/12.2013927,Study of distributed computing system based on web services,,2020-03-20
10.1016/j.eswa.2009.05.096,Downward communications enhancement using a robust broadcasting mechanism,,2013-03-20
10.1016/J.DAM.2008.07.006,On the complexity of constructing Golomb Rulers,,2015-03-20
10.1109/IPDPS.2005.215,Extended Golomb rulers as the new recovery schemes in distributed dependable computing,,2019-03-20
10.1007/11912873_24,A Robust Web-Based Approach for Broadcasting Downward Messages in a Large-Scaled Company,,2011-03-20
10.2478/ers-2017-0015,Measuring Efficiency of Websites of Agrotouristic Farms from Poland and Slovakia,,2019-03-20
10.1007/978-3-642-03409-1_28,Equivalence of Deterministic Nested Word to Word Transducers,,2011-03-20
10.1007/BF01178385,The extended equivalence problem for a class of non-real-time deterministic pushdown automata,,2011-03-20
10.1145/1516507.1516511,Term transformers: A new approach to state,,2014-03-20
10.1007/s00165-006-0001-8,Angelic nondeterminism in the unifying theories of programming,,2011-03-20
10.1007/978-0-387-21798-7_2,Enforcing behavior with contracts,,2018-03-20
10.1016/j.entcs.2005.04.024,Angelic Nondeterminism and Unifying Theories of Programming,,2011-03-20
10.1007/978-3-642-16690-7_2,UTP and Sustainability,,2019-03-20
10.1145/1391956.1391961,Dually nondeterministic functions,,2015-03-20
10.1145/3371070,Deductive verification with ghost monitors,,2019-03-20
10.1037/0000114-016,Where are we now  and where do we go from here?,,2019-03-20
10.4236/AM.2016.75039,Fuzzy Semantics of Contract Language,,2014-03-20
10.1016/j.scico.2013.07.002,Refinement algebra with dual operator,,2012-03-20
10.1007/978-3-642-25032-3_10,Algebra of Monotonic Boolean Transformers,,2011-03-20
10.1007/11828563_25,On Two Dually Nondeterministic Refinement Algebras,,2018-03-20
10.1007/BF01211214,DUALITY: A simple formalism for the analysis of UNITY,,2018-03-20
10.1016/j.scico.2006.01.008,Terms with unbounded demonic and angelic nondeterminacy,,2019-03-20
10.1016/j.scico.2013.08.008,Algebras for correctness of sequential computations,,2020-03-20
10.1109/APSEC.2003.1254370,Implementing angelic nondeterminism,,2013-03-20
10.2168/LMCS-12(3:6)2016,Synthesis of Strategies Using the Hoare Logic of Angelic and Demonic Nondeterminism,,2017-03-20
10.4016/28688.01,My title,,2015-03-20
10.1137/1.9781611974324.9,On Terminal Nodes and the Degree Profile of Preferential Dynamic Attachment Circuits,,2020-03-20
10.1007/s11009-019-09726-4,On Nodes of Small Degrees and Degree Profile in Preferential Dynamic Attachment Circuits,,2014-03-20
10.1007/S11749-012-0292-4,A generalized Pólya urn and limit laws for the number of outputs in a family of random circuits,,2015-03-20
10.1017/S0963548312000260,Longest Path Distance in Random Circuits,,2016-03-20
10.1007/978-0-387-35973-1_239,Data Compression,,2016-03-20
10.1016/j.ipm.2003.08.008,Pattern matching in Huffman encoded texts,,2011-03-20
10.1007/978-3-540-89097-3_6,Improved Variable-to-Fixed Length Codes,,2020-03-20
10.1016/j.ipm.2019.102168,Identifying breakthrough scientific papers,,2016-03-20
10.2197/ipsjjip.20.238,Improving Parse Trees for Efficient Variable-to-Fixed Length Codes,,
10.1016/j.ipm.2011.01.005,On improving Tunstall codes,,2016-03-20
10.1016/B978-012443895-8/50018-0,Data Compression in Information Retrieval Systems,,2011-03-20
10.1007/BF01185434,Complexity aspects of guessing prefix codes,,2011-03-20
10.1007/978-3-642-45321-2_10,A New Approach to Alphabet Extension for Improving Static Compression Schemes,,2013-03-20
10.1093/comjnl/46.5.487,Parallel Huffman Decoding with Applications to JPEG Files,,2019-03-20
10.1016/j.tcs.2008.12.037,On the simplification of infinite morphic words,,2011-03-20
10.4171/JEMS/294,Cobham's theorem for substitutions,,2020-03-20
10.1051/ita/2013035,Decidability of the HD0L ultimate periodicity problem,,2019-03-20
10.1016/J.LAA.2016.02.030,Asymptotic properties of free monoid morphisms,,2019-03-20
10.1051/ita:2007060,Look and Say Fibonacci,,2011-03-20
10.1007/978-3-319-09698-8_21,Eigenvalues and Transduction of Morphic Sequences,,2020-03-20
10.1137/S0097539701400154,A Powerful LL(k) Covering Transformation,,2011-03-20
10.3115/1218955.1219024,Probabilistic Parsing Strategies,,2015-03-20
10.1007/978-3-642-37051-9_13,On LR Parsing with Selective Delays,,2020-03-20
10.1145/1147954.1147959,Probabilistic parsing strategies,,2017-03-20
10.1007/s10703-007-0040-7,The word problem for visibly pushdown languages described by grammars,,2020-03-20
10.1007/978-3-642-35016-0_7,A Research Survey on Large XML Data: Streaming  Selectivity Estimation and Parallelism,,2013-03-20
10.1109/ITA.2014.6804286,Zeta functions of finite-type-Dyck shifts are N-algebraic,,2013-03-20
10.4230/LIPIcs.FSTTCS.2008.1761,Leaf languages and string compression,,2018-03-20
10.1007/11564089_24,Algorithms for Learning Regular Expressions,,2012-03-20
10.1007/978-3-540-30195-0_26,Extracting Minimum Length Document Type Definitions Is NP-Hard,,2020-03-20
10.1142/S0129054111008040,The Inclusion Problem of Context-Free Languages: Some Tractable Cases,,2020-03-20
10.1353/cjl.2010.0009,Redefining what matters: Syntactic explanation in American linguistics  1955–1970,,2015-03-20
10.1007/978-3-642-00596-1_31,Interprocedural Dataflow Analysis over Weight Domains with Infinite Descending Chains,,2011-03-20
10.1145/1368088.1368169,Asam odx,,2017-03-20
10.1007/978-3-642-02737-6_8,The Inclusion Problem of Context-Free Languages: Some Tractable Cases,,2011-03-20
10.1007/978-3-642-27694-1_20,A Declarative Specification of Tree-Based Symbolic Arithmetic Computations,,2013-03-20
10.1109/IIAI-AAI.2012.52,Translating XML Documents Through Dyck-Typed Regular Translation Elementary Formal Systems,,2012-03-20
10.1109/IIAI-AAI.2013.82,Development of Flexible User Need's Investigation System Based on XML Conversions,,2015-03-20
10.1007/11537311_7,Deterministic Automata on Unranked Trees,,2012-03-20
10.1007/11901914_10,On the Membership Problem for Visibly Pushdown Languages,,2018-03-20
10.1007/978-3-662-48395-4_7,Learning Tree Languages,,2020-03-20
10.4018/978-1-60566-262-6.CH001,Rights Expression Languages,,2014-03-20
10.1007/978-3-540-27812-2_23,Structural Equivalence of Regularly Extended E0L Grammars: An Automata Theoretic Proof,,2017-03-20
10.1109/CISIS.2012.18,Performance and Scalability of XML Query Processing,,2018-03-20
10.1007/11823230_22,Static Analysis for Java Servlets and JSP,,2016-03-20
10.1007/11924661_22,XML Validation for Context-Free Grammars,,2019-03-20
10.1007/978-3-030-48516-0_17,On the Balancedness of Tree-to-Word Transducers,,2016-03-20
10.1007/978-3-662-53132-7_32,Monoid-Based Approach to the Inclusion Problem on Superdeterministic Pushdown Automata,,2016-03-20
10.1007/978-3-540-70844-5_13,A Translation from the HTML DTD into a Regular Hedge Grammar,,2014-03-20
10.1007/978-3-642-28472-4_2,Foundations of XML Based on Logic and Automata: A Snapshot,,2020-03-20
10.1016/j.ic.2008.12.008,Algorithms for learning regular expressions from positive data,,2018-03-20
10.1145/1863597.1863602,Hereditarily finite representations of natural numbers and self-delimiting codes,,2013-03-20
10.1007/978-1-4471-5514-0_4,Pushdown Automata and Parsing,,2019-03-20
10.1016/j.ic.2011.01.009,Leaf languages and string compression,,2018-03-20
10.5109/21044,LEARNABILITY OF XML DOCUMENT TRANSFORMATION RULES USING TYPED EFSS,,2014-03-20
10.1145/1142473.1142597,Programming for XML,,2013-03-20
10.1007/11779148_11,Context-Free Grammars and XML Languages,,2014-03-20
10.1016/j.tcs.2015.09.027,Sofic-Dyck shifts,,2018-03-20
10.1016/j.ipl.2018.01.002,Balancedness of MSO transductions in polynomial time,,2016-03-20
10.1007/11672142_34,Regularity Problems for Visibly Pushdown Languages,,2016-03-20
10.1007/978-3-540-71389-0_25,Complexity Results on Balanced Context-Free Languages,,2013-03-20
10.1007/978-3-540-74591-4_14,Verified Decision Procedures on Context-Free Grammars,,2016-03-20
10.1007/978-1-4471-5514-0,Formal Languages and Compilation,,2017-03-20
10.1023/A:1008150101419,Optimal Real-Time Scheduling with Minimal Rejections and Minimal Finishing Time,,2017-03-20
10.1007/978-3-540-24592-6_10,Scheduling AND/OR-Networks on Identical Parallel Machines,,2015-03-20
10.3182/20110828-6-IT-1002.01661,A Compositional Approach to Bisimulation of Arenas of Finite State Machines,,2012-03-20
10.1016/j.tcs.2011.08.037,Hardness of preorder checking for basic formalisms,,2017-03-20
10.1007/978-3-642-17511-4_8,Hardness of Preorder Checking for Basic Formalisms,,2012-03-20
10.1007/s00236-018-0320-2,Equivalence checking of Petri net models of programs using static and dynamic cut-points,,2019-03-20
10.1007/s00453-018-0512-8,New Tools and Connections for Exponential-Time Approximation,,2014-03-20
10.1007/978-3-662-48054-0_49,Maximum Minimal Vertex Cover Parameterized by Vertex Cover,,2016-03-20
10.1137/1.9781611974331.CH79,Lower bounds for the parameterized complexity of Minimum Fill-In and other completion problems,,2014-03-20
10.1145/3381426,Lower Bounds for the Parameterized Complexity of Minimum Fill-in and Other Completion Problems,,2020-03-20
10.1007/3-540-45417-9_57,Parallelization of Finite Element Package by MPI Library,,2013-03-20
10.1007/978-3-319-99725-4_14,Verifying Properties of Differentiable Programs,,2020-03-20
10.1515/pielxxiw-2017-0005,Physical activity among nursing students,,2015-03-20
10.1515/jmbm-2013-0024,Gradient models in molecular biophysics: progress  challenges  opportunities,,2016-03-20
10.2478/AFEPUC-2018-0008,Effect of Applied Health-Oriented Exercises in Physical and Sport Education on Musculoskeletal System of Female Students,,2013-03-20
10.1016/j.future.2013.10.020,Architectural investigation of matrix data layout on multicore processors,,2019-03-20
10.1002/(SICI)1098-2418(199908)15:1%3C25::AID-RSA2%3E3.0.CO;2-R,On the internal path length of d-dimensional quad trees,,2019-03-20
10.1007/BF02679615,An analytic approach to the height of binary search trees,,2011-03-20
10.1002/rsa.20659,Dependence and phase changes in random m-ary search trees,,2016-03-20
10.1145/765568.765572,An analytic approach to the height of binary search trees II,,2011-03-20
10.1214/EJP.V16-889,On the Asymptotic Internal Path Length and the Asymptotic Wiener Index of Random Split Trees,,2017-03-20
10.1239/aap/1300198517,A weakly 1-stable distribution for the number of random records and cuttings in split trees,,2012-03-20
10.1214/16-PS272,Fringe trees  Crump-Mode-Jagers branching processes and $m$-ary search trees,,2015-03-20
10.1214/EJP.V17-1723,Novel characteristics of split trees by use of renewal theory,,2018-03-20
10.1007/978-3-319-04921-2,Language and Automata Theory and Applications,,2012-03-20
10.1007/978-3-319-04921-2_18,Shift-Reduce Parsers for Transition Networks,,2012-03-20
10.2478/botcro-2018-0001,Chromosome numbers and karyotype features of Phlomis olivieri Benth. (Lamiaceae) from Iran,,2012-03-20
10.1007/s00236-017-0308-3,Fast deterministic parsers for transition networks,,2017-03-20
10.1145/1017074.1017097,Checking potential validity of XML documents,,2018-03-20
10.1063/1.3038998,Maximizing the entropy rate of state‐dependent M/M/1 queues,,2019-03-20
10.14736/kyb-2018-5-1091,Reconstructibility of Boolean control networks with time delays in states,,2018-03-20
10.1007/s00236-019-00364-4,All congruences below stability-preserving fair testing or CFFD,,2019-03-20
10.1007/s10009-017-0481-2,Fair testing and stubborn sets,,2012-03-20
10.1109/ACSD.2016.15,The Congruences below Fair Testing with Initial Stability,,2019-03-20
10.1515/pteridines-2014-0002,Correlation between neopterin levels in premature infants with sepsis and the signs and symptoms of neonatal sepsis using the Töllner sepsis score,,2019-03-20
10.2478/v10096-010-0020-5,Geology of the Čoka structure in northern Banat (Central Paratethys  Serbia),,2012-03-20
10.2478/V10109-010-0038-3,The influence of high tone power therapy on the peripheral microcirculation in the lower limbs,,2012-03-20
10.1590/1806-9061-2017-0685,The Effect of High Temperature on Viability  Proliferation  Apoptosis and Anti-oxidant Status of Chicken Embryonic Fibroblast Cells,,2020-03-20
10.1515/oszn-2017-0003,Evaluation of the degree of healthiness of the pedunculate oak (Quercus robur L.) acorns in the Włoszczowa– Jędrzejów Nature Park and its neighbouring area,,2017-03-20
10.2478/v10046-010-0005-x,History of mycobiota research of Latvia: Chronology till the middle of the 20th century,,2013-03-20
10.1057/9781137317582_14,Mirroring Samson the Martyr: Reflections of Jewish-Christian Relations in the North French Hebrew Illuminated Miscellany,,2016-03-20
10.1515/ABCSB-2016-0013,Evidence for the Dual Role of Floral Secretory Cells in Bulbophyllum,,2015-03-20
10.1007/978-3-319-98047-8_7,Same Same But Different: Interoperability of Software Product Line Variants,,2020-03-20
10.1007/978-3-662-45234-9_21,Delta-Trait Programming of Software Product Lines,,2011-03-20
10.1002/smr.2208,A delta‐oriented approach to support the safe reuse of black‐box code rewriters,,2020-03-20
10.1007/s00236-017-0293-6,A core calculus for dynamic delta-oriented programming,,2017-03-20
10.1007/978-3-662-54494-5_25,A Unified and Formal Programming Model for Deltas and Traits,,2014-03-20
10.1007/978-3-319-61467-0_1,Abstraction Refinement for the Analysis of Software Product Lines,,2020-03-20
10.1145/2648511.2648536,Delta-oriented multi software product lines,,2015-03-20
10.1016/j.scico.2018.05.007,On checking delta-oriented product lines of statecharts,,2017-03-20
10.1016/j.scico.2013.07.016,Implementing type-safe software product lines using parametric traits,,2019-03-20
10.1145/2647908.2655961,Teaching variability engineering to cognitive psychologists,,2019-03-20
10.1007/978-3-319-46508-1_8,Proof Repositories for Compositional Verification of Evolving Software Systems - Managing Change When Proving Software Correct,,2019-03-20
10.1007/978-3-319-33693-0_4,On Type Checking Delta-Oriented Product Lines,,2019-03-20
10.1145/2500828.2500841,Refinement-based testing of delta-oriented product lines,,2014-03-20
10.1007/978-3-030-34968-4_32,Summary of: On Checking Delta-Oriented Software Product Lines of Statecharts,,2012-03-20
10.1007/978-3-319-47169-3_45,Refactoring Delta-Oriented Product Lines to Enforce Guidelines for Efficient Type-Checking,,2014-03-20
10.1007/978-3-319-68972-2_5,A Formal Model for Multi SPLs,,2017-03-20
10.1016/j.jss.2016.07.035,Xtraitj: Traits for the Java platform,,2017-03-20
10.1007/978-3-662-45234-9_22,Deployment Variability in Delta-Oriented Models,,2018-03-20
10.1007/s10270-016-0516-2,A novel model-based testing approach for software product lines,,2018-03-20
10.1145/2580950,A Classification and Survey of Analysis Strategies for Software Product Lines,,2015-03-20
10.1007/978-3-319-90421-4_11,A Delta-Oriented Approach to Support the Safe Reuse of Black-Box Code Rewriters,,2018-03-20
10.1145/2637365.2517213,A comparison of product-based  feature-based  and family-based type checking,,2011-03-20
10.1007/978-3-319-66845-1_8,An Extension of the ABS Toolchain with a Mechanism for Type Checking SPLs,,2018-03-20
10.1007/978-3-030-30446-1_9,Compositional Feature-Oriented Systems,,2015-03-20
10.1007/978-3-030-61362-4_5,On Slicing Software Product Line Signatures,,2013-03-20
10.1145/2648511.2648514,Integrated management of variability in space and time in software families,,2012-03-20
10.1109/ASE.2015.16,Scaling Size and Parameter Spaces in Variability-Aware Software Performance Models (T),,2018-03-20
10.1007/978-3-319-47169-3_35,Introduction to the Track on Variability Modeling for Scalable Software Evolution,,2013-03-20
10.4204/EPTCS.206.4,Incremental Consistency Checking in Delta-oriented UML-Models for Automation Systems,,2016-03-20
10.20381/RUOR-24425,Union Models: Support of Variability Modeling and Efficient Reasoning About Model Families Over Space and Time,,2017-03-20
10.1016/J.SCICO.2018.11.005,A formal model for Multi Software Product Lines,,2012-03-20
10.1145/2517208.2517213,A comparison of product-based  feature-based  and family-based type checking,,2019-03-20
10.4204/EPTCS.206.2,Refactoring Delta-Oriented Product Lines to achieve Monotonicity,,2014-03-20
10.1016/j.jlamp.2015.06.007,Variability encoding: From compile-time to load-time variability,,2016-03-20
10.1007/s10270-015-0495-8,From software extensions to product lines of dataflow programs,,2014-03-20
10.1145/3001867.3001871,Implementing delta-oriented SPLs using PEoPL: an example scenario and case study,,2012-03-20
10.1007/s10009-019-00534-2,Automatic refactoring of delta-oriented SPLs to remove-free form and replace-free form,,2011-03-20
10.1145/2647508.2647512,DeltaJ 1.5: delta-oriented programming for Java 1.5,,2013-03-20
10.1360/jos171517,Complexities of Renaming for Formulas in MAX(1) and MARG(1),,2014-03-20
10.1109/ICMWI.2010.5648194,Reasoning by symmetry in non-monotonic inference,,2016-03-20
10.1007/3-540-36494-3_42,The Complexity of Resolution with Generalized Symmetry Rules,,2013-03-20
10.1007/978-3-319-21810-6,Bridging Constraint Satisfaction and Boolean Satisfiability,,2019-03-20
10.2178/JSL/1203350790,The complexity of resolution refinements,,2014-03-20
10.5591/978-1-57735-516-8/IJCAI11-428,Lower Bounds for Width-Restricted Clause Learning on Formulas of Small Width,,2012-03-20
10.4230/LIPIcs.CCC.2020.38,Sum of squares bounds for the ordering principle,,2019-03-20
10.1007/978-3-540-24605-3_9,Local Search on SAT-encoded Colouring Problems,,2014-03-20
10.1109/ICTAI.2004.33,Another SAT to CSP conversion,,2011-03-20
10.1145/2815493.2815497,On the interplay between proof complexity and SAT solving,,2014-03-20
10.1007/978-3-030-51825-7_29,Short Q-Resolution Proofs with Homomorphisms,,2015-03-20
10.1109/ICTAI.2013.78,Symmetry-Based Pruning in Itemset Mining,,2012-03-20
10.1016/S0304-3975(03)00395-5,Mutilated chessboard problem is exponentially hard for resolution,,2012-03-20
10.1007/BF00881844,Tractability through symmetries in propositional calculus,,2018-03-20
10.1016/j.apal.2011.11.001,The limits of tractability in Resolution-based propositional proof systems,,2016-03-20
10.1007/s10472-005-0422-8,The complexity of homomorphisms and renamings for minimal unsatisfiable formulas,,2015-03-20
10.1016/J.PROCS.2019.01.052,Breaking Symmetries in Association Rules,,2019-03-20
10.1007/11499107_21,Input Distance and Lower Bounds for Propositional Resolution Proof Length,,2014-03-20
10.1007/978-3-642-40537-2,Automated Reasoning with Analytic Tableaux and Related Methods,,2017-03-20
10.1007/978-3-642-40537-2_4,Dealing with Symmetries in Modal Tableaux,,2019-03-20
10.1145/509907.509974,An exponential separation between regular and general resolution,,2011-03-20
10.1613/jair.4260,Improved Separations of Regular Resolution from Clause Learning Proof Systems,,2016-03-20
10.3233/AIC-2009-0445,Structure-based satisfiability checkingAnalyzing and harnessing the potential,,2016-03-20
10.1007/978-3-319-13770-4_12,Dynamic Symmetry Breaking in Itemset Mining,,2015-03-20
10.1017/BSL.2015.31,Symmetries in Modal Logics,,2015-03-20
10.1007/s10601-020-09313-2,On certifying the UNSAT result of dynamic symmetry-handling-based SAT solvers,,2012-03-20
10.1145/1838552.1838556,Optimality of size-degree tradeoffs for polynomial calculus,,2015-03-20
10.5220/0006252502990307,Enhancing Pigeon-Hole based Encoding of Boolean Cardinality Constraints,,2018-03-20
10.1007/s00224-004-1192-0,The Complexity of Resolution with Generalized Symmetry Rules,,2014-03-20
10.1137/S0097539700366735,Space Complexity in Propositional Calculus,,2020-03-20
10.1007/s11390-005-0758-x,Complexities of Homomorphism and Isomorphism for Definite Logic Programs,,2017-03-20
10.1016/S1574-6526(06)80014-3,Symmetry in Constraint Programming,,2018-03-20
10.1007/978-3-319-25840-9_10,A Generic and Declarative Method for Symmetry Breaking in Itemset Mining,,2014-03-20
10.1016/S1574-6526(07)03002-7,Satisfiability Solvers,,2020-03-20
10.1007/s10601-014-9163-9,Symmetries  almost symmetries  and lazy clause generation,,2012-03-20
10.1007/978-3-642-14186-7_4,Lower Bounds for Width-Restricted Clause Learning on Small Width Formulas,,2013-03-20
10.1007/11564751_27,2-Way vs. d-Way Branching for CSP,,2018-03-20
10.1016/j.apal.2005.05.002,Separation results for the size of constant-depth propositional proofs,,2013-03-20
10.1016/j.dam.2006.10.004,The state of SAT,,2013-03-20
10.4230/LIPIcs.CCC.2019.6,Resolution and the binary encoding of combinatorial principles,,2013-03-20
10.1016/s1574-6526(07)x0300-6,Handbook of Knowledge Representation,,2015-03-20
10.3233/978-1-61499-098-7-432,Symmetries in Itemset Mining,,2018-03-20
10.1016/s1574-6526(06)x8001-x,Handbook of Constraint Programming,,2019-03-20
10.1007/BF00244489,Short proofs of the pigeonhole formulas based on the connection method,,2012-03-20
10.1109/LICS.2003.1210053,The complexity of resolution refinements,,2019-03-20
10.4086/toc.2006.v002a004,Rank Bounds and Integrality Gaps for Cutting Planes Procedures,,2018-03-20
10.1007/978-3-319-90530-3_24,On the Decision Trees with Symmetries,,2013-03-20
10.1613/jair.1555,Generalizing Boolean Satisfiability II: Theory,,2015-03-20
10.1613/jair.1637,Breaking instance-independent symmetries in exact graph coloring,,2011-03-20
10.1007/978-1-4020-2653-9,Automated Model Building,,2019-03-20
10.1007/S10472-004-9420-5,Testing Satisfiability of CNF Formulas by Computing a Stable Set of Points,,2014-03-20
10.1613/jair.1353,Generalizing Boolean Satisfiability I: Background and Survey of Existing Work,,2011-03-20
10.1007/S10472-004-9422-3,The Complexity of Homomorphisms and Renamings for Minimal Unsatisfiable Formulas,,2018-03-20
10.3233/AIC-2010-0488,Max-SAT formalisms with hard and soft constraints,,2018-03-20
10.1007/s10601-008-9060-1,SymChaff: exploiting symmetry in a structure-aware satisfiability solver,,2018-03-20
10.1007/978-3-642-22438-6_18,Exploiting Symmetry in SMT Problems,,2020-03-20
10.1016/j.ipl.2018.07.009,Short Proofs for Some Symmetric Quantified Boolean Formulas,,2011-03-20
10.3233/978-1-61499-419-0-51,Symmetry-Driven Decision Diagrams for Knowledge Compilation,,2016-03-20
10.1109/ICEICE.2011.5778288,SAT for heterogeneous FPGA technology mapping,,2017-03-20
10.1016/S0166-218X(02)00411-0,Homomorphisms of conjunctive normal forms,,2014-03-20
10.4204/EPTCS.113.6,Symmetries in Modal Logics,,2016-03-20
10.1007/978-3-540-45193-8_1,Ten Challenges Redux: Recent Progress in Propositional Reasoning and Search,,2020-03-20
10.1007/978-3-540-74970-7_16,Local Symmetry Breaking During Search in CSPs,,2011-03-20
10.1007/978-3-319-66263-3_6,Symmetric Explanation Learning: Effective Dynamic Symmetry Handling for SAT,,2012-03-20
10.1007/11889205_48,Reasoning by Dominance in Not-Equals Binary Constraint Networks,,2011-03-20
10.1007/11591191_40,Pool Resolution and Its Relation to Regular Resolution and DPLL with Clause Learning,,2014-03-20
10.1109/DATE.2004.1268868,Breaking instance-independent symmetries in exact graph coloring,,2011-03-20
10.1007/978-3-642-45221-5_8,Dynamic and Static Symmetry Breaking in Answer Set Programming,,2016-03-20
10.5220/0005078200860096,Symmetry Breaking in Itemset Mining,,2019-03-20
10.1613/jair.1410,Towards Understanding and Harnessing the Potential of Clause Learning,,2017-03-20
10.1007/978-3-030-24258-9_3,Proof Complexity of QBF Symmetry Recomputation,,2019-03-20
10.1109/CCC.2004.36,The Complexity of Treelike Systems over -Local Formulae,,2014-03-20
10.1007/978-3-642-02777-2_14,An Exponential Lower Bound for Width-Restricted Clause Learning,,2020-03-20
10.29007/C9F6,From SAT to Maximum Independent Set: A New Approach to Characterize Tractable Classes,,2017-03-20
10.7551/mitpress/3133.003.0007,On Linear Resolution,,2018-03-20
10.1109/TCAD.2003.816218,Solving difficult instances of Boolean satisfiability in the presence of symmetry,,2011-03-20
10.1371/journal.pone.0194334,A complete logical approach to resolve the evolution and dynamics of mitochondrial genome in bilaterians,,2017-03-20
10.3724/SP.J.1001.2011.03957,Some Properties of Pigeon-Hole Formulas: Some Properties of Pigeon-Hole Formulas,,2016-03-20
10.1109/CCC.2004.1313798,The complexity of treelike systems over /spl lambda/-local formulae,,2016-03-20
10.1007/11814948_7,Preliminary Report on Input Cover Number as a Metric for Propositional Resolution Proofs,,2019-03-20
10.1007/978-3-540-89439-1_1,Symmetry Breaking for Maximum Satisfiability,,2013-03-20
10.1101/098764,A Complete Logical Approach to Resolve the Evolution and Dynamics of Mitochondrial Genome in Bilaterians,,2014-03-20
10.1007/978-3-319-21810-6_7,SAT encodings of a classical problem: a case study,,2013-03-20
10.1109/ICTAI.2010.55,Enhancing Clause Learning by Symmetry in SAT Solvers,,2013-03-20
10.1007/978-3-540-79719-7_26,Regular and General Resolution: An Improved Separation,,2017-03-20
10.1007/s10472-016-9528-4,Local and global symmetry breaking in itemset mining,,2011-03-20
10.1109/SFCS.2003.1238206,Rank bounds and integrality gaps for cutting planes procedures,,2014-03-20
10.1137/090772897,A Near-Optimal Separation of Regular and General Resolution,,2016-03-20
10.1142/S0218213019500118,Enhancing Static Symmetry Breaking with Dynamic Symmetry Handling in CDCL SAT Solvers,,2013-03-20
10.1023/A:1021231610627,Resolution Proofs of Matching Principles,,2015-03-20
10.1007/s10472-005-0420-x,Testing satisfiability of CNF formulas by computing a stable set of points,,2014-03-20
10.1007/978-3-642-31612-8_5,An Improved Separation of Regular Resolution from Pool Resolution and Clause Learning,,2012-03-20
10.1007/3-540-45620-1_15,Testing Satisfiability of CNF Formulas by Computing a Stable Set of Points,,2016-03-20
10.3233/AIC-2011-0495,Symmetry-breaking answer set solving,,2015-03-20
10.3933/APPLRHEOL-13-259,Influence of cluster formation: viscosity of concentrated emulsions,,2015-03-20
10.1016/j.scico.2017.03.009,A study of mutable checkpointing and related algorithms,,2017-03-20
10.4230/LIPIcs.OPODIS.2015.22,Byzantine Agreement with Median Validity,,2018-03-20
10.4230/LIPIcs.DISC.2017.35,Tight Bounds for Connectivity and Set Agreement in Byzantine Synchronous Systems,,2015-03-20
10.4204/EPTCS.160.6,States in Process Calculi,,2019-03-20
10.1109/SRDS.2007.20,Model Checking of Consensus Algorit,,2012-03-20
10.1109/ICECCS.2010.22,Engineering Dynamic Adaptation for Achieving Cost-Efficient Resilience in Software-Intensive Embedded Systems,,2019-03-20
10.1007/978-3-642-32940-1_21,Intensional and Extensional Characterisation of Global Progress in the π-Calculus,,2012-03-20
10.1145/3293611.3331612,Asymptotically Optimal Validated Asynchronous Byzantine Agreement,,2011-03-20
10.14279/DEPOSITONCE-3974,Modeling and Verification of Distributed Algorithms in Theorem Proving Environments,,2012-03-20
10.1007/978-3-642-33475-7_15,Formal Verification of Distributed Algorithms - From Pseudo Code to Checked Proofs,,2013-03-20
10.1007/978-3-030-40186-3_13,SoK: A Consensus Taxonomy in the Blockchain Era,,2012-03-20
10.1109/TASE.2008.8,On Automatic Verification of Self-Stabilizing Population Protocols,,2013-03-20
10.1007/s11704-008-0040-9,On automatic verification of self-stabilizing population protocols,,2020-03-20
10.1007/978-3-030-40186-3,Topics in Cryptology – CT-RSA 2020: The Cryptographers’ Track at the RSA Conference 2020  San Francisco  CA  USA  February 24–28  2020  Proceedings,,2019-03-20
10.1145/3382734.3405707,Dumbo-MVBA: Optimal Multi-Valued Validated Asynchronous Byzantine Agreement  Revisited,,2015-03-20
10.6100/IR716364,Formal modeling and verification of distributed failure detectors,,2014-03-20
10.5075/EPFL-THESIS-3980,A formal approach to fault tolerant distributed consensus,,2017-03-20
10.1109/ICECCS.2010.38,Model Checking Round-Based Distributed Algorithms,,2012-03-20
10.5075/EPFL-THESIS-5975,Abstractions for Solving Consensus and Related Problems with Byzantine Faults,,2016-03-20
10.1016/j.ic.2003.09.002,The complexity of planarity testing,,2019-03-20
10.1007/978-3-642-20877-5_52,Planarity Testing Revisited,,2018-03-20
10.1109/PDGC.2010.5679884,Fault tolerant routing using improved safety vectors,,2016-03-20
10.1007/978-3-319-91542-5_3,Unconventional Computers Designed on Swarm Behaviours,,2017-03-20
10.1007/978-3-642-40465-8_3,Local State Refinement and Composition of Elementary Net Systems: An Approach Based on Morphisms,,2019-03-20
10.1109/TASE.2018.00018,Decomposition and Composition of Sequence Diagrams,,2013-03-20
10.1007/978-3-540-27793-4_5,Formal Tools for Modular System Development,,2020-03-20
10.13097/ARCHIVE-OUVERTE/UNIGE:29390,Unifying the syntax and semantics of modular extensions of Petri nets,,2011-03-20
10.1016/j.entcs.2005.05.037,Moving from Weakly Endochronous Systems to Delay-Insensitive Circuits,,2017-03-20
10.1080/00387019408000850,[Atomization efficiency of graphite furnace in atomic absorption spectrometry].,,2019-03-20
10.1007/s00236-008-0077-0,M-nets: a survey,,2019-03-20
10.1007/978-3-642-35179-2_4,Modelling Local and Global Behaviour: Petri Nets and Event Coordination,,2018-03-20
10.1007/11506843_9,Compositional Semantics for UML 2.0 Sequence Diagrams Using Petri Nets,,2018-03-20
10.1016/J.JLAP.2011.05.002,Timed Mobility in process algebra and Petri nets,,2012-03-20
10.3233/FI-2019-1820,From Box Algebra to Interval Temporal Logic,,2013-03-20
10.3103/S0146411612010026,Modular nets of active resources,,2018-03-20
10.1007/978-3-540-30232-2_20,Petri Net Semantics of the Finite pi-calculus Terms,,2013-03-20
10.1016/S0167-6423(01)00004-1,Compositional high-level Petri net semantics of a parallel programming language with procedures,,2020-03-20
10.1007/978-1-4615-4489-0_13,FIFO buffers in tie sauce,,2017-03-20
10.1007/3-540-46674-6_17,Asynchronous Links in the PBC and M-Nets,,2016-03-20
10.1007/978-1-4615-4489-0_14,Parameterized M-expression semantics of parallel procedures,,2019-03-20
10.1007/978-3-642-30564-1_2,Defining Composition Operators for BPMN,,2012-03-20
10.3923/JAS.2008.2286.2292,A Semantics for the Control Part of Lotos,,2016-03-20
10.1007/978-3-540-24756-2_16,Object-Oriented Modelling with High-Level Modular Petri Nets,,2018-03-20
10.1109/ACC.2009.5159987,Petri nets and programming: A survey,,2015-03-20
10.1007/s00165-008-0079-2,A compositional Petri net translation of general π-calculus terms,,2013-03-20
10.1109/PNPM.2001.953354,SWN models of a contact center: a case study,,2019-03-20
10.1109/CSD.2004.1309120,A semantics of Security Protocol Language (SPL) using a class of composable high-level Petri nets,,2017-03-20
10.1109/CSD.2003.1207707,Compositional high level Petri nets with timing constraints - a comparison,,2014-03-20
10.1109/ACSD.2007.55,Modelling Mobility in High-level Petri Nets,,2012-03-20
10.1007/3-540-69108-1_17,M-net Calculus Based Semantics for Triggers,,2016-03-20
10.1023/A:1015669415634,Efficient Computation and Representation of Large Reachability Sets for Composed Automata,,2016-03-20
10.1016/S0304-3975(02)00088-9,General parameterised refinement and recursion for the M-net calculus,,2013-03-20
10.1007/978-3-540-78743-3_16,Modelling and Verification of Timed Interaction and Migration,,2018-03-20
10.1016/j.scico.2011.05.002,Transforming Web Services Choreographies with priorities and time constraints into prioritized-time colored Petri nets,,2020-03-20
10.1007/978-3-540-73094-1_23,Formal Models for Multicast Traffic in Network on Chip Architectures with Compositional High-Level Petri Nets,,2018-03-20
10.1109/QUATIC.2014.44,Derivation of Data-Driven Software Models from Business Process Representations,,2016-03-20
10.1007/3-540-49059-0_29,Modular State Level Analysis of Distributed Systems Techniques and Tool Support,,2015-03-20
10.1145/1416222.1416244,Quickly prototyping petri nets tools with SNAKES,,2018-03-20
10.1109/ACSD.2006.12,Modelling and verification of authentication using enhanced net semantics of SPL (Security Protocol Language),,2011-03-20
10.1007/3-540-40911-4_19,A Concurrent and Compositional Petri Net Semantics of Preemption,,2020-03-20
10.1016/S1571-0661(04)80521-8,Petri nets with causal time for system verification,,2019-03-20
10.18452/2454,"12. Workshop ""Algorithmen und Werkzeuge für Petrinetze"" (AWPN 2005)",,2019-03-20
10.1016/B978-044482830-9/50032-1,A Unified Model for Nets and Process Algebras,,2012-03-20
10.1109/ICNC.2015.7377979,Conversion and verification of recursive structure in PI-calculus with compositional petri-NET,,2018-03-20
10.1007/b100576,Formal Techniques for Networked and Distributed Systems – FORTE 2004,,2020-03-20
10.1016/j.entcs.2006.05.008,A Petri Net Semantics of a Simple Process Algebra for Mobility,,2013-03-20
10.1109/IROS.2018.8594328,ASPiC: An Acting System Based on Skill Petri Net Composition,,2020-03-20
10.1007/978-3-540-68746-7_9,Modeling and Analysis of Security Protocols Using Role Based Specifications and Petri Nets,,2016-03-20
10.1007/BFb0058038,General Refinement for High Level Petri Nets,,2017-03-20
10.1007/978-3-540-85762-4_13,Towards Efficient Verification of Systems with Dynamic Process Creation,,2017-03-20
10.1007/3-540-45740-2_13,A Concurrent Semantics of Static Exceptions in a Parallel Programming Language,,2019-03-20
10.1007/3-540-44919-1_25,Hierarchical Timed High Level Nets and Their Branching Processes,,2017-03-20
10.1109/ACSD.2016.12,From Petri Nets with Shared Variables to ITL,,2013-03-20
10.1007/11921240_10,A Petri Net Translation of pi-Calculus Terms,,2013-03-20
10.1007/978-3-030-21571-2_16,Concurrent Programming from pseuCo to Petri,,2012-03-20
10.4108/ICST.SIMUTOOLS2008.3007,Quickly prototyping petri nets tools with SNAKES,,2015-03-20
10.1109/CCC.2005.29,The Quantum Adversary Method and Classical Formula Size Lower Bounds,,2016-03-20
10.4213/RM667,Монотонные булевы функции@@@Monotone Boolean functions,,2020-03-20
10.1515/rjr-2016-0009,The role of cartilage and bone allografts in nasal reconstruction,,2011-03-20
10.1070/RM2003V058N05ABEH000667,Monotone Boolean functions,,2019-03-20
10.1007/s00037-006-0212-7,THE QUANTUM ADVERSARY METHOD AND CLASSICAL FORMULA SIZE LOWER BOUNDS,,2013-03-20
10.1145/1989284.1989321,Relational transducers for declarative networking,,2018-03-20
10.1145/383734.383735,Applying an update method to a set of receivers,,2020-03-20
10.1145/2450142.2450151,Relational transducers for declarative networking,,2020-03-20
10.1016/j.jcss.2010.04.007,Relational completeness of query languages for annotated databases,,2016-03-20
10.1007/978-3-662-04031-7_3,Expressive Power: The Finite Case,,2013-03-20
10.1007/978-3-540-45072-6_20,Region-Based Querz Languages for Spatial Databases in the Topological Data Model,,2014-03-20
10.1145/347476.347477,Relational queries over interpreted structures,,2020-03-20
10.1007/978-3-540-75987-4_9,Relational Completeness of Query Languages for Annotated Databases,,2018-03-20
10.1145/337885.337894,Query languages with arithmetic and constraint databases,,2018-03-20
10.1007/978-3-319-98654-8_4,A Tale of Conjunctive Grammars,,2012-03-20
10.1142/S0129054114500336,Linear Conjunctive Grammars and One-turn Synchronized Alternating Pushdown Automata,,2014-03-20
10.1007/978-3-319-77313-1_3,Underlying Principles and Recurring Ideas of Formal Grammars,,2018-03-20
10.1016/j.jcss.2016.05.008,LR(0) conjunctive grammars and deterministic synchronized alternating pushdown automata,,2019-03-20
10.4064/CM103-2-8,Characterization of local dimension functions of subsets of ${\Bbb R}^{d}$,,2012-03-20
10.4134/BKMS.2015.52.5.1489,ON SIMULTANEOUS LOCAL DIMENSION FUNCTIONS OF SUBSETS OF ℝ d,,2012-03-20
10.1016/j.tcs.2007.03.035,Finite automata encoding geometric figures,,2015-03-20
10.1007/978-3-540-30500-2_33,Does Hausdorff Dimension Measure Texture Complexity?,,2011-03-20
10.1016/j.aim.2020.107216,On Large Values of Weyl Sums.,,2016-03-20
10.1145/2484712.2484716,Scalable containment for unions of conjunctive queries under constraints,,2016-03-20
10.14288/1.0052052,Access control in XML PDMS query answering,,2016-03-20
10.1007/978-3-642-15918-3_23,On the Termination of the Chase Algorithm,,2020-03-20
10.1515/rjim-2015-0002,The Growing Family of Limb-Girdle Muscular Dystrophies: Old and Newly Identified Members,,2020-03-20
10.1515/AGP-2017-0021,Selected Oxfordian brachiopods from Zalas (Cracow Upland  Poland),,2019-03-20
10.1287/opre.31.6.983,Feature Article - Statistical Analysis of Simulation Output Data,,2015-03-20
10.1109/WSC.2013.6721458,Regenerative simulation for multiclass open queueing networks,,2020-03-20
10.1007/BF02104830,Theory of queuing networks and its applications to the analysis of information-computing systems,,2020-03-20
10.1007/978-1-4899-0574-1_31,A Second bibliography on semi-Markov processes,,2016-03-20
10.1145/800053.801912,Performance of a collision-free local bus network having asynchronous distributed control,,2013-03-20
10.1145/2699717,Regenerative Simulation for Queueing Networks with Exponential or Heavier Tail Arrival Distributions,,2012-03-20
10.1145/2939502.2939508,Clustering provenance facilitating provenance exploration through data abstraction,,2020-03-20
10.12694/SCPE.V13I2.778,Dynamic Distributed Programs Control Based on Global Program States Monitoring,,2014-03-20
10.1109/PDP.2012.88,Global Control in Distributed Programs with Dynamic Process Membership,,2018-03-20
10.1109/NCA.2001.962541,Reconfigurable algorithms in view synchrony,,2018-03-20
10.1109/SRDS.2015.37,Multi-objective Optimisation of Rolling Upgrade Allowing for Failures in Clouds,,2018-03-20
10.1145/2274576.2274583,Highly expressive query languages for unordered data trees,,2014-03-20
10.1145/1265530.1265540,XML transformation by tree-walking transducers with invisible pebbles,,2018-03-20
10.1007/s00224-015-9617-5,Highly Expressive Query Languages for Unordered Data Trees,,2020-03-20
10.1007/978-3-540-85713-6_4,Reducing Temporary Trees in XQuery,,2012-03-20
10.1145/1807085.1807122,A learning algorithm for top-down XML transformations,,2017-03-20
10.1016/j.tcs.2020.10.030,XML Navigation and Transformation by Tree-Walking Automata and Transducers with Visible and Invisible Pebbles,,2012-03-20
10.1145/2237796.2237808,Model querying with graphical notation of QVT relations,,2014-03-20
10.1007/BF01888216,Branching versus linear logics yet again,,2019-03-20
10.1007/BF01893887,Theoretical foundations of handling large substitution sets in temporal integrity monitoring,,2018-03-20
10.1007/978-3-319-14886-1_18,Model-Based Testing for Composite Web Services in Cloud Brokerage Scenarios,,2011-03-20
10.1007/BF00289711,Practical LL(1)-based parsing of van Wijngaarden grammars,,2014-03-20
10.1007/BF00288543,On parsing two-level grammars,,2017-03-20
10.1007/978-3-642-11447-2_4,An ASM-Characterization of a Class of Distributed Algorithms,,2019-03-20
10.1007/978-3-540-73859-6_17,A Semantic Characterization of Unbounded-Nondeterministic Abstract State Machines,,2012-03-20
10.1007/978-3-540-74107-7_2,Abstract State Machines for the Classroom,,2011-03-20
10.1007/11767589_12,How Expressive Are Petri Net Schemata?,,2017-03-20
10.1007/978-3-319-08019-2_14,Generic Parallel Algorithms,,2014-03-20
10.1007/S10958-009-9402-6,In some curved spaces  one can solve NP-hard problems in polynomial time,,2019-03-20
10.4204/EPTCS.179.2,Cellular Automata are Generic,,2015-03-20
10.4204/EPTCS.88.5,The Generic Model of Computation,,2014-03-20
10.1007/978-3-540-30472-2_5,A Practice-Oriented Course on the Principles of Computation  Programming  and System Design and Analysis,,2011-03-20
10.1007/978-3-319-40189-8_22,Axiomatizing Analog Algorithms,,2013-03-20
10.1007/978-3-642-29952-0_49,Towards an Axiomatization of Simple Analog Algorithms,,2013-03-20
10.1007/11494744_20,On the Expressive Power of Petri Net Schemata,,2014-03-20
10.18452/2458,Distributed Abstract State Machines and Their Expressive Power,,2019-03-20
10.1093/jigpal/jzw008,On the parallel computation thesis,,2020-03-20
10.2178/bsl/1231081370,A Natural Axiomatization of Computability and Proof of Church's Thesis,,2013-03-20
10.18725/OPARU-1067,Eine formale Semantik für die Verknüpfung von Verhaltensbeschreibungen in der UML 2,,2015-03-20
10.1515/9783110325461.24,Algorithms: A Quest for Absolute Definitions,,2020-03-20
10.1049/IP-CDT:20030831,Visualisation and resolution of encoding conflicts in asynchronous circuit design,,2017-03-20
10.1007/978-3-540-45187-7_1,Distributed Monitoring of Concurrent and Asynchronous Systems,,2019-03-20
10.1007/s10703-006-0022-1,Verification of bounded Petri nets using integer programming,,2015-03-20
10.3182/20100830-3-DE-4013.00036,What topology tells us about diagnosability in partial order semantics,,2013-03-20
10.1016/j.is.2011.10.005,Structuring acyclic process models,,2016-03-20
10.1093/comjnl/bxt014,Direct Construction of Complete Merged Processes,,2018-03-20
10.1016/S1474-6670(17)30785-1,Sequence analysis for time petri nets,,2012-03-20
10.1007/978-3-319-19488-2,Application and Theory of Petri Nets and Concurrency,,2017-03-20
10.4230/LIPIcs.FSTTCS.2018.20,Hyper Partial Order Logic,,2011-03-20
10.1016/j.tcs.2006.02.012,On the expressiveness of higher dimensional automata,,2016-03-20
10.1109/DATE.2003.1253724,Visualization and resolution of coding conflicts in asynchronous circuit design,,2015-03-20
10.1109/AICT.2005.60,Models for the supervision of Web services orchestration with dynamic changes,,2013-03-20
10.1109/TAC.2003.819076,Markov nets: probabilistic models for distributed and concurrent systems,,2017-03-20
10.3233/FI-2013-782,Branching Processes of General Petri Nets,,2011-03-20
10.1007/978-3-642-40229-6_7,Back in Time Petri Nets,,2011-03-20
10.1007/978-3-642-13675-7_3,Petri Nets with Localities and Testing,,2013-03-20
10.1007/978-3-642-15928-2_1,A False History of True Concurrency: From Petri to Tools,,2016-03-20
10.1155/2013/962765,Efficient Semantics-Based Compliance Checking Using LTL Formulae and Unfolding,,2018-03-20
10.1007/978-3-642-21834-7_7,How Much Is Worth to Remember? A Taxonomy Based on Petri Nets Unfoldings,,2019-03-20
10.1109/TSE.2017.2668418,Complete and Interpretable Conformance Checking of Business Processes,,2015-03-20
10.1134/S0361768816040071,“Truly concurrent” and nondeterministic semantics of discrete-time Petri nets,,2016-03-20
10.1016/j.tcs.2009.06.014,Configuration structures  event structures and Petri nets,,2015-03-20
10.1007/978-3-642-16164-3_13,A False History of True Concurrency: From Petri to Tools,,2012-03-20
10.1007/11494744_6,The (True) Concurrent Markov Property and Some Applications to Markov Nets,,2019-03-20
10.1016/j.ipl.2011.03.013,Abstract processes of place/transition systems,,2014-03-20
10.5772/50637,Grammars Controlled by Petri Nets,,2011-03-20
10.1016/J.JLAMP.2018.11.006,Combining free choice and time in Petri nets,,2014-03-20
10.1007/978-3-030-51831-8,Application and Theory of Petri Nets and Concurrency: 41st International Conference  PETRI NETS 2020  Paris  France  June 24–25  2020  Proceedings,,2014-03-20
10.1016/j.tcs.2018.03.009,Parameter Space Abstraction and Unfolding Semantics of Discrete Regulatory Networks,,2017-03-20
10.1007/978-3-642-15928-2_6,A New Type of Behaviour-Preserving Transition Insertions in Unfolding Prefixes,,2019-03-20
10.1007/978-3-540-30232-2_21,Symbolic Diagnosis of Partially Observable Concurrent Systems,,
10.1007/978-3-319-23506-6_9,Structure Preserving Bisimilarity  Supporting an Operational Petri Net Semantics of CCSP,,2019-03-20
10.1007/978-3-030-21571-2,Application and Theory of Petri Nets and Concurrency,,2019-03-20
10.1007/978-3-642-13675-7_11,Factorization Properties of Symbolic Unfoldings of Colored Petri Nets,,2015-03-20
10.1007/978-3-540-27793-4_10,Finite Unfoldings of Unbounded Petri Nets,,2012-03-20
10.1007/978-3-642-00328-8_25,Towards Process Models for Disaster Response,,2020-03-20
10.1007/978-3-030-21571-2_1,Describing Behavior of Processes with Many-to-Many Interactions,,2018-03-20
10.1016/j.ic.2016.07.006,Petri games: Synthesis of distributed systems with causal memory,,2020-03-20
10.1051/ita:2007033,Calculi of net structures and sets are similar,,2018-03-20
10.1109/CDC.2003.1271731,Distributed and asynchronous discrete event systems diagnosis,,2017-03-20
10.1109/JAS.2017.7510775,Behavior consistency computation for workflow nets with unknown correspondence,,2011-03-20
10.1007/978-3-642-38230-7_5,Event Structures as a Foundation for Process Model Differencing  Part 1: Acyclic processes,,2018-03-20
10.4230/LIPIcs.CONCUR.2015.456,Unfolding-based Partial Order Reduction,,2018-03-20
10.1109/TAC.2003.811249,Diagnosis of asynchronous discrete-event systems: a net unfolding approach,,2015-03-20
10.1007/978-3-642-04368-0_6,Critical Paths in the Partial Order Unfolding of a Stochastic Petri Net,,2016-03-20
10.1007/978-3-642-23059-2_27,Simplifying Mined Process Models: An Approach Based on Unfoldings,,2018-03-20
10.1007/11767589_16,Infinite Process Semantics of Inhibitor Nets,,2018-03-20
10.1016/j.tcs.2006.06.024,"Erratum to ""On the expressiveness of higher dimensional automata"": [TCS 356 (2006) 265-290]",,2019-03-20
10.1007/978-3-642-02424-5_14,Oclets - Scenario-Based Modeling with Petri Nets,,2015-03-20
10.1007/s10626-005-5238-5,Distributed Monitoring of Concurrent and Asynchronous Systems*,,2012-03-20
10.1016/j.entcs.2005.12.036,Modeling the Exogenous Coordination of Mobile Channel-based Systems with Petri Nets,,2018-03-20
10.4204/EPTCS.279.5,Toward a Uniform Approach to the Unfolding of Nets,,2018-03-20
10.3233/FI-2009-210,An Algebraic Framework for Defining Behaviours of Concurrent Systems. Part 2: The Axiomatic Presentation,,2013-03-20
10.1007/s10626-011-0121-z,What topology tells us about diagnosability in partial order semantics,,2013-03-20
10.4204/EPTCS.161.19,Petri Games: Synthesis of Distributed Systems with Causal Memory,,2011-03-20
10.1016/j.entcs.2009.06.017,Adding Branching to the Strand Space Model,,2016-03-20
10.1109/EDOCW.2011.12,Querying Process Models Based on the Temporal Relations between Tasks,,2016-03-20
10.1145/1065167.1065214,Diagnosis of asynchronous discrete event systems: datalog to the rescue!,,2014-03-20
10.1007/11767589_8,Complete Finite Prefixes of Symbolic Unfoldings of Safe Time Petri Nets,,2016-03-20
10.1109/ACSD.2015.20,Preserving Partial Order Runs in Parametric Time Petri Nets,,2011-03-20
10.1134/S0361768815030020,Comparative trace semantics of time Petri nets,,2017-03-20
10.1007/s00236-018-0314-0,Petri nets are dioids: a new algebraic foundation for non-deterministic net theory,,2018-03-20
10.1109/CODIT.2013.6689616,An algebra for branching processes,,2014-03-20
10.3233/FI-2013-935,Defining Multi-Party Compromises using Unfoldings of Workflow Nets,,2016-03-20
10.1007/3-540-36577-X_34,Branching Processes of High-Level Petri Nets,,2011-03-20
10.1007/978-3-642-21834-7_8,Branching Processes of General Petri Nets,,2017-03-20
10.1007/978-3-319-19488-2_6,Non-atomic Transition Firing in Contextual Nets,,2018-03-20
10.1016/S1571-0661(04)80743-6,Behaviour and Instantiation of High-Level Net Processes,,2020-03-20
10.1007/978-3-319-53733-7_24,Merging Relations: A Way to Compact Petri Nets' Behaviors Uniformly,,2016-03-20
10.1007/978-3-540-77426-6,Unfoldings - A Partial-Order Approach to Model Checking,,2016-03-20
10.1109/CSD.2004.1309112,Logic synthesis for asynchronous circuits based on Petri net unfoldings and incremental SAT,,2014-03-20
10.1109/ACSD.2008.4574598,Modular construction of finite and complete prefixes of Petri net unfoldings,,2013-03-20
10.1007/11603009_16,Time Supervision of Concurrent Systems Using Symbolic Unfoldings of Time Petri Nets,,2014-03-20
10.1016/S0950-5849(03)00061-2,Synthesis of distributed testers from true-concurrency models of reactive systems,,2012-03-20
10.4230/LIPIcs.FSTTCS.2008.1755,The unfolding of general Petri nets,,2019-03-20
10.1007/978-3-319-33612-1_2,On the Suitability of Generalized Behavioral Profiles for Process Model Comparison,,2019-03-20
10.1016/j.is.2012.07.004,Simplifying discovered process models in a controlled manner,,2013-03-20
10.1007/978-3-662-53401-4_3,Non-Interference Notions Based on Reveals and Excludes Relations for Petri Nets,,2015-03-20
10.4204/EPTCS.54.3,Computing the Reveals Relation in Occurrence Nets,,2016-03-20
10.1109/ACSD.2013.13,Checking Partial-Order Properties of Vector Addition Systems with States,,2011-03-20
10.1145/3019612.3019806,Petri nets and dynamic causality for service-oriented computations,,2015-03-20
10.1016/j.is.2015.09.009,Diagnosing behavioral differences between business process models: An approach based on event structures,,
10.1109/IDT.2008.4802509,Temporal reduction in time Petri net,,2015-03-20
10.1016/j.tcs.2014.07.003,Recent advances in unfolding technique,,2014-03-20
10.1109/ACSD.2018.00010,SONCraft: A Tool for Construction  Simulation  and Analysis of Structured Occurrence Nets,,2012-03-20
10.1007/s00165-016-0372-4,On the expressive power of behavioral profiles,,2015-03-20
10.1016/j.is.2018.09.005,Variability in business processes: Automatically obtaining a generic specification,,2016-03-20
10.7494/csci.2020.21.4.3728,Causal Reversibility in Individual Token Interpretation of Petri Nets,,2018-03-20
10.1016/j.jlamp.2020.100526,Spreading nets: A uniform approach to unfoldings,,2014-03-20
10.1007/978-3-642-23217-6_4,On Causal Semantics of Petri Nets,,2013-03-20
10.1016/S0020-0190(03)00386-7,An algebraic characterization of independence of Petri net processes,,2019-03-20
10.1109/ACSD.2006.21,Resolution of Encoding Conflicts by Signal Insertion and Concurrency Reduction Based on STG Unfoldings,,2012-03-20
10.1145/3357384.3357882,BePT: A Behavior-based Process Translator for Interpreting and Understanding Process Models,,2018-03-20
10.1007/978-3-319-49148-6_8,Computation of Secure Consistency for Real Systems,,2014-03-20
10.1109/CDC.2007.4434691,Unfold and cover: Qualitative diagnosability for Petri Nets,,2020-03-20
10.1016/j.entcs.2009.06.023,Composition and Independence of High-Level Net Processes,,2018-03-20
10.1007/978-3-319-41579-6_23,Branching Processes of Timed Petri Nets,,2019-03-20
10.1016/j.ipl.2007.06.002,On the well-foundedness of adequate orders used for construction of complete unfolding prefixes,,2016-03-20
10.1007/978-3-540-79980-1_5,Petri Nets Are Dioids,,2011-03-20
10.1109/ICDE.2015.7113270,Cleaning structured event logs: A graph repair approach,,2016-03-20
10.1109/ACSD.2011.16,Building Tight Occurrence Nets from Reveals Relations,,2016-03-20
10.1007/978-3-319-91268-4_14,One Net Fits All: A unifying semantics of Dynamic Fault Trees using GSPNs,,2014-03-20
10.1109/TKDE.2016.2594785,Efficient Recovery of Missing Events,,2020-03-20
10.1016/j.is.2020.101675,Model-based trace variant analysis of event logs,,2018-03-20
10.1007/978-3-540-73094-1_14,Behaviour-Preserving Transition Insertions in Unfolding Prefixes,,2016-03-20
10.1007/s00236-020-00368-5,Solving high-level Petri games,,2014-03-20
10.1109/CSD.2003.1207699,Detecting state coding conflicts in STG unfoldings using SAT,,2019-03-20
10.1007/978-3-642-38143-0_6,Causality in Extensions of Petri Nets,,2018-03-20
10.1109/TAC.2010.2063490,Types of Asynchronous Diagnosability and the Reveals-Relation in Occurrence Nets,,2013-03-20
10.1109/ACCESS.2016.2597061,A Branching-Process-Based Method to Check Soundness of Workflow Systems,,2014-03-20
10.1007/978-3-319-07734-5_10,Flow Unfolding of Multi-clock Nets,,2015-03-20
10.1007/s10626-007-0036-x,On-Line Monitoring of Large Petri Net Models Under Partial Observation,,2013-03-20
10.1007/978-3-642-21834-7_6,An Algorithm for Direct Construction of Complete Merged Processes,,2011-03-20
10.1023/B:DISC.0000028197.25480.d6,A Sufficient Condition for Reachability in a General Petri Net,,2018-03-20
10.1007/978-3-030-21571-2_14,Generalized Alignment-Based Trace Clustering of Process Behavior,,2019-03-20
10.1016/S0304-3975(02)00597-2,Clustering for Petri nets,,2020-03-20
10.3233/FI-2009-148,Modular construction of finite and complete prefixes of Petri net unfoldings,,2015-03-20
10.1007/11539452_26,The Individual and Collective Token Interpretations of Petri Nets,,2017-03-20
10.3166/JESA.39.351-365,Diagnostic temporel dans les systèmes répartis à l'aide de dépliages de réseaux de Petri temporels,,2015-03-20
10.1007/11539452_27,Merged Processes - A New Condensed Representation of Petri Net Behaviour,,2018-03-20
10.29007/6NTB,Branching Processes of Conservative Nested Petri Nets,,2018-03-20
10.1109/TAC.2004.831159,Author's reply [to comments on 'Liveness-enforcing supervision of bounded ordinary Petri nets using partial order methods'],,2014-03-20
10.1093/comjnl/bxs126,Maximal Structuring of Acyclic Process Models,,2018-03-20
10.1007/978-3-030-31784-3_30,Model Checking Data Flows in Concurrent Network Updates (Full Version),,2018-03-20
10.1007/978-3-540-68746-7_6,Faster Unfolding of General Petri Nets Based on Token Flows,,2016-03-20
10.1007/978-3-540-78291-9_5,Formal Languages and Concurrent Behaviours,,2011-03-20
10.1016/j.tcs.2013.04.028,Computing the reveals relation in occurrence nets,,2011-03-20
10.3182/20050703-6-CZ-1902.00299,FAULT DIAGNOSIS FOR DISTRIBUTED ASYNCHRONOUS DYNAMICALLY RECONFIGURED DISCRETE EVENT SYSTEMS,,2018-03-20
10.1007/978-3-642-40229-6,Formal Modeling and Analysis of Timed Systems,,2016-03-20
10.1007/s10626-006-0001-0,Trellis Processes : A Compact Representation for Runs of Concurrent Systems,,2016-03-20
10.3233/FI-2009-134,Unfolding Semantics of Petri Nets Based on Token Flows,,2013-03-20
10.1145/3012283,Preserving Partial Order Runs in Parametric Time Petri Nets,,2014-03-20
10.1109/CDC.2009.5400917,Qualitative diagnosability of labeled petri nets revisited,,2017-03-20
10.1007/978-3-319-49583-5_7,Deciding the Deadlock and Livelock in a Petri Net with a Target Marking Based on Its Basic Unfolding,,2017-03-20
10.1109/CDC.2003.1271732,Partial order diagnosability of discrete event systems using petri net unfoldings,,2014-03-20
10.1007/s11280-013-0210-z,Querying business process model repositories,,2011-03-20
10.1007/978-3-030-59152-6_22,Model Checking Branching Properties on Petri Nets with Transits (Full Version),,2011-03-20
10.1016/j.ic.2021.104706,Abstract Processes and Conflicts in Place/Transition Systems,,2017-03-20
10.1109/CHICC.2006.4347094,Reachable relation of markings analysis using net unfolding,,2011-03-20
10.14778/2536206.2536212,Efficient Recovery of Missing Events,,2016-03-20
10.3233/FI-2013-809,Building Occurrence Nets from Reveals Relations,,2020-03-20
10.1007/978-3-319-10172-9_17,Behavioral Comparison of Process Models Based on Canonically Reduced Event Structures,,2017-03-20
10.1016/J.INS.2019.05.021,Deadlock detection-oriented unfolding of unbounded Petri nets,,2016-03-20
10.1007/978-3-030-51831-8_8,A Study on Team Bisimulations for BPP Nets,,2017-03-20
10.1145/2810001,Petri Net Models and Collaborativeness for Parallel Processes with Resource Sharing and Message Passing,,2012-03-20
10.1007/978-3-540-89287-8_12,McMillan's Complete Prefix for Contextual Nets,,2019-03-20
10.1016/j.ic.2008.04.002,A framework for the verification of infinite-state graph transformation systems,,2015-03-20
10.1016/J.IC.2019.06.002,On the relative expressiveness of higher-order session processes,,2019-03-20
10.1145/3290337,Better late than never: a fully-abstract semantics for classical processes,,2019-03-20
10.1109/ITNG.2011.56,Testing a High Performance  Random Access Priority Queue: A Case Study,,2018-03-20
10.1007/978-3-030-11245-5_15,A Decidable Logic for Tree Data-Structures with Measurements,,2017-03-20
10.1109/CloudCom.2012.6427609,A study on the data privacy and operation performance for cloud collaborative editing systems,,2015-03-20
10.2168/LMCS-4(2:8)2008,Visibly Tree Automata with Memory and Constraints,,2011-03-20
10.1016/j.jnca.2013.05.012,An efficient and secure approach for a cloud collaborative editing,,2016-03-20
10.2168/LMCS-10(2:10)2014,Global Numerical Constraints on Trees,,2019-03-20
10.1007/978-3-540-72734-7_26,Verifying Balanced Trees,,2015-03-20
10.4230/LIPIcs.FSTTCS.2009.2328,On Nondeterministic Unranked Tree Automata with Sibling Constraints,,2011-03-20
10.1007/978-3-642-45114-0_7,Expressive Reasoning on Tree Structures: Recursion  Inverse Programs  Presburger Constraints and Nominals,,2018-03-20
10.1109/FMCAD.2009.5351144,Verification of recursive methods on tree-like data structures,,2013-03-20
10.1007/978-3-642-22438-6_36,An Efficient Decision Procedure for Imperative Tree Data Structures,,2011-03-20
10.4304/jnw.8.9.2071-2077,Improvement and Analysis of Encryption and Decryption Performance in Cloud Document,,2013-03-20
10.1007/978-3-319-63046-5_31,Satisfiability of Compositional Separation Logic with Tree Predicates and Data Constraints,,2013-03-20
10.1007/978-3-540-71389-0_13,Tree Automata with Memory  Visibility and Structural Constraints,,2012-03-20
10.1007/978-3-642-23702-7_8,Efficient Decision Procedures for Heaps Using STRAND,,2018-03-20
10.1007/3-540-45007-6_18,On Well Quasi-orders on Languages,,2017-03-20
10.1007/978-3-540-85780-8_6,Well Quasi-orders in Formal Language Theory,,2013-03-20
10.1016/j.tcs.2007.02.007,Well quasi-orders generated by a word-shuffle rewriting,,2017-03-20
10.1007/978-3-540-30550-7_12,Avoidable Sets and Well Quasi-Orders,,2020-03-20
10.1007/11779148_24,Well Quasi Orders and the Shuffle Closure of Finite Sets,,2012-03-20
10.1051/ita:2006019,Well quasi-orders  unavoidable sets  and derivation systems,,2014-03-20
10.1016/j.tcs.2004.03.069,Well quasi-orders and context-free grammars,,2012-03-20
10.1007/S00233-009-9201-X,Stefano Varricchio (1960–2008),,2015-03-20
10.1109/SCAM.2016.28,Analysing and Comparing the Effectiveness of Mutation Testing Tools: A Manual Study,,2013-03-20
10.1109/FIT.2012.15,Control Oriented Mutation Testing for Detection of Potential Software Bugs,,2011-03-20
10.1145/1138929.1138945,The class-level mutants of MuJava,,2011-03-20
10.1145/3356317.3356323,An Evaluation of Internal Program Metrics as Predictors of Mutation Operator Score,,2020-03-20
10.1109/ICSTW.2016.43,Code Defenders: A Mutation Testing Game,,2019-03-20
10.1145/1352582.1352588,What causes a system to satisfy a specification?,,2016-03-20
10.7287/peerj.preprints.2483v1,A systematic literature review of how mutation testing supports test activities,,2016-03-20
10.7763/IJMO.2011.V1.74,Investigation of Improving Test Data in Mutation Testing by Optimization Methods,,2014-03-20
10.1016/j.jss.2018.03.010,Model-based mutant equivalence detection using automata language equivalence and simulations,,2014-03-20
10.1016/j.jss.2016.07.001,A Novel Fitness function of metaheuristic algorithms for test data generation for simulink models based on mutation analysis,,2015-03-20
10.1109/ICST.2015.7102617,Test Suite Quality Assessment Using Model Inference Techniques,,2014-03-20
10.1002/stvr.1529,Employing second‐order mutation for isolating first‐order equivalent mutants,,2012-03-20
10.1145/1985793.1985847,Programs  tests  and oracles: the foundations of testing revisited,,2018-03-20
10.1002/stvr.1473,Covering and Uncovering Equivalent Mutants,,2020-03-20
10.14722/BAR.2019.23058,Binary Mutation Analysis of Tests Using Reassembleable Disassembly,,2013-03-20
10.1109/ISSRE.2015.7381815,How hard does mutation analysis have to be  anyway?,,2019-03-20
10.1109/ICST.2013.23,Efficient JavaScript Mutation Testing,,2015-03-20
10.1109/TSE.2010.62,An Analysis and Survey of the Development of Mutation Testing,,2017-03-20
10.1109/icstw50294.2020.00052,SiMut: Exploring Program Similarity to Support the Cost Reduction of Mutation Testing,,2019-03-20
10.1109/AERO.2006.1656028,Coverall algorithm for test case reduction,,2019-03-20
10.1109/TSE.2016.2521368,A Survey on Software Fault Localization,,2014-03-20
10.1109/ICSTW.2017.32,Are Deletion Mutants Easier to Identify Manually?,,2014-03-20
10.1109/TSE.2017.2786286,Automatic Detection and Removal of Ineffective Mutants for the Mutation Analysis of Relational Database Schemas,,2017-03-20
10.1007/978-3-642-34781-8_16,Learning-Based Software Testing: A Tutorial,,2019-03-20
10.26636/JTIT.2017.113617,Wearable biosensing: signal processing and communication architectures issues,,2015-03-20
10.1007/978-3-319-47443-4_8,Resolving the Equivalent Mutant Problem in the Presence of Non-determinism and Coincidental Correctness,,2014-03-20
10.1109/icstw50294.2020.00056,A Preliminary Investigation into Using Machine Learning Algorithms to Identify Minimal and Equivalent Mutants,,2018-03-20
10.1016/J.JSS.2019.07.100,A systematic literature review of techniques and metrics to reduce the cost of mutation testing,,2017-03-20
10.1109/ISPCC.2017.8269753,Fault localization in software testing using soft computing approaches,,2018-03-20
10.1109/ICSTW.2019.00039,Estimating the Number of Equivalent Mutants,,2018-03-20
10.1007/3-540-27071-X_12,A Methodology of Component Integration Testing,,2020-03-20
10.1109/ms.2014.68,Mutation Testing,,2015-03-20
10.1016/j.infsof.2020.106317,An experimental and practical study on the equivalent mutant connection: An evolutionary approach,,2013-03-20
10.1016/j.infsof.2009.04.016,Higher Order Mutation Testing,,2015-03-20
10.1017/CBO9780511809163,Introduction to Software Testing,,2014-03-20
10.1109/ICSE.2015.103,Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple  Fast and Effective Equivalent Mutant Detection Technique,,2017-03-20
10.1145/3106237.3106280,The care and feeding of wild-caught mutants,,2011-03-20
10.1145/3136040.3136053,Avoiding useless mutants,,2018-03-20
10.1109/TSE.2006.83,Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria,,2020-03-20
10.1145/1062455.1062530,Is mutation an appropriate tool for testing experiments? [software testing],,2015-03-20
10.1007/s10009-004-0175-4,Coverage metrics for formal verification,,2019-03-20
10.1109/QSIC.2014.26,The Impact of Equivalent  Redundant and Quasi Mutants on Database Schema Mutation Analysis,,2012-03-20
10.1109/TSE.2017.2732347,A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion,,2019-03-20
10.1145/3129173.3129180,Some ways of thinking algorithmically about impossibility,,2013-03-20
10.31274/ETD-180810-3283,Testing database applications using coverage analysis and mutation analysis,,2015-03-20
10.1109/ICCKE.2017.8167900,EMVille: A gamification-based approach to address the equivalent mutant problem,,2014-03-20
10.1145/3287324.3293753,Code Defenders: A Mutation Testing Game,,2020-03-20
10.1109/ICSTW.2014.21,Using Data Flow Patterns for Equivalent Mutant Detection,,2017-03-20
10.1109/ICST.2017.47,Assessing and Improving the Mutation Testing Practice of PIT,,2012-03-20
10.1145/3387903.3389319,Validating Test Case Migration via Mutation Analysis,,2015-03-20
10.1016/j.infsof.2015.07.009,MEDIC: A static analysis framework for equivalent mutant identification,,2011-03-20
10.1109/ICST.2016.22,A Theoretical Framework for Understanding Mutation-Based Testing Methods,,2020-03-20
10.1007/978-3-319-96562-8_4,Testing Functional Black-Box Programs Without a Specification,,2012-03-20
10.1007/978-3-030-29157-0,Software Technologies: 13th International Conference  ICSOFT 2018  Porto  Portugal  July 26-28  2018  Revised Selected Papers,,2017-03-20
10.1109/ICSTW.2017.26,Applying Mutation Analysis on Kernel Test Suites: An Experience Report,,2014-03-20
10.1145/1566445.1566540,On reduced neighborhood mutation analysis using a single mutagenic operator,,2019-03-20
10.1007/978-3-319-96562-8,Machine Learning for Dynamic Software Analysis: Potentials and Limits,,2011-03-20
10.14569/IJACSA.2019.0100670,Heuristics Applied to Mutation Testing in an Impure Functional Programming Language,,2011-03-20
10.1142/s021819402050028x,Investigating the Relationship Between Mutants and Real Faults with Respect to Mutated Code,,2011-03-20
10.1145/3106237.3106244,µDroid: an energy-aware mutation testing framework for Android,,2012-03-20
10.1145/2931037.2931040,Threats to the validity of mutation-based test assessment,,2013-03-20
10.1007/s10664-019-09778-7,Selecting fault revealing mutants,,2016-03-20
10.1109/ICSTW.2015.7107449,Mutation testing of memory-related operators,,2017-03-20
10.22028/D291-26149,Assessing test quality,,2015-03-20
10.1109/rme.2008.4595747,On the validation of embedded systems through functional ATPG,,2016-03-20
10.1109/icst46399.2020.00029,Optimizing Mutation Testing by Discovering Dynamic Mutant Subsumption Relations,,2020-03-20
10.1016/j.infsof.2011.12.001,On generating mutants for AspectJ programs,,2015-03-20
10.1145/3168365.3168379,Equivalent Mutants in Configurable Systems: An Empirical Study,,2015-03-20
10.5815/IJISA.2018.01.05,An Approach for the Generation of Higher Order Mutants Using Genetic Algorithms,,2014-03-20
10.1109/CONFLUENCE.2018.8442785,Equivalent Mutant Problem and its Problem-Solving Techniques: A Retrospective View,,2019-03-20
10.1109/ICSE.2005.1553583,Is mutation an appropriate tool for testing experiments?,,2016-03-20
10.1007/s10710-013-9195-8,Software mutational robustness,,2020-03-20
10.1145/3439961.3439981,Reducing the Cost of Mutation Testing with the Use of Primitive Arcs Concept,,2016-03-20
10.1016/j.infsof.2016.03.002,Memory mutation testing,,2015-03-20
10.1145/2950290.2983970,Combining bug detection and test case generation,,2020-03-20
10.11606/T.55.2013.TDE-06012014-150025,Toward harnessing a Java high-level language virtual machine for supporting software testing,,2013-03-20
10.26636/jtit.2017.113617,Parallel Mutant Execution Techniques in Mutation Testing Process for Simulink Models,,2016-03-20
10.1002/stvr.1675,A systematic literature review of how mutation testing supports quality assurance processes,,2014-03-20
10.1002/stvr.1630,Assessment of C++ object‐oriented mutation operators: A selective mutation approach,,2015-03-20
10.1109/RME.2008.4595747,On the validation of embedded systems through functional ATPG,,2011-03-20
10.1109/ICST.2019.00021,Comparing Mutation Testing at the Levels of Source Code and Compiler Intermediate Representation,,2014-03-20
10.3390/sym11091145,On the Effectiveness of Using Elitist Genetic Algorithm in Mutation Testing,,2011-03-20
10.1109/EDUCON.2016.7474690,Towards a framework for mining students' programming assignments,,2013-03-20
10.1145/2568225.2568265,A study of equivalent and stubborn mutation operators using human analysis of equivalence,,2011-03-20
10.1109/ESEM.2007.22,Assessing  Comparing  and Combining Statechart- based testing and Structural testing: An Experiment,,2019-03-20
10.1109/ACCESS.2018.2883776,Domain-RIP Analysis: A Technique for Analyzing Mutation Stubbornness,,2015-03-20
10.1109/SATE.2016.19,Identify Coincidental Correct Test Cases Based on Fuzzy Classification,,2013-03-20
10.1016/j.infsof.2012.02.004,Mutation based test case generation via a path selection strategy,,2017-03-20
10.1007/978-3-319-39639-2_9,Evaluation of Deletion Mutation Operators in Mutation Testing of C# Programs,,2016-03-20
10.1145/2931037.2931059,Analyzing test completeness for dynamic languages,,2018-03-20
10.1002/spe.2629,Evolutionary mutation testing for IoT with recorded and generated events,,2018-03-20
10.1016/j.infsof.2020.106496,Identifying method-level mutation subsumption relations using Z3,,2017-03-20
10.1145/2610384.2631832,Effective test generation and adequacy assessment for JavaScript-based web applications,,2020-03-20
10.1016/j.scico.2014.05.012,Mitigating the effects of equivalent mutants with mutant classification strategies,,2015-03-20
10.1109/ICST.2013.77,Leveraging Light-Weight Analyses to Aid Software Maintenance,,2012-03-20
10.1109/TSE.2013.44,Overcoming the Equivalent Mutant Problem: A Systematic Literature Review and a Comparative Experiment of Second Order Mutation,,2017-03-20
10.1109/TSE.2004.79,Assessing and improving state-based class testing: a series of experiments,,2020-03-20
10.1007/978-3-030-52991-8,Software Technologies: 14th International Conference  ICSOFT 2019  Prague  Czech Republic  July 26–28  2019  Revised Selected Papers,,2011-03-20
10.1081/E-ESE-120044231,Software Fault Localization,,2020-03-20
10.1145/1007512.1007532,Automated black-box testing of functional correctness using function approximation,,2013-03-20
10.4018/978-1-59140-941-1.CH004,ILP Applications to Software Engineering,,2014-03-20
10.1007/s10664-017-9582-5,How effective are mutation testing tools? An empirical analysis of Java mutation testing tools with manual analysis and real faults,,2011-03-20
10.1145/1806799.1806862,From behaviour preservation to behaviour modification: constraint-based mutant generation,,2018-03-20
10.1109/ESEM.2007.24,Assessing  Comparing  and Combining Statechart- based testing and Structural testing: An Experiment,,2017-03-20
10.1109/ISSRE.2016.51,Evaluating the Effects of Compiler Optimizations on Mutation Testing at the Compiler IR Level,,2016-03-20
10.1007/978-3-030-52991-8_4,Quantitative Analysis of Mutant Equivalence,,2017-03-20
10.1016/j.infsof.2006.03.001,Semantic similarity-based grading of student programs,,2011-03-20
10.5220/0006833000550066,Impact of Mutation Operators on Mutant Equivalence,,2012-03-20
10.1109/ICST.2017.30,Uncertainty-Driven Black-Box Test Data Generation,,2017-03-20
10.1016/j.infsof.2016.01.019,A novel use of equivalent mutants for static anomaly detection in software artifacts,,2020-03-20
10.1007/978-3-319-68972-2_11,TCE+: An Extension of the TCE Method for Detecting Equivalent Mutants in Java Programs,,2011-03-20
10.1145/2480362.2480592,Mutation testing strategies using mutant classification,,2019-03-20
10.1109/ICSE.2017.68,Code Defenders: Crowdsourcing Effective Tests and Subtle Mutants with a Mutation Testing Game,,2012-03-20
10.1109/APSEC.2013.34,Identifying More Equivalent Mutants via Code Similarity,,2020-03-20
10.1109/TSE.2010.32,Assessing  Comparing  and Combining State Machine-Based Testing and Structural Testing: A Series of Experiments,,2017-03-20
10.1007/978-3-030-29157-0_1,Using Semantic Metrics to Predict Mutation Equivalence,,2019-03-20
10.1109/RAISE.2015.11,Black-Box Test Generation from Inferred Models,,2016-03-20
10.1109/ICST.2012.160,Isolating First Order Equivalent Mutants via Second Order Mutation,,2013-03-20
10.1109/ICST.2010.30,(Un-)Covering Equivalent Mutants,,2019-03-20
10.1109/ICSTW.2017.70,Towards a Gamified Equivalent Mutants Detection Platform,,2017-03-20
10.1109/CEC.2013.6557654,A coevolutionary algorithm to automatic test case selection and mutant in Mutation Testing,,2018-03-20
10.1109/TSE.2017.2684805,Detecting Trivial Mutant Equivalences via Compiler Optimisations,,2013-03-20
10.1155/2014/197983,Mutation Analysis Approach to Develop Reliable Object-Oriented Software,,2013-03-20
10.1109/APSEC.2010.42,Evaluating Mutation Testing Alternatives: A Collateral Experiment,,2019-03-20
10.1109/TSE.2014.2371458,Guided Mutation Testing for JavaScript Web Applications,,2013-03-20
10.1109/ICSME46990.2020.00045,Commit-Aware Mutation Testing,,2014-03-20
10.1145/3368089.3409742,Cost measures matter for mutation testing study validity,,2013-03-20
10.1109/ICSTW.2011.55,Test Case Generation from Mutants Using Model Checking Techniques,,2019-03-20
10.1109/TCAD.2019.2912919,Online Firmware Functional Validation Scheme Using Colored Petri Net Model,,2020-03-20
10.1109/IBCAST.2019.8667222,Improving test adequacy assessment by novel JavaScript mutation operators,,2016-03-20
10.1109/TSE.2012.39,Validating Second-Order Mutation at System Level,,2017-03-20
10.1109/ICSTW.2011.47,An Analysis of OO Mutation Operators,,2016-03-20
10.1023/A:1023772729494,Selection and Evaluation of Test Data Based on Genetic Programming,,2018-03-20
10.1007/978-3-540-39724-3_11,Coverage Metrics for Formal Verification,,2016-03-20
10.1145/2676585.2676617,Applying the meta-heuristic algorithms for mutation-based test data generation for Simulink models,,2019-03-20
10.1007/s00236-020-00371-w,Off-the-shelf automated analysis of liveness properties for just paths,,2018-03-20
10.4204/EPTCS.322.5,A process algebra with global variables,,2020-03-20
10.1007/978-3-030-17127-8_29,Justness - A Completeness Criterion for Capturing Liveness Properties (Extended Abstract),,2020-03-20
10.4204/EPTCS.255.2,Analysing Mutual Exclusion using Process Algebra with Signals,,2016-03-20
10.4204/EPTCS.322.6,Reactive Temporal Logic,,2020-03-20
10.1007/978-3-319-63100-4,Modern Language Models and Computation,,2017-03-20
10.1007/978-1-4939-0369-6,Regulated Grammars and Automata,,2020-03-20
10.1016/j.tcs.2012.12.040,On the generation of sentences with their parses by propagating regular-controlled grammars,,2012-03-20
10.1007/978-3-642-31606-7_7,Weak Inclusion for Recursive XML Types,,2011-03-20
10.1007/3-540-44888-8_26,Constrained Tree Inclusion,,2017-03-20
10.1504/IJITCC.2011.042124,On the top-down evaluation of tree inclusion problem,,2020-03-20
10.1051/FOREST:2000134,A distance measure between plant architectures,,2014-03-20
10.1007/s00453-002-1002-5,An Edit Distance between Quotiented Trees,,2020-03-20
10.1016/j.tcs.2010.02.017,Finding common structured patterns in linear graphs,,2016-03-20
10.1145/1978782.1978793,The tree inclusion problem: In linear space and faster,,2020-03-20
10.1016/S0196-6774(03)00079-8,Optimal mappings with minimum number of connected components in tree-to-tree comparison problems,,2017-03-20
10.1145/1141277.1141521,Tree inclusion algorithm  signatures and evaluation of path-oriented queries,,2011-03-20
10.1109/SPIRE.2000.878187,Adding string processing capabilities to data management systems,,2013-03-20
10.1145/2630065,Transducing Markov sequences,,2013-03-20
10.1145/3034786.3056106,J-Logic: Logical Foundations for JSON Querying,,2020-03-20
10.1145/1028976.1029003,Refactoring class hierarchies with KABA,,2013-03-20
10.1007/3-540-47993-7_5,Space- and Time-Efficient Implementation of the Java Object Model,,2011-03-20
10.1145/288195.288273,Reengineering class hierarchies using concept analysis,,2018-03-20
10.1145/949343.949308,Refactoring for generalization using type constraints,,2017-03-20
10.1109/WCRE.2007.40,Recovering Data Models via Guarded Dependences,,2012-03-20
10.1145/1167515.1167503,An operational semantics and type safety prooffor multiple inheritance in C,,2014-03-20
10.5381/jot.2007.6.2.a5,The Infer Type Refactoring and its Use for Interface-Based Programming,,2012-03-20
10.1145/949305.949333,Object equality profiling,,2020-03-20
10.1145/1639949.1640093,Empirical assessment of object-oriented implementations with multiple inheritance and static typing,,2012-03-20
10.1007/978-3-540-30554-5_11,MASPEGHI 2004 Mechnisms for Specialization  Generalization and Inheritance,,2012-03-20
10.1016/j.tcs.2004.09.040,Finite graph automata for linear and boundary graph languages,,2015-03-20
10.1109/BIC-TA.2011.3,Properties of NLC Languages Squeezed with Hypercube Graphs,,2020-03-20
10.1006/jagm.2000.1079,Optimal Pointer Algorithms for Finding Nearest Common Ancestors in Dynamic Trees,,2019-03-20
10.1016/j.tcs.2016.07.039,Dynamic range majority data structures,,2011-03-20
10.1007/S002360050002,How to calculate symmetries of Petri nets,,2017-03-20
10.1007/978-3-642-03456-5_8,Some Results for Elementary Operations,,2015-03-20
10.1090/S0002-9947-05-03738-4,The bergman metric and the pluricomplex green function,,2017-03-20
10.1007/3-540-45995-2_26,Ancestor Problems on Pure Pointer Machines,,2019-03-20
10.1007/s004530010036,The Temporal Precedence Problem,,2012-03-20
10.1016/S0020-0190(02)00428-3,The Level-Ancestor problem on Pure Pointer Machines,,2019-03-20
10.1007/978-0-387-35608-2_14,An Efficient Parallel Pointer Machine Algorithm for the NCA Problem,,2013-03-20
10.1016/S0096-0551(02)00004-8,An optimal data structure to handle dynamic environments in non-deterministic computations,,2012-03-20
10.1007/978-3-642-25591-5_17,Dynamic Range Majority Data Structures,,2012-03-20
10.1007/3-540-45471-3_44,An Optimal Algorithm for Finding NCA on Pure Pointer Machines,,2015-03-20
10.1007/3-540-45022-X_8,Improved Algorithms for Finding Level Ancestors in Dynamic Trees,,2017-03-20
10.1007/BF00244512,Designing deductive databases,,2011-03-20
10.1007/978-3-030-13435-8_11,Equivalence Checking of Prefix-Free Transducers and Deterministic Two-Tape Automata,,2011-03-20
10.1007/978-3-319-21500-6_23,Multi-sequential Word Relations,,2015-03-20
10.2178/JSL/1318338854,Automatic structures of bounded degree revisited,,2018-03-20
10.4213/MZM3084,Конечно-автоматные преобразования строго почти периодических последовательностей@@@Finite-automaton transformations of strictly almost-periodic sequences,,2012-03-20
10.1007/978-3-030-24886-4_7,Characterizing the Valuedness of Two-Way Finite Transducers,,2014-03-20
10.1007/978-3-642-25535-9_1,Computing Degree of Parallelism for BPMN Processes,,2014-03-20
10.4230/LIPIcs.STACS.2008.1324,On the decomposition of k-valued rational relations,,2013-03-20
10.4230/LIPIcs.ICALP.2016.125,On Equivalence and Uniformisation Problems for Finite Transducers,,2019-03-20
10.1007/978-3-319-98654-8_25,A Pattern Logic for Automata with Outputs,,2019-03-20
10.3103/S1066369X1001007X,Almost periodicity  finite automata mappings  and related effectiveness issues,,2014-03-20
10.25596/jalc-2008-207,A Combinatorial Study of k-Valued Rational Relations,,2012-03-20
10.1007/978-3-662-55751-8_33,Automatic Kolmogorov Complexity and Normality Revisited,,2016-03-20
10.1007/BF01192143,Equivalence of finite-valued tree transducers is decidable,,2011-03-20
10.1007/978-3-540-30550-7_10,On the Maximum Coefficients of Rational Formal Series in Commuting Variables,,2014-03-20
10.3233/COM-150050,Lossiness of communication channels modeled by transducers,,2020-03-20
10.1007/978-3-642-22012-8_1,Nondeterministic Streaming String Transducers,,2011-03-20
10.4230/LIPIcs.FSTTCS.2014.133,Finite-Valued Weighted Automata,,2012-03-20
10.1007/S11006-006-0191-7,Finite-automaton transformations of strictly almost-periodic sequences,,2015-03-20
10.1090/S0002-9947-2013-05766-2,The isomorphism problem on classes of automatic structures with transitive relations,,2014-03-20
10.1007/978-3-319-08846-4_16,On the Ambiguity  Finite-Valuedness  and Lossiness Problems in Acceptors and Transducers,,2019-03-20
10.1007/978-3-540-70583-3_32,Visibly Pushdown Transducers,,2015-03-20
10.1109/ICS51289.2020.00033,On the Valuedness of Symbolic Finite Transducers,,2015-03-20
10.1007/978-3-540-85238-4_48,On the Decidability of Bounded Valuedness for Transducers,,2016-03-20
10.1007/978-3-642-22256-6_18,On the Containment and Equivalence Problems for GSMs  Transducers  and Linear CFGs,,2018-03-20
10.1007/978-3-540-27812-2_3,Rational Relations as Rational Series,,2018-03-20
10.2168/LMCS-11(3:14)2015,Quantitative Languages Defined by Functional Automata,,2011-03-20
10.1007/s00224-005-1265-8,Local Limit Properties for Pattern Statistics and Rational Models,,2018-03-20
10.1007/978-3-642-38771-5_24,Some Decision Questions Concerning the Time Complexity of Language Acceptors,,2012-03-20
10.1016/j.jcss.2020.12.003,Automatic Kolmogorov complexity  normality  and finite-state dimension revisited,,2015-03-20
10.1142/S0129054115400092,On the Ambiguity and Finite-Valuedness Problems in Acceptors and Transducers,,2012-03-20
10.4230/LIPIcs.STACS.2017.34,On the Decomposition of Finite-Valued Streaming String Transducers,,2011-03-20
10.1007/978-3-642-24897-9_12,Where Automatic Structures Benefit from Weighted Automata,,2019-03-20
10.1007/978-3-642-04027-6_27,Automatic structures of bounded degree revisited,,2019-03-20
10.1007/978-3-540-85780-8_20,On the Decidability of the Equivalence for k-Valued Transducers,,2015-03-20
10.1142/S0129054118400075,Multi-Sequential Word Relations,,2019-03-20
10.1134/S0032946015030059,Algorithmic aspects of decomposition and equivalence of finite-valued transducers,,2019-03-20
10.1016/S0304-3975(02)00847-2,Almost periodic sequences,,2011-03-20
10.1007/978-3-319-08019-2_23,Lossiness of Communication Channels Modeled by Transducers,,2018-03-20
10.4230/LIPIcs.STACS.2020.48,Observation and Distinction. Representing Information in Infinite Games,,2014-03-20
10.1142/s0129054120410038,A Pattern Logic for Automata with Outputs,,2017-03-20
10.13164/MA.2012.02,RULE-RESTRICTED AUTOMATON-GRAMMAR TRANSDUCERS: POWER AND LINGUISTIC APPLICATIONS,,2017-03-20
10.1007/978-3-319-23021-4_19,Equivalence Checking Problem for Finite State Transducers over Semigroups,,2020-03-20
10.1109/LICS.2010.10,The Isomorphism Problem on Classes of Automatic Structures,,2013-03-20
10.1007/s00224-009-9206-6,Lexicographic Decomposition of k-Valued Transducers,,2016-03-20
10.1007/978-3-642-40213-5_4,Delta Modeling and Model Checking of Product Families,,2013-03-20
10.1016/J.DIIN.2019.07.006,A formal model for event reconstruction in digital forensic investigation,,2016-03-20
10.1016/j.compind.2014.12.007,Behavioral modeling and automated verification of a Cloud-based framework to share the knowledge and skills of human resources,,2020-03-20
10.1016/j.eswa.2015.03.035,A formal approach for the specification and verification of a Trustworthy Human Resource Discovery mechanism in the Expert Cloud,,2017-03-20
10.1016/j.scico.2014.07.005,Timed Rebeca schedulability and deadlock freedom analysis using bounded floating time transition system,,2016-03-20
10.1007/978-3-642-24933-4_3,Ten Years of Analyzing Actors: Rebeca Experience,,2013-03-20
10.1145/2541329.2541335,Analysing timed Rebeca using McErlang,,2020-03-20
10.1145/2414639.2414645,Timed-rebeca schedulability and deadlock-freedom analysis using floating-time transition system,,2014-03-20
10.4204/EPTCS.58.1,Modelling and Simulation of Asynchronous Real-Time Systems using Timed Rebeca,,2019-03-20
10.1007/s00165-017-0429-z,Modeling and efficient verification of wireless ad hoc networks,,2012-03-20
10.1145/3092282.3092294,LeeTL: LTL with quantifications over model objects,,2015-03-20
10.1145/2687357.2687365,Event-Based Analysis of Timed Rebeca Models using SQL,,2013-03-20
10.1109/ASE.2013.6693062,Constraint-based automatic symmetry detection,,2014-03-20
10.1007/978-3-030-63461-2_10,Active Objects with Deterministic Behaviour,,2013-03-20
10.1109/COMPSAC48688.2020.0-137,Developing Safe Smart Contracts,,2020-03-20
10.1007/978-3-030-50029-0_24,Formal Modeling and Analysis of Medical Systems,,2012-03-20
10.1016/j.scico.2014.01.008,Modelling and simulation of asynchronous real-time systems using Timed Rebeca,,2018-03-20
10.1007/s11704-017-6189-3,Precise slicing of interprocedural concurrent programs,,2020-03-20
10.1016/j.scico.2013.06.009,Reducing the verification cost of evolving product families using static analysis techniques,,2018-03-20
10.1007/978-3-642-12029-9_22,Evaluating Ordering Heuristics for Dynamic Partial-Order Reduction Techniques,,2015-03-20
10.1109/DS-RT47707.2019.8958682,Reactive Actors: Isolation for Efficient Analysis of Distributed Systems,,2013-03-20
10.1016/j.cl.2016.01.004,Statistical model checking of Timed Rebeca models,,2020-03-20
10.1016/j.scico.2017.11.004,An efficient TCTL model checking algorithm and a reduction technique for verification of timed actor models,,2020-03-20
10.1145/1880050.1880055,Sysfier: Actor-based formal verification of SystemC,,2018-03-20
10.1007/978-3-030-50029-0,Coordination Models and Languages: 22nd IFIP WG 6.1 International Conference  COORDINATION 2020  Held as Part of the 15th International Federated Conference on Distributed Computing Techniques  DisCoTec 2020  Valletta  Malta  June 15–19  2020  Proceedings,,2014-03-20
10.1145/3122848,A Survey of Active Object Languages,,2018-03-20
10.1007/978-3-319-24644-4_5,Modeling and Efficient Verification of Broadcasting Actors,,2020-03-20
10.1007/978-3-662-49122-5_22,Regular Symmetry Patterns,,2012-03-20
10.15398/jlm.v3i1.94,A logical approach to grammar description,,2012-03-20
10.1016/j.tcs.2018.03.014,Multiple Context-Free Tree Grammars: Lexicalization and Characterization,,2011-03-20
10.14232/actacyb.22.2.2015.9,Context-Free Tree Grammars are as Powerful as Context-Free Jungle Grammars,,2014-03-20
10.1007/978-3-319-15579-1_51,Towards More Precise Rewriting Approximations,,2014-03-20
10.1007/3-540-29953-x_10,An Automata-Theoretic Approach to,,2015-03-20
10.1016/j.ic.2015.04.005,The generative power of delegation networks,,2016-03-20
10.18653/v1/W16-2407,EM-Training for Weighted Aligned Hypergraph Bimorphisms,,2012-03-20
10.1007/978-3-540-30203-2_25,Parsing String Generating Hypergraph Grammars,,2019-03-20
10.1007/978-3-540-25959-6_12,Modeling Discontinuous Constituents with Hypergraph Grammars,,2012-03-20
10.1016/J.JCSS.2017.01.006,Towards more precise rewriting approximations,,2015-03-20
10.4204/EPTCS.310.1,Experience Report: Towards Moving Things with Types - Helping Logistics Domain Experts to Control Cyber-Physical Systems with Type-Based Synthesis,,2015-03-20
10.1007/978-3-540-24727-2_26,Tree Transducers and Tree Compressions,,2013-03-20
10.4204/EPTCS.284.2,User Support for the Combinator Logic Synthesizer Framework,,2016-03-20
10.1016/j.is.2018.03.002,Grammar-Based Graph Compression,,2017-03-20
10.1007/11841883_11,String Generating Hypergraph Grammars with Word Order Restrictions,,2017-03-20
10.1093/comjnl/bxw001,Phrase-Structure Grammars: Normal Forms and Reduction,,2012-03-20
10.1007/BF00991838,An algebraic technique for context-sensitive parsing,,2013-03-20
10.1007/BF00263503,Scattered versus context-sensitive rewriting,,2014-03-20
10.1007/BF01768467,Size  index  and context-sensitivity of controlled partition grammars,,2015-03-20
10.1007/978-1-4939-0369-6_21,Chapter 21 Concluding Remarks,,2011-03-20
10.1016/j.tcs.2006.07.059,Iterated sequential transducers as language generating devices,,2018-03-20
10.1201/9780203009642.ch12,On Iterated Sequential Transducers,,2019-03-20
10.1051/ITA:2008008,A Hierarchy of Automatic $\omega$-Words having a Decidable MSO Theory,,2015-03-20
10.1145/2603088.2603152,On periodically iterated morphisms,,2019-03-20
10.1007/978-3-540-69429-8_51,A Distributed Broadcast Algorithm for Wireless Mobile Ad Hoc Networks,,2017-03-20
10.1016/J.PHPRO.2012.02.287,An Agent-based Distributed QoS Multicast Routing Algorithm,,2017-03-20
10.1016/j.jpdc.2006.09.003,Utility-based QoS optimisation strategy for multi-criteria scheduling on the grid,,2014-03-20
10.1016/J.PARCO.2005.02.011,A distributed utility-based two level market solution for optimal resource scheduling in computational grid,,2013-03-20
10.1109/ICFN.2009.51,Performance Evaluation of Destination-Sequenced Distance-Vector (DSDV) Routing Protocol,,2015-03-20
10.1007/S10489-006-9651-8,Multi economic agent interaction for optimizing the aggregate utility of grid users in computational grid,,2014-03-20
10.1016/J.JCSS.2006.01.003,A distributed multiple dimensional QoS constrained resource scheduling optimization policy in computational grid,,2014-03-20
10.1016/j.micpro.2004.10.008,A distributed decomposition policy for computational grid resource allocation optimization based on utility functions,,2019-03-20
10.1007/11745693_22,An Entropy-Based Stability QoS Multicast Routing Protocol in Ad Hoc Network,,2013-03-20
10.1007/11573937_39,An Efficient Distributed Broadcasting Algorithm for Ad Hoc Networks,,2019-03-20
10.1515/arh-2002-0003,Magneto Sweep – A New Method for Characterizing the Viscoelastic Properties of Magneto-Rheological Fluids,,2019-03-20
10.1002/CPE.1106,An optimization approach for decentralized QoS‐based scheduling based on utility and pricing in Grid computing,,2015-03-20
10.1109/ICPP.2005.16,A utility-based two level market solution for optimal resource allocation in computational grid,,2019-03-20
10.1016/J.INS.2004.02.008,A QoS multicast routing protocol for dynamic group topology,,2019-03-20
10.1109/ITCC.2005.28,A QoS multicast routing protocol for mobile ad-hoc networks,,2015-03-20
10.1016/J.SYSARC.2003.12.002,The use of economic agents under price driven mechanism in grid resource management,,2014-03-20
10.1109/IAT.2006.36,An Energy Level Based Routing Protocol in Ad Hoc Networks,,2020-03-20
10.1109/ICMLC.2004.1378306,Research on algorithms for achieving self-stabilization of communication protocols,,2020-03-20
10.1016/j.advengsoft.2004.11.001,Utility driven dynamic resource allocation using competitive markets in computational grid,,2020-03-20
10.1109/ICCAE.2009.75,CBR Performance Evaluation over AODV and DSDV in RW Mobility Model,,2018-03-20
10.1504/IJCAT.2006.010769,Dynamic resource allocation for joint grid user and provider optimisation in computational grid,,2020-03-20
10.1007/s11277-014-2166-4,An Energy Level Based Routing Protocol in Ad Hoc Networks,,2018-03-20
10.1007/978-3-642-27848-8_652-1,Convex Graph Drawing,,2014-03-20
10.1142/S179383091000070X,Convex Drawings of Internally Triconnected Plane Graphs on O(N2) Grids,,2012-03-20
10.1109/ICIS.2010.124,An Attribute Graph Grammar Enabling Narrower Drawings of Trees,,2014-03-20
10.1201/9781420035315.ch52,Graph drawing,,2019-03-20
10.4230/LIPIcs.ISAAC.2018.39,Polyline Drawings with Topological Constraints,,2014-03-20
10.1142/S1793830909000257,On Open Rectangle-of-Influence and Rectangular Dual Drawings of Plane Graphs,,2011-03-20
10.1007/978-3-540-27798-9_34,Canonical Decomposition  Realizer  Schnyder Labeling and Orderly Spanning Trees of Plane Graphs,,2017-03-20
10.1007/978-3-642-10631-6_77,Convex Drawings of Internally Triconnected Plane Graphs on O(n2) Grids,,2015-03-20
10.1142/S0129054105002905,Canonical Decomposition  Realizer  Schnyder Labeling And Orderly Spanning Trees Of Plane Graphs,,2020-03-20
10.1109/ASAP.1990.145438,Calculus of space-optimal mappings of systolic algorithms on processor arrays,,2012-03-20
10.1007/978-3-642-02026-1_11,On Open Rectangle-of-Influence Drawings of Planar Graphs,,2013-03-20
10.1007/BF02086606,Drawing planar graphs using the canonical ordering,,2019-03-20
10.1201/b15385-9,Planar Straight-Line Drawing Algorithms,,2019-03-20
10.1007/978-3-030-00256-5_26,Convexity-Increasing Morphs of Planar Graphs,,2017-03-20
10.1007/s10878-011-9390-6,Minimum-segment convex drawings of 3-connected cubic plane graphs,,2016-03-20
10.4230/DagRep.7.2.64,Applications of Topology to the Analysis of 1-Dimensional Objects (Dagstuhl Seminar 17072),,2015-03-20
10.1145/2738054,Simultaneous PQ-Ordering with Applications to Constrained Embedding Problems,,2018-03-20
10.1587/TRANSINF.E97.D.413,Convex Grid Drawings of Plane Graphs with Pentagonal Contours,,2012-03-20
10.1007/978-3-540-24587-2_2,Drawing Plane Graphs,,2016-03-20
10.7155/jgaa.00249,Monotone Drawings of Graphs,,2015-03-20
10.1109/SNPD.2012.109,O(n) and O(n2) Time Algorithms for Drawing Problems of Tree-Structured Diagrams,,2013-03-20
10.1016/J.COMGEO.2019.07.007,Convexity-increasing morphs of planar graphs,,2013-03-20
10.1016/j.ipl.2004.06.009,A 1.235 lower bound on the number of points needed to draw all n-vertex planar graphs,,2016-03-20
10.1016/j.tcs.2019.12.016,Polyline drawings with topological constraints,,2014-03-20
10.1007/11940128_15,Convex Grid Drawings of Plane Graphs with Rectangular Contours,,2012-03-20
10.1007/978-3-642-14031-0_21,Minimum-Segment Convex Drawings of 3-Connected Cubic Plane Graphs,,2013-03-20
10.37394/23209.2020.17.13,Graph Drawing Approaches for Petri Net Models,,2014-03-20
10.1007/s00453-013-9790-3,Monotone Drawings of Graphs with Fixed Embedding,,2015-03-20
10.4230/DagRep.7.2.23,Beyond VR and AR: Reimagining Experience Sharing and Skill Transfer Towards an Internet of Abilities (Dagstuhl Seminar 17062),,2014-03-20
10.1142/S012905410600425X,Convex Grid Drawings of Four-connected Plane Graphs,,2018-03-20
10.1007/978-3-642-18469-7_2,Monotone Drawings of Graphs,,2017-03-20
10.26493/1855-3974.1109.6fe,Combinatorial configurations  quasiline arrangements  and systems of curves on surfaces,,2015-03-20
10.1109/SNPD.2013.76,Optimality and Complexity for Drawing Problems of Tree-Structured Diagrams,,2018-03-20
10.1007/978-3-540-24595-7_1,Confluent Drawings: Visualizing Non-planar Diagrams in a Planar Way,,2011-03-20
10.1007/s00236-016-0279-9,Parameterized linear temporal logics meet costs: still not costlier than LTL,,2018-03-20
10.1007/s10817-017-9410-z,Visibly Linear Temporal Logic,,2018-03-20
10.1016/j.tcs.2018.06.030,Visibly linear dynamic logic,,2020-03-20
10.1007/978-3-030-50026-9_12,Nested Regular Expressions Can Be Compiled to Small Deterministic Nested Word Automata,,2019-03-20
10.1007/978-3-030-50026-9,Computer Science – Theory and Applications: 15th International Computer Science Symposium in Russia  CSR 2020  Yekaterinburg  Russia  June 29 – July 3  2020  Proceedings,,2011-03-20
10.4230/LIPIcs.FSTTCS.2016.28,Visibly Linear Dynamic Logic,,2020-03-20
10.4204/EPTCS.193.11,Parameterized Linear Temporal Logics Meet Costs: Still not Costlier than LTL (full version),,2012-03-20
10.3233/FI-2013-785,Mutex Causality in Processes and Traces of General Elementary Nets,,2015-03-20
10.1007/978-3-642-03409-1_20,Closure Operators for Order Structures,,2016-03-20
10.3233/FI-2011-609,On Three Alternative Characterizations of Combined Traces,,2016-03-20
10.1007/978-3-642-13562-0_35,Simultaneity in Event Structures,,2016-03-20
10.3233/FI-2015-1224,Characterising Concurrent Histories,,2013-03-20
10.25596/jalc-2011-037,Feasible Proofs of Szpilrajn's Theorem - A Proof-Complexity Framework for Concurrent Automata,,2011-03-20
10.1007/978-3-642-13675-7_8,A Characterization of Combined Traces Using Labeled Stratified Order Structures,,2017-03-20
10.1109/ACSD.2012.9,Hasse Diagrams of Combined Traces,,2015-03-20
10.1007/978-3-642-21834-7_13,The Mutex Paradigm of Concurrency,,2019-03-20
10.1016/j.tcs.2018.03.003,Interval semantics for Petri nets with inhibitor arcs,,2014-03-20
10.1016/j.ic.2016.12.009,Modeling concurrency with interval traces,,2011-03-20
10.1007/978-3-642-32940-1_30,Modeling Interval Order Structures with Partially Commutative Monoids,,2017-03-20
10.1016/j.ic.2011.08.001,Modelling concurrency with comtraces and generalized comtraces,,2018-03-20
10.1016/J.IPL.2013.11.009,Folded Hasse diagrams of combined traces,,2019-03-20
10.1007/978-3-319-19488-2_4,On Interval Process Semantics of Petri Nets with Inhibitor Arcs,,2017-03-20
10.1007/BF00289017,The complexity of graph languages generated by hyperedge replacement,,2014-03-20
10.4204/EPTCS.3.9,On the Number of Membranes in Unary P Systems,,2018-03-20
10.1142/S0217595917500221,Online Single Machine Scheduling to Minimize the Maximum Starting Time,,2018-03-20
10.1007/s11227-018-2623-z,A new constant-time parallel algorithm for merging,,2012-03-20
10.1142/S0129054105002899,Randomized Sorting On The Pops Network,,2011-03-20
10.1016/j.jpdc.2003.11.003,Efficient parallel solutions of linear algebraic circuits,,2018-03-20
10.1016/j.ipl.2004.02.007,Probabilistic integer sorting,,2016-03-20
10.1007/BF01758753,Optimal randomized parallel algorithms for computational geometry,,2016-03-20
10.1109/ISCC.2008.4625708,Efficient sorting algorithms for the cell broadband engine,,2015-03-20
10.2478/squa-2013-0003,Lightning-Caused and Human-Induced Forest Fires as Evidenced By Pteridium Spores in Selected Quaternary Records from Poland,,2013-03-20
10.1145/2755573.2755597,A Top-Down Parallel Semisort,,2019-03-20
10.1016/j.ipl.2012.09.003,An improved reliability bound of a probabilistic parallel integer sorting algorithm,,2017-03-20
10.1145/2312005.2312020,Brief announcement: efficient cache oblivious algorithms for randomized divide-and-conquer on the multicore model,,2018-03-20
10.1007/978-3-642-54108-7_2,Static Analysis of Programs with Imprecise Probabilistic Inputs,,2020-03-20
10.1017/S0960129515000547,Isomorphism theorems between models of mixed choice,,2019-03-20
10.1007/3-540-44880-2_16,Probabilistic Invariants for Probabilistic Machines,,2019-03-20
10.1007/s11704-009-0016-4,Measurement of refinement and correctness,,2012-03-20
10.1007/978-3-642-05089-3_5,Security  Probability and Nearly Fair Coins in the Cryptographers' Café,,2017-03-20
10.1145/380752.380871,Quantitative solution of omega-regular games380872,,2015-03-20
10.1109/ISCC.2008.4625616,Operational semantics of probabilistic Kleene algebra with tests,,2012-03-20
10.1145/587051.587066,Verifying cross-cutting features as open systems,,2014-03-20
10.1007/3-540-44880-2_15,Probabilistic Termination in B,,2014-03-20
10.1016/j.apal.2008.06.020,A Minkowski type duality mediating between state and predicate transformer semantics for a probabilistic nondeterministic language,,2011-03-20
10.1007/3-540-36078-6_20,Games  Probability and the Quantitative µ-Calculus qMµ,,2011-03-20
10.1007/s11704-008-0004-0,Semantics of sub-probabilistic programs,,2018-03-20
10.23638/LMCS-13(1:2)2017,Mixed powerdomains for probability and nondeterminism,,2014-03-20
10.1007/10722010_6,Quantum Programming,,2011-03-20
10.1016/S0304-3975(02)00612-6,Almost-certain eventualities and abstract probabilities in the quantitative temporal logic qTL,,2014-03-20
10.1016/S1571-0661(04)80876-4,Almost-Certain Eventualities and Abstract Probabilities in the Temporal Logic PTL,,2017-03-20
10.1109/APSEC.2001.991501,Cost analysis of games  using program logic,,2016-03-20
10.1016/j.jlamp.2014.09.003,Full abstraction for non-deterministic and probabilistic extensions of PCF I: The angelic cases,,2019-03-20
10.1145/1182613.1182616,Results on the quantitative μ-calculus qMμ,,2014-03-20
10.1017/S0960129509007555,Predicate transformers for extended probability and non-determinism,,2017-03-20
10.1007/BF01211297,Limits of formal methods,,2019-03-20
10.1145/2069216.2069252,Automatic code generation from event-B models,,2015-03-20
10.1007/978-1-4471-5260-6_7,EB2ALL: An Automatic Code Generation Tool,,2011-03-20
10.1007/978-3-030-59257-8,Understanding Programming Languages,,2017-03-20
10.1007/978-3-642-13089-2_9,Avoidable Binary Patterns in Partial Words,,2014-03-20
10.1007/978-3-642-21254-3_11,Unary Pattern Avoidance in Partial Words Dense with Holes,,2014-03-20
10.1007/978-3-642-35926-2_23,Computing the Partial Word Avoidability Indices of Ternary Patterns,,2019-03-20
10.1016/j.tcs.2013.08.010,Strict bounds for pattern avoidance,,2013-03-20
10.1016/j.tcs.2016.12.022,On the aperiodic avoidability of binary patterns with variables and reversals,,2016-03-20
10.1007/978-3-642-35926-2,Combinatorial Algorithms,,2019-03-20
10.1051/ita/2016014,Computing Depths of Patterns,,2012-03-20
10.25596/jalc-2017-209,Pattern Avoidance in Partial Words Dense with Holes,,2015-03-20
10.1016/j.jda.2013.06.007,Computing the partial word avoidability indices of binary patterns,,2014-03-20
10.3233/FI-2012-676,Repetition-freeness with Cyclic Relations and Chain Relations,,2011-03-20
10.1007/978-3-319-04921-2_14,Computing Depths of Patterns,,2019-03-20
10.1007/978-3-642-38771-5_11,Strict Bounds for Pattern Avoidance,,2011-03-20
10.1007/3-540-48447-7,Algorithms and Data Structures,,2017-03-20
10.2478/eces-2013-0042,Study on Properties of Alloys with Gallium  Antimony and Zinc from Recycling,,2016-03-20
10.4230/LIPIcs.ISAAC.2019.35,On Optimal Balance in B-Trees: What Does It Cost to Stay in Perfect Shape?,,2019-03-20
10.1007/978-3-319-08404-6_11,B-slack Trees: Space Efficient B-Trees,,2014-03-20
10.14778/3402707.3402743,Storing matrices on disk,,2015-03-20
10.1007/BF00299632,Transforming Unbalanced Multiway trees into a practical external data structure,,2015-03-20
10.1007/BF00288542,On the space optimizing effect of eliminating single productions from LR parsers,,2018-03-20
10.5120/17191-7379,Empirical Analysis of Context Free Grammars and Parse Trees,,2018-03-20
10.1016/0020-0190(81)90015-6,An Improvement to Immediate Error Detection in Strong LL(1) Parsers,,2017-03-20
10.1016/0096-0551(80)90006-5,On the Role of Error Productions in Syntactic Error Correction,,2015-03-20
10.1007/BF03036468,An observation on suffix redundancy in LL(1) error repair,,2015-03-20
10.1145/317164.317173,VATS —the visible attributed translation system,,2015-03-20
10.1007/s00236-010-0115-6,LR error repair using the A* algorithm,,2016-03-20
10.1145/131080.131090,A bibliography on syntax error handling in context free languages,,2014-03-20
10.1007/s002360050063,An observation on suffix redundancy in LL(1) error repair,,2016-03-20
10.1002/spe.4380141107,A language independent error recovery method for LL(1) parsers,,2017-03-20
10.4233/UUID:5B485A4A-E502-42D9-8BD2-21C02226ED91,Language-parametric Techniques for Language-Specific Editors,,2014-03-20
10.29007/2NDP,Parse Condition: Symbolic Encoding of LL(1) Parsing,,2017-03-20
10.1145/390010.808245,The Poe language-based editor project,,2016-03-20
10.1145/563857.563804,Repairing Syntax Errors in LR-based Parsers,,2014-03-20
10.1145/44501.44505,Determining the extent of lookahead in syntactic error repair,,2016-03-20
10.1145/357139.357145,Locally Least-Cost Error Recovery in Earley's Algorithm,,2015-03-20
10.2478/v10129-010-0019-1,Protection of segetal flora and vegetation in Poland (historical outline),,2013-03-20
10.1145/800230.806982,A forward move algorithm for LL and LR parsers,,2013-03-20
10.1016/0020-0190(86)90092-X,Efficient Computation of the Locally Least-Cost Insertion String for the LR Error Repair,,2019-03-20
10.1145/210184.210193,Error repair in shift-reduce parsers,,2015-03-20
10.1145/800176.809969,Locally minimum-distance correction of syntax errors in programming languages,,2013-03-20
10.1016/0020-0190(94)90029-9,An Efficient Computation of Right Context for LR-Based Error Repair,,2015-03-20
10.1145/586088.586092,Repairing syntax errors in LR parsers,,2013-03-20
10.1145/800020.808245,The POE Language-Based Editor Project,,2016-03-20
10.1016/S0019-9958(82)91016-6,On LL(k) Parsing,,2014-03-20
10.1145/504083.504084,Error repair with validation in LR-based parsing,,2011-03-20
10.1145/2400676.2400678,Natural and Flexible Error Recovery for Generated Modular Language Environments,,2013-03-20
10.1016/J.SCICO.2018.09.008,Unifying modal interface theories and compositional input/output conformance testing,,2018-03-20
10.1145/2776892,Parametrised Modal Interface Automata,,2014-03-20
10.1007/978-3-319-33693-0_11,A Generalised Theory of Interface Automata  Component Compatibility and Error,,2014-03-20
10.1145/2984641,Testing Preorders for dMTS,,2011-03-20
10.1007/978-3-319-63121-9_3,30 Years of Modal Transition Systems: Survey of Extensions and Analysis,,2012-03-20
10.1561/1000000053,Contracts for System Design,,2011-03-20
10.1016/j.tcs.2016.06.011,Nondeterministic Modal Interfaces,,2019-03-20
10.1007/978-3-030-64276-1_11,Compositionality of Safe Communication in Systems of Team Automata,,2015-03-20
10.32913/mic-ict-research.v3.n12.317,A Formal Method for Specifying The Interface of Components in Real-time Concurrent Systems,,2012-03-20
10.1016/j.tcs.2017.06.011,ACTL for Modal Interface Automata,,2015-03-20
10.1007/s00236-018-0319-8,A generalised theory of Interface Automata  component compatibility and error,,2016-03-20
10.1007/978-3-319-59746-1_14,Communication Requirements for Team Automata,,2017-03-20
10.1007/978-3-030-64276-1,Theoretical Aspects of Computing – ICTAC 2020: 17th International Colloquium  Macau  China  November 30 – December 4  2020  Proceedings,,2017-03-20
10.1016/j.tcs.2013.01.024,Correctness of concurrent executions of closed nested transactions in transactional memory systems,,2013-03-20
10.1080/00207160412331284051,Serializable histories in quantified propositional temporal logic,,2013-03-20
10.1007/978-3-642-17679-1_9,Correctness of Concurrent Executions of Closed Nested Transactions in Transactional Memory Systems,,2015-03-20
10.1145/3212734.3212742,Locking Timestamps versus Locking Objects,,2012-03-20
10.1515/astro-2018-0009,Orbital Period Variations in the NY Vir System  Revisited in the Light of New Data,,2016-03-20
10.1145/2370816.2370882,Speculative parallelization needs rigor,,2011-03-20
10.1145/2541228.2555301,HPar: A practical parallel parser for HTML--taming HTML complexities for parallel parsing,,2017-03-20
10.1145/2541940.2541989,"Challenging the ""embarrassingly sequential"": parallelizing finite state machine-based computations through principled speculation",,
10.1145/3299869.3319898,Speculative Distributed CSV Data Parsing for Big Data Analytics,,2012-03-20
10.1145/2694344.2694369,On-the-Fly Principled Speculation for FSM Parallelization,,2018-03-20
10.1016/J.EIJ.2010.06.001,DisBlue+: A distributed annotation-based C# compiler,,2013-03-20
10.1088/0067-0049/194/2/28,THE EVOLUTION OF CATACLYSMIC VARIABLES AS REVEALED BY THEIR DONOR STARS,,2014-03-20
10.1016/j.future.2011.04.007,A stochastic scheduling algorithm for precedence constrained tasks on Grid,,2016-03-20
10.1007/s10951-009-0103-2,Stochastic scheduling on parallel machines to minimize discounted holding costs,,2016-03-20
10.1007/978-3-319-93725-0,Arbres pour l'algorithmique,,2011-03-20
10.1007/978-3-642-40273-9_11,A Survey on Priority Queues,,2012-03-20
10.1142/S0129054106004510,A Priority Queue with the Working-set Property,,2015-03-20
10.1007/978-3-540-45078-8_10,Distribution-Sensitive Binomial Queues,,2018-03-20
10.1007/BF02247934,Continuous models that are equivalent to randomness for the analysis of many sorting algorithms,,2018-03-20
10.1016/j.tcs.2003.09.001,ER modelling from first relational principles,,2020-03-20
10.1007/BF01955045,Recurrence relations on heaps,,2011-03-20
10.1145/2103746.2103770,Functional programs as compressed data,,2017-03-20
10.18725/OPARU-1701,The project NoName - a functional programming language with its development environment,,2011-03-20
10.1007/11737414_7,XML Type Checking Using High-Level Tree Transducer,,2016-03-20
10.1007/s10990-013-9093-z,Functional programs as compressed data,,2016-03-20
10.2197/ipsjjip.27.411,Using Algebraic Properties and Function Fusion to Evaluate Tree Accumulations in Parallel,,2013-03-20
10.4230/LIPIcs.ICALP.2017.97,Pumping Lemma for Higher-order Languages,,2014-03-20
10.4230/LIPIcs.ICALP.2016.111,On Word and Frontier Languages of Unsafe Higher-Order Grammars,,2019-03-20
10.1007/978-3-642-25318-8_17,Macro Tree Transformations of Linear Size Increase Achieve Cost-Optimal Parallelism,,2014-03-20
10.1007/978-3-642-17164-2_22,Verification of Tree-Processing Programs via Higher-Order Model Checking,,2015-03-20
10.1017/S0960129513000054,Verification of tree-processing programs via higher-order mode checking,,2015-03-20
10.1007/s00224-008-9125-y,Composing Stack-Attributed Tree Transducers,,2017-03-20
10.1007/s00236-019-00360-8,Linear-bounded composition of tree-walking tree transducers: linear size increase and complexity,,2020-03-20
10.1007/978-3-319-23021-4_11,A Chomsky-Schützenberger Theorem for Weighted Automata with Storage,,2012-03-20
10.1016/j.ic.2019.104447,Weighted automata with storage,,2012-03-20
10.1145/1706299.1706355,Higher-order multi-parameter tree transducers and recursion schemes for program verification,,2015-03-20
10.1007/978-3-030-21363-3_12,Rational Weighted Tree Languages with Storage and the Kleene-Goldstine Theorem,,2014-03-20
10.23638/DMTCS-20-1-26,Weighted Regular Tree Grammars with Storage,,2014-03-20
10.1142/S0129054108006200,Watson-Crick Bordered Words and their Syntactic Monoid,,2019-03-20
10.1007/s11047-009-9131-2,Watson–Crick palindromes in DNA computing,,2019-03-20
10.25596/jalc-2004-293,Descriptional Complexity of Error/Edit Systems,,2013-03-20
10.1109/BIC-TA.2011.22,Bordered Factors of a Finite Word,,2015-03-20
10.1007/978-3-642-33860-1_13,Generating DNA Code Words Using Forbidding and Enforcing Systems,,2015-03-20
10.1007/s11047-004-4009-9,Involution codes: with application to DNA coded languages,,2013-03-20
10.1007/978-4-431-88981-6_9,Towards the Sequence Design Preventing Pseudoknot Formation,,2019-03-20
10.1007/978-3-540-77962-9_29,Watson-Crick Conjugate and Commutative Words,,2012-03-20
10.1007/11779148_18,Involution Solid and Join codes,,2017-03-20
10.1007/s00236-007-0041-4,The syntactic monoid of hairpin-free languages,,2020-03-20
10.1007/11493785_15,Bond-Free Languages: Formalizations  Maximality and Construction Methods,,2014-03-20
10.1201/9781584888215-C31,DNA computing: a research snapshot,,2011-03-20
10.1007/978-3-540-92910-9_33,DNA Computing - Foundations and Implications,,2015-03-20
10.1007/s10852-008-9087-8,Construction of Constant GC-Content DNA Codes via a Variable Neighbourhood Search Algorithm,,2018-03-20
10.1007/11779148_17,Characterizing DNA Bond Shapes Using Trajectories,,2016-03-20
10.1080/09720529.2007.10698134,k-involution codes and related sets,,2016-03-20
10.1016/j.jcss.2008.08.002,On pseudoknot-bordered words and their properties,,2014-03-20
10.1109/msp.2004.1328093,DNA computing from a signal processing viewpoint,,2012-03-20
10.1109/IEMBS.2003.1281002,Static and dynamic properties of DNA languages,,2020-03-20
10.1007/978-3-540-24635-0_17,Methods for Constructing Coded DNA Languages,,2020-03-20
10.1080/08948550213852,DNA Computing: Models and Implementations,,2015-03-20
10.1007/11753681_12,Hairpin Structures in DNA Words,,2017-03-20
10.1007/11925903_10,DNA Codes and Their Properties,,2011-03-20
10.1007/978-3-540-24628-2_8,Languages of DNA Based Code Words,,2016-03-20
10.1007/3-540-30296-4_8,Involution Solid Codes,,2018-03-20
10.1007/978-0-387-73637-2_4,Word Design for DNA Computing,,2011-03-20
10.1142/S0129054107005145,Involutively Bordered Words,,2018-03-20
10.1007/11493785_16,Preventing Undesirable Bonds Between DNA Codewords,,2017-03-20
10.1142/S0129054105003467,Bond-free languages: formalizations  maximality and construction methods,,2020-03-20
10.1109/CEC.2004.1331123,CODEGEN: the generation and testing of DNA code words,,2016-03-20
10.1016/j.tcs.2004.11.004,Linear constructions for DNA codes,,2016-03-20
10.1007/11493785_20,Partial Words for DNA Coding,,2019-03-20
10.1016/j.tcs.2004.12.032,On properties of bond-free DNA languages,,2016-03-20
10.1109/32.988494,Improving the Precision of INCA by Eliminating Solutions with Spurious Cycles,,2018-03-20
10.1109/LICS.2017.8005144,Static analysis of deterministic negotiations,,2018-03-20
10.1007/BF01379317,An attribute grammar approach to compiler optimization of intra-module interprocess communication,,2015-03-20
10.1007/BF02828240,A heuristic method for temporal analysis based on petri net,,2020-03-20
10.1007/BF02090765,Communicating processes  scheduling  and the complexity of nontermination,,2018-03-20
10.1007/BF01407862,Data flow analysis of distributed communicating processes,,2012-03-20
10.1016/j.ins.2011.11.034,An enhanced flow analysis technique for detecting unreachability faults in concurrent systems,,2020-03-20
10.1007/978-3-030-12797-8_4,Tissue P Systems with Point Mutation Rules,,2015-03-20
10.1016/S0304-3975(02)00541-8,Hybrid modes in cooperating distributed grammar systems: combining the t-mode with the modes le k and =k,,2016-03-20
10.25596/jalc-1997-079,Graph-Controlled Grammars as Language Acceptors,,2013-03-20
10.25596/jalc-2007-117,Refining the Nonterminal Complexity of Graph-Controlled  Programmed  and Matrix Grammars,,2013-03-20
10.1007/978-3-642-36751-9_9,Sequential P Systems with Regular Control,,2017-03-20
10.1016/S0304-3975(02)00656-4,Nonterminal complexity of programmed grammars,,2017-03-20
10.1007/978-1-4939-0369-6_7,Chapter 7 On Erasing Rules and Their Elimination,,2020-03-20
10.1007/3-540-49477-4_24,Regulated Grammars with Leftmost Derivation,,2015-03-20
10.1007/978-3-030-17402-6_11,Extension of vertex cover and independent set in some classes of graphs and generalizations,,2020-03-20
10.1023/A:1009954606346,Regulated Grammars under Leftmost Derivation,,2011-03-20
10.25596/jalc-2002-487,Graph-Controlled Cooperating Distributed Grammar Systems with Singleton Components,,2020-03-20
10.1016/j.tcs.2004.12.029,On state-alternating context-free grammars,,2014-03-20
10.1142/S0129054112400011,In Memoriam Chandra Kintala,,2012-03-20
10.4204/EPTCS.31.4,Remembering Chandra Kintala,,2012-03-20
10.1016/j.tcs.2004.03.070,Minimizing finite automata is computationally hard,,2018-03-20
10.1142/S0129054117500137,Worst Case Branching and Other Measures of Nondeterminism,,2011-03-20
10.1007/978-3-319-09704-6_14,Computation Width and Deviation Number,,2017-03-20
10.1145/235767.235769,Limited nondeterminism,,2018-03-20
10.1007/978-3-642-39310-5_22,Finite Nondeterminism vs. DFAs with Multiple Initial States,,2011-03-20
10.1007/978-3-319-04298-5_39,Unary NFAs with Limited Nondeterminism,,2014-03-20
10.3217/jucs-008-02-0193,Descriptional Complexity of Machines with Limited Resources,,2012-03-20
10.1007/978-3-642-39310-5_21,Comparisons between Measures of Nondeterminism on Finite Automata,,2016-03-20
10.14232/actacyb.23.1.2017.9,Ambiguity  Nondeterminism and State Complexity of Finite Automata,,2011-03-20
10.1051/ITA:2005027,Distance desert automata and the star height problem,,2014-03-20
10.1016/j.jcss.2005.04.001,Measuring nondeterminism in pushdown automata,,2018-03-20
10.1007/BF01202281,Distance automata having large finite distance or finite ambiguity,,2015-03-20
10.4230/LIPIcs.DISC.2018.14,Multi-Shot Distributed Transaction Commit,,2015-03-20
10.5075/epfl-thesis-8761,The Complexity of Reliable and Secure Distributed Transactions,,2017-03-20
10.1145/3034786.3034799,How Fast can a Distributed Transaction Commit?,,2016-03-20
10.1007/978-3-642-29709-0_1,Petri Net Distributability,,2019-03-20
10.17485/IJST/2016/V9I6/82655,Concurrency in Intuitionistic Linear-Time μ-Calculus: A Case study of Manufacturing System,,2019-03-20
10.1016/S0304-3975(02)00006-3,Nivat's processes and their synchronization,,2017-03-20
10.1007/BF00267866,The Merlin-Randell problem of train journeys,,2013-03-20
10.2478/afepuc-2019-0016,The Effects of a 6-Week Strength and Endurance Circuit Training on Body Image of High School Girls,,2017-03-20
10.1007/BF00262973,Synchronized behaviours of processes and rational relations,,2011-03-20
10.1016/0306-4379(91)90032-5,Understanding process structure diagrams,,2013-03-20
10.1007/978-3-319-91268-4_2,Analysis and Synthesis of Weighted Marked Graph Petri Nets,,2017-03-20
10.1007/978-3-319-73117-9_15,Computational Complexity of Atomic Chemical Reaction Networks,,2015-03-20
10.1007/3-540-45651-1,Modular Specification and Verification of Object-Oriented Programs,,2015-03-20
10.1007/BF02276638,Algebraic and functional specification of an interactive serializable database interface,,2011-03-20
10.1515/trser-2015-0090,The Effects of Enclosing Cultivated Land on the Physical Properties of Soil in the Loess Hill Region of Ordos,,2011-03-20
10.1515/pomr-2017-0123,Research on Intelligent Diagnosis Method for Large-Scale Ship Engine Fault in Non-Deterministic Environment,,2017-03-20
10.17877/DE290R-16056,An Approach to Algebraic Semantics of Object-Oriented Languages,,2013-03-20
10.1515/acph-2016-0045,Charge transfer interaction of organic p-acceptors with the anti-hyperuricemic drug allopurinol: Insights from IR  Raman  1H NMR and 13C NMR spectroscopies,,2013-03-20
10.1007/978-3-319-15545-6_1,A Homage to Martin Wirsing,,2020-03-20
10.1111/J.1744-7410.2000.TB00013.X,Ultrastructure of the ovary and oogenesis in six species of patellid limpets (Gastropoda: Patellogastropoda) from South Africa,,2013-03-20
10.1109/ICSEA.2007.34,From Signatures of Algebraic Specifications to Collections of Object-Oriented Class Signatures,,2011-03-20
10.1515/AOA-2017-0041,Numerical Study of the Effect of Furrows on Biosonar Beamforming in Aselliscus Stoliczkanus Bat,,2020-03-20
10.1109/APSEC.2005.107,Transforming functional signatures of algebraic specifications into object-oriented class signatures,,2015-03-20
10.1080/00218839.2016.1205824,The nutritional and bioactive aptitude of bee pollen for a solid-state fermentation process,,2017-03-20
10.1007/BF00625280,Partial abstract types,,2012-03-20
10.1007/978-3-540-24675-6_6,Computer-Aided Refinement of Data Structures on Higher-Order Algebraic Specifications,,2017-03-20
10.2478/V10208-011-0015-3,A gradient analytic perspective on distribution modelling,,2017-03-20
10.1007/978-3-540-95891-8_24,Implementing Services by Partial State Machines,,2015-03-20
10.1007/BF02943112,A continuous algebraic semantics of CSP,,2020-03-20
10.1109/EDCAV.2015.7060556,A novel approach for constrained via minimization problem in VLSI channel routing,,2011-03-20
10.1109/ACCESS.2020.3015976,Surface Optimal Path Planning Using an Extended Dijkstra Algorithm,,2019-03-20
10.1007/BF01553888,An efficient algorithm for maxdominance  with applications,,2020-03-20
10.1109/ACES.2014.6807986,A heuristic algorithm for via minimization in VLSI channel routing,,2016-03-20
10.1515/pomr-2017-0128,Identification Algorithm of Uncertain Sonar Signals in Complex Marine Environment,,2011-03-20
10.1109/CSNT.2014.211,Via Minimization for Multi-layer Channel Routing in VLSI Design,,2013-03-20
10.1007/BF00289047,Good OL forms,,2011-03-20
10.1007/BF00262977,Vompleteness of E0L forms is decidable,,2017-03-20
10.1007/BF01776580,On non context-free grammar forms,,2012-03-20
10.1007/BF00288538,On generators and generative capacity of EOL forms,,2012-03-20
10.1007/978-3-642-32973-9_20,Sparse Polynomial Powering Using Heaps,,2016-03-20
10.1109/FOCS.2012.57,Quasi-optimal Multiplication of Linear Differential Operators,,2013-03-20
10.1090/mcom/3363,Computing isomorphisms and embeddings of finite fields,,2016-03-20
10.1016/J.JALGEBRA.2012.03.008,Polynomial Bounds for Invariant Functions Separating Orbits,,2015-03-20
10.14279/tuj.eceasst.28.397,Ambient Contracts,,2011-03-20
10.1007/978-3-540-69149-5_15,Lessons from the JML Project,,2015-03-20
10.3929/ETHZ-A-006903018,Modular Specification and Verification of Delegation with SMT Solvers,,2012-03-20
10.1007/978-3-319-47169-3_7,Specifying and Verifying Advanced Control Features,,2018-03-20
10.1145/1297027.1297053,Modular verification of higher-order methods with mandatory calls specified by model programs,,2012-03-20
10.1016/j.scico.2013.09.005,Computational contracts,,2017-03-20
10.1093/comjnl/bxt005,Comparing Degrees of Non-Determinism in Expression Evaluation,,2018-03-20
10.1017/S0956796804005295,Non-determinism analyses in a parallel-functional language,,2020-03-20
10.1017/S1471068412000373,Rewriting and narrowing for constructor systems with call-time choice semantics,,2018-03-20
10.1109/WAINA.2018.00060,Implementing Distributed Lamda-Calculus Interpreter,,2017-03-20
10.1049/CP.2014.1541,Blueprint for an embedded systems programming language,,2014-03-20
10.1007/978-3-030-03418-4_4,A Non-unified View of Modelling  Specification and Programming,,2014-03-20
10.1007/978-3-662-05372-0_4,Functional Approaches to Constraint Handling and State Change,,2019-03-20
10.1109/LICS.2012.66,Conservative Concurrency in Haskell,,2017-03-20
10.1002/smr.1889,Purity analysis for JavaScript through abstract interpretation,,2011-03-20
10.1007/978-3-319-06410-9_23,Invariants  Well-Founded Statements and Real-Time Program Algebra,,2013-03-20
10.1109/CAHPC.2002.1180763,Implementing declarative parallel bottom-avoiding choice,,2019-03-20
10.1007/s10990-011-9074-z,Trends in Trends in Functional Programming 1999/2000 versus 2007/2008,,2012-03-20
10.3390/APP7100970,Supporting an Object-Oriented Approach to Unit Generator Development: The Csound Plugin Opcode Framework,,2017-03-20
10.1007/BF01211050,Semantics of under-determined expressions,,2012-03-20
10.1017/S147106841200004X,Singular and plural functions for functional logic programming,,2012-03-20
10.1007/978-3-540-27861-0_5,Correctness of Non-determinism Analyses in a Parallel-Functional Language,,2011-03-20
10.1016/j.arcontrol.2015.03.005,Endowing advanced driver assistance systems with fault tolerance,,2013-03-20
10.1201/ebk0849326202-c10,Tool Support for,,2011-03-20
10.1186/1758-2946-4-38,chemf: A purely functional chemistry toolkit,,2016-03-20
10.1016/J.SCICO.2018.02.002,The Dinamica EGO virtual machine,,2019-03-20
10.25911/5D63BDAC49B1B,Type inference and optimisation for an impure world,,2018-03-20
10.1007/s11704-013-2195-2,A survey on temporal logics for specifying and verifying real-time systems,,2017-03-20
10.1016/S0304-3975(01)00215-8,On probabilistic timed automata,,2013-03-20
10.1007/s10626-008-0057-0,Model Checking for a Class of Weighted Automata,,2011-03-20
10.1007/s100090100072,"A tool for model-checking Markov chains
",,2013-03-20
10.1007/BFb0023457,Temporal Logics for the Specification of Performance and Reliability,,2017-03-20
10.1007/978-3-540-24611-4_5,On Probabilistic Computation Tree Logic,,2014-03-20
10.1007/3-540-48320-9_12,Approximate Symbolic Model Checking of Continuous-Time Markov Chains,,2015-03-20
10.1007/3-540-48320-9,Approximate Symbolic Model Checking of Continuous-Time Markov Chains,,2018-03-20
10.1007/978-3-319-68972-2_3,Bisimilarity of Open Terms in Stream GSOS,,2016-03-20
10.23638/LMCS-15(3:14)2019,Companions  Causality and Codensity,,2014-03-20
10.4230/LIPIcs.CONCUR.2017.11,Divergence and Unique Solution of Equations,,2012-03-20
10.1007/978-3-030-00389-0,Coalgebraic Methods in Computer Science,,2019-03-20
10.1109/LICS.2019.8785673,The Theory of Traces for Systems with Nondeterminism and Probability,,2019-03-20
10.1145/3373718.3394795,Combining probabilistic and non-deterministic choice via weak distributive laws,,2013-03-20
10.1007/s00236-019-00333-x,Distributive laws for monotone specifications,,2018-03-20
10.1016/j.entcs.2018.03.017,A Symbolic Decision Procedure for Symbolic Alternating Finite Automata,,2016-03-20
10.4230/LIPIcs.CONCUR.2018.17,Up-To Techniques for Behavioural Metrics via Fibrations,,2020-03-20
10.1016/j.scico.2018.10.007,Bisimilarity of Open Terms in Stream GSOS,,2012-03-20
10.1007/978-3-030-38919-2_24,Up-to Techniques for Branching Bisimilarity,,2019-03-20
10.1007/978-3-030-00389-0_7,(In)finite Trace Equivalence of Probabilistic Transition Systems,,2013-03-20
10.4230/LIPIcs.CONCUR.2020.34,On the Representation of References in the Pi-Calculus,,2016-03-20
10.4230/LIPIcs.CSL.2020.26,Expressive Logics for Coinductive Predicates,,2014-03-20
10.4204/EPTCS.255.6,Distributive Laws for Monotone Specifications,,2019-03-20
10.1145/3290334,Familial monads and structural operational semantics,,2013-03-20
10.4230/LIPIcs.CONCUR.2020.28,Monads and Quantitative Equational Theories for Nondeterminism and Probability,,2017-03-20
10.4230/LIPIcs.CALCO.2019.6,Tree Automata as Algebras: Minimisation and Determinisation,,2020-03-20
10.1007/978-3-662-54458-7_7,Companions  Codensity and Causality,,2014-03-20
10.6092/UNINA/FEDOA/10094,Logics for Multi-Agent Systems Verification,,2015-03-20
10.23638/LMCS-13(1:9)2017,Reasoning about Strategies: on the Satisfiability Problem,,2015-03-20
10.2168/LMCS-10(4:17)2014,Quantified CTL: Expressiveness and Complexity,,2019-03-20
10.1016/j.ic.2014.12.020,Augmenting ATL with strategy contexts,,2018-03-20
10.1007/BF01303058,Power of interconnections and of nondeterminism in regularY-tree systolic automata,,2016-03-20
10.1007/978-3-540-85361-9_8,A Scalable and Oblivious Atomicity Assertion,,2013-03-20
10.1016/j.scico.2008.01.001,A challenge for atomicity verification,,2011-03-20
10.1007/s00236-008-0086-z,A queue based mutual exclusion algorithm,,2013-03-20
10.1007/978-3-540-68863-1_6,Mechanizing a Correctness Proof for a Lock-Free Concurrent Stack,,2020-03-20
10.1145/2629496,A Sound and Complete Proof Technique for Linearizability of Concurrent Data Structures,,2018-03-20
10.1016/j.scico.2009.09.006,Simulation refinement for concurrency verification,,2016-03-20
10.1145/1889997.1890001,Mechanically verified proof obligations for linearizability,,2017-03-20
10.1016/j.ic.2007.10.003,Universal extensions to simulate specifications,,2020-03-20
10.1007/978-3-642-00867-2_10,Recording process documentation in the presence of failures in service oriented architectures,,2020-03-20
10.1007/978-3-540-74107-7_3,The event-B Modelling Method: Concepts and Case Studies,,2017-03-20
10.1016/j.tcs.2006.08.015,Formal and incremental construction of distributed algorithms: On the distributed reference counting algorithm,,2018-03-20
10.1007/s00165-007-0027-6,Verification of clock synchronization algorithms: experiments on a combination of deductive tools,,2019-03-20
10.1016/j.entcs.2005.10.005,Verification of Clock Synchronization Algorithms: Experiments on a Combination of Deductive Tools,,2016-03-20
10.1007/978-3-030-39322-9_4,The Correctness of a Code Generator for a Functional Language,,2013-03-20
10.1016/j.scico.2006.10.001,Lock-free parallel and concurrent garbage collection by mark&sweep,,2017-03-20
10.1007/978-1-4471-5260-6_3,The Modelling Framework: Event-B,,2012-03-20
10.1007/978-3-319-89884-1_31,Correctness of a Concurrent Object Collector for Actor Languages,,2013-03-20
10.1145/1108970.1108976,Birrell's distributed reference listing revisited,,2020-03-20
10.1007/978-3-642-11447-2_2,Designing Old and New Distributed Algorithms by Replaying an Incremental Proof-Based Development,,2012-03-20
10.1016/S0167-6423(00)00011-3,Distributed directory service and message routing for mobile agents,,2011-03-20
10.1007/11516798_9,A Protocol for Recording Provenance in Service-Oriented Grids,,2020-03-20
10.1145/2509136.2509557,Fully concurrent garbage collection of actors on many-core machines,,2014-03-20
10.1007/b138689,Principles of Distributed Systems: 8th International Conference  OPODIS 2004  Grenoble  France  December 15-17  2004  Revised Selected Papers,,2020-03-20
10.1023/A:1014455931537,Tree Rerooting in Distributed Garbage Collection: Implementation and Performance Evaluation,,2017-03-20
10.1145/508791.508810,A fault-tolerant directory service for mobile agents based on forwarding pointers,,2011-03-20
10.1007/3-540-36490-0_24,A Survey of Some Variants of P Systems,,2014-03-20
10.1080/00207160410001684343,Contextual array P systems,,2013-03-20
10.1007/S12572-018-0224-Y,P colonies and kernel P systems,,2018-03-20
10.4018/978-1-4666-3679-8.CH002,A Constructive Approach for Conceptual Database Design,,2014-03-20
10.4018/978-1-4666-5888-2.CH179,Perspective for Database Preservation,,2011-03-20
10.4018/978-1-5225-7598-6.CH046,Quality Evaluation for Evolving Conceptual Database Design,,2011-03-20
10.4018/978-1-5225-1653-8.CH001,Preservation of Database Concepts: From Data Mining to Concept Theory,,2018-03-20
10.1007/3-540-48119-2_23,Formal Development of Databases in ASSO and B,,2014-03-20
10.1007/978-0-387-68792-6_11,Viral Infections of the Lung,,2016-03-20
10.4018/978-1-4666-1993-7.CH008,Ontology for Database Preservation,,2012-03-20
10.14236/EWIC/FM1998.9,Translating Structured Database Schemas into Abstract Machines,,2016-03-20
10.12677/CSA.2017.75054,基于Geom/G/1模型的Ad Hoc网络节点性能分析 Performance Analysis of Ad Hoc Network Node Based on Geom/G/1 Model,,2019-03-20
10.1109/ITAIC.2019.8785573,Performance Analysis of High-speed Railway Handover Scheme with Different Network Architecture,,2017-03-20
10.1007/s11277-019-06877-y,Relay Selection Approach in Underwater Acoustic WSNs Using Bi-Partite Graph,,2013-03-20
10.1109/ICRCC.2012.6450562,Improved T-Cluster based scheme for combination gene scale expression data,,2012-03-20
10.1002/9781118503591.OTH2,Additional References (to the Revised Edition),,2018-03-20
10.1186/1471-2105-8-396,Large scale clustering of protein sequences with FORCE -A layout based heuristic for weighted cluster editing,,2018-03-20
10.1186/1471-2105-10-S1-S61,On optimal comparability editing with applications to molecular diagnostics,,2011-03-20
10.1142/9781860948732_0040,Exact and heuristic algorithms for weighted cluster editing.,,2015-03-20
10.1109/TCBB.2010.34,TCLUST: A Fast Method for Clustering Genome-Scale Expression Data,,2020-03-20
10.1093/bioinformatics/btn056,Detecting hierarchical structure in molecular characteristics of disease using transitive approximations of directed graphs,,2013-03-20
10.1016/J.ASOC.2019.105482,A hybrid heuristic for the overlapping cluster editing problem,,2014-03-20
10.1515/arh-2007-0019,A Study of Entrance Pressure Loss in Filled Polymer Melts,,2015-03-20
10.1002/rsa.10052,A unified approach to the analysis of Horton-Strahler parameters of binary tree structures,,2015-03-20
10.1016/j.tcs.2017.09.015,Reductions of binary trees and lattice paths induced by the register function,,2020-03-20
10.1007/BF02242000,The average height of r-typly rooted planted plane trees,,2019-03-20
10.1016/j.ic.2015.11.008,Convergence of Newton's Method over Commutative Semirings,,2012-03-20
10.1007/s12237-021-00898-2,Investigation of Spatial and Temporal Salinity Distribution in a River Dominated Delta through Idealized Numerical Modelling,,2014-03-20
10.1063/1.5048965,Entropy rates for Horton self-similar trees,,2012-03-20
10.1007/978-3-319-04921-2_1,A Brief History of Strahler Numbers,,2018-03-20
10.1007/978-3-0348-7915-6_21,New Strahler Numbers for Rooted Plane Trees,,2018-03-20
10.1214/19-ps331,Random Self-Similar Trees: A mathematical theory of Horton laws,,2015-03-20
10.1007/978-3-0348-8211-8_22,Digits and Beyond,,2017-03-20
10.1007/BF01190510,The joint distribution of the three types of nodes in uniform binary trees,,2015-03-20
10.1016/j.tcs.2014.01.024,An analytic approach to the asymptotic variance of trie statistics and related structures,,2017-03-20
10.1214/16-AIHP748,Horton self-similarity of Kingman's coalescent tree,,2013-03-20
10.1016/j.tcs.2008.12.019,Efficient computation of the iteration of functions,,2015-03-20
10.1016/0020-0190(94)00135-9,A Note on the Horton-Strahler Number for Random Trees,,2012-03-20
10.1145/1159892.1159894,The register function for t-ary trees,,2011-03-20
10.1016/S0012-365X(01)00265-5,A Strahler bijection between Dyck paths and planar trees,,2020-03-20
10.1016/j.tcs.2005.04.012,The scientific works of Rainer Kemp (1949-2004),,2016-03-20
10.7763/IJCEE.2012.V4.446,MySIM: A Light-Weight Tool for the Simulation of Probabilistic CPU Process Scheduling Algorithm,,2016-03-20
10.1016/J.JMSY.2015.11.006,Parallel machine scheduling problems in green manufacturing industry,,2014-03-20
10.1016/j.disopt.2010.02.005,New upper and lower bounds for online scheduling with machine cost,,2015-03-20
10.1016/j.dam.2007.10.014,Online scheduling with general machine cost functions,,2014-03-20
10.1016/j.ejor.2006.09.050,Batching deteriorating items with applications in computer communication and reverse logistics,,2015-03-20
10.1007/978-3-540-74450-4_18,Optimal Semi-online Algorithms for Scheduling with Machine Activation Cost,,2017-03-20
10.1007/s10878-006-9003-y,Scheduling with machine cost and rejection,,2014-03-20
10.1137/S009753970343395X,Better Online Algorithms for Scheduling with Machine Cost,,2019-03-20
10.1007/s11590-016-1096-3,Uniform parallel machine scheduling problems with fixed machine cost,,2017-03-20
10.1007/s10951-019-00629-3,An optimal online algorithm for scheduling with general machine cost functions,,2015-03-20
10.1287/opre.2013.1208,Parallel Machine Scheduling: Impact of Adding Extra Machines,,2018-03-20
10.1016/j.tcs.2015.02.023,Scheduling games on uniform machines with activation cost,,2015-03-20
10.1057/jors.2009.38,Parallel machine scheduling problems considering regular measures of performance and machine cost,,2015-03-20
10.1016/j.dam.2007.07.004,Online scheduling with machine cost and rejection,,2013-03-20
10.1007/s11390-006-0984-x,Semi-Online Algorithms for Scheduling with Machine Cost,,2011-03-20
10.1016/j.tcs.2013.09.009,The generalization of scheduling with machine cost,,2018-03-20
10.1016/j.ins.2013.08.041,Competitive ratios for preemptive and non-preemptive online scheduling with nondecreasing concave machine cost,,2016-03-20
10.1631/JZUS.2007.A0127,Online algorithms for scheduling with machine activation cost on two uniform machines,,2019-03-20
10.1142/S0217595907001231,Online Algorithms for Scheduling with Machine Activation Cost,,2013-03-20
10.1007/978-90-481-3660-5_20,An Efficient Randomized Algorithm for Real-Time Process Scheduling in PicOS Operating System,,2018-03-20
10.1016/j.datak.2009.06.001,Constraint acquisition for Entity-Relationship models,,2016-03-20
10.1145/1151736.1151739,Horn clauses and functional dependencies in complex-value databases,,2014-03-20
10.1007/978-3-642-02261-6_21,Spoilt for Choice: Full First-Order Hierarchical Decompositions,,2016-03-20
10.1007/11663881_9,The Nested List Normal Form for Functional and Multivalued Dependencies,,2013-03-20
10.1145/1059513.1059519,An information-theoretic approach to normal forms for relational and XML data,,2015-03-20
10.3233/978-1-61499-361-2-1,Normal Forms and Normalization for Probabilistic Databases under Sharp Constraints,,2014-03-20
10.5220/0002386804650472,On the semi-automatic validation and decomposition of ternary relationships with optional elements,,2013-03-20
10.1007/s00778-011-0239-5,Design by example for SQL table definitions with functional dependencies,,2019-03-20
10.1007/978-3-642-20920-8_14,The Boyce-Codd-Heath Normal Form for SQL,,2011-03-20
10.1016/j.ins.2013.01.009,Reasoning about functional and full hierarchical dependencies over partial relations,,2014-03-20
10.1016/j.jcss.2016.02.007,On the finite and general implication problems of independence atoms and keys,,2013-03-20
10.1145/1228268.1228269,Why is schema matching tough and what can we do about it?,,2019-03-20
10.1007/978-3-030-21290-2_19,A Fourth Normal Form for Uncertain Data,,2016-03-20
10.1109/TITB.2004.832541,A dynamic clinical dental relational database,,2011-03-20
10.1145/1016028.1016029,Strong functional dependencies and their application to normal forms in XML,,2019-03-20
10.1023/A:1013134906161,Decomposition of object-oriented database schemas,,2019-03-20
10.1007/11408079_31,Database Design with Equality-Generating Dependencies,,2013-03-20
10.1016/j.ipl.2010.06.002,Armstrong axioms and Boyce-Codd-Heath Normal Form under bag semantics,,2013-03-20
10.3233/FI-2011-385,On Inferences of Full First-Order Hierarchical Decompositions,,2015-03-20
10.1109/ICDE.2019.00137,Discovery and Ranking of Functional Dependencies,,2011-03-20
10.1007/978-3-540-45160-0_7,Redundancy Free Mappings from Relations to XML,,2011-03-20
10.14778/3342263.3342626,Embedded Functional Dependencies and Data-completeness Tailored Database Design,,2013-03-20
10.1145/2983323.2983801,Relational Database Schema Design for Uncertain Data,,2011-03-20
10.1007/3-540-45017-3_4,Multivalued Dependencies and a 4NF for XML,,2012-03-20
10.1016/j.is.2018.04.001,SQL schema design: foundations  normal forms  and normalization,,2020-03-20
10.1016/J.IS.2019.04.003,Relational database schema design for uncertain data,,2016-03-20
10.1145/773153.773155,An information-theoretic approach to normal forms for relational and XML data,,2017-03-20
10.1007/978-3-540-27772-9_35,Redundancy Free Mappings from Relations to XML,,2016-03-20
10.1007/978-3-030-62522-1_43,Structural and Computational Properties of Possibilistic Armstrong Databases,,2015-03-20
10.1145/2882903.2915239,SQL Schema Design: Foundations  Normal Forms  and Normalization,,2015-03-20
10.1016/j.tcs.2015.07.017,Frontiers for propositional reasoning about fragments of probabilistic conditional independence and hierarchical database decompositions,,2014-03-20
10.1007/978-3-319-31803-5_9,Approximation Logics for Subclasses of Probabilistic Conditional Independence and Hierarchical Dependence on Incomplete Data,,2018-03-20
10.1145/2188349.2188355,The implication problem of data dependencies over SQL table definitions: Axiomatic  algorithmic and logical characterizations,,2015-03-20
10.1007/978-3-540-39429-7_17,A Redundancy Free 4NF for XML,,2012-03-20
10.1007/s00236-007-0048-x,On the equivalence between FDs in XML and FDs in relations,,2015-03-20
10.1145/1228268.1228284,Normalization theory for XML,,2020-03-20
10.1016/j.jcss.2012.01.003,The implication problem for 'closest node' functional dependencies in complete XML documents,,2013-03-20
10.1145/1670243.1670248,An information-theoretic analysis of worst-case redundancy in database design,,2012-03-20
10.1109/SYNASC.2013.64,Non-interleaving Operational Semantics for Geographically Replicated Databases,,2012-03-20
10.1016/j.tcs.2016.02.022,Timed process calculi with deterministic or stochastic delays: Commuting between durational and durationless actions,,2012-03-20
10.4204/EPTCS.194.1,Expected-Delay-Summing Weak Bisimilarity for Markov Automata,,2012-03-20
10.1134/S0361768808030018,Semantic domains of timed event structures,,2017-03-20
10.1007/978-3-540-68855-6_15,Timed Mobile Ambients for Network Protocols,,2020-03-20
10.1007/978-1-84800-223-4_6,Component-Oriented Performance Evaluation,,2018-03-20
10.1134/S0361768810030023,Unifying behavioral equivalences of timed transition systems,,2018-03-20
10.14279/DEPOSITONCE-3416,Translational Expressiveness. Comparing Process Calculi using Encodings,,2020-03-20
10.1016/j.tcs.2014.10.025,On the tradeoff between compositionality and exactness in weak bisimilarity for integrated-time Markovian process calculi,,2018-03-20
10.1007/978-3-540-75292-9_4,Mobile Ambients with Timers and Types,,2020-03-20
10.1201/9781420064872-19,PARS : a process algebraic approach to resources and schedulers,,2018-03-20
10.1007/978-1-84800-223-4_2,Deterministically Timed Process Algebra,,2012-03-20
10.4204/EPTCS.25.19,On the Expressiveness of Markovian Process Calculi with Durational and Durationless Actions,,2018-03-20
10.1007/s11227-014-1270-2,Dynamic-width reconfigurable parallel prefix circuits,,2012-03-20
10.1109/IPDPSW.2012.225,A Class of an Almost-Optimal Size-Independent Parallel Prefix Circuits,,2012-03-20
10.4467/20842589RM.12.002.0683,Strong normalization of a typed lambda calculus for intuitionistic bounded linear-time temporal logic,,2015-03-20
10.1145/1067915.1067920,Combining supervisor synthesis and model checking,,2015-03-20
10.1093/jigpal/jzq023,Phase semantics for linear-time formalism,,2017-03-20
10.1007/BF02737110,Program-substitution and admissibility of rules in algorithmic logic,,2019-03-20
10.1007/978-3-642-02734-5_5,Embedding Linear-Time Temporal Logic into Infinitary Logic: Application to Cut-Elimination for Multi-agent Infinitary Epistemic Linear-Time Temporal Logic,,2011-03-20
10.1007/978-3-540-69850-0_1,The Birth of Model Checking,,2020-03-20
10.5445/IR/1000003778,Eine Verallgemeinerung der Überwachersynthese mit Hilfe des μ-Kalküls,,2013-03-20
10.1016/j.apal.2011.12.002,Bounded linear-time temporal logic: A proof-theoretic investigation,,2016-03-20
10.1007/S10958-005-0109-Z,Invertible infinitary calculus without loop rules for restricted FTL,,2013-03-20
10.5772/5319,A Linear Logic Based Approach to Timed Petri Nets,,2018-03-20
10.1017/S0960129514000048,Embedding theorems for LTL and its variants,,2011-03-20
10.1007/3-540-32743-6_14,Softwarequalität — Geschichte und Trends,,2016-03-20
10.1016/j.jal.2009.06.001,Combining linear-time temporal logic with constructiveness and paraconsistency,,2017-03-20
10.12775/LLP.2009.007,Temporal non-commutative logic: Expressing time  resource  order and hierarchy,,2019-03-20
10.1109/ETNCC.2011.6255937,Methodologies for handling ‘destination unknown’ range queries during mobility,,2020-03-20
10.1109/DCC.2008.65,An Approach to Graph and Netlist Compression,,2019-03-20
10.1137/S0097539702411381,Orderly Spanning Trees with Applications,,2020-03-20
10.1109/VIZ.2009.31,Total or Selective Decompression of a Compressed Plane Triangulation,,2012-03-20
10.1137/120879142,Linear-time compression of bounded-genus graphs into information-theoretically optimal number of bits,,2019-03-20
10.1007/978-3-540-75530-2_11,A Fast and Compact Web Graph Representation,,2011-03-20
10.1524/itit.2002.44.6.308,Connectivity Coding: New Perspectives for Mesh Compression (Connectivity Coding: Neue Perspektiven für die Kompression von Dreiecksnetzen),,2012-03-20
10.1145/1841909.1841913,Fast and Compact Web Graph Representations,,2016-03-20
10.1016/j.ipl.2004.06.004,Graph compression and the zeros of polynomials,,2013-03-20
10.1007/978-3-540-75254-7_2,Abstractions of Multi-agent Systems,,2016-03-20
10.1109/ECBS.2008.40,Counterexample Guided Abstraction Refinement is Better under Equational Abstraction,,2020-03-20
10.1108/mabr-09-2019-0035,Queueing analysis for operations modeling in port logistics,,2013-03-20
10.1007/978-3-642-02742-0_17,Generalised Entropy Maximisation and Queues with Bursty and/or Heavy Tails,,2011-03-20
10.1371/journal.pone.0106965,Maximum Entropy Principle Based Estimation of Performance Distribution in Queueing Theory,,2013-03-20
10.2478/V10175-010-0072-9,Loss tandem networks with blocking - a semi-Markov approach,,2014-03-20
10.1002/9780470400531.EORMS0888,The M/G/s Queue,,2015-03-20
10.1016/S0166-5316(02)00097-4,Analytical observations for a multiservice node,,2018-03-20
10.1109/FiCloud.2014.91,Maximum Entropy Formalism of Multi-traffic Censored Priority Queue,,2011-03-20
10.2478/v10006-009-0014-6,Semi-Markov-Based Approach for the Analysis of Open Tandem Networks with Blocking and Truncation,,2017-03-20
10.1016/j.knosys.2007.05.002,Forensic analysis of logs: Modeling and verification,,2012-03-20
10.1007/s10703-005-1634-6,Reduced Models for Efficient CCS Verification,,2011-03-20
10.1007/978-3-540-32261-0_4,A Modal Semantics for an Argumentation-Based Pragmatics for Agent Communication,,2012-03-20
10.7146/DPB.V21I420.7971,Local Computation of Simultaneous Fixed-Points,,2018-03-20
10.1109/MEMCOD.2005.1487912,Three-valued logic in bounded model checking,,2011-03-20
10.1007/978-3-319-10521-5_6,Verification of Function Blocks,,2019-03-20
10.1007/978-3-540-27813-9_7,Symbolic Model Checking of Non-regular Properties,,2013-03-20
10.7146/BRICS.V14I13.22178,Temporal Logics Beyond Regularity,,2013-03-20
10.1002/stvr.252,Syntactic reductions for efficient deadlock analysis,,2016-03-20
10.1109/ACSD.2009.25,Specification Enforcing Refinement for Convertibility Verification,,2011-03-20
10.1016/j.entcs.2009.02.036,An On-the-fly Tableau-based Decision Procedure for PDL-satisfiability,,2017-03-20
10.12928/TELKOMNIKA.V15I1.3546,Local Model Checking Algorithm Based on Mu-calculus with Partial Orders,,2019-03-20
10.1007/978-3-642-13089-2_5,Complexity of the Satisfiability Problem for a Class of Propositional Schemata,,2015-03-20
10.1109/ITNG.2008.93,An Improved Algorithm for the Evaluation of Alternating Fixpoint Expressions in the mu-Calculus,,2014-03-20
10.1017/CBO9780511792588.004,The algorithmics of bisimilarity,,2019-03-20
10.1016/J.DIIN.2019.02.005,A survey on forensic investigation of operating system logs,,
10.1007/978-3-642-18090-3_16,Logiken auf unendlichen Bäumen,,2017-03-20
10.1016/S0304-3975(02)00364-X,A new logic for electronic commerce protocols,,2019-03-20
10.1109/SOSE.2011.6139097,Unified management of control flow and data mismatches in web service composition,,2016-03-20
10.1007/978-3-642-33353-8_27,Minimal Proof Search for Modal Logic K Model Checking,,2013-03-20
10.1109/SEFM.2004.23,Global vs. local model checking: a comparison of verification techniques for infinite state systems,,2011-03-20
10.1007/978-3-319-32582-8_8,Certification for μ-Calculus with Winning Strategies,,2017-03-20
10.1016/j.jcss.2011.05.004,Solving parity games by a reduction to SAT,,2020-03-20
10.1016/j.entcs.2006.02.035,Local Module Checking for CTL Specifications,,2016-03-20
10.1007/978-3-642-02053-7_15,Assume-Guarantee Verification of Concurrent Systems,,2012-03-20
10.1007/978-3-319-10512-3_9,The Power of Proofs: New Algorithms for Timed Automata Model Checking,,2014-03-20
10.1134/S036176881604006X,Program schemata technique for propositional program logics: A 30-year history,,2020-03-20
10.1016/j.scico.2004.07.002,Compositionality and locality for improving model checking in the selective mu-calculus,,2014-03-20
10.1007/BF02960756,A graphical μ-calculus and local model checking,,2015-03-20
10.1007/s00165-009-0129-4,A game-theoretic framework for specification and verification of cryptographic protocols,,2018-03-20
10.1016/j.entcs.2004.06.025,mu-Calculus Model Checking in Maude,,2019-03-20
10.2495/CR040631,FORMAL VERIFICATION OF PROTOCOL SPECIFIED IN LTS FOR RAILWAY SIGNALING SYSTEMS,,2015-03-20
10.1016/J.DIIN.2007.06.013,Analyzing multiple logs for forensic evidence,,2011-03-20
10.1016/j.scico.2012.07.015,Incremental construction of systems: An efficient characterization of the lacking sub-system,,2014-03-20
10.1007/978-3-642-02716-1_8,On the Proof Theory of Regular Fixed Points,,2011-03-20
10.1007/3-540-45687-2_53,An Approximation Semantics for the Propositional Mu-Calculus,,2013-03-20
10.1007/11562436_10,Proving forall-µ-Calculus Properties with SAT-Based Model Checking,,2016-03-20
10.1109/INDIN.2011.6034948,Observer based verification of IEC 61499 function blocks,,2019-03-20
10.1007/978-3-540-30579-8_16,Don't Know in the µ-Calculus,,2019-03-20
10.1007/11691792_14,A Tableau Method for Verifying Dialogue Game Protocols for Agent Communication,,2019-03-20
10.1145/3290339,Fixpoint games on continuous lattices,,2019-03-20
10.1007/BFb0035797,A Note on Model Checking the Modal nu-Calculus,,2019-03-20
10.2495/UT070571,Safety Characteristics Analysis of Korean Standard Communication Protocol for Railway Signalling,,2015-03-20
10.1051/ita:2007011,Three notes on the complexity of model checking fixpoint logic with chop,,2018-03-20
10.29007/df56,Tableau-Like Automata-Based Axiomatization for Propositional Linear Temporal Logic,,2020-03-20
10.1007/11533092,Computational Logic in Multi-Agent Systems: 5th International Workshop  CLIMA V  Lisbon  Portugal  September 29-30  2004  Revised Selected and Invited Papers,,2012-03-20
10.1613/jair.3351,Decidability and Undecidability Results for Propositional Schemata,,2013-03-20
10.1016/j.ic.2006.10.009,When not losing is better than winning: Abstraction and refinement for the full mu-calculus,,2013-03-20
10.1007/11603023_4,Automatic Verification of a Model Checker by Reflection,,2012-03-20
10.1016/j.tcs.2005.03.048,Probabilistic temporal logics via the modal mu-calculus,,2020-03-20
10.1007/s10703-005-1493-1,Distributed Symbolic Model Checking for μ-Calculus,,2019-03-20
10.4028/www.scientific.net/AMM.263-266.2314,Improved Algorithm of Global Model-Checking for Propositional μ-Calculus,,2013-03-20
10.1007/978-3-319-59041-7_6,Compliance Verification Algorithm for Computer Systems Security Policies,,2019-03-20
10.1109/NOMS.1994.644142,Specification And Analysis Of A Security Management System,,2016-03-20
10.31274/ETD-180810-3011,Safety analysis of software product lines using state-based modeling and compositional model checking,,2012-03-20
10.1007/11533092_11,A Computational Model for Conversation Policies for Agent Communication,,2014-03-20
10.1145/3412853,Model Checking a Logic for True Concurrency,,2020-03-20
10.1007/s10515-010-0075-7,Compositional model checking of software product lines using variation point obligations,,2011-03-20
10.2495/UT050201,Formally verifying the correctness of a network-based protocol for railway signalling systems,,2019-03-20
10.1016/j.knosys.2008.11.006,Model checking communicative agent-based systems,,2013-03-20
10.1007/s10703-006-0019-9,Bounded model checking of infinite state systems,,2015-03-20
10.5220/0002246800130022,A Formula Driven Incremental Construction of Web Service Compositions,,2013-03-20
10.1016/j.csi.2004.08.004,Performance evaluation and verification of communication protocol for railway signaling systems,,2018-03-20
10.1007/s10849-009-9088-7,Model Checking for Hybrid Logic,,2013-03-20
10.1145/1101908.1101915,Efficient temporal-logic query checking for presburger systems,,2011-03-20
10.1109/ECBS.2003.1194802,Model checking and evidence exploration,,2017-03-20
10.1016/j.jss.2007.01.047,Safety analysis of software product lines using state-based modeling,,2013-03-20
10.1007/978-1-4419-6984-2_3,Model Checking Agent Communication,,2019-03-20
10.1016/j.jcss.2004.11.001,A local approach for temporal model checking of Java bytecode,,2014-03-20
10.1145/963927.963930,A modal logic for mobile agents,,2015-03-20
10.1007/978-3-540-79707-4_11,An Action/State-Based Model-Checking Approach for the Analysis of Communication Protocols for Service-Oriented Applications,,2016-03-20
10.3233/fi-2020-1922,Causal Reasoning for Safety in Hennessy Milner Logic,,2011-03-20
10.1017/cbo9781139236119,Temporal Logics in Computer Science: Finite-State Systems,,2017-03-20
10.1016/j.ic.2006.05.001,The alternation hierarchy in fixpoint logic with chop is strict too,,2016-03-20
10.14279/tuj.eceasst.73.1037,Proving correctness of graph programs relative to recursively nested conditions,,2012-03-20
10.1016/j.csi.2008.05.011,Development of verification and conformance testing tools for a railway signaling communication protocol,,2018-03-20
10.1109/SEFM.2007.46,Verifying Security Properties of Cryptoprotocols: A Novel Approach,,2011-03-20
10.1109/ISSRE.2005.36,Safety analysis of software product lines using state-based modeling,,2018-03-20
10.31274/ETD-180810-2879,Development and evaluation of Formula Editor (a tool-based approach to enhance reusability in software product line model checking) on SAFER case study,,2017-03-20
10.1145/1057661.1057756,Exploiting PSL standard assertions in a theorem-proving-based verification environment,,2012-03-20
10.1515/dema-2013-0463,Numerical solutions of symmetric saddle point problem by direct methods,,2014-03-20
10.1515/JEPSEM-2017-0005,The Influence of Working Conditions on Employees in a Metalworking Place of Employment,,2016-03-20
10.1515/teen-2017-0015,Methods for Increasing the Material Resistance of the Mulching Tool Body Against its Deformation in Operation,,2012-03-20
10.2478/vzoo-2014-0047,First Records and Comparative Notes of Twelve Aphidiid Species (Hymenoptera  Aphidiidae) from the Fauna of Ukraine,,2018-03-20
10.1515/sjce-2016-0010,Soil-Water Storage Predictions for Cultivated Crops on the Záhorská Lowlands,,2018-03-20
10.1007/978-3-030-40608-0_12,Windable Heads and Recognizing NL with Constant Randomness,,2020-03-20
10.1007/3-540-59175-3_103,Multihead Two-Way probabilistic Finite Automata,,2011-03-20
10.1016/0304-3975(88)90122-3,Alternating Multihead Finite Automata,,2015-03-20
10.1016/S0304-3975(01)00237-7,Multi-head finite automata: data-independent versus data-dependent computations,,2019-03-20
10.1016/0020-0190(76)90013-2,Bracket-Languages are Recognizable in Logarithmic Space,,2011-03-20
10.1016/0022-0000(88)90004-9,k+1 Heads Are Better than k for PDAs,,2016-03-20
10.1016/0304-3975(80)90053-5,Halting space-bounded computations,,2012-03-20
10.1007/BF01699467,Gradually intractable problems and nondeterministic log-space lower bounds,,2015-03-20
10.1007/978-3-319-08846-4_11,Unary Languages Recognized by Two-Way One-Counter Automata,,2018-03-20
10.1007/3-540-08138-0_29,The LBA-problem and the transormability of the class epsilon2,,2020-03-20
10.25596/jalc-2007-097,Two-Way Finite Automata with a Write-Once Track,,2011-03-20
10.1007/3-540-60249-6_66,Properties of Probabilistic Pushdown Automata (Extended Abstract),,2012-03-20
10.1007/BFb0015735,Hierarchies of One-Way Multihead Automata Languages,,2019-03-20
10.1142/S012905410500339X,Non-recursive trade-offs for two-way machines,,2016-03-20
10.1016/0020-0190(94)00152-9,Refined Simulation of Multihead Automata,,2015-03-20
10.1016/S0304-3975(98)00059-0,Properties of Probabilistic Pushdown Automata,,2017-03-20
10.1145/211542.606544,SIGACT News Complexity Theory Column 10,,2011-03-20
10.1007/3-540-10843-2_40,Alternating Multihead Finite Automata (Extended Abstract),,2018-03-20
10.1524/ract.1984.35.2.65,Reactions of Recoil 3 8CI Atoms with Substituted Chlorobenzenes,,2019-03-20
10.3233/FI-2011-541,Two-Way Reversible Multi-Head Finite Automata,,2014-03-20
10.1016/0304-3975(87)90071-5,Cyclic Automata,,2013-03-20
10.1007/BFb0023754,The Expressive Power of Transitive Closue and 2-way Multihead Automata,,2017-03-20
10.1007/3-540-07407-4_15,About the deterministic simulation of nondeterministic (log n)-tape bounded Turing machines,,2018-03-20
10.1109/sfcs.1986.27,k+1 heads are better than k for PDA's,,2016-03-20
10.1016/j.tcs.2004.04.013,On the descriptional power of heads  counters  and pebbles,,2011-03-20
10.1016/0022-0000(83)90032-6,Remarks on Multihead Pushdown Automata and Multihead Stack Automata,,2014-03-20
10.1051/ita/1980140100671,Two-Way Multihead Automata Over a One-Letter Alphabet,,2019-03-20
10.1007/3-540-10854-8_30,On the LBA Problem,,2011-03-20
10.1016/0020-0190(84)90001-2,Deterministic Two-Way One-Head Pushdown Automata are Very Powerful,,2011-03-20
10.1007/S100510051157,Complexity of two-dimensional patterns,,2020-03-20
10.1007/BF02679455,Multihead two-way probabilistic finite automata,,2016-03-20
10.1016/0022-0000(85)90005-4,Variations on the Technique of Duris and Galil,,2012-03-20
10.1145/3226594,Interaction Graphs,,2012-03-20
10.1137/S0097539796298339,On the Structure of Logspace Probabilistic Complexity Classes,,2014-03-20
10.1016/B978-0-12-115350-2.50015-4,THE INTERFACE BETWEEN LANGUAGE THEORY AND COMPLEXITY THEORY,,2019-03-20
10.1007/3-540-07854-1_162,Descriptional Complexity (of Languages) - A Short Survey,,2020-03-20
10.1016/0304-3975(82)90087-1,Fooling a two Way Automaton or one Pushdown Store is better than one Counter for two Way Machines,,2016-03-20
10.1016/0304-3975(86)90093-9,Hierarchies of One-Way Multihead Automata Languages,,2018-03-20
10.1007/3-540-59042-0_107,On the Structure of Log-Space Probabilistic Complexity Classes (Extended Abstract),,2014-03-20
10.1007/978-3-030-40608-0,Language and Automata Theory and Applications: 14th International Conference  LATA 2020  Milan  Italy  March 4–6  2020  Proceedings,,2011-03-20
10.1023/A:1023027932419,Complexity of Two-Dimensional Patterns,,2012-03-20
10.1142/9789814271059_0011,Type Checking of Tree Walking Transducers,,2011-03-20
10.1016/J.TCS.2020.03.020,Backward type inference for XML queries,,2013-03-20
10.2197/IPSJTRANS.2.175,Computing the Cost of Typechecking of Composition of Macro Tree Transducers,,2013-03-20
10.1007/s001650200011,The List Introduction Strategy for the Derivation of Logic Programs,,2011-03-20
10.1109/SISY.2012.6339532,Discovery of inductive algorithms through automated reasoning: A case study on sorting,,2019-03-20
10.1109/CGO.2005.24,Optimizing sorting with genetic algorithms,,2012-03-20
10.1093/jigpal/jzi003,An Application of Logic Engineering,,2014-03-20
10.1007/s00165-013-0287-2,Provably correct derivation of algorithms using FermaT,,2017-03-20
10.1007/s00165-011-0205-4,Experiments in program verification using Event-B,,2017-03-20
10.1111/j.1567-1364.2011.00764.x,From the chief editor.,,2014-03-20
10.2478/PBJ-2014-0032,Second record of the rare species Phacus bętkowskii (Euglenophyceae),,2013-03-20
10.5120/21847-5155,MQ Sort an Innovative Algorithm using Quick Sort and Merge Sort,,2019-03-20
10.1007/978-3-642-11999-6_6,A taxonomy of some right-to-left string-matching algorithms,,2016-03-20
10.1109/SAMI48414.2020.9108725,Deductive Synthesis of Bubble–Sort Using Multisets,,2016-03-20
10.1145/1706356.1706372,Optimizing relational algebra operations using generic equivalence discriminators and lazy products,,2016-03-20
10.2478/msp-2019-0079,Structural characteristic of vanadium(V) oxide/sulfur composite cathode for magnesium battery applications,,2018-03-20
10.3217/JUCS-022-02-0180,A Taxonomy of Minimisation Algorithms for Deterministic Tree Automata,,2011-03-20
10.1016/j.jlamp.2020.100635,Synthesis of sorting algorithms using multisets in Theorema,,2014-03-20
10.1109/IPDPS.2007.370499,Optimizing Sorting with Machine Learning Algorithms,,2019-03-20
10.4204/EPTCS.320.1,A Historical Account of My Early Research Interests,,2011-03-20
10.1007/978-3-540-88643-3_4,Transforming Data by Calculation,,2019-03-20
10.1007/BF03038309,Derivation of algorithms by introduction of generation functions,,2011-03-20
10.1007/978-1-4614-5725-1_2,Chapter 1 Elliptic Functions,,2016-03-20
10.1109/SACI49304.2020.9118814,Deductive Synthesis of Min-Max-Sort Using Multisets in Theorema,,2012-03-20
10.14569/IJACSA.2013.040917,The bitwise operations related to a fast sorting algorithm,,2020-03-20
10.1515/ijame-2017-0046,Modeling of Two-Wheeled Self-Balancing Robot Driven by DC Gearmotors,,2011-03-20
10.1145/2815782.2815799,SPLicing TABASCO: Custom-Tailored Software Product Line Variants from Taxonomy-Based Toolkits,,2018-03-20
10.1007/978-1-4471-2386-6_13,Experiment Analysis on the Bubble Sort Algorithm and Its Improved Algorithms,,2013-03-20
10.1007/BF01887204,Program development in the constructive set theory TK,,2011-03-20
10.1016/j.jlamp.2017.09.003,Programming from metaphorisms,,2016-03-20
10.1515/hacq-2017-0005,Alien taxa of the tribe Senecioneae (Asteraceae) in Italy: a nomenclatural synopsis,,2014-03-20
10.1109/ICIS.2008.34,Generating Algorithms plus Loop Invariants by Formal Derivation,,2019-03-20
10.1109/SYNASC.2011.23,Proof Techniques for Synthesis of Sorting Algorithms,,2020-03-20
10.1016/j.jsc.2014.09.030,Synthesis of list algorithms by mechanical proving,,2014-03-20
10.1086/673103,Inc.,,2014-03-20
10.1007/BF00288643,Remarks on “A Synthesis of Several Sorting Algorithms” by John Darlington,,2019-03-20
10.1007/978-3-319-35122-3_5,Tax-PLEASE - Towards Taxonomy-Based Software Product Line Engineering,,2019-03-20
10.1016/j.entcs.2005.08.003,Constructing Induction Rules for Deductive Synthesis Proofs,,2011-03-20
10.1007/978-3-319-47166-2_54,Correctness-by-Construction \wedge Taxonomies \Rightarrow Deep Comprehension of Algorithm Families,,2012-03-20
10.1145/3183519.3183528,Cross-Language Optimizations in Big Data Systems: A Case Study of SCOPE,,2011-03-20
10.1515/sc-2015-0007,Necromarketing in the Media and Marketing Communications,,2019-03-20
10.1145/3364452.33644560,Method summaries for JPF,,2011-03-20
10.1145/3434337,Deciding reachability under persistent x86-TSO,,2011-03-20
10.1007/978-3-030-54994-7_4,Compiling C and C++ Programs for Dynamic White-Box Analysis,,2016-03-20
10.1145/3158105,Effective stateless model checking for C/C++ concurrency,,2012-03-20
10.4066/BIOMEDICALRESEARCH.29-17-700,An algorithm of parallel model checking programs with conditions based on adjustable predicate abstraction coding,,2019-03-20
10.4204/EPTCS.246.8,Generating Representative Executions [Extended Abstract],,2019-03-20
10.4230/LIPIcs.ECOOP.2020.11,Owicki-Gries Reasoning for C11 RAR,,2017-03-20
10.1007/978-3-319-98938-9_7,Making Linearizability Compositional for Partially Ordered Executions,,2013-03-20
10.1145/3360599,Effective lock handling in stateless model checking,,2017-03-20
10.1145/3012281,Minimizing Test Suites with Unfoldings of Multithreaded Programs,,2014-03-20
10.1145/3092282.3092287,Stateless model checking of the Linux kernel's hierarchical read-copy-update (tree RCU),,2016-03-20
10.1007/978-3-030-25540-4_22,Cerberus-BMC: A Principled Reference Semantics and Exploration Tool for Concurrent and Sequential C,,2016-03-20
10.1007/978-3-030-59152-6_21,Parallel Graph-Based Stateless Model Checking,,2013-03-20
10.1145/3158119,Data-centric dynamic partial order reduction,,2019-03-20
10.1007/978-3-319-66197-1_12,Using Shared Memory Abstractions to Design Eager Sequentializations for Weak Memory Models,,2020-03-20
10.1145/3360576,Optimal stateless model checking for reads-from equivalence under sequential consistency,,2019-03-20
10.1016/J.IC.2020.104588,Reachability of scope-bounded multistack pushdown systems,,2014-03-20
10.1145/3314221.3314624,Promising-ARM/RISC-V: a simpler and faster operational concurrency model,,2016-03-20
10.1007/978-3-662-54580-5_4,Context-Bounded Analysis for POWER,,2019-03-20
10.1145/3106237.3106243,Thread-modular static analysis for relaxed memory models,,2016-03-20
10.1088/1757-899X/767/1/012030,Implementation of Particle Swarm Optimization and Genetic Algorithms to Tackle the PAPR Problem of OFDM System,,2017-03-20
10.1145/2851141.2851165,The virtues of conflict: analysing modern concurrency,,2016-03-20
10.1145/3290381,On library correctness under weak memory consistency: specifying and verifying concurrent libraries under declarative consistency models,,2016-03-20
10.1007/978-3-319-96142-2_22,Quasi-Optimal Partial Order Reduction,,2013-03-20
10.1145/3290383,Grounding thin-air reads with event structures,,2016-03-20
10.23919/FMCAD.2018.8603021,BMC with Memory Models as Modules,,2019-03-20
10.1145/3368826.3377910,Interactive debugging of concurrent programs under relaxed memory models,,2012-03-20
10.23638/LMCS-14(1:9)2018,The Benefits of Duality in Verifying Concurrent Programs under TSO (Parameterized Verification of TSO Memory Models),,2011-03-20
10.1145/3428219,Persistent Owicki-Gries reasoning: a program logic for reasoning about persistent programs on Intel-x86,,2020-03-20
10.1145/2737924.2737956,Dynamic partial order reduction for relaxed memory models,,2014-03-20
10.1007/978-3-030-03424-5,Leveraging Applications of Formal Methods  Verification and Validation. Distributed Systems: 8th International Symposium  ISoLA 2018  Limassol  Cyprus  November 5-9  2018  Proceedings  Part III,,2018-03-20
10.1007/978-3-319-77935-5_21,Certified Foata Normalization for Generalized Traces,,2015-03-20
10.1145/2814270.2814297,SATCheck: SAT-directed stateless model checking for SC and TSO,,2014-03-20
10.1145/2837614.2837643,Taming release-acquire consistency,,2019-03-20
10.1007/978-3-319-48989-6_2,Counter-Example Guided Program Verification,,2015-03-20
10.1145/3018743.3018749,Checking Concurrent Data Structures Under the C/C++11 Memory Model,,2019-03-20
10.1007/978-3-030-53288-8_18,Symbolic Partial-Order Execution for Testing Multi-Threaded Programs,,2015-03-20
10.1007/978-3-030-25540-4_19,BMC for Weak Memory Models: Relation Analysis for Compact SMT Encodings,,2012-03-20
10.1007/978-3-319-41540-6_8,Stateless Model Checking for POWER,,2017-03-20
10.1145/2983990.2984025,Maximal causality reduction for TSO and PSO,,2019-03-20
10.4230/LIPIcs.CONCUR.2016.5,The Benefits of Duality in Verifying Concurrent Programs under TSO,,2020-03-20
10.1007/BF01421677,A parallel algorithm to construct a dominance graph on nonoverlapping rectangles,,2019-03-20
10.1007/BF01840388,Internal and external algorithms for the points-in-regions problem—the inside join of geo-relational algebra,,2016-03-20
10.1007/978-3-540-85221-6_12,Combinatorial Problems in Chip Design,,2012-03-20
10.1007/BF01758750,Parallel computational geometry of rectangles,,2014-03-20
10.1007/BF01758844,On the parallel-decomposability of geometric problems,,2019-03-20
10.2478/s11532-010-0062-7,Spectroscopic evaluation of chiral and achiral fluorescent ionic liquids,,2020-03-20
10.1007/s11047-010-9180-6,Petri nets for modelling metabolic pathways: a survey,,2012-03-20
10.1016/j.tcs.2003.10.028,Catalytic P systems  semilinear sets  and vector addition systems,,2017-03-20
10.1007/978-3-642-04420-5_7,On Yen's Path Logic for Petri Nets,,2020-03-20
10.1142/S0129054105003340,On one-membrane P systems operating in sequential mode,,2016-03-20
10.1007/3-540-45841-7_43,Recognizable Sets of Message Sequence Charts,,2013-03-20
10.1007/978-3-540-30550-7_18,The Power of Maximal Parallelism in P Systems,,2011-03-20
10.7907/CVKM-D684.,Networks of relations,,2015-03-20
10.1007/978-3-540-85238-4_26,Reversal-Bounded Counter Machines Revisited,,2016-03-20
10.1007/978-3-319-11439-2_7,Equivalence Between Model-Checking Flat Counter Systems and Presburger Arithmetic,,2014-03-20
10.1007/978-3-540-45138-9_42,Characterizations of Catalytic Membrane Computing Systems,,2018-03-20
10.3103/S0146411611070091,On the reachability set of automaton counter machines,,2013-03-20
10.1142/10623,Quantum Techniques in Stochastic Mechanics,,2016-03-20
10.1007/11527800_18,P Systems: Some Recent Results and Research Problems,,2011-03-20
10.1016/J.TCS.2018.06.013,Local time membrane systems and time Petri nets,,2017-03-20
10.1016/S0304-3975(01)00183-9,Program schemes  arrays  Lindström quantifiers and zero-one laws,,2011-03-20
10.1016/j.tcs.2017.10.011,Verifying Chemical Reaction Network Implementations: A Pathway Decomposition Approach,,2018-03-20
10.1017/S0960129509990181,Deciding reachability problems in Turing-complete fragments of Mobile Ambients,,2014-03-20
10.1016/j.tcs.2017.07.007,Equivalence between model-checking flat counter systems and Presburger arithmetic,,2020-03-20
10.1142/S0129054109006759,Path Decomposition and Semilinearity of Petri Nets,,2012-03-20
10.5282/UBM/EPUB.13520,Networks of Relations,,2015-03-20
10.1016/j.ipl.2005.03.002,Equality of languages coincides with isomorphism of reachable state graphs for bounded and persistent Petri nets,,2016-03-20
10.1007/978-3-319-07734-5_12,The 4C Spectrum of Fundamental Behavioral Relations for Concurrent Systems,,2012-03-20
10.1007/978-3-030-21290-2_13,Information Systems Modeling: Language  Verification  and Tool Support,,2012-03-20
10.1016/J.TCS.2015.03.051,Verification of membrane systems with delays via Petri nets with delays,,2018-03-20
10.1007/978-3-540-88869-7_27,Programmability of Chemical Reaction Networks,,2015-03-20
10.3233/FI-2009-0086,Levels of Persistency in Place/Transition Nets,,2020-03-20
10.1016/J.IC.2012.11.004,On Persistent Reachability in Petri Nets,,2015-03-20
10.1007/11562948_36,Flat Counter Automata Almost Everywhere!,,2016-03-20
10.1109/SYNASC.2012.22,Timed Catalytic Petri Nets,,2015-03-20
10.1007/s10009-008-0064-3,FAST: acceleration from theory to practice,,2016-03-20
10.1109/TAC.2016.2574120,Basis Marking Representation of Petri Net Reachability Spaces and Its Application to the Reachability Problem,,2011-03-20
10.1017/S0960129520000043,Open Petri Nets,,2011-03-20
10.1142/S0129054105003236,On various notions of parallelism in P Systems,,2013-03-20
10.3233/FI-2018-1663,A Petri Net Based Modeling of Active Objects and Futures,,2020-03-20
10.1137/S0097539703437491,Partial Match Queries in Random k-d Trees,,2012-03-20
10.7916/D8F195S6,Large-scale machine learning for classification and search,,2018-03-20
10.1007/S10559-018-0034-Z,Index Structures for Fast Similarity Search for Real Vectors. II*,,2019-03-20
10.1177/0278364911406761,Sampling-based algorithms for optimal motion planning,,2015-03-20
10.1201/B18373-35,Escaping the Grid: Infinite-Resolution Influence Mapping,,2017-03-20
10.1016/J.MEASUREMENT.2013.04.080,Improved measurement accuracy in optical scatterometry using fitting error interpolation based library search,,2017-03-20
10.1109/IJCNN.2019.8852056,Extreme Dimensionality Reduction for Network Attack Visualization with Autoencoders,,2018-03-20
10.1016/j.is.2015.01.009,Quantized ranking for permutation-based indexing,,2018-03-20
10.1007/978-3-642-22351-8_37,Recipes for Baking Black Forest Databases - Building and Querying Black Hole Merger Trees from Cosmological Simulations,,2020-03-20
10.1016/j.ins.2010.10.028,Data clustering by minimizing disconnectivity,,2018-03-20
10.1016/J.KNOSYS.2020.106484,A framework for optimizing extended belief rule base systems with improved Ball trees,,2019-03-20
10.1007/s11263-015-0842-9,Ray Saliency: Bottom-Up Visual Saliency for a Rotating and Zooming Camera,,2018-03-20
10.1006/jcss.2002.1848,An Algorithm for Handling Many Relational Calculus Queries Efficiently,,2020-03-20
10.1137/060653780,On k-d Range Search with Patricia Tries,,2014-03-20
10.1116/1.4919713,Fast and accurate solution of inverse problem in optical scatterometry using heuristic search and robust correction,,2016-03-20
10.1007/s10115-018-1262-2,Encrypted data indexing for the secure outsourcing of spectral clustering,,2013-03-20
10.1007/BF00991003,An empirical performance comparison of some variations of thek-d Tree andBD tree,,2011-03-20
10.1088/0031-9155/57/2/415,Real-time optical measurement of the dynamic body surface for use in guided radiotherapy.,,2017-03-20
10.1007/s11227-020-03436-2,K-means tree: an optimal clustering tree for unsupervised learning,,2020-03-20
10.4208/CICP.010415.110915A,Efficient Implementation of Smoothed Particle Hydrodynamics (SPH) with Plane Sweep Algorithm,,2017-03-20
10.1109/IROS.2012.6385837,Fast Nearest Neighbor Search using Approximate Cached k-d tree,,2011-03-20
10.1016/j.ipl.2005.02.005,An improved algorithm for the maximum agreement subtree problem,,2014-03-20
10.1109/83.988964,2D-pattern matching image and video compression: theory  algorithms  and experiments,,2012-03-20
10.1007/978-3-642-32153-5_10,Scalable Distributed Algorithm for Approximate Nearest Neighbor Search Problem in High Dimensional General Metric Spaces,,2016-03-20
10.18452/18797,Scalable and Efficient Analysis of Large High-Dimensional Data Sets in the Context of Recurrence Analysis,,2019-03-20
10.1111/cgf.13098,Contracting Medial Surfaces Isotropically for Fast Extraction of Centred Curve Skeletons,,2012-03-20
10.1007/978-3-642-41062-8_11,Quantized Ranking for Permutation-Based Indexing,,2017-03-20
10.1109/ISLPED.2013.6629265,Early detection of current hot spots in power gated designs,,2015-03-20
10.4213/DM226,О функциональной сложности двумерной задачи интервального поиска@@@On the functional complexity of a two-dimensional interval search problem,,2011-03-20
10.1109/BIBE.2004.1317388,An Improved Algorithm for the Maximum Agreement Subtree Problem,,2015-03-20
10.1007/s00453-014-9881-9,Linear-Space Data Structures for Range Minority Query in Arrays,,2014-03-20
10.1007/978-3-540-45072-6_4,Bkd-Tree: A Dznamic Scalable kd-Tree,,2016-03-20
10.1145/1815330.1815384,Word spotting in Alice's adventures underground using multi scale integral orientation features,,2014-03-20
10.1016/j.jfranklin.2018.05.040,K-d tree based approach for point location problem in explicit model predictive control,,2012-03-20
10.1016/j.cviu.2014.06.013,3D faces in motion: Fully automatic registration and statistical analysis,,2017-03-20
10.1145/3269206.3271780,Parallel Hashing Using Representative Points in Hyperoctants,,2012-03-20
10.1109/ICDE.2011.5767835,Efficient SPectrAl Neighborhood blocking for entity resolution,,2015-03-20
10.1145/1851476.1851527,DiscFinder: a data-intensive scalable cluster finder for astrophysics,,2012-03-20
10.14778/3192965.3192969,RC-Index: Diversifying Answers to Range Queries,,2011-03-20
10.1145/3357384.3357938,GRIP: Multi-Store Capacity-Optimized High-Performance Nearest Neighbor Search for Vector Search Engine,,2016-03-20
10.1007/978-3-319-24282-8_19,Predicting Protein Function and Protein-Ligand Interaction with the 3D Neighborhood Kernel,,2011-03-20
10.1080/17445760.2015.1057820,Decomposable algorithm for computing k-nearest neighbours across partitioned data,,2012-03-20
10.21236/ada459021,Lightweight structure in text,,2015-03-20
10.1109/ICPADS.2011.114,Scalable Distributed Processing of Spatial Point Data,,2018-03-20
10.1016/J.PHYSA.2016.05.041,Spatial clustering with Density-Ordered tree,,2019-03-20
10.4230/LIPIcs.ITCS.2021.37,Algorithms and Hardness for Multidimensional Range Updates and Queries,,2015-03-20
10.1109/ACCESS.2018.2881230,An Automatic Clustering Algorithm Based on Region Segmentation,,2011-03-20
10.1109/TCYB.2015.2507362,Learning Linear Representation of Space Partitioning Trees Based on Unsupervised Kernel Dimension Reduction,,2020-03-20
10.2312/EGPGV/EGPGV11/071-080,Interactive particle tracing in time-varying tetrahedral grids,,2020-03-20
10.1007/s10710-012-9172-7,Locally geometric semantic crossover: a study on the roles of semantics and homology in recombination operators,,
10.1109/SMI.2010.32,Sharp feature detection in point clouds,,2016-03-20
10.1007/978-1-4614-3436-8_8,Analysis Techniques for Atom Probe Tomography,,2016-03-20
10.1137/1.9781611973754.8,Faster Linear-space Orthogonal Range Searching in Arbitrary Dimensions,,2019-03-20
10.1155/2017/4323590,A Greedy Clustering Algorithm Based on Interval Pattern Concepts and the Problem of Optimal Box Positioning,,2014-03-20
10.1016/S0304-3975(02)00741-7,Dynamic orthogonal range queries in OLAP,,2020-03-20
10.1007/11669487_25,Towards Versatile Document Analysis Systems,,2014-03-20
10.1155/2015/982041,Fast Model Predictive Control Combining Offline Method and Online Optimization with K-D Tree,,2017-03-20
10.15607/RSS.2010.VI.034,Incremental Sampling-based Algorithms for Optimal Motion Planning,,2012-03-20
10.1007/s10586-017-0928-y,A PR-quadtree based multi-dimensional indexing for complex query in a cloud system,,2013-03-20
10.1007/978-3-642-32241-9_32,Partially Specified Nearest Neighbor Search,,2012-03-20
10.1145/3332932,Time-Sync Video Tag Extraction Using Semantic Association Graph,,2012-03-20
10.1007/s00224-013-9455-2,Linear-Space Data Structures for Range Mode Query in Arrays,,2019-03-20
10.14279/DEPOSITONCE-3089,Papnet: An order-preserving and latency-aware P2P Overlay and its Applications,,2014-03-20
10.1142/S1793536911000775,A Fast Algorithm for Computing Sample Entropy,,2020-03-20
10.1007/978-3-642-31155-0_26,Linear-Space Data Structures for Range Minority Query in Arrays,,2018-03-20
10.1007/978-3-642-18302-7_12,Quadtree Representation and Compression of Spatial Data,,2013-03-20
10.1016/B978-012387582-2/50004-6,Accelerated Isosurface Extraction Approaches,,2011-03-20
10.1109/IRANIANMVIP.2017.8342344,A real-time grid-based method for estimating nearest neighbors in euclidean space,,2020-03-20
10.23919/ACC45564.2020.9147990,The Nearest Polytope Problem: Algorithms and Application to Controlling Hybrid Systems,,2014-03-20
10.1117/12.858563,Fresnel patterns insertion on image for data encoding and robust perceptual image hashing,,2013-03-20
10.1109/ICCNC.2018.8390357,A Novel Approach to Exponential Speedup of Simulation Events in Wireless Networks,,2016-03-20
10.1109/SCIS-ISIS.2012.6505385,Similar pair identification using locality-sensitive hashing technique,,2019-03-20
10.1007/978-3-540-39763-2_1,A Local Chaining Algorithm and Its Applications in Comparative Genomics,,2012-03-20
10.1002/asna.201011484,Identifying star clusters in a field: A comparison of different algorithms,,2011-03-20
10.1016/j.compbiolchem.2009.10.006,Exhaustive computational search of ionic-charge clusters that mediate interactions between mammalian cytochrome P450 (CYP) and P450-oxidoreductase (POR) proteins,,2011-03-20
10.1016/j.cviu.2012.05.001,Probabilistic cost model for nearest neighbor search in image retrieval,,2014-03-20
10.3929/ETHZ-A-005546839,3D video acquisition  representation & editing,,2019-03-20
10.1007/S10958-010-9973-2,Information storage and search complexity theory,,2014-03-20
10.1134/S1995080218090184,Unsupervised Graph Anomaly Detection Algorithms Implemented in Apache Spark,,2011-03-20
10.1109/ISLPED.2013.6629266,A 40 nm 0.32 V 3.5 MHz 11T single-ended bit-interleaving subthreshold SRAM with data-aware write-assist,,2019-03-20
10.1016/j.forsciint.2013.04.023,Copy-move forgery detection using multiresolution local binary patterns.,,2017-03-20
10.1080/01691864.2013.812250,Fast nearest neighbor search algorithm using the cache technique,,2016-03-20
10.1016/0020-0190(79)90110-8,Average Case Analysis of Region Search in Balanced k-d Trees,,2020-03-20
10.1109/ROBIO.2011.6181388,Locating objects in spherical panoramic images,,2015-03-20
10.3389/fninf.2014.00068,1D-3D hybrid modeling—from multi-compartment models to full resolution models in space and time,,2017-03-20
10.1117/12.844138,Design of  and some clinical experience with  a novel optical surface measurement system in radiotherapy,,2013-03-20
10.1109/ICDM.2011.63,Enabling Fast Lazy Learning for Data Streams,,2017-03-20
10.1117/1.JMM.12.1.013004,Identification and reconstruction of diffraction structures in optical scatterometry using support vector machine method,,2013-03-20
10.1080/14786430902821610,Influence of field evaporation on Radial Distribution Functions in Atom Probe Tomography,,2015-03-20
10.1007/978-3-319-08404-6_30,Ranked Document Selection,,2020-03-20
10.1117/12.826226,Multiresolution example-based depth image restoration,,2017-03-20
10.3923/ajit.2016.1723.1730,An Optimal Algorithm for Range Search on Multidimensional Points,,2018-03-20
10.3389/fdata.2020.00028,R*-Grove: Balanced Spatial Partitioning for Large-Scale Datasets,,2015-03-20
10.3929/ETHZ-A-005330494,Meshless Lagrangian methods for physics-based animations of solids and fluids,,2020-03-20
10.1016/j.cviu.2014.05.005,Review of statistical shape spaces for 3D data with comparative analysis for human faces,,2012-03-20
10.1109/IPIN.2011.6071939,Predicting the expected accuracy for fingerprinting based WiFi localisation systems,,2015-03-20
10.1016/j.tcs.2019.10.008,Ranked document selection,,2012-03-20
10.1007/s11042-019-7438-2,An adaptive image feature matching method using mixed Vocabulary-KD tree,,2015-03-20
10.1201/9781420036275.ch15,Chaining Algorithms and Applications in Comparative Genomics,,2012-03-20
10.20381/RUOR-4895,Example-Based Fluid Simulation,,2012-03-20
10.1137/140964266,Efficient and Scalable Algorithms for Smoothed Particle Hydrodynamics on Hybrid Shared/Distributed-Memory Architectures,,2015-03-20
10.1364/AO.52.006726,Improved measurement accuracy in optical scatterometry using correction-based library search.,,2017-03-20
10.1007/s10207-012-0158-5,Efficient microaggregation techniques for large numerical data volumes,,2016-03-20
10.3929/ETHZ-A-005523483,Modeling and animation with relaxed connectivity requirements,,2017-03-20
10.20965/ijat.2012.p0710,Tool Path Generation for Five-Axis Controlled Machining with Consideration of Structural Interference,,2011-03-20
10.1117/12.650359,Versatile document image content extraction,,2018-03-20
10.1016/j.jda.2004.08.011,Chaining algorithms for multiple genome comparison,,2018-03-20
10.1137/16M1063289,A Measure-Theoretic Interpretation of Sample Based Numerical Integration with Applications to Inverse and Prediction Problems under Uncertainty,,2011-03-20
10.1016/j.is.2013.10.006,Approximate nearest neighbor algorithm based on navigable small world graphs,,2011-03-20
10.18725/OPARU-365,Algorithms and a software system for comparative genome analysis,,2017-03-20
10.1109/OCEANSSYD.2010.5603681,IMU-aided stereo visual odometry for ground-tracking AUV applications,,2017-03-20
10.1515/dma-2002-0107,On the functional complexity of a two-dimensional interval search problem,,2011-03-20
10.1016/S1383-7621(03)00039-0,Fault-tolerance of Complete Josephus Cubes,,2014-03-20
10.1016/j.ins.2010.09.005,Augmented k-ary n-cubes,,2012-03-20
10.3724/SP.J.1016.2012.00315,The Super Locally Twisted Cube Interconnection Networks and Their Properties: The Super Locally Twisted Cube Interconnection Networks and Their Properties,,2018-03-20
10.1016/S0167-8191(01)00145-4,Reconfiguring binary tree structures in a faulty supercube with unbounded expansion,,2019-03-20
10.1016/j.jpdc.2004.09.018,The Josephus Cube: analysis of routing and fault tolerance,,2016-03-20
10.1109/PACRIM.2003.1235884,On extensibilities of interconnection networks,,2011-03-20
10.2478/s11535-013-0261-2,Do novel cement-type biomaterials reveal ion reactivity that affects cell viability in vitro?,,2020-03-20
10.2478/v10222-012-0085-1,Determination of Trace Cadmium in Nonalcoholic Beverages by Coupling Cloud Point Extraction with Spectrophotometry,,2014-03-20
10.4230/LIPIcs.OPODIS.2015.15,A Heap-Based Concurrent Priority Queue with Mutable Priorities for Faster Parallel Algorithms,,2018-03-20
10.1145/2048066.2048086,Automatic fine-grain locking using shape properties,,2014-03-20
10.1145/1706299.1706305,Sequential verification of serializability,,2015-03-20
10.1145/3178487.3178503,Practical concurrent traversals in search trees,,2013-03-20
10.3217/jucs-013-06-0874,Open and Closed Worlds for Overloading: a Definition and Support for Coexistence,,2011-03-20
10.1002/spe.2624,"C
 ∀ : Adding modern programming language features to C",,2014-03-20
10.1016/j.tcs.2004.11.018,Semi-on-line multiprocessor scheduling with given total processing time,,2011-03-20
10.1007/s10951-018-0567-z,A survey on makespan minimization in semi-online environments,,2020-03-20
10.1142/S0217595917500063,Online Order Scheduling Problem with the Same Order Size on Two Identical Machines,,2019-03-20
10.1109/IPDPSW.2010.5470799,Dynamic Fractional Resource Scheduling for cluster platforms,,2014-03-20
10.1007/s10878-009-9254-5,Semi-online scheduling on two uniform machines with the known largest size,,2016-03-20
10.1007/s10951-009-0119-7,Optimal and online preemptive scheduling on uniformly related machines,,2012-03-20
10.1007/s10100-017-0481-z,Tight upper bounds for semi-online scheduling on two uniform machines with known optimum,,2017-03-20
10.1007/s10878-008-9200-y,Online scheduling with a buffer on related machines,,2018-03-20
10.1007/978-3-540-24592-6_19,On-line extensible bin packing with unequal bin sizes,,2012-03-20
10.1016/j.tcs.2008.11.018,Two semi-online scheduling problems on two uniform machines,,2015-03-20
10.1016/j.tcs.2012.03.031,Semi-online scheduling revisited,,2016-03-20
10.1007/s00607-006-0187-x,Semi-online Machine Covering on Two Uniform Machines with Known Total Size,,2013-03-20
10.1080/00207160.2014.922682,Online hierarchical scheduling on two machines with known total size of low-hierarchy jobs,,2016-03-20
10.1007/978-3-642-39212-2_2,Recent Advances for a Classical Scheduling Problem,,2020-03-20
10.1016/j.tcs.2011.03.032,Semi-online scheduling with known partial information about job sizes on two identical machines,,2015-03-20
10.1016/j.tcs.2005.02.008,Optimal semi-online preemptive algorithms for machine covering on two uniform machines,,2012-03-20
10.1016/j.ic.2004.10.002,Optimal on-line algorithms for the uniform machine scheduling problem with ordinal data,,2014-03-20
10.1007/BF02973433,Preemptive semi-online scheduling with tightly-grouped processing times,,2011-03-20
10.1007/978-3-642-39212-2,Automata  Languages  and Programming,,2019-03-20
10.1007/11533719_31,Semi-online Problems on Identical Machines with Inexact Partial Information,,2013-03-20
10.1016/j.tcs.2016.08.022,Semi-online scheduling with bounded job sizes on two uniform machines,,2011-03-20
10.1016/j.tcs.2013.04.013,Semi-online scheduling problems on two uniform machines under a grade of service provision,,2019-03-20
10.1016/j.ipl.2011.01.002,Optimal semi-online algorithms for scheduling problems with reassignment on two identical machines,,2011-03-20
10.1007/s00236-003-0134-7,Optimal algorithms for semi-online preemptive scheduling problems on two uniform machines,,2013-03-20
10.1007/s10878-009-9265-2,Two uniform machines with nearly equal speeds: unified approach to known sum and known optimum in semi on-line scheduling,,2012-03-20
10.1109/TPDS.2011.183,Dynamic Fractional Resource Scheduling versus Batch Scheduling,,2014-03-20
10.1007/s10878-006-9040-6,Semi-online scheduling with “end of sequence” information,,2015-03-20
10.1007/s10100-018-0536-9,Tight lower bounds for semi-online scheduling on two uniform machines with known optimum,,2016-03-20
10.1016/j.tcs.2012.07.005,Several semi-online scheduling problems on two identical machines with combined information,,2018-03-20
10.1109/ICCASM.2010.5622660,Semi-online bin stretching with non-increasing job processing times,,2012-03-20
10.1109/IPDPS.2010.5470356,Dynamic fractional resource scheduling for HPC workloads,,2017-03-20
10.1016/j.tcs.2007.02.014,Semi-online scheduling problems on two identical machines with inexact partial information,,2013-03-20
10.1007/11602613_43,Preemptive Semi-online Scheduling on Parallel Machines with Inexact Partial Information,,2012-03-20
10.1007/s10878-014-9778-1,Semi-online scheduling with combined information on two identical machines in parallel,,2012-03-20
10.1007/s00607-003-0034-2,Semi-Online Algorithms for Parallel Machine Scheduling Problems,,2011-03-20
10.1201/9780203489802.ch15,Online Scheduling,,2015-03-20
10.1016/j.tcs.2006.11.015,Optimal semi-online algorithms for machine covering,,2018-03-20
10.1007/978-3-540-24749-4_18,Optimal and Online Preemptive Scheduling on Uniformly Related Machines,,2015-03-20
10.1016/j.orl.2013.03.005,An efficient algorithm for bin stretching,,2018-03-20
10.1016/j.dam.2004.12.005,Semi-online scheduling jobs with tightly-grouped processing times on three identical machines,,2020-03-20
10.1515/eetech-2019-0001,1D Hematite-[α-Fe2O3]-nanorods prepared by green fabrication for supercapacitor electrodes,,2019-03-20
10.1109/ICDE.2018.00137,Polygraph: A Plug-n-Play Framework to Quantify Anomalies,,2020-03-20
10.1007/BF01784718,Achieving graceful performance in distributed error-prone databases,,2019-03-20
10.1007/978-1-4614-5725-1_10,Chapter 9 Several Complex Variables,,2019-03-20
10.1007/978-3-319-48314-6_10,In the Search for Optimal Concurrency,,2013-03-20
10.1007/BF01178262,On the complexity of concurrency control using semantic information,,2020-03-20
10.4102/hts.v76i4.5652,Paul and identity construction in early Christianity and the Roman Empire,,2017-03-20
10.2478/afepuc-2019-0014,Gender Differences in Subjective Well-Being of Healthy High-School Students,,2011-03-20
10.1016/j.csi.2010.06.014,A generic simulation model for evaluating concurrency control protocols in native XML database systems,,2014-03-20
10.1515/pomr-2017-0119,Dynamic Characteristics of Magnetic Coupling in Horizontal Axis Wave Energy Device,,2020-03-20
10.1007/3-540-45706-2_71,Real PRAM Programming,,2016-03-20
10.1145/973097.973098,Logic of global synchrony,,2013-03-20
10.1007/3-540-45706-2_16,Performance of MP3D on the SB-PRAM Prototype (Research Note),,2011-03-20
10.1137/S009753979427491,The Queue-Read Queue-Write PRAM Model: Accounting for Contention in Parallel Algorithms,,2014-03-20
10.1109/ISPA.2012.103,Design of the Language Replica for Hybrid PRAM-NUMA Many-core Architectures,,2019-03-20
10.1007/978-3-642-37801-0,Parallel Programming,,2019-03-20
10.1016/S0304-3975(97)00202-8,A Shared-Memory Implementation of the Hierarchical Radiosity Method,,2015-03-20
10.1007/978-3-642-16690-7_1,Specification Coverage for Testing in Circus,,2020-03-20
10.1007/978-3-319-21215-9_10,Experimental Evaluation of a Novel Equivalence Class Partition Testing Strategy,,2011-03-20
10.1007/978-3-642-41202-8_10,The Circus Testing Theory Revisited in Isabelle/HOL,,2011-03-20
10.1109/TC.2012.252,Verifying and Comparing Finite State Machines for Systems that Have Distributed Interfaces,,2013-03-20
10.1007/978-3-319-67549-7_2,Fault-Based Testing for Refinement in CSP,,2014-03-20
10.1007/978-3-319-10431-7_17,Rapid Prototyping of a Semantically Well Founded Circus Model Checker,,2012-03-20
10.1109/TASE.2017.8285622,Formal methods for software testing (invited paper),,2013-03-20
10.1007/978-3-642-27705-4_20,Isabelle/Circus: A Process Specification and Verification Environment,,2012-03-20
10.1007/s00165-016-0402-2,Complete model-based equivalence class testing for nondeterministic systems,,2013-03-20
10.1007/978-3-030-54997-8_5,Formal Specifications and Software Testing  a Fruitful Convergence,,2011-03-20
10.1007/s10270-017-0595-8,Experimental evaluation of a novel equivalence class partition testing strategy,,2013-03-20
10.1007/978-981-10-3770-2_12,Construction of Test Cases for Electronic Controllers Based on Timed Automata,,2014-03-20
10.1007/s10009-017-0479-9,Model-based testing strategies and their (in)dependence on syntactic model representations,,2020-03-20
10.1007/978-3-319-45943-1_1,Model-Based Testing Strategies and Their (In)dependence on Syntactic Model Representations,,2012-03-20
10.1016/j.tcs.2014.08.012,Test selection for traces refinement,,2015-03-20
10.1007/978-3-030-31157-5_2,Testing Robots Using CSP,,2017-03-20
10.1007/s11219-018-9431-9,Fault-based refinement-testing for CSP,,2016-03-20
10.14279/tuj.eceasst.62.873,On the whereabouts of CSP-CASL - A survey,,2018-03-20
10.1109/QSIC.2011.27,Formal and Model-Based Testing of Concurrent Workflows,,2012-03-20
10.1016/J.SCICO.2019.04.004,Finite complete suites for CSP refinement testing,,2017-03-20
10.1007/978-3-642-54804-8_29,Data Flow Coverage for Circus-Based Testing,,2017-03-20
10.4204/EPTCS.111.1,Industrial-Strength Model-Based Testing - State of the Art and Current Challenges,,2018-03-20
10.1007/978-3-030-54997-8,Formal Methods. FM 2019 International Workshops: Porto  Portugal  October 7–11  2019  Revised Selected Papers  Part II,,2014-03-20
10.1016/j.infsof.2016.04.003,Formal mutation testing for Circus,,2019-03-20
10.3233/fi-2019-1837,Analysis and Synthesis of Weighted Marked Graph Petri Nets: Exact and Approximate Methods,,2013-03-20
10.1007/978-3-642-29116-6_18,Improved Lower Bound for Online Strip Packing - (Extended Abstract),,2018-03-20
10.1007/s10878-007-9125-x,A note on online strip packing,,2011-03-20
10.1007/978-3-642-17458-2,Combinatorial Optimization and Applications,,2016-03-20
10.1007/s00453-012-9713-8,Online Square Packing with Gravity,,2019-03-20
10.1007/s10878-012-9463-1,A tight analysis of Brown-Baker-Katseff sequences for online strip packing,,2015-03-20
10.1145/2261417.2261440,SIGACT news online algorithms column 20: the power of harmony,,2018-03-20
10.1016/j.ejor.2015.10.012,A new lower bound for online strip packing,,2014-03-20
10.1080/07408170490257862,Some results on resource constrained scheduling,,2013-03-20
10.3990/1.9789036527538,Online Scheduling & Project Scheduling,,2014-03-20
10.1007/978-3-642-29116-6,Approximation and Online Algorithms,,2012-03-20
10.1007/978-3-642-17461-2,Combinatorial Optimization and Applications,,2018-03-20
10.1007/s10878-016-0046-4,A new upper bound for the online square packing problem in a strip,,2012-03-20
10.5784/24-2-65,A survey and comparison of heuristics for the 2D oriented on-line strip packing problem,,2016-03-20
10.1016/j.tcs.2009.05.033,Improved online algorithms for parallel job scheduling and strip packing,,2017-03-20
10.1007/s10951-007-0032-x,On-line scheduling of parallel jobs in a list,,2018-03-20
10.1142/S0129054111008519,Performance evaluation on multiprocessor task scheduling with resource augmentation,,2020-03-20
10.4230/LIPIcs.APPROX-RANDOM.2017.13,Online Strip Packing with Polynomial Migration,,2014-03-20
10.1016/j.cor.2010.10.005,A squeaky wheel optimisation methodology for two-dimensional strip packing,,2013-03-20
10.1504/IJCVR.2011.039356,A PSO based multi-robot task allocation,,2020-03-20
10.1109/SOCC.2007.4545456,Device allocation on the SegBus platform based on communication scheduling cost minimization,,2020-03-20
10.1515/arh-2003-0019,Talc Filled Thermoplastic Composites: Melt Rheological Properties,,2015-03-20
10.1007/s00224-013-9494-8,Improved Lower Bound for Online Strip Packing,,2012-03-20
10.1016/j.orl.2010.04.002,On-line scheduling of multi-core processor tasks with virtualization,,2017-03-20
10.1016/j.tcs.2015.04.038,An asymptotic competitive scheme for online bin packing,,2020-03-20
10.1007/978-3-319-12691-3_2,An Asymptotic Competitive Scheme for Online Bin Packing,,2012-03-20
10.1016/j.disopt.2016.11.004,New upper bounds for online strip packing,,2014-03-20
10.1016/j.cosrev.2016.12.001,Approximation and online algorithms for multidimensional bin packing: A survey,,2018-03-20
10.1109/ICETET.2008.111,An Optimized Multirobot Task Allocation,,2020-03-20
10.1515/pjct-2016-0063,Influence of expanded graphite coming from the electrochemical oxidation of phenol on cement-polymer matrix,,2013-03-20
10.1109/TEVC.2010.2041061,A Genetic Programming Hyper-Heuristic Approach for Evolving 2-D Strip Packing Heuristics,,2018-03-20
10.1007/978-3-642-03367-4_27,Online Square Packing,,2014-03-20
10.3390/s20030758,Reusable Mesh Signature Scheme for Protecting Identity Privacy of IoT Devices,,2013-03-20
10.1109/ACCESS.2020.3007691,Revocable Attribute-Based Signature for Blockchain-Based Healthcare System,,2020-03-20
10.1007/s10916-018-0993-7,MedBlock: Efficient and Secure Medical Data Sharing Via Blockchain,,2014-03-20
10.1109/JIOT.2020.2966870,Edge-Computing-Based Trustworthy Data Collection Model in the Internet of Things,,2012-03-20
10.1109/ISEASP.2017.7976992,Expressive key-policy attribute-based constant-size signature,,2016-03-20
10.1016/j.sysarc.2020.101971,Edge-based auditing method for data security in resource-constrained Internet of Things,,2012-03-20
10.3390/EN11051154,Multiple Authorities Attribute-Based Verification Mechanism for Blockchain Mircogrid Transactions,,2012-03-20
10.1007/978-981-15-5463-6_11,Application of Block Chain in EHR’s System for Maintaining the Privacy of Patients Record,,2018-03-20
10.1155/2019/8315614,Blockchain-Based Access Control Model to Preserve Privacy for Personal Health Record Systems,,2019-03-20
10.1109/ACCESS.2019.2956573,Design and FPGA Implementation of a Pseudorandom Number Generator Based on a Four-Wing Memristive Hyperchaotic System and Bernoulli Map,,2020-03-20
10.1109/ACCESS.2018.2801266,Secure Attribute-Based Signature Scheme With Multiple Authorities for Blockchain in Electronic Health Records Systems,,2012-03-20
10.1155/2019/2545123,A Survey on True Random Number Generators Based on Chaos,,2013-03-20
10.1155/2020/5859273,Secure Communication Scheme Based on a New 5D Multistable Four-Wing Memristive Hyperchaotic System with Disturbance Inputs,,2012-03-20
10.1109/TITS.2020.3038910,SDABS: A Flexible and Efficient Multi-Authority Hybrid Attribute-Based Signature Scheme in Edge Environment,,2013-03-20
10.1002/ETT.3667,Analysis of attribute‐based cryptographic techniques and their application to protect cloud services,,2012-03-20
10.1155/2019/4047957,Analysis and FPGA Realization of a Novel 5D Hyperchaotic Four-Wing Memristive System  Active Control Synchronization  and Secure Communication Application,,2013-03-20
10.1177/1550147720912939,Issues of privacy policy conflict in mobile social network,,2020-03-20
10.1155/2020/5212601,CCII and FPGA Realization: A Multistable Modified Fourth-Order Autonomous Chua's Chaotic System with Coexisting Multiple Attractors,,2014-03-20
10.1007/s10559-019-00184-x,Detecting Fictitious States in a Σ-Automaton Synthesized from Its Specification in the Language LP,,2011-03-20
10.5120/17185-7365,Organ Donation Prediction using Trigger based Self Learning Automata,,2011-03-20
10.1007/978-3-642-22922-0_24,A Uniform Framework for Temporal Functional Dependencies with Multiple Granularities,,2012-03-20
10.1007/978-3-319-33693-0_16,Deciding Monadic Second Order Logic over \omega ω -Words by Specialized Finite Automata,,2011-03-20
10.1007/S10559-020-00286-X,From LP Formulas of the Form F(t) to –ω-Regular Expressions,,2018-03-20
10.1109/INTECH.2012.6457783,Data-driven name reduction for record linkage,,2012-03-20
10.1109/ICMLC.2008.4620949,An efficient and hardware-implementable systolic algorithm for the longest common subsequence problem,,2017-03-20
10.1109/ICCIC.2012.6510271,Positional_LCS: A position based algorithm to find Longest Common Subsequence (LCS) in Sequence Database (SDB),,2016-03-20
10.1080/10637190208941431,DERIVING A FAST SYSTOLIC ALGORITHM FOR THE LONGEST COMMON SUBSEQUENCE PROBLEM,,2012-03-20
10.1016/j.tcs.2017.10.027,Efficient merged longest common subsequence algorithms for similar sequences,,2014-03-20
10.1023/A:1008087824437,An Efficient Systolic Algorithm for the Longest Common Subsequence Problem,,2020-03-20
10.1201/9781584888239-C15,General pattern matching,,2013-03-20
10.1145/1109557.1109622,Cache-oblivious dynamic programming,,2014-03-20
10.1109/TCBB.2008.94,Cache-Oblivious Dynamic Programming for Bioinformatics,,2017-03-20
10.1109/Informatics47936.2019.9119320,Some innovations of teaching the course on Data structures and algorithms,,2019-03-20
10.1109/SERVICES-I.2009.105,Using Proportional-Integral-Derivative Control in Self-Healing Adaptive Content Systems,,2015-03-20
10.2478/v10249-011-0047-3,Lichen Planus in the Lines of Blaschko – A Case Report / Blaschko linearni lichen planus – prikaz slučaja,,2016-03-20
10.1109/CoDIT.2017.8102597,Controlling boundedness for live Petri nets,,2015-03-20
10.1007/s11432-016-0241-y,Observable liveness of Petri nets with controllable and observable transitions,,2012-03-20
10.1007/978-3-319-57861-3_12,Weak Observable Liveness and Infinite Games on Finite Graphs,,2012-03-20
10.1007/BF00260921,Proof rules for the programming language Euclid,,2014-03-20
10.1007/BF02243568,Comments on a paper by neuhold and studer,,2017-03-20
10.1016/j.tcs.2016.01.021,More results on the complexity of identifying problems in graphs,,2015-03-20
10.1007/978-3-030-51117-3_8,Locating-Domination and Identification,,2012-03-20
10.1109/TIT.2002.800490,Identifying and locating-dominating codes: NP-Completeness results for directed graphs,,2012-03-20
10.1142/S1793830919500277,r-Identifying codes in binary Hamming space  q-ary Lee space and incomplete hypercube,,2013-03-20
10.1137/S0895480104440754,On Optimal Edge-Robust and Vertex-Robust (1  leql)-Identifying Codes,,2020-03-20
10.1007/978-3-540-77224-8_31,Links Between Discriminating and Identifying Codes in the Binary Hamming Space,,2018-03-20
10.1109/TIT.2005.862097,On robust and dynamic identifying codes,,2017-03-20
10.1006/jcta.2002.3263,On Identifying Codes in Binary Hamming Spaces,,2017-03-20
10.1016/j.jctb.2003.10.002,On identification in the triangular grid,,2011-03-20
10.1016/j.ejc.2009.03.032,New identifying codes in the binary Hamming space,,2020-03-20
10.1093/comjnl/bxx036,Deterministic Deep Pushdown Transducer and its Parallel Version,,2017-03-20
10.3233/IFS-162138,Fuzzy state grammar and fuzzy deep pushdown automaton,,2015-03-20
10.4467/20838476si.17.005.8151,A Reduction of Finitely Expandable Deep Pushdown Automata,,2011-03-20
10.1142/9789814317610_0009,FINITELY EXPANDABLE DEEP PDAs,,2014-03-20
10.1063/1.3636862,LL Leftmost k‐Linear Scattered Context Grammars,,2018-03-20
10.1007/978-3-540-69407-6_2,Program Schemes with Deep Pushdown Storage,,2016-03-20
10.1007/s00236-009-0103-x,On the power of deep pushdown stacks,,2012-03-20
10.4230/DROPS.MEMICS.2009.2351,Derivation in Scattered Context Grammar via Lazy Function Evaluation,,2020-03-20
10.1007/978-3-642-13562-0_33,An Automata-Theoretic Characterization of the Chomsky-Hierarchy,,2012-03-20
10.3233/FI-2014-1022,Syllabic Languages and Go-through Automata,,2019-03-20
10.1007/s12652-020-02515-9,Mathematical modeling of Indian Tala’s Kaidas and Paltas using formal grammar,,2016-03-20
10.1587/TRANSINF.E92.D.377,Reachability Analysis of Variants of Communication-Free Petri Nets,,2020-03-20
10.1007/11533719_91,On Sequential and 1-Deterministic P Systems,,2013-03-20
10.1109/TSMCA.2012.2198465,Priority Workflow Nets,,2016-03-20
10.1007/978-3-642-31644-9_4,Generalized Random Context Picture Grammars: The State of the Art,,2016-03-20
10.1007/978-3-642-28332-1_39,Ogden's Lemma for ET0L Languages,,2020-03-20
10.1016/j.ic.2016.11.002,A new pumping lemma for indexed languages  with an application to infinite words,,2012-03-20
10.1142/S0129054107005194,Table-Driven Context-Free Picture Grammars,,2016-03-20
10.1142/S0218196718500145,Applications of L systems to group theory,,2016-03-20
10.1109/ICMSS.2009.5304232,Deriving Performance Distribution of Queueing System by Maximum Entropy Principle,,2011-03-20
10.1007/s10479-015-2083-2,A functional approximation for retrial queues with two way communication,,2013-03-20
10.3390/math8020278,On Reliability of a Double Redundant Renewable System with a Generally Distributed Life and Repair Times,,2014-03-20
10.1007/s11134-014-9415-9,Fluid limits of many-server retrial queues with nonpersistent customers,,2016-03-20
10.1051/ro:2004020,Entropy maximization and the busy period of some single-server vacation models,,2015-03-20
10.1016/J.APM.2005.02.005,A discrete-time Geo[X]/G/1 retrial queue with control of admission,,2016-03-20
10.1109/ACCESS.2020.3011803,Mobile Membranes,,2011-03-20
10.1155/2018/3745210,The Computational Complexity of Tissue P Systems with Evolutional Symport/Antiport Rules,,2014-03-20
10.1007/978-3-030-00265-7_2,Solving the N-Queens Puzzle by Using Few Membranes,,2015-03-20
10.1007/978-3-030-12797-8_5,Adaptive P Systems,,2015-03-20
10.1007/978-3-319-73359-3_16,Reversing Steps in Membrane Systems Computations,,2018-03-20
10.1007/s41965-019-00022-1,Synchronization of rules in membrane computing,,2011-03-20
10.1007/978-3-319-73359-3_15,Tissue P Systems with Rule Production/Removal,,2020-03-20
10.1007/BF01189020,Narrowing based procedures for equational disunification,,2019-03-20
10.1007/11532231_30,Model Representation via Contexts and Implicit Generalizations,,2012-03-20
10.1007/978-3-319-23165-5_8,On First-Order Model-Based Reasoning,,2013-03-20
10.1007/978-3-540-70590-1_10,Combining Equational Tree Automata over AC and ACI Theories,,2014-03-20
10.1007/978-981-10-0281-6_3,Proving Sufficient Completeness of Constructor-Based Algebraic Specifications,,2018-03-20
10.1007/BF00244459,New uses of linear arithmetic in automated theorem proving by induction,,2011-03-20
10.1016/S0890-5401(03)00134-2,Ground reducibility is EXPTIME-complete,,2011-03-20
10.1007/978-3-540-72200-7_12,Complexity of Rule Redundancy in Non-ground Answer-Set Programming over Finite Domains,,2018-03-20
10.29007/b923,A Model Guided Instantiation Heuristic for the Superposition Calculus with Theories,,2011-03-20
10.1007/978-3-642-37651-1_10,Inst-Gen - A Modular Approach to Instantiation-Based Automated Reasoning,,2019-03-20
10.1007/11853886_15,Model Representation over Finite and Infinite Signatures,,2016-03-20
10.1007/978-3-540-89439-1_6,Data-Oblivious Stream Productivity,,2013-03-20
10.1016/J.TCS.2020.09.024,Stability of termination and sufficient-completeness under pushouts via amalgamation,,2017-03-20
10.1007/S10472-004-9434-Z,On deciding subsumption problems,,2016-03-20
10.1016/S0304-3975(02)00583-2,Explicit versus implicit representations of subsets of the Herbrand universe,,2020-03-20
10.1093/logcom/exm008,Model Representation over Finite and Infinite Signatures,,2019-03-20
10.1007/978-3-540-74835-9_38,Modular Access Control Via Strategic Rewriting,,2011-03-20
10.1017/S1471068406002869,Removing Redundant Arguments Automatically,,2017-03-20
10.1007/s10472-005-0434-4,On deciding subsumption problems,,2019-03-20
10.1007/978-3-642-54624-2_5,Incremental Proofs of Termination  Confluence and Sufficient Completeness of OBJ Specifications,,2020-03-20
10.1007/978-3-642-54624-2_15,Behavioral Rewrite Systems and Behavioral Productivity,,2020-03-20
10.1016/j.tcs.2011.03.024,Lazy productivity via termination,,2012-03-20
10.1016/S0304-3975(98)00233-3,Composing leads-to properties,,2020-03-20
10.1006/jpdc.2001.1792,A Quorum-Based Self-Stabilizing Distributed Mutual Exclusion Algorithm,,2011-03-20
10.1007/3-540-48119-2_32,Towards a Compositional Approach to the Design and Verification of Distributed Systems,,2016-03-20
10.1109/ICCI.1993.315411,An adaptive generic sorting algorithm that uses variable partitioning,,2016-03-20
10.1080/00207169608804511,An adaptive generic sorting algorithm that uses variable partitioning,,2016-03-20
10.1007/3-540-55895-0_452,Improved Parallel Sorting of Presorted Sequences,,2020-03-20
10.1080/00207169208804137,Computing and ranking measures of presortedness,,2013-03-20
10.1145/1216262.1216279,A framework proposal for algorithm animation systems,,2020-03-20
10.1007/BFb0038186,Sorting  Measures of Disorder  and Worst-Case Performance,,2016-03-20
10.3844/JCSSP.2010.163.167,Sorting N-Elements Using Natural Order: A New Adaptive Sorting Approach,,2019-03-20
10.1016/0020-0190(91)90179-L,An Optimal Parallel Adaptive Sorting Algorithm,,2018-03-20
10.1145/146370.146381,A survey of adaptive sorting algorithms,,2016-03-20
10.1145/1459010.1459017,A logical characterization of the counting hierarchy,,2016-03-20
10.1007/978-3-540-30570-5_16,Privacy in Database Publishing,,2015-03-20
10.1137/S0097539704441642,The Complexity of Finding Paths in Graphs with Bounded Independence Number,,2017-03-20
10.1007/11537311_8,Decidable Membership Problems for Finite Recurrent Systems over Sets of Naturals,,2015-03-20
10.3233/978-1-61499-672-9-1414,Complexity Results for Probabilistic Datalog±,,2016-03-20
10.3233/FAIA200176,On Measuring Inconsistency in Relational Databases with Denial Constraints,,2020-03-20
10.1007/978-3-319-44832-9_4,Resistance to Corruption of General Strategic Argumentation,,2019-03-20
10.1007/s00037-009-0260-x,On Defining Integers And Proving Arithmetic Circuit Lower Bounds,,2020-03-20
10.1007/978-0-387-35608-2_27,Quantum NP and Quantum Hierarchy,,2014-03-20
10.1007/978-3-662-44465-8_41,On the Complexity of Symbolic Verification and Decision Problems in Bit-Vector Logic,,2015-03-20
10.1145/2213977.2214069,Rational proofs,,2020-03-20
10.1016/j.jcss.2005.11.003,A parametric analysis of the state-explosion problem in model checking,,2014-03-20
10.1007/3-540-45655-4_59,On Reachability in Graphs with Bounded Independence Number,,2019-03-20
10.1613/jair.3534,Algorithms and Limits for Compact Plan Representations,,2012-03-20
10.1007/BF01578845,On the complexity of graph reconstruction,,2012-03-20
10.1145/2160649.2160668,SIGACT news complexity theory column 73,,2020-03-20
10.1007/BF01200064,Three ∑P2-complete problems in computational learning theory,,2016-03-20
10.1109/LICS.2015.67,On the Complexity of Linear Arithmetic with Divisibility,,2014-03-20
10.1103/PhysRevLett.120.200502,Impossibility of Classically Simulating One-Clean-Qubit Computation,,2013-03-20
10.1016/j.ic.2005.01.002,Competing provers yield improved Karp-Lipton collapse results,,2020-03-20
10.4086/toc.2015.v011a001,The Complexity of Deciding Statistical Properties of Samplable Distributions,,2016-03-20
10.7939/R3DZ03910,Message Passing and Combinatorial Optimization,,2018-03-20
10.1016/j.ic.2010.09.002,Extensions of MSO and the monadic counting hierarchy,,2018-03-20
10.1002/malq.200510010,The ultra-weak Ash conjecture and some particular cases,,2012-03-20
10.1007/978-3-540-27836-8_76,Word Problems on Compressed Words,,2013-03-20
10.1007/s00037-011-0002-8,Interpolation in Valiant’s Theory,,2012-03-20
10.3233/FI-2012-644,Size Constrained Distance Clustering: Separation Properties and Some Complexity Results,,2020-03-20
10.1016/j.ipl.2012.08.001,Towards a tight hardness-randomness connection between permanent and arithmetic circuit identity testing,,2015-03-20
10.1016/j.ijar.2011.08.003,Most probable explanations in Bayesian networks: Complexity and tractability,,2018-03-20
10.1007/978-3-319-71008-2_13,Optimization of the Parameters of Smoothed Particle Hydrodynamics Method  Using Evolutionary Algorithms,,2012-03-20
10.1016/J.ARTINT.2019.07.001,On the complexity of inconsistency measurement,,2013-03-20
10.1006/inco.2001.3084,Nonerasing  Counting  and Majority over the Linear Time Hierarchy,,2016-03-20
10.1613/jair.2697,Llull and Copeland Voting Computationally Resist Bribery and Constructive Control,,2011-03-20
10.1016/j.tcs.2009.10.015,On the complexity of kings,,2020-03-20
10.1145/2090236.2090275,Marginal hitting sets imply super-polynomial lower bounds for permanent,,2020-03-20
10.1016/J.JCSS.2017.06.008,Characterising the complexity of tissue P systems with fission rules,,2020-03-20
10.1007/11537311_5,Bounds on the Power of Constant-Depth Quantum Circuits,,2016-03-20
10.14279/DEPOSITONCE-2897,New Classes of Complete Problems for the Second Level of the Polynomial Hierarchy,,2017-03-20
10.1137/S009753970139207X,Arithmetic Circuits and Polynomial Replacement Systems,,2015-03-20
10.1007/s00224-008-9127-9,On the Autoreducibility of Functions,,2014-03-20
10.1016/j.tcs.2004.03.004,Lower bounds and the hardness of counting properties,,2015-03-20
10.1007/3-540-45841-7_25,On Quantum Computation with Some Restricted Amplitudes,,2014-03-20
10.4230/LIPIcs.MFCS.2017.22,The Complexity of SORE-definability Problems,,2018-03-20
10.4230/LIPIcs.STACS.2014.663,The Complexity of Deciding Statistical Properties of Samplable Distributions,,2013-03-20
10.1007/978-3-319-61581-3_9,The Descriptive Complexity of Bayesian Network Specifications,,2013-03-20
10.1016/j.artint.2020.103344,Handling and measuring inconsistency in non-monotonic logics,,2015-03-20
10.7282/T35D8QVQ,On circuit complexity classes and iterated matrix multiplication,,2014-03-20
10.1007/s00224-007-2034-7,Polynomial-Space Decidable Membership Problems for Recurrent Systems over Sets of Natural Numbers,,2017-03-20
10.1613/jair.5482,On the Semantics and Complexity of Probabilistic Logic Programs,,2011-03-20
10.1016/j.ijar.2020.07.004,The joy of Probabilistic Answer Set Programming: Semantics  complexity  expressivity  inference,,2018-03-20
10.1007/978-3-319-61581-3_40,The Complexity of Inferences and Explanations in Probabilistic Logic Programming,,2019-03-20
10.1016/j.jco.2012.10.001,On the complexity of the multivariate resultant,,2017-03-20
10.1007/978-3-319-40970-2_3,Solution-Graphs of Boolean Formulas and Isomorphism,,2015-03-20
10.24963/ijcai.2018/727,The Finite Model Theory of Bayesian Networks: Descriptive Complexity,,2015-03-20
10.1137/S0097539704445950,Word Problems and Membership Problems on Compressed Words,,2020-03-20
10.1007/978-3-642-22006-7_61,Permanent Does Not Have Succinct Polynomial Size Arithmetic Circuits of Constant Depth,,2015-03-20
10.1007/s00037-013-0079-3,Monomials in Arithmetic Circuits: Complete Problems in the Counting Hierarchy,,2017-03-20
10.1016/j.ic.2014.09.006,On fixed-polynomial size circuit lower bounds for uniform polynomials in the sense of Valiant,,2014-03-20
10.1016/j.ic.2012.10.013,Permanent does not have succinct polynomial size arithmetic circuits of constant depth,,2012-03-20
10.1007/978-3-540-24597-1_32,Quantum and Classical Complexity Classes: Separations  Collapses  and Closure Properties,,2016-03-20
10.1016/J.IJAR.2019.04.003,The finite model theory of Bayesian network specifications: Descriptive complexity and zero/one laws,,2019-03-20
10.4230/LIPIcs.MFCS.2018.51,The Robustness of LWPP and WPP  with an Application to Graph Reconstruction,,2020-03-20
10.4230/LIPIcs.STACS.2020.59,Lower Bounds Against Sparse Symmetric Functions of ACC Circuits: Expanding the Reach of $\#$SAT Algorithms,,2016-03-20
10.1016/j.cosrev.2008.02.001,The consequences of eliminating NP solutions,,2019-03-20
10.1007/s00037-004-0187-1,The complexity of constructing pseudorandom generators from hard functions,,2020-03-20
10.1109/CCC.2003.1214410,Hardness vs. randomness within alternating time,,2013-03-20
10.1016/j.artint.2014.10.001,Most frugal explanations in Bayesian networks,,2018-03-20
10.1007/s00453-013-9823-y,Lower Bounds Against Weakly-Uniform Threshold Circuits,,2018-03-20
10.3233/FI-2014-1036,On Fast Heuristic Non-deterministic Algorithms and Short Heuristic Proofs,,2014-03-20
10.1093/logcom/ext073,Bijective faithful translations among default logics,,2018-03-20
10.1016/j.dam.2007.04.023,Semidefinite programming and arithmetic circuit evaluation,,2020-03-20
10.1145/582475.582484,SIGACT news complexity theory comun 37,,2012-03-20
10.1007/s00037-016-0124-0,The Minimum Oracle Circuit Size Problem,,2016-03-20
10.1142/S0129054103002059,Quantum Computation With Restricted Amplitudes,,2019-03-20
10.1007/3-540-36494-3_47,Competing Provers Yield Improved Karp-Lipton Collapse Results,,2011-03-20
10.1016/j.ijar.2012.04.005,Same-decision probability: A confidence measure for threshold-based decisions,,2016-03-20
10.1109/CCC.2006.30,On the complexity of numerical analysis,,2017-03-20
10.24963/ijcai.2017/132,Most Probable Explanations for Probabilistic Database Queries,,2014-03-20
10.4230/LIPIcs.ICALP.2016.47,Parity Separation: A Scientifically Proven Method for Permanent Weight Loss,,2012-03-20
10.1007/978-3-642-32241-9,Computing and Combinatorics,,2015-03-20
10.1007/BF03167537,Efficient verification of Tunnell’s criterion,,2014-03-20
10.1137/S0097539705447013,The Complexity of Computing the Size of an Interval,,2020-03-20
10.1007/978-3-030-00338-8_3,A Tutorial on Query Answering and Reasoning over Probabilistic Knowledge Bases,,2013-03-20
10.1016/J.TCS.2018.06.012,Subroutines in P systems and closure properties of their complexity classes,,2013-03-20
10.1007/s00037-020-00197-5,The Robustness of LWPP and WPP  with an Application to Graph Reconstruction,,2016-03-20
10.1016/j.artint.2018.06.001,The Complexity of Bayesian Networks Specified by Propositional and Relational Languages,,2013-03-20
10.1002/9783527619115.CH18,The Quantum World,,2017-03-20
10.1007/978-3-642-22152-1_15,On Stopping Evidence Gathering for Diagnostic Bayesian Networks,,2019-03-20
10.1007/978-3-540-70918-3_12,On Defining Integers in the Counting Hierarchy and Proving Arithmetic Circuit Lower Bounds,,2013-03-20
10.1016/j.ijar.2017.03.014,The effect of combination functions on the complexity of relational Bayesian networks,,2016-03-20
10.1007/978-3-540-74240-1_34,The Computational Complexity of Monotonicity in Probabilistic Networks,,2011-03-20
10.1145/601819.601829,SIGACT news complexity theory column 38,,2014-03-20
10.1007/BF01202284,On the power of deterministic reductions to C=P,,2012-03-20
10.1007/BF01201812,On the power of generalized Mod-classes,,2018-03-20
10.1007/s10849-015-9218-3,Dependence Logic with a Majority Quantifier,,2014-03-20
10.1007/978-3-642-54423-1_6,False-Name Manipulation in Weighted Voting Games Is Hard for Probabilistic Polynomial Time,,2014-03-20
10.1109/18.971739,Links between complexity theory and constrained block coding,,2011-03-20
10.1007/978-3-642-32241-9_35,Lower Bounds against Weakly Uniform Circuits,,2019-03-20
10.1145/635499.635501,Computational properties of metaquerying problems,,2017-03-20
10.1007/s00224-002-1089-8,"PP-Lowness and a Simple Definition of AWPP 

",,2013-03-20
10.1016/S0004-3702(02)00271-0,Complexity results for structure-based causality,,2018-03-20
10.1007/BF01206638,On closure properties of GapP,,2014-03-20
10.1007/BF01200427,Graph isomorphism is low for PP,,2018-03-20
10.1007/BF01578841,Generalized theorems on relationships among reducibility notions to certain complexity classes,,2017-03-20
10.1007/S42113-019-00032-3,Computational Resource Demands of a Predictive Bayesian Brain,,2013-03-20
10.1515/gcc-2012-0016,Algorithmics on SLP-compressed strings: A survey,,2015-03-20
10.1007/978-3-540-30538-5_40,Complexity of Linear Connectivity Problems in Directed Hypergraphs,,2019-03-20
10.1007/BF01371729,A relationship between difference hierarchies and relativized polynomial hierarchies,,2018-03-20
10.1007/978-3-540-24749-4_29,A Logspace Approximation Scheme for the Shortest Path Problem for Graphs with Bounded Independence Number,,2012-03-20
10.1007/978-3-642-32589-2_51,Computational Complexity of Smooth Differential Equations,,2013-03-20
10.2168/LMCS-10(1:6)2014,Computational Complexity of Smooth Differential Equations,,2014-03-20
10.1016/j.ic.2004.10.009,Quantum and classical complexity classes: Separations  collapses  and closure properties,,2015-03-20
10.1016/j.ijar.2019.12.003,Complexity results for probabilistic answer set programming,,2018-03-20
10.1016/j.tcs.2009.02.038,Linear connectivity problems in directed hypergraphs,,2014-03-20
10.1007/s00453-007-9051-4,Mantaining Dynamic Matrices for Fully Dynamic Transitive Closure,,2016-03-20
10.1109/FOCS.2004.25,Dynamic transitive closure via dynamic matrix inverse: extended abstract,,2017-03-20
10.1023/A:1011151522310,Towards a Mobile Code Management Environment for Complex  Real-Time  Distributed Systems,,2011-03-20
10.1007/978-3-540-85238-4_5,Algebraic Graph Algorithms,,2014-03-20
10.1007/978-3-540-73940-1_44,Associative Version of Italiano's Decremental Algorithm for the Transitive Closure Problem,,2015-03-20
10.1109/ICSE.2004.1317486,Static Checking of Dynamically Generated Queries in Database Applications,,2011-03-20
10.1145/1059513.1059514,Trade-offs for fully dynamic transitive closure on DAGs: breaking through the O(n2 barrier,,2014-03-20
10.1145/3037697.3037744,Graspan: A Single-machine Disk-based Graph System for Interprocedural Static Analyses of Large-scale Systems Code,,2015-03-20
10.4018/978-1-5225-2443-4.CH005,Extensions and Limitations to Logic,,2018-03-20
10.1145/1276933.1276935,Static checking of dynamically generated queries in database applications,,2012-03-20
10.1016/J.JDA.2005.12.003,Dynamic shortest paths and transitive closure: Algorithmic techniques and data structures,,2014-03-20
10.4230/LIPIcs.SEA.2020.14,Faster Fully Dynamic Transitive Closure in Practice,,2013-03-20
10.1201/B16132-52,Dynamic graph algorithms,,2016-03-20
10.1007/s00236-003-0120-0,A comparison of pebble tree transducers with macro tree transducers,,2016-03-20
10.1162/COLI_a_00291,Hybrid Grammars for Parsing of Discontinuous Phrase Structures and Non-Projective Dependency Structures,,2012-03-20
10.1007/978-3-540-75987-4_17,Towards Practical Typechecking for Macro Tree Transducers,,2015-03-20
10.1137/S0097539701394511,Macro Tree Translations of Linear Size Increase are MSO Definable,,2020-03-20
10.1007/BF02737108,Composition and evaluation of attribute coupled grammars,,2017-03-20
10.1016/j.dam.2020.11.024,A fixed-parameter algorithm for scheduling unit dependent tasks on parallel machines with time windows,,2014-03-20
10.1007/S10951-015-0446-9,Normal-form preemption sequences for an open problem in scheduling theory,,2017-03-20
10.1515/vzoo-2016-0013,A Review on the Genus Brachycoleus (Hemiptera  Miridae) with Identification Key to the Species Found in Iran,,2014-03-20
10.1016/j.ejor.2020.08.010,Ideal schedules in parallel machine settings,,2020-03-20
10.1007/s10951-017-0519-z,A survey on how the structure of precedence constraints may change the complexity class of scheduling problems,,2017-03-20
10.7561/SACS.2018.2.199,Simultaneous Petri Net Synthesis,,2014-03-20
10.1007/978-3-319-04921-2_13,Characterisation of the State Spaces of Live and Bounded Marked Graph Petri Nets,,2015-03-20
10.4230/LIPIcs.CONCUR.2015.128,Synthesis of Bounded Choice-Free Petri Nets,,2013-03-20
10.1007/978-3-642-13675-7_15,Separability in Persistent Petri Nets,,2012-03-20
10.4204/EPTCS.189.6,Analysis of Petri Nets and Transition Systems,,2015-03-20
10.3233/FI-2015-1244,Synthesis of Live and Bounded Persistent Systems,,2019-03-20
10.1007/s00236-017-0310-9,Bounded choice-free Petri net synthesis: algorithmic issues,,2014-03-20
10.1007/978-3-319-07734-5_7,Synthesis of Persistent Systems,,2014-03-20
10.1016/j.tcs.2017.10.006,Sufficient conditions for the marked graph realisability of labelled transition systems,,2013-03-20
10.3233/FI-2011-606,Separability in Persistent Petri Nets,,2018-03-20
10.1007/978-3-030-51831-8_5,A New Property of Choice-Free Petri Net Systems,,2018-03-20
10.1007/978-3-319-39086-4_5,The Power of Prime Cycles,,2020-03-20
10.1016/j.scico.2017.07.005,Pre-synthesis of Petri nets based on prime cycles and distance paths,,2015-03-20
10.1007/978-3-319-45994-3_4,Plain  Bounded  Reversible  Persistent  and k-marked Petri Nets Have Marked Graph Reachability Graphs,,2011-03-20
10.1007/978-3-642-38143-0_5,Structure Theory of Petri Nets,,2020-03-20
10.1016/j.ic.2016.06.006,Characterisation of the state spaces of marked graph Petri nets,,2011-03-20
10.1007/978-3-319-91268-4_5,Factorisation of Petri Net Solvable Transition Systems,,2020-03-20
10.1007/978-3-319-51963-0_13,A Graph-Theoretical Characterisation of State Separation,,2018-03-20
10.1007/BF01221100,The verification of modules,,2011-03-20
10.1007/BF03036470,On the analysis of Petri nets with static priorities,,2019-03-20
10.1007/s002360050065,"On the analysis of Petri nets with static priorities
",,2011-03-20
10.1109/PNPM.2003.1231545,On non-ergodic infinite-state stochastic Petri nets,,2017-03-20
10.1145/304032.304069,A unified signal transition graph model for asynchronous control circuit synthesis,,2018-03-20
10.1016/j.ipl.2016.01.011,Existence of home states in Petri nets is decidable,,2015-03-20
10.1109/SYNASC.2006.71,The Confluence Property for Petri Nets and its Applications,,2019-03-20
10.1007/978-3-030-51831-8_10,PSPACE-Completeness of the Soundness Problem of Safe Asymmetric-Choice Workflow Nets,,2018-03-20
10.1007/978-1-4471-4276-8_13,Structural Methods for the Control of Discrete Event Dynamic Systems - The Case of the Resource Allocation Problem,,2011-03-20
10.1007/978-3-319-40578-0_7,Reversible computation vs. reversibility in Petri nets,,2018-03-20
10.1155/S0161171204403378,Lower and upper bounds of shortest paths in reachability graphs,,2015-03-20
10.1007/978-3-642-22600-7_19,Kleene Theorems for Product Systems,,2013-03-20
10.4108/VALUETOOLS.2007.1817,Detecting non-ergodic simulation models of logistics networks,,2017-03-20
10.1109/ICSMC.2006.384584,Lender processes competing for shared resources: Beyond the S4PR paradigm,,2017-03-20
10.1109/CDC42340.2020.9303795,Analysis of Behavioural Properties of Bounded Petri Nets With a Semi-Structural Approach,,2018-03-20
10.1145/1345263.1345345,Detecting non-ergodic simulation models of logistics networks,,2019-03-20
10.1007/978-3-642-29072-5_8,A Petri Net Perspective on the Resource Allocation Problem in Software Engineering,,2020-03-20
10.1016/j.scico.2017.10.008,Reversible computation vs. reversibility in Petri nets,,2019-03-20
10.1007/BF01556351,Functional dependencies among Boolean dependencies,,2020-03-20
10.1002/rsa.10108,m-ary Search trees when m ge 27: A strong asymptotics for the space requirements,,2013-03-20
10.1007/S10958-013-1637-6,Asymptotics in Random Recursive Circuits*,,2017-03-20
10.1002/RSA.V26:1/2,Asymptotic degree distribution in random recursive trees,,2017-03-20
10.1214/EJP.V20-3577,Asymptotic distribution of two-protected nodes in ternary search trees,,2013-03-20
10.1214/AOP/1048516530,Second phase changes in random m-ary search trees and generalized quicksort: convergence rates,,2013-03-20
10.1007/S11134-006-7586-8,A survey on discriminatory processor sharing,,2017-03-20
10.1145/3384390,Some Parameterized Dynamic Priority Policies for Two-Class M/G/1 Queues,,2017-03-20
10.1109/WIOPT.2015.7151082,On 2-moment completeness of non pre-emptive  non anticipative work conserving scheduling policies in some single class queues,,2013-03-20
10.1016/j.orl.2006.10.003,Waiting times in queues with relative priorities,,2015-03-20
10.1109/WIOPT.2014.6850323,Optimal surplus capacity utilization in polling systems via fluid models,,2013-03-20
10.1109/WIOPT.2015.7151064,On a conservation law and the achievable region for waiting time tail probabilities in 2-class M/G/1 queueing systems,,2017-03-20
10.1145/1254882.1254906,PBS: a unified priority-based scheduler,,2011-03-20
10.4108/icst.valuetools.2014.258212,On mean waiting time completeness and equivalence of EDD and HOL-PJ dynamic priority in 2-class M/G/1 queue,,2019-03-20
10.1016/j.ejor.2007.11.058,The use of relative priorities in optimizing the performance of a queueing system,,2020-03-20
10.1109/90.986503,Proportional differentiated services: delay differentiation and packet scheduling,,2011-03-20
10.1007/S10479-018-2780-8,Pseudo conservation for partially fluid  partially lossy queueing systems,,2016-03-20
10.1016/j.endm.2004.06.020,Some Formulations for the Group Steiner Tree Problem,,2012-03-20
10.1016/S0377-2217(02)00404-6,Generalized network design problems,,2020-03-20
10.1002/net.10105,The generalized minimum spanning tree problem: Polyhedral analysis and branch-and-cut algorithm,,2014-03-20
10.1007/s10589-007-9072-6,The prize collecting Steiner tree problem: models and Lagrangian dual optimization approaches,,2014-03-20
10.7232/jkiie.2011.37.3.191,A comparison of group Steiner tree formulations,,2014-03-20
10.1016/j.dam.2006.03.028,Some formulations for the group steiner tree problem,,2018-03-20
10.1002/spe.2634,Evaluating the suitability of state‐based formal methods for industrial deployment,,2016-03-20
10.1016/j.scico.2017.08.014,Symbolic execution for a clash-free subset of ASMs,,2013-03-20
10.1007/978-3-319-91271-4_27,Capturing Membrane Computing by ASMs,,2012-03-20
10.1016/j.scico.2018.07.001,Formal modeling and analysis of railway operations with active objects,,2015-03-20
10.1080/17445760.2017.1288808,An ASM-based characterisation of starvation-free systems,,2013-03-20
10.5220/0006002901230130,Towards an ASM-based Characterization of the Deadlock-freedom Property,,2012-03-20
10.1007/978-3-030-03418-4_6,Why Programming Must Be Supported by Modeling and How,,2011-03-20
10.1007/978-3-030-32065-2_16,Concurrent Computing with Shared Replicated Memory,,2020-03-20
10.1007/978-3-319-33600-8_1,Modeling Distributed Algorithms by Abstract State Machines Compared to Petri Nets,,2016-03-20
10.1007/978-3-030-48077-6,Rigorous State-Based Methods: 7th International Conference  ABZ 2020  Ulm  Germany  May 27–29  2020  Proceedings,,2017-03-20
10.1109/WoWMoM.2015.7158188,The design of a generalised approach to the programming of systems of systems,,2015-03-20
10.1016/J.JLAMP.2019.100479,Axiomatization and characterization of BSP algorithms,,2018-03-20
10.1016/j.scico.2019.102307,Type-2 effectivity in abstract state machines for algorithms with exact real arithmetic,,2020-03-20
10.1007/978-3-319-74781-1_10,Intercepting Blackhole Attacks in MANETs: An ASM-based Model,,2013-03-20
10.1007/978-3-030-48077-6_6,A Characterization of Distributed ASMs with Partial-Order Runs,,2015-03-20
10.1007/978-3-319-45547-1_21,Correct-by-Construction Evolution of Realisable Conversation Protocols,,2020-03-20
10.1007/978-3-030-39951-1_16,Realisability of Choreographies,,2015-03-20
10.1007/978-3-319-74313-4_10,A Behavioural Theory for Reflective Sequential Algorithms,,2015-03-20
10.1007/978-3-030-32065-2_19,Extracting High-Level System Specifications from Source Code via Abstract State Machines,,2019-03-20
10.1016/j.scico.2019.102319,BSP abstract state machines capture bulk synchronous parallel computations,,2011-03-20
10.1007/978-3-030-00856-7_28,Extensions to Hybrid Event-B to Support Concurrency in Cyber-Physical Systems,,2020-03-20
10.1007/978-3-030-01042-3_5,Distributed Computing on Distributed Memory,,2017-03-20
10.18417/EMISA.SI.HCM.16,Conceptual Modelling of Service-Oriented Software Systems,,2019-03-20
10.1145/3014812.3017446,Evolving concurrent systems: behavioural theory and logic,,2012-03-20
10.1007/978-3-030-30690-8_15,Eventual Consistency Formalized,,2017-03-20
10.1007/s10472-017-9569-3,A unifying logic for non-deterministic  parallel and concurrent abstract state machines,,2014-03-20
10.3233/fi-2020-1978,A Behavioural Theory of Recursive Algorithms,,2016-03-20
10.1007/978-3-319-66854-3_21,Conceptual Modelling of Hybrid Systems - Structure and Behaviour,,2017-03-20
10.1007/978-3-030-05057-3_6,An Axiomatization for BSP Algorithms,,2020-03-20
10.1016/j.scico.2016.03.008,Serialisable multi-level transaction control: A specification and verification,,2017-03-20
10.1016/j.cl.2018.07.004,An Event-B-based approach to hybrid systems engineering and its application to a hemodialysis machine case study,,2020-03-20
10.1145/2723839.2723840,Abstract state machine nets: closing the gap between business process models and their implementation,,2020-03-20
10.1016/j.tcs.2016.08.013,A new thesis concerning synchronised parallel computing - simplified parallel ASM thesis,,2020-03-20
10.1109/HPCS.2018.00120,Algorithmic Completeness for BSP Languages,,2017-03-20
10.1007/978-3-319-69904-2_10,Conceptual Modelling of Autonomous Multi-cloud Interaction with Reflective Semantics,,2012-03-20
10.1109/SYNASC.2017.00015,Concurrent Reflective Abstract State Machines,,2014-03-20
10.1007/978-3-319-91271-4_2,Distributed Adaptive Systems - Theory  Specification  Reasoning,,2020-03-20
10.1016/j.cola.2020.100996,Stepwise abstraction of high-level system specifications from source code,,2017-03-20
10.1007/978-0-387-68954-8,Parsing Techniques - A Practical Guide,,2018-03-20
10.1007/BF01769703,Approximate string matching with suffix automata,,2013-03-20
10.1007/978-3-642-38905-4_1,Forty Years of Text Indexing,,2014-03-20
10.5121/IJITCS.2017.7101,Space-efficient K-MER algorithm for generalized suffix tree,,2018-03-20
10.5353/TH_B3105973,On the construction and application of compressed text indexes,,2020-03-20
10.1007/BF01206331,On-line construction of suffix trees,,2015-03-20
10.1016/S1571-0653(04)80608-5,Chapter 9: Cache memories,,2011-03-20
10.1016/S1571-0653(04)80602-4,Chapter 3: Present approach to scheduling analysis,,2012-03-20
10.1137/S0097539799294398,Optimal Combinatorial Functions Comparing Multiprocess Allocation Performance in Multiprocessor Systems,,2019-03-20
10.2478/vzoo-2014-0064,Spatial Patterns of Bird Communities of the Lower Dnieper Sands During the Breeding Season: Differentiation Factors,,2019-03-20
10.1515/mamm.2011.004,Predation on Cacajao ouakary and Cebus albifrons (Primates: Platyrrhini) by harpy eagles,,2014-03-20
10.2478/v10050-008-0004-3,Breeding and Demographic Parameters and Range Expansion of the Common Rosefinch (Carpodacus erythrinus),,2016-03-20
10.1515/comp-2018-0004,Inner loop program construct: A faster way for program execution,,2018-03-20
10.1515/sjce-2015-0010,Advantages Of A Time Series Analysis Using Wavelet Transform As Compared With A Fourier Analysis,,2014-03-20
10.5802/jtnb.1135,The upper density of an automatic set is rational,,2016-03-20
10.1017/S0963548314000728,Formulae and Asymptotics for Coefficients of Algebraic Functions,,2013-03-20
10.1007/978-3-030-67731-2_6,Asymptotic Approximation by Regular Languages,,2016-03-20
10.1007/978-3-540-85654-2_11,Extending Inconsistency-Tolerant Integrity Checking by Semantic Query Optimization,,2018-03-20
10.1109/TKDE.2010.87,Inconsistency-Tolerant Integrity Checking,,
10.1007/978-3-540-25957-2_28,Simplification of Integrity Constraints with Aggregates and Arithmetic Built-Ins,,2014-03-20
10.1007/978-3-642-39038-8_18,Reducing Lookups for Invariant Checking,,2018-03-20
10.1109/DEXA.2006.26,An Integrity Semantics for Open World Databases,,2019-03-20
10.1109/TAIC-PART.2006.28,Testing the Implementation of Business Rules Using Intensional Database Tests,,2017-03-20
10.1109/DEXA.2006.35,Avenues to Flexible Data Integrity Checking,,2019-03-20
10.1007/978-3-540-30504-0_11,Extending SWRL to Express Fully-Quantified Constraints,,2012-03-20
10.1007/11916277_20,A Relaxed Approach to Integrity and Inconsistency in Databases,,2019-03-20
10.1007/978-3-540-92243-8_5,Implementing Probabilistic Abductive Logic Programming with Constraint Handling Rules,,2011-03-20
10.1007/BF01840451,Understanding the implications of view update policies,,2013-03-20
10.1007/978-3-540-25938-1_16,Simplification of Database Integrity Constraints Revisited: A Transformational Approach,,2016-03-20
10.1007/BF01530820,Nonrecursive incremental evaluation of Datalog queries,,2016-03-20
10.1007/BF01231645,Thémis: A database programming language handling integrity constraints,,2015-03-20
10.7551/mitpress/4301.001.0001,Logic Programming,,2018-03-20
10.4018/978-1-60566-816-1.CH005,View Management Techniques and Their Application to Data Stream Management,,2019-03-20
10.1007/978-3-642-16961-8_48,Revisiting and Improving a Result on Integrity Preservation by Concurrent Transactions,,2020-03-20
10.1109/DEXA.2006.143,Trying to Cater for Replication Consistency and Integrity of Highly Available Data,,2020-03-20
10.1145/1497308.1497345,Data caching strategies for checking integrity constraints of mobile database,,2015-03-20
10.1145/1806338.1806377,Ranking and selecting integrity tests in a distributed database,,2014-03-20
10.1007/978-3-642-23863-5_56,Inconsistency-Tolerant Integrity Checking Based on Inconsistency Metrics,,2016-03-20
10.5220/0001331701980205,Inconsistency-Tolerant Knowledge Assimilation,,2020-03-20
10.1007/BF00885764,A semantics for a class of non-deterministic and causal production system programs,,2020-03-20
10.1007/978-3-540-24627-5_4,Simplification of Integrity Constraints for Data Integration,,2018-03-20
10.1023/A:1008748808699,The Evolving Role of Constraints in the Functional Data Model,,2015-03-20
10.1109/DEXA.2006.39,Checking Integrity Constraints - How it Differs in Centralized  Distributed and Parallel Databases,,2015-03-20
10.1109/MICAI.2007.38,An Interface between the Situation Calculus and Logic Programming,,2019-03-20
10.1007/11547686_9,Efficient Integrity Checking for Databases with Recursive Views,,2014-03-20
10.1007/s11390-009-9261-0,Improved Integrity Constraints Checking in Distributed Databases by Exploiting Local Checking,,2012-03-20
10.1109/COMPSAC.2007.213,Tool Support to Implementing Business Rules in Database Applications,,2012-03-20
10.4018/978-1-60566-046-2.CH021,Event-Condition-Action (ECA) Rules for Maintaining the Integrity Constraints of Mobile Databases,,2013-03-20
10.1007/978-3-642-36257-6,Handbook of Data Quality,,2013-03-20
10.1007/1-4020-7901-X_11,Reducing Disruption in Time-Tabled Condition Monitoring,,2015-03-20
10.1007/11591191_49,Incremental Integrity Checking: Limitations and Possibilities,,2020-03-20
10.1007/978-3-662-55947-5,Transactions on Large-Scale Data- and Knowledge-Centered Systems XXXIV,,2020-03-20
10.1007/11965893_13,Complexity of Consistent Query Answering in Databases Under Cardinality-Based and Incremental Repair Semantics,,
10.4324/9780203212639_chapter_eleven,On Integrity Constraints,,2013-03-20
10.1109/ICPADS.2002.1183390,A strategy for semantic integrity checking in distributed databases,,2015-03-20
10.1109/ICDIM.2008.4746801,A framework for caching relevant data items for checking integrity constraints of mobile database,,2020-03-20
10.1007/978-3-642-36008-4_7,Measure-Based Inconsistency-Tolerant Maintenance of Database Integrity,,2012-03-20
10.1007/11896548_19,Efficient Integrity Checking over XML Documents,,2014-03-20
10.1007/BF00962068,Knowledge management by example,,2016-03-20
10.1108/00330330810851690,Intelligent Databases: Technologies and Applications,,2011-03-20
10.1007/978-3-540-87991-6_12,Towards a Dynamic Inconsistency-Tolerant Schema Maintenance,,2012-03-20
10.1007/11901181_39,Optimising Abstract Object-Oriented Database Schemas,,2011-03-20
10.1023/A:1008678826820,Abductive Knowledge Base Updates for Contextual Reasoning,,2011-03-20
10.1109/QSIC.2011.34,Data Quality Maintenance by Integrity-Preserving Repairs that Tolerate Inconsistency,,2012-03-20
10.1017/S1471068414000131,Efficient Computation of the Well-Founded Semantics over Big Data,,2013-03-20
10.5626/JCSE.2009.3.4.260,3-L Model: A Model for Checking the Integrity Constraints of Mobile Databases,,2020-03-20
10.4018/978-1-60566-242-8.CH040,The Challenges of Checking Integrity Constraints in Centralized  Distributed  and Parallel Databases,,2014-03-20
10.1007/11546924_59,Transaction Management with Integrity Checking,,2015-03-20
10.5772/9637,A Framework for Localizing Integrity Constraints Checking in Distributed Database,,2017-03-20
10.1007/978-0-387-35693-8_1,Concurrent Checking of Global Cross-database Integrity Constraints,,2020-03-20
10.1201/B19279-4,The Quest for Data Independence  Minimal Plausibility  and Formalization: The Relational Data Model (RDM),,2011-03-20
10.1007/978-3-662-55947-5_7,Inconsistency-Tolerant Database Repairs and Simplified Repair Checking by Measure-Based Integrity Checking,,2015-03-20
10.1007/978-3-030-06170-8_3,Databases and Artificial Intelligence,,2019-03-20
10.1109/ICCGI.2006.71,Context-Aware Mobile Tour Guide,,2014-03-20
10.1007/11891451_4,Capturing Quantified Constraints in FOL  Through Interaction with a Relationship Graph,,2018-03-20
10.1016/j.jal.2016.02.002,Translation of first order formulas into ground formulas via a completion theory,,2012-03-20
10.3991/ijim.v3s2.787,A framework for caching relevant data items for checking integrity constraints of mobile database,,2011-03-20
10.1007/b116855,Integrity and Internal Control in Information Systems VI,,2017-03-20
10.1007/BF01232186,Generating consistent test data: Restricting the search space by a generator formula,,2012-03-20
10.4156/JNIT.VOL2.ISSUE1.5,A framework for checking and ranking integrity constraints in a distributed database,,2013-03-20
10.1007/978-3-540-88655-6_24,Inconsistency-Tolerant Integrity Checking for Knowledge Assimilation,,2012-03-20
10.1109/DEXA.2006.103,On Using Simplification and Correction Tables for Integrity Maintenance in Integrated Databases,,2013-03-20
10.4018/978-1-60566-058-5.CH016,Database Integrity Checking,,2018-03-20
10.4995/THESIS/10251/5760,Generación de reglas restauradoras de la consistencia en esquemas relacionales con vistas.,,2016-03-20
10.1007/978-3-319-21413-9,Computational Science and Its Applications -- ICCSA 2015,,2016-03-20
10.4018/978-1-60566-242-8.CH037,Improving Constraints Checking in Distributed Databases with Complete  Sufficient  and Support Tests,,2016-03-20
10.1007/978-3-540-30597-2_1,Introduction to Inconsistency Tolerance,,2018-03-20
10.1109/BNCOD.2007.13,Integrity Checking and Maintenance with Active Rules in XML Databases,,2017-03-20
10.1016/j.ins.2008.02.005,Safety  domain independence and translation of complex value database queries,,2016-03-20
10.5220/0003502503900395,Inconsistency-tolerant Eliminations of Integrity Violations,,2012-03-20
10.1109/TKDE.2003.1245280,A Logical Framework for Querying and Repairing Inconsistent Databases,,2020-03-20
10.1007/3-540-45017-3_14,Analysing the Impact of Adding Integrity Constraints to Information Systems,,2016-03-20
10.1007/978-3-540-88875-8_78,A Model for Checking the Integrity Constraints of Mobile Databases,,2020-03-20
10.1109/ICSE-SEIP.2019.00032,Using Machine Learning to Recommend Correctness Checks for Geographic Map Data,,2020-03-20
10.1007/978-3-642-23737-9_28,Partial Repairs That Tolerate Inconsistency,,2011-03-20
10.1007/978-3-540-39390-0,Conceptual modeling of information systems,,2015-03-20
10.4018/jitwe.2010070104,A Model for Ranking and Selecting Integrity Tests in Distributed Database,,2015-03-20
10.1007/978-3-642-36008-4,Semantics in Data and Knowledge Bases,,2017-03-20
10.1007/b98080,Logic Based Program Synthesis and Transformation,,2016-03-20
10.1007/978-3-642-36257-6_9,Generic and Declarative Approaches to Data Quality Management,,2012-03-20
10.4018/978-1-93070-838-9,Database integrity: challenges and solutions,,2015-03-20
10.1109/ICCGI.2006.47,Toward Reconciling Availability  Consistency and Integrity in Replicated Information Systems,,2016-03-20
10.1109/ICCIT.2008.58,A Framework for Checking Integrity Constraints in a Distributed Database,,2016-03-20
10.1007/BF01237920,Updating knowledge bases while maintaining their consistency,,2011-03-20
10.1007/978-3-319-21413-9_15,Data Consistency: Toward a Terminological Clarification,,2011-03-20
10.1007/978-3-319-07617-1_16,Scalable Uncertainty-Tolerant Business Rules,,2018-03-20
10.1007/3-540-45816-6_40,A Flexible Cost Model for Abstract Object-Oriented Database Schemas,,2018-03-20
10.1007/11890393_15,Checking Violation Tolerance of Approaches to Database Integrity,,2013-03-20
10.1145/1389449.1389474,Classifying integrity checking methods with regard to inconsistency tolerance,,2016-03-20
10.4018/978-1-60566-814-7.CH009,Integrity Constraints Checking in a Distributed Database,,2020-03-20
10.1023/A:1008616811104,Protocols for Integrity Constraint Checking in Federated Databases,,2017-03-20
10.1007/978-3-642-41033-8_41,Inconsistency-Tolerant Business Rules in Distributed Information Systems,,2017-03-20
10.1007/978-3-319-61893-7_7,A Short Account of Techniques for Assisting Users in Mastering Big Data,,2014-03-20
10.1016/B978-0-444-51624-4.50013-7,Logic and Databases: A History of Deductive Databases,,2011-03-20
10.1515/biorc-2017-0002,First record of Pinnularia subinterrupta Krammer & Schroeter in Poland – a rare species in Europe,,2019-03-20
10.1515/sjecr-2015-0058,Immunohistomorphometric Characteristics Of Pituitary GH Cells In Infant And Peripubertal Female Rats After Treatment With Estradiol Or Human Chorionic Gonadotropin,,2019-03-20
10.2478/afepuc-2018-0005,Health of Adults Through Prism of Physical Activity,,2017-03-20
10.1515/ract-2015-2447,Decomposition studies of group 6 hexacarbonyl complexes. Part 2: Modelling of the decomposition process,,2020-03-20
10.1515/ABCSB-2015-0020,Chromosome numbers in Hieracium (Asteraceae) from Central and Southeastern Europe I,,2016-03-20
10.1007/BF00978710,Binary search trees with binary comparison cost,,2012-03-20
10.1145/2689412,Rank-Balanced Trees,,2018-03-20
10.1007/3-540-36477-3_21,Single and Bulk Updates in Stratified Trees: An Amortized and Worst-Case Analysis,,2019-03-20
10.1201/9781315119335-11,Balanced Binary Search Trees,,2017-03-20
10.1007/978-3-642-17641-8_32,Hierarchical Data Structures for Accessing Spatial Data,,2013-03-20
10.3929/ETHZ-A-005773575,Indexing on solid state drives based on flash memory,,2019-03-20
10.1109/BigData.2016.7840697,Efficient index updates for mixed update and query loads,,2015-03-20
10.1515/pjst-2015-0009,Susceptibility To Injury During Falls In Women Practising Combat Sports And Martial Arts,,2015-03-20
10.1007/s10951-016-0490-0,Open Shop Scheduling with Synchronization,,2016-03-20
10.3150/20-bej1215,Estimation of Monge Matrices,,2019-03-20
10.1145/3318464.3380588,Tree-Encoded Bitmaps,,2013-03-20
10.1016/j.dam.2007.05.035,Algorithms for media,,2017-03-20
10.1051/ita:2004013,On differentiation functions  structure functions  and related languages of context-free grammars,,2015-03-20
10.2306/SCIENCEASIA1513-1874.2017.43S.009,Place-labelled Petri net controlled grammars,,2015-03-20
10.1007/978-3-030-23247-4_8,Descriptional Complexity of Matrix Simple Semi-conditional Grammars,,2019-03-20
10.1142/S0129054108005917,Tissue-Like P Systems with Dynamically Emerging Requests,,2017-03-20
10.1109/SYNASC.2005.51,On P systems with bounded parallelism,,2013-03-20
10.1109/SYNASC.2005.52,On symport/antiport P systems with one or two symbols,,2012-03-20
10.1007/978-3-642-14162-1_15,On Erasing Productions in Random Context Grammars,,2015-03-20
10.3233/FI-2009-0099,Properties of Multiset Language Classes Defined by Multiset Pushdown Automata,,2017-03-20
10.1016/j.tcs.2007.11.009,A multiset-based model of synchronizing agents: Computability and robustness,,2011-03-20
10.1016/j.entcs.2007.05.006,Membrane Systems with Peripheral Proteins: Transport and Evolution,,2013-03-20
10.1142/S0129054111008118,Toward Understanding the Generative Capacity of Erasing Rules in Matrix Grammars,,2020-03-20
10.1007/978-3-540-88869-7_14,On Nonuniversal Symport/Antiport P Systems,,2016-03-20
10.1007/978-3-540-27812-2_21,P Systems with Tables of Rules,,2018-03-20
10.1007/978-3-642-02737-6_40,Erasing in Petri Net Languages and Matrix Grammars,,2012-03-20
10.1016/j.tcs.2016.10.013,On trace languages generated by (small) spiking neural P systems,,2017-03-20
10.1007/978-3-540-68746-7_19,Labeled Step Sequences in Petri Nets,,2018-03-20
10.1007/3-540-45446-2,Theoretical Computer Science,,2014-03-20
10.1142/S012905410600367X,Cell/symbol complexity of tissue P systems with symport/antiport rules,,2012-03-20
10.1142/S012905410700525X,Programmed Grammars with Rule Queues,,2014-03-20
10.1016/j.tcs.2019.06.024,State grammars with stores,,2016-03-20
10.1007/978-3-642-20000-7_9,Generative Power of Eco-Colonies,,2012-03-20
10.1016/S0304-3975(02)00581-9,On three variants of rewriting P systems,,2020-03-20
10.1007/978-3-319-28475-0_4,Polarizationless P Systems with One Active Membrane,,2015-03-20
10.1016/j.tcs.2008.12.013,An infinite hierarchy of language families generated by scattered context grammars with n-limited derivations,,2013-03-20
10.1016/j.tcs.2003.08.006,From regulated rewriting to computing with membranes: collapsing hierarchies,,2016-03-20
10.4204/EPTCS.3.18,Capacity Bounded Grammars and Petri Nets,,2018-03-20
10.4230/LIPIcs.ICALP.2018.119,Unboundedness problems for languages of vector addition systems,,2015-03-20
10.1016/j.tcs.2004.03.053,On the power of membrane division in P systems,,2017-03-20
10.1007/978-3-319-55911-7_15,Parikh Images of Matrix Ins-Del Systems,,2012-03-20
10.1016/j.tcs.2010.06.010,Left-forbidding cooperating distributed grammar systems,,2019-03-20
10.25596/jalc-2006-263,Event-Related Outputs of Computations in P Systems,,2014-03-20
10.1007/978-3-319-94631-3_14,State Grammars with Stores,,2012-03-20
10.1016/S0304-3975(02)00657-6,Gemmating P systems: collapsing hierarchies,,2015-03-20
10.1080/00207160601065439,On symport/antiport P systems with a small number of objects,,2015-03-20
10.1007/978-3-540-88282-4_20,k-Petri Net Controlled Grammars,,2015-03-20
10.1007/978-3-540-39886-8_13,Grammars With Regulated Rewriting,,2015-03-20
10.1007/978-3-642-20000-7_8,On the Expressive Power of Valences in Cooperating Distributed Grammar Systems,,2016-03-20
10.1016/j.tcs.2008.04.003,Decision problems in membrane systems with peripheral proteins  transport and evolution,,2018-03-20
10.1016/S0304-3975(02)00659-X,Tissue P systems,,2017-03-20
10.22152/programming-journal.org/2018/2/13,Towards Zero-Overhead Disambiguation of Deep Priority Conflicts,,2017-03-20
10.1145/2847538.2847540,Operator precedence for data-dependent grammars,,2015-03-20
10.1145/3133906,Restricting grammars with tree automata,,2019-03-20
10.1145/2737924.2738002,Interactive parser synthesis by example,,
10.4233/UUID:43D7992A-7077-47BA-B38F-113F5011D07F,Declarative Syntax Definition for Modern Language Workbenches,,2013-03-20
10.1109/LICS.2013.21,Model-Checking Parse Trees,,2016-03-20
10.1145/1056018.1056032,Methodology and architecture of JIVE,,2018-03-20
10.1007/978-3-319-50106-2_17,Compact Layered Drawings of General Directed Graphs,,2013-03-20
10.1109/RTCSA.2005.67,Optimization of hierarchically scheduled heterogeneous embedded systems,,2015-03-20
10.1007/1-4020-8151-0_30,Using Genetic Algorithms and Tabu Search Parallel Models to Solve the Scheduling Problem,,2014-03-20
10.1007/s10766-017-0516-z,Adapting MCP and HLFET Algorithms to Multiple Simultaneous Scheduling,,2013-03-20
10.1007/s10766-007-0059-9,Analysis and Optimisation of Hierarchically Scheduled Multiprocessor Embedded Systems,,2015-03-20
10.1137/S0097539704444440,Online Scheduling of Precedence Constrained Tasks,,2015-03-20
10.1007/s11227-015-1438-4,Workflow scheduling in cloud: a survey,,2017-03-20
10.1007/978-3-642-33078-0_10,Optimal Linear Programming Solutions for Multiprocessor Scheduling with Communication Delays,,2012-03-20
10.5897/SRE12.056,Hybrid intelligent algorithm [improved particle swarm optimization (PSO) with ant colony optimization (ACO)] for multiprocessor job scheduling,,2019-03-20
10.1137/0206014,Task Scheduling on a Multiprocessor System with Independent Memories,,2019-03-20
10.1109/ICPPW.2003.1240360,A fast branch-and-bound scheme for the multiprocessor scheduling problem with communication time,,2014-03-20
10.1007/978-3-030-44728-1,Tools and Techniques for High Performance Computing: Selected Workshops  HUST  SE-HER and WIHPC  Held in Conjunction with SC 2019  Denver  CO  USA  November 17–18  2019  Revised Selected Papers,,2013-03-20
10.1007/s10878-018-0309-3,Online scheduling with chain precedence constraints of equal-length jobs on parallel machines to minimize makespan,,2012-03-20
10.1145/2741948.2741969,NBA (network balancing act): a high-performance packet processing framework for heterogeneous processors,,2012-03-20
10.1007/978-1-84882-310-5_4,Classic Scheduling Theory,,2019-03-20
10.1007/978-3-642-00219-9_34,Cyclic Leveling of Directed Graphs,,2011-03-20
10.17877/DE290R-15700,Upward planarization and layout,,2018-03-20
10.13053/CYS-13-2-1234,Reactive scheduling of DAG applications on heterogeneous and dynamic distributed computing systems,,2015-03-20
10.1109/ICHPCA.2014.7045293,Heuristic strategy for multiphase applications scheduling onto identical parallel multiprocessor,,2011-03-20
10.1016/j.jcss.2008.04.001,Precedence constrained scheduling in (2 - 7/(3p+1)) optimal,,2011-03-20
10.1109/ICCSIT.2010.5564766,Notice of RetractionA modified delayed-start LPT algorithm for the sum of squares of machine completion times minimization problem on two parallel machines,,2020-03-20
10.1007/978-3-319-22975-1,Formal Modeling and Analysis of Timed Systems,,2014-03-20
10.1109/RTSS.2007.24,FireFly Mosaic: A Vision-Enabled Wireless Sensor Networking System,,2018-03-20
10.1109/COMPSAC.2018.00115,WorkflowDSL: Scalable Workflow Execution with Provenance for Data Analysis Applications,,2012-03-20
10.1016/j.orl.2003.12.003,Minimizing makespan for a bipartite graph on a single processor with an integer precedence delay,,2020-03-20
10.1051/RO:2002004,Scheduling multiprocessor tasks on two parallel processors,,2016-03-20
10.1007/978-3-662-45803-7_31,Drawing Graphs within Restricted Area,,2011-03-20
10.1109/TVCG.2007.1000,A Radial Adaptation of the Sugiyama Framework for Visualizing Hierarchical Information,,2017-03-20
10.1145/319294.319323,Scheduling problems for parallel and distributed systems,,2018-03-20
10.1145/1150334.1150340,Minimizing mean flow time for UET tasks,,2012-03-20
10.1007/978-3-319-91376-6_72,Wrapping Layered Graphs,,
10.1109/UCC.2013.31,Resource Minimization for Real-Time Applications Using Computer Clouds,,2019-03-20
10.1109/DATE.2007.364566,Bus Access Optimisation for FlexRay-based Distributed Embedded Systems,,2014-03-20
10.1109/ICCI-CC.2012.6311128,A scheduling method in semiconductor manufacturing lines based on ant colony optimization,,2017-03-20
10.19030/JBER.V12I4.8860,The Task Scheduling Problem: A NeuroGenetic Approach,,2017-03-20
10.1016/j.cor.2013.03.015,Static scheduling of directed acyclic data flow graphs onto multiprocessors using particle swarm optimization,,2012-03-20
10.1007/s00224-006-1249-3,Parallelism versus Memory Allocation in Pipelined Router Forwarding Engines,,2018-03-20
10.1201/b15385-16,Hierarchical Drawing Algorithms,,2016-03-20
10.1007/978-3-540-24838-5_42,A Heuristic for Minimum-Width Graph Layering with Consideration of Dummy Nodes,,2018-03-20
10.1051/ro:2003011,Parallel Machine Scheduling with Uncertain Communication Delays,,2015-03-20
10.1016/j.cor.2005.01.005,Benchmark-problem instances for static scheduling of task graphs with communication delays on homogeneous multiprocessor systems,,2011-03-20
10.1063/1.44489,On scheduling task systems with variable service times,,2019-03-20
10.1109/ICPADS.2002.1183469,A fast branch-and-bound algorithm with an improved lower bound for solving the multiprocessor scheduling problem,,2013-03-20
10.1007/978-1-4899-7797-7,Instruction Level Parallelism,,2011-03-20
10.1109/ICPADS.2009.27,Double-layer Scheduling Strategy of Load Balancing in Scientific Workflow,,2011-03-20
10.1016/j.ejor.2006.11.050,Minimizing the number of machines for minimum length schedules,,2020-03-20
10.1007/978-3-319-53480-0_38,Heuristic for Scheduling Intrees on m Machines with Non-availability Constraints,,2020-03-20
10.1007/978-0-387-30162-4_279,Parallel Algorithms for Two Processors Precedence Constraint Scheduling,,2018-03-20
10.1155/2009/561672,CellSs: Scheduling techniques to better exploit memory hierarchy,,2017-03-20
10.1109/FPL50879.2020.00056,An FPGA-Based Low-Latency Accelerator for Randomly Wired Neural Networks,,2017-03-20
10.6100/IR597161,Interactive visualization of large graphs,,2014-03-20
10.1109/TC.2010.120,A Branch-and-Bound Algorithm for Solving the Multiprocessor Scheduling Problem with Improved Lower Bounding Techniques,,2017-03-20
10.3384/DISS.DIVA-98721,Stability of Adaptive Distributed Real-TimeSystems with Dynamic Resource Management,,2011-03-20
10.7155/jgaa.00111,An Efficient Implementation of Sugiyama's Algorithm for Layered Graph Drawing,,2018-03-20
10.1016/j.tcs.2012.07.009,A best possible online algorithm for scheduling equal-length jobs on two machines with chain precedence constraints,,
10.1007/s00186-005-0009-5,Minimizing total completion time for UET tasks with release time and outtree precedence constraints,,2011-03-20
10.1145/2503210.2503290,A framework for load balancing of Tensor Contraction expressions via dynamic task partitioning,,2017-03-20
10.1137/100810502,Hardness of Precedence Constrained Scheduling on Identical Machines,,2017-03-20
10.1016/j.ins.2010.10.001,A heuristic-based hybrid genetic-variable neighborhood search algorithm for task scheduling in heterogeneous multiprocessor system,,2011-03-20
10.1145/774833.774860,A topology-shape-metrics approach for the automatic layout of UML class diagrams,,2012-03-20
10.5614/ejgta.2017.5.1.2,Efficient maximum matching algorithms for trapezoid graphs,,2015-03-20
10.1007/3-540-44831-4_31,ROSA - Multi-agent System for Web Services Personalization,,2012-03-20
10.1109/SYNASC.2015.32,An Improved Upper-Bound Algorithm for Non-preemptive Task Scheduling,,2018-03-20
10.1016/j.parco.2003.09.002,List scheduling: extension for contention awareness and evaluation of node priorities for heterogeneous cluster architectures,,2017-03-20
10.1016/S0890-5401(03)00132-9,Controlling the data space of tree structured computations,,2015-03-20
10.1145/2133803.2345682,Grid sifting: Leveling and crossing reduction,,2020-03-20
10.1109/IC3TSN.2017.8284499,Workflow scheduling in heterogeneous computing systems : A survey,,2012-03-20
10.1007/978-0-387-30162-4_356,Schedulers for Optimistic Rate Based Flow Control,,2017-03-20
10.1016/J.PROMFG.2018.02.154,A probabilistic approach to the Stochastic Job-Shop Scheduling problem,,2020-03-20
10.1007/978-3-319-68288-4_42,An extension of SPARQL for expressing qualitative preferences,,2020-03-20
10.1145/2889160.2889222,CloudBuild: Microsoft's Distributed and Caching Build Service,,2012-03-20
10.1145/3386263.3406898,Design Automation Methodology from RTL to Gate-level Netlist and Schematic for RSFQ Logic Circuits,,2018-03-20
10.1007/BF00129782,Toward auto-scheduling compilers,,2014-03-20
10.5772/5559,Best Practices for Simulated Annealing in Multiprocessor Task Distribution Problems,,2019-03-20
10.1016/S0377-2217(02)00236-9,Algorithms for dynamic scheduling of unit execution time tasks,,2014-03-20
10.1007/978-3-642-18638-7_2,Technical Foundations,,2016-03-20
10.1007/s001860300336,Shortest path to nonpreemptive schedules of unit-time jobs on two identical parallel machines with minimum total completion time,,2017-03-20
10.1007/s11227-010-0395-1,Scheduling task graphs optimally with A*,,2015-03-20
10.1016/j.jpdc.2016.03.003,Memory limited algorithms for optimal task scheduling on parallel systems,,2014-03-20
10.1109/IPDPS.2007.370426,Applying Ant Colony Optimization Metaheuristic to the DAG Layering Problem,,2018-03-20
10.4236/AJOR.2016.61010,An O(n) Time Algorithm for Scheduling UET-UCT of Bipartite Digraphs of Depth One on Two Processors,,2011-03-20
10.1007/0-387-27744-7_5,Scheduling Unit Execution Time Tasks on Two Parallel Machines with the Criteria of Makespan and Total Completion Time,,2018-03-20
10.1007/978-3-642-22000-5_27,Sequence Automata for Researching Consensus Levels,,2017-03-20
10.1007/s11241-007-9040-3,Timing analysis of the FlexRay communication protocol,,2019-03-20
10.1007/978-3-540-31843-9_17,An Efficient Implementation of Sugiyama's Algorithm for Layered Graph Drawing,,2012-03-20
10.1016/j.disopt.2008.09.001,Optimality of HLF for scheduling divide-and-conquer UET task graphs on identical parallel processors,,2013-03-20
10.1108/10650740310455559,A scheduling system for exploiting data and task parallelism on PC laboratory clusters,,2015-03-20
10.1109/GRID.2008.4662779,A performance study of grid workflow engines,,2018-03-20
10.1007/978-1-4020-6488-3_2,Scheduling of conditional process graphs for the synthesis of embedded systems,,2019-03-20
10.1007/978-3-540-77537-9_38,Drawing Graphs with GLEE,,2012-03-20
10.1016/J.IFACOL.2015.06.346,Scheduling UECT trees with Communication Delays on Two Processors with Unavailabilities,,2017-03-20
10.1007/s10951-011-0230-4,Vyacheslav Tanaev: contributions to scheduling and related areas,,2018-03-20
10.1016/S0377-2217(02)00767-1,Identical parallel machines vs. unit-time shops and preemptions vs. chains in scheduling complexity,,2020-03-20
10.1109/INDICON.2014.7030459,Scheduling of multi-phase applications on to mesh multicore architecture,,2018-03-20
10.1109/IGCC.2015.7393726,Performance and power efficient task scheduling in VFI-based multi-core systems,,2012-03-20
10.1007/s10288-014-0257-4,On scheduling with the non-idling constraint,,2011-03-20
10.1016/j.tcs.2008.03.026,Online scheduling of equal-processing-time task systems,,2018-03-20
10.1007/978-3-030-04414-5_13,A Flow Formulation for Horizontal Coordinate Assignment with Prescribed Width,,2014-03-20
10.1007/BF00260927,Performance analysis of multiprocessor systems containing functionally dedicated processors,,2015-03-20
10.1109/RIVF.2013.6719886,An O(n(log n)3) algorithm for maximum matching in trapezoid graphs,,2018-03-20
10.1016/S0885-064X(03)00028-1,An efficient parallel algorithm for scheduling interval ordered tasks,,2017-03-20
10.1145/1839480.1839484,Hardware-Accelerated RNA Secondary-Structure Alignment,,2020-03-20
10.1109/PADSW.2014.7097796,An improved simulated annealing heuristic for static partitioning of task graphs onto heterogeneous architectures,,2019-03-20
10.1007/978-3-540-25967-1_4,Polynomial Algorithms for MPSP Using Parametric Linear Programming,,2019-03-20
10.1016/S0020-0190(01)00303-9,Lower bounds on precedence-constrained scheduling for parallel processors,,2019-03-20
10.1007/978-3-540-87559-8_16,Distribution Stream of Tasks in Dual-Processor System,,2017-03-20
10.1109/TPDS.2015.2444402,Two-Phase Low-Energy N-Modular Redundancy for Hard Real-Time Multi-Core Systems,,2014-03-20
10.1145/1028664.1028691,Interactive visualization of object-oriented programs,,2016-03-20
10.1145/1073970.1074019,Value-maximizing deadline scheduling and its application to animation rendering,,2014-03-20
10.1080/07408171003670975,Parallel machine scheduling with s-precedence constraints,,2013-03-20
10.1016/S0022-0000(03)00071-0,Scheduling loosely connected task graphs,,2012-03-20
10.1007/3-540-45875-1_22,Chapter 4 Graphs in Software Visualization,,2020-03-20
10.1016/S0304-3975(03)00221-4,Generating and characterizing the perfect elimination orderings of a chordal graph,,2012-03-20
10.1016/J.APM.2012.02.011,Benchmarking the clustering algorithms for multiprocessor environments using dynamic priority of modules,,2011-03-20
10.1007/978-3-319-50106-2,Graph Drawing and Network Visualization,,2013-03-20
10.1007/978-3-030-44728-1_2,Using Malleable Task Scheduling to Accelerate Package Manager Installations,,2015-03-20
10.1007/S10479-019-03180-8,Polyhedral results for position-based scheduling of chains on a single machine,,2018-03-20
10.1109/ISCC.2011.5983875,Workflow scheduling in e-Science networks,,2014-03-20
10.1007/978-0-387-09455-7_14,A Trace-Based Investigation Of The Characteristics Of Grid Workflows,,2017-03-20
10.1145/1806689.1806791,Conditional hardness of precedence constrained scheduling on identical machines,,2012-03-20
10.24355/DBBS.084-202002060904-0,Resource Allocation in Mobile Wireless Real Time Networks,,2013-03-20
10.7155/jgaa.00242,Global k-Level Crossing Reduction,,2012-03-20
10.1201/9780203489802.ch9,Parallel Scheduling for Early Completion,,2019-03-20
10.2313/NET-2017-09-1_01,A Taxonomy of Performance Models of Network Interconnect Devices,,2013-03-20
10.1007/s10951-015-0446-9,Structural Properties of an Open Problem in Preemptive Scheduling,,2013-03-20
10.1007/s12005-008-1012-8,Efficient multitasking in a dual-core CPU system,,2019-03-20
10.1016/j.cor.2003.09.005,Scheduling two-machine no-wait open shops to minimize makespan,,2014-03-20
10.1109/ICCCT.2010.5640450,An extention of edge zeroing heuristic for scheduling precedence constrained task graphs on parallel systems using cluster dependent priority scheme,,2019-03-20
10.1137/S0097539703434966,Fairness Measures for Resource Allocation,,2018-03-20
10.1007/s10479-015-2011-5,On scheduling with the non-idling constraint,,2020-03-20
10.1002/9780470451793.CH9,Parallel‐Machine Models,,2019-03-20
10.1016/j.jpdc.2003.08.003,Scheduling interval orders with communication delays in parallel,,2015-03-20
10.1007/978-3-540-71351-7_16,Anahy: A Programming Environment for Cluster Computing,,2013-03-20
10.1109/IPDPS.2005.199,Energy-aware task scheduling: towards enabling mobile computing over MANETs,,2019-03-20
10.1007/s10951-005-6366-3,Scheduling trees with large communication delays on two identical processors,,2015-03-20
10.1109/ECRTS.2006.31,Timing Analysis of the FlexRay Communication Protocol,,2020-03-20
10.1109/SYNASC.2010.81,An Efficient Scheduling Algorithm for the Multiprocessor Platform,,2017-03-20
10.1007/BF01205181,Instruction-level parallel processing: History  overview  and perspective,,2017-03-20
10.1007/s11227-018-2355-0,On benchmarking task scheduling algorithms for heterogeneous computing systems,,2016-03-20
10.1109/RTSS.2007.13,Bus Access Optimization for Predictable Implementation of Real-Time Applications on Multiprocessor Systems-on-Chip,,2020-03-20
10.14257/IJGDC.2014.7.1.04,Cost-Aware Scheduling Algorithm Based on PSO in Cloud Computing Environment,,2018-03-20
10.1016/S0304-3975(01)00120-7,An efficient deterministic parallel algorithm for two processors precedence constraint scheduling,,2014-03-20
10.1007/978-3-642-34645-3,Transactions on Computational Collective Intelligence VIII,,2020-03-20
10.1016/j.dam.2005.05.023,Graph layering by promotion of nodes,,2017-03-20
10.1109/EMRTS.2003.1212751,Schedulability analysis for distributed heterogeneous time/event triggered real-time systems,,2019-03-20
10.1109/CCGRID.2007.56,Heuristic Scheduling of Grid Workflows Supporting Co-Allocation and Advance Reservation,,2020-03-20
10.1002/JOS.116,A standard task graph set for fair evaluation of multiprocessor scheduling algorithms,,2019-03-20
10.1016/j.dam.2010.06.015,'Strong'-'weak' precedence in scheduling: Extensions to series-parallel orders,,2017-03-20
10.1615/JAUTOMATINFSCIEN.V44.I2.40,Investigation of the Effect of Transitive Edges on the Optimality of Some Algorithms for Parallel Ordering,,2013-03-20
10.1109/RTAS.2011.35,Bus Access Design for Combined Worst and Average Case Execution Time Optimization of Predictable Real-Time Applications on Multiprocessor Systems-on-Chip,,2018-03-20
10.1504/IJAOM.2009.031248,Effective precedence constrained scheduling in a make-to-order environment,,2020-03-20
10.2991/AMCCE-15.2015.60,Wireless Control Network Model Based on Flexible Time Trigger,,2012-03-20
10.1007/S11768-006-6044-9,A new polynomial algorithm for a parallel identical scheduling problem,,2019-03-20
10.1007/978-3-319-72150-7_48,On Multitree-Like Graph Layering,,2014-03-20
10.1002/sys.21528,Autonomous driving systems hardware and software architecture exploration: optimizing latency and cost under safety constraints,,2019-03-20
10.1007/978-1-4899-7797-7_3,Scheduling Basic Blocks,,2020-03-20
10.1504/IJGUC.2012.051422,An efficient scheduling algorithm for the non-preemptive independent multiprocessor platform,,2012-03-20
10.1201/b15385-20,The Open Graph Drawing Framework (OGDF),,2017-03-20
10.1093/comjnl/bxm115,Vertex-ordering Algorithms for Automatic Differentiation of Computer Codes,,2018-03-20
10.1002/NAV.10105,A note on scheduling parallel machines subject to breakdown and repair,,2019-03-20
10.1109/HICSS.2004.1265699,Agent survivability: an application for strong and weak chain constrained scheduling,,2017-03-20
10.1109/RTCSA.2010.20,Optimal Scheduling of Urgent Preemptive Tasks,,2014-03-20
10.1109/ICCES.2009.5383277,Optimization method for scheduling length and the number of processors on multiprocessor systems,,2020-03-20
10.1145/2517325,UNTANGLED: A Game Environment for Discovery of Creative Mapping Strategies,,2011-03-20
10.1007/S13369-018-3525-3,An Improved Tabu Search Meta-heuristic Approach for Solving Scheduling Problem with Non-availability Constraints,,2020-03-20
10.5120/IJAIS13-450995,Preemptive Task Partitioning Strategy (PTPS) with Fast Preemption in Heterogeneous Distributed Environment,,2013-03-20
10.1007/3-540-36379-3_22,Facets of the Directed Acyclic Graph Layering Polytope,,2012-03-20
10.1007/s006070050036,Complexity Results for Single-Machine Problems with Positive Finish-Start Time-Lags,,2017-03-20
10.1109/ICSMC.2002.1176338,Branch-and-bound algorithm for UET scheduling problem,,2018-03-20
10.3182/20130619-3-RU-3018.00610,Scheduling Partially Ordered UET Tasks on Dedicated Machines,,2020-03-20
10.1142/S0217595905000662,Preemptive Scheduling on Parallel Processors with due dates,,2017-03-20
10.1145/1064546.1180618,In search for efficient heuristics for minimum-width graph layering with consideration of dummy nodes,,2013-03-20
10.1023/B:SUPE.0000009321.92150.64,On Task Scheduling Accuracy: Evaluation Methodology and Results,,2012-03-20
10.7155/jgaa.00441,Generalized Layerings for Arbitrary and Fixed Drawing Areas,,2016-03-20
10.1109/TPDS.2014.2308175,ILP Formulations for Optimal Task Scheduling with Communication Delays on Parallel Systems,,2020-03-20
10.1561/1000000037,Time-Predictable Embedded Software on Multi-Core Platforms: Analysis and Optimization,,2018-03-20
10.3233/SPR-2009-0272,CellSs: Scheduling techniques to better exploit memory hierarchy,,2015-03-20
10.1145/2676585.2676609,Cost efficient real-time applications scheduling in mobile cloud computing,,2020-03-20
10.1002/ECJB.10212,Task scheduling method considered the communication time by critical path: Application to various kinds of network topology,,2018-03-20
10.3990/1.9789036536790,Algorithmic power management - Energy minimisation under real-time constraints,,2013-03-20
10.1109/TPDS.2015.2411257,Resource and Instance Hour Minimization for Deadline Constrained DAG Applications Using Computer Clouds,,2011-03-20
10.1109/TVLSI.2004.831467,Scheduling and mapping in an incremental design methodology for distributed real-time embedded systems,,2017-03-20
10.3103/S1060992X10030021,Neuron network methods of task assignment in multiprocessing system,,2011-03-20
10.1080/17445760701445013,Cooperative ad hoc computing: towards enabling cooperative processing in wireless environments,,2017-03-20
10.1007/BF02252200,Antwortzeitgesteuerte Prozessorzuteilung unter strengen Zeitbedingungen,,2011-03-20
10.1007/978-3-319-22975-1_8,On the Scalability of Constraint Solving for Static/Off-Line Real-Time Scheduling,,2014-03-20
10.1007/s00607-017-0543-z,Scheduling chained multiprocessor tasks onto large multiprocessor system,,2019-03-20
10.1109/TC.2014.2345410,On the Interplay between Global DVFS and Scheduling Tasks with Precedence Constraints,,2011-03-20
10.4236/iim.2010.28056,Literature Review of Single Machine Scheduling Problem with Uniform Parallel Machines,,2014-03-20
10.1007/S11786-019-00395-7,Processor Bounding for an Efficient Non-preemptive Task Scheduling Algorithm,,2020-03-20
10.1109/VLSI.2008.33,Bus Access Optimization for Predictable Implementation of Real-Time Applications on Multiprocessor Systems-on-Chip,,2019-03-20
10.1007/3-540-28438-9_10,Improving the Performance of the Vertex Elimination Algorithm for Derivative Calculation,,2014-03-20
10.1016/S0020-0190(01)00200-9,Width-restricted layering of acyclic digraphs with consideration of dummy nodes,,2019-03-20
10.1145/1722024.1722052,An integrated model for visualizing biclusters from gene expression data and PPI networks,,2012-03-20
10.1109/TPDS.2010.58,Accelerating the Execution of Matrix Languages on the Cell Broadband Engine Architecture,,2015-03-20
10.1016/j.dam.2017.07.030,Minimum equivalent precedence relation systems,,2015-03-20
10.1007/BF02577868,Minimizing redundant dependencies and interprocessor synchronizations,,2016-03-20
10.1145/774789.774828,Holistic scheduling and analysis of mixed time/event-triggered distributed embedded systems,,2011-03-20
10.1007/S12351-018-0432-Z,Heuristic algorithms for scheduling intrees on m machines with non-availability constraints,,2013-03-20
10.1007/978-3-642-14165-2_38,On Approximate Horn Formula Minimization,,2016-03-20
10.1109/CCC.2012.39,Limitations of Lower-Bound Methods for the Wire Complexity of Boolean Operators,,2018-03-20
10.1007/978-3-642-20712-9_12,Gate Elimination for Linear Functions and New Feebly Secure Constructions,,2015-03-20
10.1007/s00145-014-9195-8,Secret-Sharing Schemes for Very Dense Graphs,,2011-03-20
10.1017/S0963548306007620,On Graph Complexity,,2014-03-20
10.1007/978-3-642-54242-8_14,On the Cryptographic Complexity of the Worst Functions,,2014-03-20
10.1016/j.ipl.2009.11.015,Finding bipartite subgraphs efficiently,,2013-03-20
10.1007/978-3-319-44618-9_27,Secret Sharing Schemes for Dense Forbidden Graphs,,2015-03-20
10.1561/0400000063,Complexity of Linear Boolean Operators,,2015-03-20
10.1007/978-3-642-32009-5_10,Secret Sharing Schemes for Very Dense Graphs,,2012-03-20
10.1007/978-3-319-63688-7_25,Conditional Disclosure of Secrets via Non-linear Reconstruction,,2011-03-20
10.1002/9783527670468.CH05,Computational Complexity of Graphs,,2012-03-20
10.1007/978-3-319-70503-3_13,Linear Secret-Sharing Schemes for Forbidden Graph Access Structures,,2017-03-20
10.1137/S0097539705447001,Disproving the Single Level Conjecture,,2017-03-20
10.1007/S00493-018-3765-6,The Number of Triple Systems Without Even Cycles,,2019-03-20
10.1016/j.ic.2010.08.003,Queries on Xml streams with bounded delay and concurrency,,2011-03-20
10.4230/LIPIcs.STACS.2019.55,Finite Sequentiality of Unambiguous Max-Plus Tree Automata,,2015-03-20
10.1007/s10994-006-9613-8,Interactive learning of node selecting tree transducer,,2014-03-20
10.1007/3-540-55251-0_16,Finite Tree Automata with Cost Functions,,2016-03-20
10.1016/j.tcs.2012.07.020,Tree-shifts of finite type,,2015-03-20
10.4230/LIPIcs.TLCA.2015.241,Multivariate Amortised Resource Analysis for Term Rewrite Systems,,2012-03-20
10.4230/LIPIcs.ICALP.2020.137,Finite Sequentiality of Finitely Ambiguous Max-Plus Tree Automata,,2016-03-20
10.1007/s00224-013-9456-1,Sofic Tree-Shifts,,2012-03-20
10.4230/LIPIcs.FSTTCS.2019.50,Degrees of Ambiguity of Büchi Tree Automata,,2019-03-20
10.1007/978-3-642-31653-1_21,Visibly Pushdown Automata with Multiplicities: Finiteness and K-Boundedness,,2019-03-20
10.1007/978-3-662-53132-7_30,On Finite and Polynomial Ambiguity of Weighted Tree Automata,,2012-03-20
10.1145/2643135.2643141,BiFluX: A Bidirectional Functional Update Language for XML,,2016-03-20
10.1007/11601524_14,N-Ary Queries by Tree Automata,,2013-03-20
10.1007/978-3-642-13182-0_2,Sofic and Almost of Finite Type Tree-Shifts,,2011-03-20
10.1007/3-540-53479-2_18,Approaching Fair Computations by Ultra Metrics,,2019-03-20
10.1016/S0304-3975(96)00248-4,The Equational Logic of Fixed Points (Tutorial),,2014-03-20
10.1007/BF01941131,Metric semantics for concurrency,,2012-03-20
10.1016/0304-3975(92)90390-2,Fairness  Distances and Degrees,,2014-03-20
10.1007/978-1-4612-4160-7,Comparative Metric Semantics of Programming Languages,,2014-03-20
10.1016/0304-3975(88)90048-5,Designing Equivalent Semantic Models for Process Creation,,2020-03-20
10.1515/jbcpp-2013-0141,Caffeic and chlorogenic acids inhibit key enzymes linked to type 2 diabetes (in vitro): a comparative study,,2012-03-20
10.1007/3-540-52753-2_50,Semantic for Abstract Fairness using Metric Spaces,,2019-03-20
10.1016/0304-3975(92)90175-F,Strong Fairness and Ultra Metrics,,2019-03-20
10.1016/B978-044450980-2/50014-5,Topology and Domain Theory,,2016-03-20
10.1109/WICSA.2004.1310691,Support for evolving software architectures in the ArchWare ADL,,2013-03-20
10.1145/1118890.1118892,When and how to develop domain-specific languages,,2018-03-20
10.1016/S0065-2458(02)80008-0,Exception Handling,,2013-03-20
10.1145/1328408.1328437,Tool support for refactoring functional programs,,2013-03-20
10.5381/jot.2002.1.1.a3,Design principles for highly reusable concurrent object-oriented systems,,2012-03-20
10.1142/9781848165458_0008,Applications of Grammatical Inference in Software Engineering: Domain Specific Language Development,,2012-03-20
10.1007/BF01408173,Inheritance on processes  exemplified on distributed termination detection,,2020-03-20
10.4018/978-1-61350-456-7.CH706,Programming Languages as Mathematical Theories,,2014-03-20
10.1007/978-3-540-24769-2_23,ArchWare: Architecting Evolvable Software,,2011-03-20
10.1109/ASWEC.2004.1290470,Obstacles to a totally functional programming style,,2020-03-20
10.1007/BF01231642,Orthogonally persistent object systems,,2011-03-20
10.1145/1127878.1127885,π-Method: a model-driven formal method for architecture-centric software engineering,,2017-03-20
10.1007/b97879,Software Architecture,,2017-03-20
10.1016/j.entcs.2009.07.082,Abstract Interpretation From a Denotational-semantics Perspective,,2019-03-20
10.1145/1636642.1636644,Tool support for refactoring functional programs,,2020-03-20
10.1145/986710.986728,π-ADL: an Architecture Description Language based on the higher-order typed π-calculus for specifying dynamic and mobile software architectures,,2020-03-20
10.1007/978-3-319-99725-4_5,Experience Developing and Deploying Concurrency Analysis at Facebook,,2015-03-20
10.1016/j.cl.2010.09.002,A transactional model for automatic exception handling,,2014-03-20
10.1145/3290370,A true positives theorem for a static race detector,,2018-03-20
10.1145/3386336,The history of Standard ML,,2016-03-20
10.21236/ada561739,Labelled Execution Systems,,2020-03-20
10.1017/S0960129503004006,Embedding Untimed Into Timed Process Algebra: The Case For Explicit Termination,,2014-03-20
10.1007/978-3-642-32784-1_10,From Transitions to Executions,,2014-03-20
10.1145/3354166.3356340,Foundations of Session Types: 10 Years Later,,2019-03-20
10.4230/LIPIcs.CONCUR.2020.14,Probabilistic Analysis of Binary Sessions,,2014-03-20
10.1007/978-3-540-68679-8_40,A Type System for Client Progress in a Service-Oriented Calculus,,2014-03-20
10.1007/978-3-030-17184-1_22,Manifest Deadlock-Freedom for Shared Session Types,,2011-03-20
10.4204/EPTCS.162.4,Recursive Session Types Revisited,,2014-03-20
10.1016/j.ic.2008.03.028,Objects and session types,,2018-03-20
10.4204/EPTCS.45.6,Session Types = Intersection Types + Union Types,,2012-03-20
10.1007/978-3-540-78195-0_6,Implementation  Compilation  Optimization of Object-Oriented Languages  Programs and Systems,,2018-03-20
10.6092/UNIBO/AMSDOTTORATO/7512,Real-World Choreographies,,2016-03-20
10.1007/978-3-642-01364-5_11,Security Types for Sessions and Pipelines,,2020-03-20
10.1145/1328438.1328472,Multiparty asynchronous session types,,2018-03-20
10.25560/23985,A study of bisimulation theory for session types,,2019-03-20
10.1007/978-3-319-47958-3_6,Binary Session Types for Psi-Calculi,,2016-03-20
10.1145/2814189.2814198,Panini: a concurrent programming model with modular reasoning,,2013-03-20
10.1017/S0960129514000231,An extensible approach to session polymorphism,,2014-03-20
10.7561/SACS.2015.2.245,The Consistency and Complexity of Multiplicative Additive System Virtual,,2013-03-20
10.25560/6132,Session types in concurrent calculi : higher-order processes and objects,,2018-03-20
10.1007/978-3-540-73859-6_2,Logical Semantics of Types for Concurrency,,2012-03-20
10.1016/j.tcs.2008.09.016,Amalgamating sessions and methods in object-oriented languages with generics,,2011-03-20
10.1145/3131851.3131864,Causally consistent reversible choreographies: a monitors-as-memories approach,,2019-03-20
10.1007/978-3-642-23217-6_19,Full Abstraction in a Subtyped pi-Calculus with Linear Types,,2014-03-20
10.1007/978-3-319-05032-4_6,Compliance and Testing Preorders Differ,,2018-03-20
10.1145/2951913.2951926,Context-free session types,,2011-03-20
10.1016/j.jlamp.2018.12.002,Precise subtyping for synchronous multiparty sessions,,2017-03-20
10.23638/LMCS-14(4:14)2018,Affine Sessions,,2013-03-20
10.4204/EPTCS.211,Proceedings of the Ninth workshop on Programming Language Approaches to Concurrency- and Communication-cEntric Software  PLACES 2016  Eindhoven  The Netherlands  8th April 2016,,2013-03-20
10.22152/programming-journal.org/2019/3/6,Comprehensive Multiparty Session Types,,2014-03-20
10.1016/j.jlamp.2017.02.007,Data-driven adaptation for smart sessions,,2013-03-20
10.1007/978-3-662-43376-8_10,Typing Liveness in Multiparty Communicating Systems,,2016-03-20
10.1007/978-3-319-39570-8_16,The Challenge of Typed Expressiveness in Concurrency,,2014-03-20
10.1017/S0960129514000164,Global escape in multiparty sessions,,2019-03-20
10.1145/3209108.3209146,Work Analysis with Resource-Aware Session Types,,2013-03-20
10.1016/j.scico.2013.05.001,Exception handling for copyless messaging,,
10.1007/978-3-642-02273-9_16,Session-Based Communication Optimisation for Higher-Order Mobile Processes,,2015-03-20
10.2991/978-94-6239-204-5,Type Systems for Distributed Programs: Components and Sessions,,2014-03-20
10.1007/978-3-642-15375-4_30,A Linear Account of Session Types in the Pi Calculus,,2020-03-20
10.1007/978-3-319-05032-4_4,Ensuring Faultless Communication Behaviour in A Commercial Cloud,,2015-03-20
10.1007/978-3-642-38592-6_7,Polymorphic Types for Leak Detection in a Session-Oriented Functional Language,,2017-03-20
10.4204/EPTCS.314.3,Duality of Session Types: The Final Cut,,
10.4204/EPTCS.304.6,Open Multiparty Sessions,,2013-03-20
10.1016/j.jlamp.2015.03.004,Reversible session-based pi-calculus,,
10.1007/978-3-030-59025-3,Functional and Logic Programming: 15th International Symposium  FLOPS 2020  Akita  Japan  September 14–16  2020  Proceedings,,2012-03-20
10.1145/3354166.3354184,Intrinsically-Typed Mechanized Semantics for Session Types,,2015-03-20
10.1007/978-3-030-17184-1_21,Asynchronous Timed Session Types - From Duality to Time-Sensitive Processes,,2015-03-20
10.1007/978-3-540-70592-5_22,Session-Based Distributed Programming in Java,,2014-03-20
10.1016/j.scico.2015.10.006,Parameterized  concurrent session types for asynchronous multi-actor interactions,,2015-03-20
10.2168/LMCS-11(4:13)2015,Type Reconstruction for the Linear π-Calculus with Composite Regular Types,,2011-03-20
10.4204/EPTCS.242.3,Intersections and Unions of Session Types,,2017-03-20
10.1145/2837614.2837634,Effects as sessions  sessions as effects,,2020-03-20
10.1007/978-3-642-34883-9_10,On Action Permutation and Progress for Partially Commutative Asynchronous Binary Sessions,,2014-03-20
10.1002/9781119428497.CH7,Theoretical Considerations: Inferring and Enforcing Use Patterns for Mobile Cloud Assurance,,2016-03-20
10.1007/s00236-019-00339-5,Using session types for reasoning about boundedness in the π-calculus,,2018-03-20
10.1145/1836089.1836109,Two notions of sub-behaviour for session-based client/server systems,,2016-03-20
10.1016/j.ic.2012.05.002,Fundamentals of session types,,2020-03-20
10.1007/978-3-540-74407-8_15,The Must Preorder Revisited,,2013-03-20
10.4230/LIPIcs.CONCUR.2020.13,Session Types with Arithmetic Refinements,,2019-03-20
10.4204/EPTCS.261.5,Session Types for Orchestrated Interactions,,2019-03-20
10.1007/978-3-319-39570-8_17,Type-Based Analysis for Session Inference (Extended Abstract),,2016-03-20
10.1007/s00165-016-0381-3,Self-adaptation and secure information flow in multiparty communications,,2013-03-20
10.1007/978-3-642-14458-5_1,Sessions and Session Types: An Overview,,2013-03-20
10.1016/J.SCICO.2014.04.017,Disciplined structured communications with disciplined runtime adaptation,,2012-03-20
10.4230/LIPIcs.FSCD.2020.33,Rast: Resource-Aware Session Types with Arithmetic Refinements (System Description),,2015-03-20
10.1007/978-3-642-54833-8_26,Resolving Non-determinism in Choreographies,,2018-03-20
10.1145/2003476.2003499,Dependent session types via intuitionistic linear type theory,,2011-03-20
10.1007/978-3-540-71316-6_2,Structured Communication-Centred Programming for Web Services,,2018-03-20
10.1017/S0960129508006944,Bounded polymorphism in session types,,2011-03-20
10.1007/978-3-030-21485-2_16,From Behavioural Contracts to Session Types,,2017-03-20
10.1007/978-3-540-85361-9_13,Contract-Directed Synthesis of Simple Orchestrators,,2017-03-20
10.1109/SEFM.2007.13,Disciplining Orchestration and Conversation in Service-Oriented Computing,,2018-03-20
10.2168/LMCS-10(4:20)2014,Globally Governed Session Semantics,,2018-03-20
10.1007/978-3-642-00590-9_23,Global Principal Typing in Partially Commutative Asynchronous Sessions,,2018-03-20
10.1145/3242173,Interconnectability of Session-Based Logical Processes,,2016-03-20
10.1007/978-3-540-72952-5_1,Asynchronous Session Types and Progress for Object Oriented Languages,,
10.1007/978-3-642-33469-6_57,A Polymorphic Type System with Progress for Binary Sessions,,2015-03-20
10.1145/3290343,Less is more: multiparty session types revisited,,2014-03-20
10.4230/LIPIcs.CONCUR.2019.39,Domain-Aware Session Types,,2016-03-20
10.1145/3428274,Resolution as intersection subtyping via Modus Ponens,,2011-03-20
10.1016/j.tcs.2010.05.002,Contract-based discovery of Web services modulo simple orchestrators,,2015-03-20
10.1016/j.jlamp.2018.10.001,Session types and subtyping for orchestrated interactions,,2012-03-20
10.1007/978-3-662-44584-6_27,Using Higher-Order Contracts to Model Session Types (Extended Abstract),,2015-03-20
10.1145/1599410.1599437,Foundations of session types,,2015-03-20
10.23638/LMCS-13(3:15)2017,Retractability  games and orchestrators for session contracts,,2015-03-20
10.1145/3001878.3001883,Benefits of session types for software development,,2012-03-20
10.1016/j.jlamp.2016.11.005,Certifying data in multiparty session types,,2015-03-20
10.1007/978-3-642-14107-2_16,Type-Safe Eventful Sessions in Java,,2015-03-20
10.1007/s00165-013-0284-5,The stream-based service-centred calculus: a foundation for service-oriented programming,,2012-03-20
10.1145/3110282,Gradual session types,,2017-03-20
10.1007/978-3-540-79980-1_8,Types and Deadlock Freedom in a Calculus of Services  Sessions and Pipelines,,2016-03-20
10.4230/LIPIcs.CONCUR.2020.12,Session Subtyping and Multiparty Compatibility Using Circular Sequents,,2015-03-20
10.1145/3371135,Label-dependent session types,,2018-03-20
10.1007/978-3-319-92408-3_2,Foundations of Coordination and Contracts and Their Contribution to Session Type Theory,,2012-03-20
10.1145/3414080.3414082,Two notions of sub-behaviour for session-based client/server systems: 10 Years Later,,2019-03-20
10.1145/3414080.3414109,A Dependently Typed Linear π-Calculus in Agda,,2019-03-20
10.1016/j.tcs.2010.09.010,Conversation types,,2018-03-20
10.1007/978-3-642-01918-0_4,Fundamentals of Session Types,,2019-03-20
10.1007/978-3-540-68679-8_41,Session and Union Types for Object Oriented Programming,,2014-03-20
10.1007/978-3-319-05032-4_2,A Concurrent Programming Language with Refined Session Types,,2019-03-20
10.1007/978-3-662-49665-7_24,Hybrid Session Verification Through Endpoint API Generation,,2016-03-20
10.1007/978-3-030-64437-6_6,Behavioural Types for Memory and Method Safety in a Core Object-Oriented Language,,2016-03-20
10.1007/978-3-662-43376-8_4,Progress as Compositional Lock-Freedom,,2019-03-20
10.1007/978-3-030-30446-1_2,Relating Session Types and Behavioural Contracts: The Asynchronous Case,,2013-03-20
10.1145/3229062,Context-Free Session Type Inference,,2016-03-20
10.1007/978-3-662-43613-4_1,Type Checking Liveness for Collaborative Processes with Bounded and Unbounded Recursion,,2017-03-20
10.1007/978-3-030-64437-6,Programming Languages and Systems: 18th Asian Symposium  APLAS 2020  Fukuoka  Japan  November 30 – December 2  2020  Proceedings,,2014-03-20
10.1007/978-3-030-44914-8_26,Mixed Sessions,,2018-03-20
10.1016/j.entcs.2009.06.002,Synchronous Multiparty Session Types,,2015-03-20
10.1007/978-3-642-21464-6_9,Fair Subtyping for Multi-party Session Types,,2016-03-20
10.1016/j.scico.2018.08.004,Full-abstraction for client testing preorders,,2011-03-20
10.1017/S0960129514000218,Linear logic propositions as session types,,2016-03-20
10.1145/2824815.2824817,Objects as session-typed processes,,2013-03-20
10.1016/j.entcs.2007.02.056,Language Primitives and Type Discipline for Structured Communication-Based Programming Revisited: Two Systems for Higher-Order Session Communication,,2020-03-20
10.1145/1706299.1706335,Modular session types for distributed object-oriented programming,,2020-03-20
10.1145/3434297,Precise subtyping for asynchronous multiparty sessions,,2016-03-20
10.2168/LMCS-8(1:17)2012,Typing Copyless Message Passing,,2014-03-20
10.1093/logcom/exs022,Uniqueness typing for resource management in message-passing concurrency,,2019-03-20
10.1109/PDCAT.2012.102,On Projections of Global Types in Partially Commutative Multiparty Asynchronous Sessions,,2016-03-20
10.4204/EPTCS.255.5,Using Session Types for Reasoning About Boundedness in the Pi-Calculus,,2014-03-20
10.1109/PDP.2014.18,Self-Adaptive Monitors for Multiparty Sessions,,2016-03-20
10.4204/eptcs.322.3,Multiparty Session Programming with Global Protocol Combinators,,2015-03-20
10.1007/978-3-662-54494-5_7,Explicit Connection Actions in Multiparty Session Types,,2019-03-20
10.1016/j.tcs.2018.02.010,On the boundary between decidability and undecidability of asynchronous session subtyping,,2013-03-20
10.1007/978-3-642-15375-4_16,Session Types as Intuitionistic Linear Propositions,,2011-03-20
10.4204/EPTCS.22.3,Uniqueness Typing for Resource Management in Message-Passing Concurrency,,2018-03-20
10.1016/j.jlamp.2020.100527,Process calculi as a tool for studying coordination  contracts and session types,,2013-03-20
10.1007/978-3-642-39212-2_34,Fair Subtyping for Open Session Types,,2011-03-20
10.1007/978-3-319-33612-1_5,An Event-Based Approach to Runtime Adaptation in Communication-Centric Systems,,2011-03-20
10.4204/EPTCS.46.2,Contracts for Abstract Processes in Service Composition,,2019-03-20
10.1007/978-3-030-21485-2_18,Types for Progress in Actor Programs,,2011-03-20
10.1007/978-3-662-44584-6_28,A Semantic Deconstruction of Session Types,,2017-03-20
10.4204/EPTCS.137.3,Session Types with Runtime Adaptation: Overview and Examples,,2015-03-20
10.1145/2220365.2220367,Structured Communication-Centered Programming for Web Services,,2016-03-20
10.1007/978-3-662-43376-8_8,Affine Sessions,,2014-03-20
10.1016/j.entcs.2010.06.003,Inference of Session Types From Control Flow,,2016-03-20
10.1017/S096012951400022X,Fair subtyping for multi-party session types,,2014-03-20
10.1007/978-3-319-39519-7_2,A Game Interpretation of Retractable Contracts,,2012-03-20
10.33612/diss.108552669,Session-based concurrency: between operational and declarative views,,2017-03-20
10.1017/S0960129512000886,Deriving session and union types for objects,,2011-03-20
10.1145/2245276.2232097,Modelling session types using contracts,,2014-03-20
10.1145/3290340,Two sides of the same coin: session types and game semantics: a synchronous side and an asynchronous side,,2020-03-20
10.1007/s10270-014-0444-y,A framework for deadlock detection in core ABS,,2018-03-20
10.1016/j.ic.2017.07.010,Undecidability of asynchronous session subtyping,,2020-03-20
10.1007/978-3-662-45917-1_4,On Duality Relations for Session Types,,2015-03-20
10.1016/j.jlamp.2016.08.002,Orchestrated session compliance,,2013-03-20
10.4204/EPTCS.137.2,From Lock Freedom to Progress Using Session Types,,2014-03-20
10.1007/978-3-662-45917-1,Trustworthy Global Computing,,2020-03-20
10.1007/978-3-642-21464-6_7,Session Typing for a Featherweight Erlang,,2012-03-20
10.1017/S0956796816000289,A simple library implementation of binary sessions,,2019-03-20
10.1007/s00165-016-0377-z,Event-based run-time adaptation in communication-centric systems,,2019-03-20
10.1016/j.jlap.2013.05.003,Algorithmic type checking for a pi-calculus with name matching and session types,,2015-03-20
10.1145/1411286.1411290,Haskell session types with (almost) no class,,2011-03-20
10.1007/978-3-642-38088-4_13,LiquidPi: Inferrable Dependent Session Types,,2016-03-20
10.4230/LIPIcs.ECOOP.2018.15,Mailbox Types for Unordered Interactions,,2017-03-20
10.1145/1538917.1538920,A theory of contracts for Web services,,2012-03-20
10.1016/j.scico.2017.10.006,Typechecking protocols with Mungo and StMungo: A session type toolchain for Java,,2014-03-20
10.1007/978-3-540-74792-5_10,Bounded Session Types for Object Oriented Languages,,2019-03-20
10.1007/978-3-319-30936-1_23,Certifying Data in Multiparty Session Types,,2020-03-20
10.4204/EPTCS.12.5,Session Types at the Mirror,,2015-03-20
10.1145/3236786,Parallel complexity analysis with temporal session types,,2012-03-20
10.1145/2967973.2968595,Typechecking protocols with Mungo and StMungo,,2018-03-20
10.1145/2364527.2364568,Propositions as sessions,,2018-03-20
10.1007/978-3-319-47958-3_1,Substructural Proofs as Automata,,2014-03-20
10.4230/LIPIcs.ECOOP.2017.24,A Linear Decomposition of Multiparty Sessions for Safe Distributed Programming,,2015-03-20
10.1007/978-3-642-04081-8_15,Contracts for Mobile Processes,,2018-03-20
10.1007/978-3-319-05119-2_9,Towards Static Deadlock Resolution in the π-Calculus,,2017-03-20
10.1504/IJCSE.2015.068834,On action permutation and progress for a type system with partially commutative asynchronous binary sessions,,2012-03-20
10.4204/EPTCS.222.5,Reversible Multiparty Sessions with Checkpoints,,2012-03-20
10.1007/s11761-014-0171-9,Self-adaptive multiparty sessions,,2013-03-20
10.1007/978-3-319-59746-1_6,Session-ocaml: A Session-Based Library with Polarities and Lenses,,2019-03-20
10.1201/9781420044430.ch7,Dynamic Interfaces,,2013-03-20
10.1007/978-3-319-25527-9_9,Compliance in Behavioural Contracts: A Brief Survey,,2019-03-20
10.1007/978-3-540-85361-9_33,Global Progress in Dynamically Interleaved Multiparty Sessions,,2013-03-20
10.1007/978-3-540-78663-4_18,On Progress for Structured Communications,,
10.1017/S095679681400001X,Propositions as sessions,,2016-03-20
10.25560/9475,Parameterised session types communication patterns : through the looking glass of session types,,2020-03-20
10.4204/EPTCS.61.7,A type checking algorithm for qualified session types,,2011-03-20
10.1007/978-3-319-59746-1_13,Full-Abstraction for Must Testing Preorders - (Extended Abstract),,2014-03-20
10.1017/S0956796819000169,Gradual Session Types,,2011-03-20
10.1145/3414080.3414087,Verified Linear Session-Typed Concurrent Programming,,2012-03-20
10.1007/s00165-015-0334-2,An algebraic theory for web service contracts,,
10.1007/978-3-030-36987-3_5,A Very Gentle Introduction to Multiparty Session Types,,2018-03-20
10.1145/3110279,Chaperone contracts for higher-order sessions,,2012-03-20
10.1007/978-3-642-19718-5_4,Typing Copyless Message Passing,,2018-03-20
10.1109/DASC.2013.117,A Bounded Polymorphic Session Type System with Delegation,,2011-03-20
10.1007/978-3-642-40184-8_28,Globally Governed Session Semantics,,2017-03-20
10.1007/978-3-030-59025-3_5,Session Types Without Sophistry - System Description,,2013-03-20
10.1017/S0960129514000176,Linearity  session types and the Pi calculus,,2014-03-20
10.1007/978-3-319-14977-6_12,A Routing Calculus with Flooding Updates,,2015-03-20
10.1017/S096012951400005X,Sub-behaviour relations for session-based client/server systems,,2017-03-20
10.1145/3009837.3009847,Fencing off go: liveness and safety for channel-based programming,,2018-03-20
10.1016/j.jlamp.2018.01.001,Multiparty session types  beyond duality,,2017-03-20
10.1007/978-3-319-92612-4_2,Applied Choreographies,,2015-03-20
10.1007/978-3-540-68679-8_42,The Pairing of Contracts and Session Types,,2012-03-20
10.1145/2480362.2480716,Disciplined structured communications with consistent runtime adaptation,,2017-03-20
10.1007/978-3-319-30936-1_5,Subtyping Supports Safe Session Substitution,,2011-03-20
10.1017/S0956796809990268,Linear type theory for asynchronous session types,,2011-03-20
10.1007/978-3-662-54458-7_26,On the Undecidability of Asynchronous Session Subtyping,,2017-03-20
10.1109/SOCA.2012.6449432,Service integration via target-transparent mediation,,2020-03-20
10.1007/978-3-540-78789-1_8,Goal-Oriented Composition of Services,,2019-03-20
10.1007/978-3-030-45237-7_17,EMTST: Engineering the Meta-theory of Session Types,,2013-03-20
10.4204/EPTCS.304.8,The Cπ-calculus: a Model for Confidential Name Passing,,2014-03-20
10.1145/2643135.2643138,On the Preciseness of Subtyping in Session Types,,2019-03-20
10.1145/2873052,Foundations of Session Types and Behavioural Contracts,,2020-03-20
10.1017/S0960129514000243,Modelling session types using contracts,,2011-03-20
10.2168/LMCS-11(4:12)2015,Modular Session Types for Objects,,2013-03-20
10.1016/j.entcs.2006.12.041,A Calculus of Global Interaction based on Session Types,,2012-03-20
10.4204/EPTCS.69.2,Channels as Objects in Concurrent Object-Oriented Programming,,2013-03-20
10.2168/LMCS-12(2:10)2016,Using higher-order contracts to model session types,,2012-03-20
10.1007/978-3-662-45917-1_11,Corecursion and Non-divergence in Session-Typed Processes,,2013-03-20
10.1016/j.jlamp.2015.09.003,Combining behavioural types with security analysis,,2019-03-20
10.1007/978-3-319-41579-6_8,Behavioural Analysis of Sessions Using the Calculus of Structures,,2017-03-20
10.1007/978-3-662-46678-0_1,Polarized Substructural Session Types,,2015-03-20
10.1007/978-3-540-72952-5_17,Performance-Oriented Comparison of Web Services Via Client-Specific Testing Preorders,,2017-03-20
10.1007/11785477_20,Session Types for Object-Oriented Languages,,2019-03-20
10.1145/1328438.1328471,A theory of contracts for web services,,2020-03-20
10.1007/s00165-016-0358-2,Reversible client/server interactions,,2017-03-20
10.4204/EPTCS.160.9,Session Types as Generic Process Types,,2011-03-20
10.2168/LMCS-12(1:1)2016,Type-checking Liveness for Collaborative Processes with Bounded and Unbounded Recursion,,2020-03-20
10.1109/ICECCS.2015.33,Towards a Session Logic for Communication Protocols,,2018-03-20
10.1007/978-3-642-01918-0_5,Asynchronous Session Types: Exceptions and Multiparty Interactions,,2018-03-20
10.1007/978-3-540-85361-9_32,Structured Interactional Exceptions in Session Types,,2016-03-20
10.1007/978-3-642-38613-8_21,An Algebraic Theory for Web Service Contracts,,2019-03-20
10.2168/LMCS-12(4:6)2016,Automata for Specifying and Orchestrating Service Contracts,,2018-03-20
10.1145/2827695,Multiparty Asynchronous Session Types,,2017-03-20
10.1016/J.SCICO.2018.08.005,Session-ocaml: A session-based library with polarities and lenses,,2019-03-20
10.1007/978-3-540-73228-0_23,Two Session Typing Systems for Higher-Order Mobile Processes,,2018-03-20
10.1016/j.jlamp.2015.10.005,Verifiable abstractions for contract-oriented systems,,2016-03-20
10.4204/EPTCS.314.5,Mixed Sessions: the Other Side of the Tape,,2013-03-20
10.1145/3110281,Manifest sharing with session types,,2019-03-20
10.4204/EPTCS.203.3,Precise subtyping for synchronous multiparty sessions,,2018-03-20
10.4204/EPTCS.166.10,Loosening the notions of compliance and sub-behaviour in client/server systems,,2017-03-20
10.2168/LMCS-8(4:6)2012,Parameterised Multiparty Session Types,,2014-03-20
10.1145/2429069.2429101,Deadlock-freedom-by-design: multiparty asynchronous global programming,,2014-03-20
10.1016/j.ic.2015.02.002,Session typing and asynchronous subtyping for the higher-order π-calculus,,2018-03-20
10.1016/j.tcs.2006.06.028,Type checking a multithreaded functional language with session types,,2015-03-20
10.1007/978-3-319-89884-1_27,Session-Typed Concurrent Contracts,,2014-03-20
10.1007/978-3-030-45237-7_3,Deciding the Bisimilarity of Context-Free Session Types,,2015-03-20
10.4230/LIPIcs.CONCUR.2018.30,A Universal Session Type for Untyped Asynchronous Communication,,2017-03-20
10.1007/978-3-540-68265-3_14,How to Infer Finite Session Types in a Calculus of Services and Sessions,,2013-03-20
10.1007/978-3-642-37036-6_19,Behavioral Polymorphism and Parametricity in Session-Based Communication,,2014-03-20
10.1017/S0960129511000405,On projecting processes into session types,,2011-03-20
10.1007/978-3-662-45231-8_7,Towards the Typing of Resource Deployment,,2013-03-20
10.1145/1599410.1599411,Session types for linear multithreaded functional programming,,2017-03-20
10.1007/978-3-642-38493-6_17,Typing Progress in Communication-Centred Systems,,2020-03-20
10.1145/2370776.2370796,Exception handling for copyless messaging,,2012-03-20
10.1145/2370776.2370794,Session types revisited,,2020-03-20
10.1007/978-3-642-00590-9_22,Abstract Processes in Orchestration Languages,,2014-03-20
10.4204/EPTCS.91.2,Parameterized Concurrent Multi-Party Session Types,,2012-03-20
10.1145/1140335.1140344,BASS: boxed ambients with safe sessions,,2014-03-20
10.4204/EPTCS.291.2,FreeST: Context-free Session Types in a Functional Language,,2019-03-20
10.1007/978-3-642-11623-0_5,Typing Asymmetric Client-Server Interaction,,2011-03-20
10.1017/S0960129514000188,Global progress for dynamically interleaved multiparty sessions,,2017-03-20
10.1145/3428291,Revisiting iso-recursive subtyping,,2019-03-20
10.1007/978-3-662-49674-9_52,Characteristic Formulae for Session Types,,2018-03-20
10.1145/3437992.3439914,Machine-checked semantic session typing,,2013-03-20
10.1007/978-3-540-85780-8_29,A Taxonomy of Deterministic Forgetting Automata,,2015-03-20
10.1142/S0129054107004991,Forgetting Automata and Unary Languages,,2018-03-20
10.1142/S0129054110007453,A Taxonomy of Deterministic Forgetting Automata,,2012-03-20
10.3233/FI-2016-1439,Strongly Limited Automata,,2012-03-20
10.1007/978-3-319-30000-9_3,Restricted Turing Machines and Language Recognition,,2019-03-20
10.1007/978-3-540-69507-3_44,Restarting Tree Automata,,2020-03-20
10.1007/978-3-642-22600-7_2,On Restarting Automata with Window Size One,,2018-03-20
10.1007/978-3-030-23247-4_4,Limited Automata: Properties  Complexity and Variants,,2015-03-20
10.1145/2818936.2818947,Guest Column: One-Tape Turing Machine Variants and Language Recognition,,2015-03-20
10.14279/DEPOSITONCE-2032,Behavioral congruences and verification of graph transformation systems with applications to model refactoring,,2015-03-20
10.5860/choice.47-3212,The Space and Motion of Communicating Agents,,2011-03-20
10.1016/B978-0-444-51624-4.50009-5,Concurrency Theory: A Historical Perspective on Coinduction and Process Calculi,,2015-03-20
10.1007/978-3-540-68679-8_33,Petri Nets  Discrete Physics  and Distributed Quantum Computation,,2013-03-20
10.1109/SMC.2019.8914360,Some issues in modelling comprehensive situation awareness*,,2019-03-20
10.1007/978-3-540-73094-1_1,Petri Nets  Discrete Physics  and Distributed Quantum Computation,,2019-03-20
10.1017/S096012951600027X,The algebra of recursive graph transformation language UnCAL: complete axiomatisation and iteration categorical semantics,,2019-03-20
10.1007/s10485-019-09565-x,Dynamical Systems and Sheaves,,2018-03-20
10.1007/978-3-642-34407-7_11,Hardware Design with Generalized Arrows,,2017-03-20
10.1016/j.scico.2012.05.006,Invariant assertions  invariant relations  and invariant functions,,2015-03-20
10.1016/j.jsc.2012.04.001,Invariant functions and invariant relations: An alternative to invariant assertions,,2017-03-20
10.1007/978-3-642-04639-1_17,Relational Methods in the Analysis of While Loops: Observations of Versatility,,2013-03-20
10.1145/1810295.1810369,Using invariant functions and invariant relations to compute loop functions,,2015-03-20
10.1109/SEW.2007.49,A Refinement Based Framework for Computing Loop Behavior,,2014-03-20
10.1016/j.jlamp.2018.02.001,Convergence: Integrating termination and abort-freedom,,2014-03-20
10.29007/zhz4,A Comparative Study of Invariant Assertions  Invariant Relations  and Invariant Functions,,2011-03-20
10.1109/sew.2007.87,A Refinement Based Framework for Computing Loop Behavior,,2017-03-20
10.1109/TSE.2016.2521379,Software Reliability Analysis Using Weakest Preconditions in Linear Assignment Programs,,2011-03-20
10.1016/j.jlap.2014.02.013,"A relation-algebraic approach to the ""Hoare logic"" of functional dependencies",,2018-03-20
10.1016/j.jlap.2012.04.001,A versatile concept for the analysis of loops,,2015-03-20
10.1109/CGO.2013.6494975,External reviewers,,2012-03-20
10.1109/HICSS.2007.32,A Semantic Recognizer Infrastructure for Computing Loop Behavior,,2018-03-20
10.1023/A:1018969728171,Proof planning for strategy development,,2020-03-20
10.1016/j.jsc.2008.11.008,Mechanical inference of invariants for FOR-loops,,2015-03-20
10.1007/s00224-008-9106-1,Unavoidable Sets of Partial Words,,2016-03-20
10.1016/j.dam.2003.11.003,Patterns in words and languages,,2011-03-20
10.1007/978-3-540-39886-8_19,Combinatorics on Words,,2017-03-20
10.37236/6210,Grasshopper Avoidance of Patterns,,2016-03-20
10.4230/LIPIcs.MFCS.2016.81,Every Binary Pattern of Length Greater Than 14 Is Abelian-2-Avoidable,,2017-03-20
10.37236/621,Further Applications of a Power Series Method for Pattern Avoidance,,2014-03-20
10.3233/FI-2017-1563,Patterns and Distances in Words Related to DNA Rearrangement,,2014-03-20
10.1051/ita/2014012,Existence of an infinite ternary 64-abelian square-free word,,2018-03-20
10.37236/5483,Avoidability Index for Binary Patterns with Reversal,,2019-03-20
10.37236/7074,Some Variations on a Theme of Irina Mel'nichuk Concerning the Avoidability of Patterns in Strings of Symbols,,2017-03-20
10.1051/ita/2014015,Binary patterns in binary cube-free words: Avoidability and growth,,2019-03-20
10.1109/CCECE.2013.6567853,Exploration of conflict situations in deterministic cancellation parser,,2015-03-20
10.1007/978-3-540-39429-7_16,Repairs and Consistent Answers for XML Data with Functional Dependencies,,2017-03-20
10.1016/S0306-4379(02)00021-2,Why is the snowflake schema a good data warehouse design?,,2019-03-20
10.1145/1065167.1065187,Computing cores for data exchange: new algorithms and practical solutions,,2011-03-20
10.1145/1458082.1458087,Dynamic faceted search for discovery-driven analysis,,2013-03-20
10.1007/s13173-011-0054-2,Contributions of Jayme Luiz Szwarcfiter to graph theory and computer science,,2020-03-20
10.2478/mape-2019-0008,Comparative analysis of soil magnetic susceptibility and concentration of rare earth elements in soil of problematic areas,,
10.4213/DM203,Коллективы автоматов в лабиринтах@@@Collectives of automata in labyrinths,,2013-03-20
10.1007/s00446-020-00369-0,A tight lower bound for semi-synchronous collaborative grid exploration,,2014-03-20
10.1145/571825.571853,Searching for a black hole in arbitrary networks: optimal mobile agent protocols,,2020-03-20
10.1007/11429647_13,Space Lower Bounds for Graph Exploration via Reduced Automata,,2012-03-20
10.1007/11685654_1,The Reduced Automata Technique for Graph Exploration Space Lower Bounds,,2015-03-20
10.1007/978-3-540-24749-4_22,Digraphs Exploration with Little Memory,,2015-03-20
10.1016/j.tcs.2005.07.014,Graph exploration by a finite automaton,,2013-03-20
10.1007/978-3-642-03816-7_43,Graph Decomposition for Improving Memoryless Periodic Exploration,,2020-03-20
10.1137/1.9781611974331.CH3,Undirected Graph Exploration with ⊝(log log n) Pebbles,,2011-03-20
10.1007/978-3-030-11072-7_2,Moving and Computing Models: Agents,,2018-03-20
10.1016/j.dam.2007.11.001,Impact of memory size on graph exploration capability,,2018-03-20
10.4230/LIPIcs.ICALP.2019.137,Energy Consumption of Group Search on a Line,,2016-03-20
10.4230/LIPIcs.ESA.2019.35,Building a Nest by an Automaton,,2015-03-20
10.1142/S0129054112500104,Label-Guided Graph Exploration with Adjustable Ratio of Labels,,2013-03-20
10.22405/2226-8383-2019-20-3-165-192,Поведение конечных автоматов в лабиринтах,,2011-03-20
10.1145/3356883,Tight Bounds for Undirected Graph Exploration with Pebbles and Multiple Agents,,2019-03-20
10.1137/1.9781611974782.14,Exploring an Infinite Space with Finite Memory Scouts,,2014-03-20
10.1007/978-3-642-33651-5_5,Memory Lower Bounds for Randomized Collaborative Search and Implications for Biology,,2019-03-20
10.1007/978-3-540-92248-3_2,Memory Efficient Anonymous Graph Exploration,,2015-03-20
10.1016/j.tcs.2012.01.035,More efficient periodic traversal in anonymous undirected graphs,,2015-03-20
10.1007/978-3-030-54921-3_9,Exploration of Time-Varying Connected Graphs with Silent Agents,,2018-03-20
10.1007/11523468_28,Label-Guided Graph Exploration by a Finite Automaton,,2017-03-20
10.1007/978-3-642-11476-2_14,More Efficient Periodic Traversal in Anonymous Undirected Graphs,,2018-03-20
10.1007/978-3-540-92221-6_27,On the Solvability of Anonymous Partial Grids Exploration by Mobile Robots,,2015-03-20
10.1007/978-3-642-35476-2_17,Black Hole Search and Exploration in Unoriented Tori with Synchronous Scattered Finite Automata,,2017-03-20
10.1007/978-3-030-23679-3_2,Graph-Walking Automata: From Whence They Come  and Whither They are Bound,,2016-03-20
10.2168/LMCS-3(2:3)2007,Automata with Nested Pebbles Capture First-Order Logic with Transitive Closure,,2020-03-20
10.1007/978-1-349-95810-8_426,Ecole Normale Supérieure De Lyon,,2018-03-20
10.1007/s00446-006-0154-y,Searching for a black hole in arbitrary networks: optimal mobile agents protocols,,2011-03-20
10.1007/s00446-016-0285-8,The ANTS problem,,2017-03-20
10.1016/j.tcs.2008.02.004,Distributed chasing of network intruders,,2017-03-20
10.1145/1383369.1383373,Label-guided graph exploration by a finite automaton,,2012-03-20
10.1145/2603088.2603118,Logical characterization of weighted pebble walking automata,,2018-03-20
10.1515/156939203322694736,Collectives of automata in labyrinths,,2019-03-20
10.1007/11780823_6,Setting Port Numbers for Fast Graph Exploration,,2020-03-20
10.1016/j.jcss.2007.09.004,Fast periodic graph exploration with constant memory,,2019-03-20
10.1007/978-3-030-11072-7_16,Graph Explorations with Mobile Agents,,2013-03-20
10.1007/11780823_7,Distributed Chasing of Network Intruders,,2016-03-20
10.1016/j.ipl.2008.08.011,Anonymous graph exploration without collision by mobile robots,,2012-03-20
10.1007/978-3-540-69355-0_14,On the Power of Local Orientations,,2015-03-20
10.1016/j.ipl.2017.06.010,Time and space optimality of rotor-router graph exploration,,2019-03-20
10.1016/j.tcs.2008.03.035,Setting port numbers for fast graph exploration,,2017-03-20
10.1007/978-3-540-72951-8_4,Fast Periodic Graph Exploration with Constant Memory,,2012-03-20
10.1007/s00453-020-00752-0,Building a Nest by an Automaton,,2019-03-20
10.1007/s00453-011-9518-1,Graph Decomposition for Memoryless Periodic Exploration,,2011-03-20
10.1137/1.9781611975994.71,Navigating an Infinite Space with Unreliable Movements,,2011-03-20
10.14279/DEPOSITONCE-8714,Efficient graph exploration,,2013-03-20
10.1007/11429647_12,Finding Short Right-Hand-on-the-Wall Walks in Graphs,,2015-03-20
10.4230/LIPIcs.DISC.2020.13,Tight Bounds for Deterministic High-Dimensional Grid Exploration,,2015-03-20
10.1007/978-3-319-78822-7_5,Open Queueing Network Algorithms \(f{\bigl (G(V E)\bigr )}\),,2011-03-20
10.1504/IJOR.2007.012461,A tandem queueing system with task-splitting  feedback  and blocking,,2013-03-20
10.1007/S11750-012-0256-6,Queues with interruptions: a survey,,2017-03-20
10.1016/J.TRB.2016.07.013,On the analytical approximation of joint aggregate queue-length distributions for traffic networks: A stationary finite capacity Markovian network approach,,2020-03-20
10.1016/S0166-5316(02)00093-7,On the large deviations approximation for the stationary distribution of skip-free regulated queueing networks,,2013-03-20
10.1007/978-3-319-78822-7_2,Problem Overview $$\varOmega {\bigl (G(V E)\bigr )}$$,,2011-03-20
10.1007/978-3-642-02742-0_11,Queueing Networks with Blocking: Analysis  Solution Algorithms and Properties,,2015-03-20
10.1023/B:ANOR.0000011185.77227.ae,Combining Routing and Buffer Allocation Problems in Series-Parallel Queueing Networks,,2017-03-20
10.1515/bj-2017-0004,Influence of Hemodialysis Treatment on Biochemical Markers of Bone Disease,,2017-03-20
10.1080/24725854.2017.1300359,Simultaneous buffer and service rate allocation in open finite queueing networks,,2017-03-20
10.1016/S0305-0548(00)00060-5,Buffer allocation in flow-shop-type production systems with general arrival and service patterns,,2020-03-20
10.1016/J.SBSPRO.2012.09.807,An Analytical Approximation of the Joint Distribution of Aggregate Queue-Lengths in an Urban Network,,2012-03-20
10.1016/S0166-5316(02)00089-5,Queueing networks with blocking,,2018-03-20
10.1016/j.ejor.2008.04.035,An analytic finite capacity queueing network model capturing the propagation of congestion and blocking,,2020-03-20
10.1155/2012/906486,Strong Truncation Approximation in Tandem Queues with Blocking,,2011-03-20
10.18500/1816-9791-2013-13-2-2-14-20,Identification of a State Machine Structure with Finites Fragment of Behavior,,2018-03-20
10.1007/978-0-387-89494-2_2,Evaluative Models of Discrete Part Production Lines,,2018-03-20
10.1007/s00287-010-0466-y,Dijkstras fruchtbarer  folgenreicher Irrtum,,2014-03-20
10.1007/s00287-010-0446-2,Dijkstras fruchtbarer  folgenreicher Irrtum,,2014-03-20
10.1007/s00287-012-0627-2,Turing und die Verifikation,,2012-03-20
10.1016/j.jlap.2012.01.004,Deriving a Floyd-Hoare logic for non-local jumps from a formulæ-as-types notion of control,,2019-03-20
10.1007/978-3-030-45260-5_1,On Fixpoint/Iteration/Variant Induction Principles for Proving Total Correctness of Programs with Denotational Semantics,,2015-03-20
10.1145/2429069.2429081,Automating relatively complete verification of higher-order functional programs,,2017-03-20
10.1007/978-1-84882-745-5,Verification of Sequential and Concurrent Programs,,2014-03-20
10.1016/j.tcs.2013.11.003,An observationally complete program logic for imperative higher-order functions,,2016-03-20
10.1145/3158100,Relatively complete refinement type system for verification of higher-order non-deterministic programs,,2016-03-20
10.1109/LICS.2005.5,An observationally complete program logic for imperative higher-order functions,,2019-03-20
10.1007/s00165-019-00501-3,Fifty years of Hoare’s logic,,2011-03-20
10.1023/A:1021752130394,Polynomial Formal Verification of Multipliers,,2016-03-20
10.1109/ATS.2008.40,Level-Testability of Multi-operand Adders,,2020-03-20
10.1587/TRANSINF.E93.D.2783,A C-Testable 4-2 Adder Tree for an Easily Testable High-Speed Multiplier,,2018-03-20
10.1109/VTEST.1997.599468,Polynomial formal verification of of multipliers,,2012-03-20
10.21236/ada596770,Self-Organized Terrorist-Counterterrorist Adaptive Coevolutions  Part 1: A Conceptual Design,,2018-03-20
10.1007/978-3-642-18469-7_10,Drawing Ordered (k - 1)-Ary Trees on k-Grids,,2013-03-20
10.1109/ICDIM.2016.7829773,Attribute graph grammar method for research information collection and sharing,,2017-03-20
10.1007/BF02086608,The realization problem for Euclidean minimum spanning trees is NP-hard,,2019-03-20
10.1023/A:1009771921595,Constrained Graph Layout,,2015-03-20
10.1007/11618058_16,Delta-Confluent Drawings,,2013-03-20
10.1109/IV.2002.1028778,A visualization system of relationships among papers based on the graph drawing problem,,2011-03-20
10.1002/net.10092,A linear algorithm for compact box-drawings of trees,,2018-03-20
10.1007/978-3-319-73915-1_25,On Upward Drawings of Trees on a Given Grid,,2018-03-20
10.7155/jgaa.00287,Drawing Unordered Trees on k-Grids,,2015-03-20
10.1007/978-1-4939-2864-4_654,Symmetric Graph Drawing,,2016-03-20
10.1142/9789812773289_0016,NP-completeness of minimal width unordered tree layout,,2016-03-20
10.1007/978-3-642-27848-8_654-1,Symmetric Graph Drawing,,2017-03-20
10.5220/0007307701910198,Combining Interactive Hierarchy Visualizations in a Web-based Application,,2016-03-20
10.1002/spe.2213,Drawing non‐layered tidy trees in linear time,,2016-03-20
10.1007/3-540-36151-0_32,Improving Walker's Algorithm to Run in Linear Time,,2018-03-20
10.7155/jgaa.00093,NP-Completeness of Minimal Width Unordered Tree Layout,,2017-03-20
10.7155/jgaa.00090,Computing and Drawing Isomorphic Subgraphs,,2011-03-20
10.1007/3-540-36151-0_8,Computing and Drawing Isomorphic Subgraphs,,2018-03-20
10.1109/ROPEC50909.2020.9258774,Understandability in class diagrams,,2019-03-20
10.1007/s00236-004-0138-y,On the complexity of drawing trees nicely: corrigendum,,2012-03-20
10.1007/978-3-642-28076-4_20,Drawing Unordered Trees on k-Grids,,2014-03-20
10.1007/978-1-84882-240-5_5,Intermediate Program Representation,,2011-03-20
10.1017/S0956796802004379,Syntactic accidents in program analysis: on the impact of the CPS transformation,,2020-03-20
10.1145/2950290.2950292,Static DOM event dependency analysis for testing web applications,,2012-03-20
10.1145/1296907.1296926,Overlooking roots: a framework for making nondeferred reference-counting garbage collection fast,,2015-03-20
10.4230/OASIcs.FMBC.2020.4,Tezla  an Intermediate Representation for Static Analysis of Michelson Smart Contracts,,2011-03-20
10.1007/11860990_22,Fast Profile-Based Partial Redundancy Elimination,,2014-03-20
10.1145/185084.185105,A Checkable Interface Language for Pointer-Based Structures,,2018-03-20
10.1145/3136014.3136029,FlowSpec: declarative dataflow analysis specification,,2011-03-20
10.1016/j.scico.2006.01.009,Describing data flow analysis techniques with Kleene algebra,,2020-03-20
10.14778/2350229.2350245,Spinning Fast Iterative Data Flows,,2011-03-20
10.1007/978-3-540-73589-2_25,A Staged Static Program Analysis to Improve the Performance of Runtime Monitoring,,2011-03-20
10.1016/J.JLAP.2012.03.011,Static Analysis of IMC,,2018-03-20
10.1007/978-3-319-96142-2_8,Program Analysis Is Harder Than Verification: A Computability Perspective,,2020-03-20
10.1109/TSE.2005.27,Unpredication  unscheduling  unspeculation: reverse engineering Itanium executables,,2017-03-20
10.2168/LMCS-8(3:17)2012,Transfer Function Synthesis without Quantifier Elimination,,2016-03-20
10.22028/D291-26418,Cache persistence analysis for embedded real-time systems,,2012-03-20
10.1145/2660193.2660214,Determinacy in static analysis for jQuery,,2020-03-20
10.1007/s11334-013-0198-7,Precise shape analysis using field sensitivity,,2011-03-20
10.1007/978-3-540-78800-3_20,Interprocedural Analysis of Concurrent Programs Under a Context Bound,,2011-03-20
10.1145/1926385.1926389,Points-to analysis with efficient strong updates,,2014-03-20
10.7146/BRICS.V12I31.21898,Type Checking with XML Schema in XACT,,2018-03-20
10.1145/989393.989412,Interprocedural constant propagation,,2011-03-20
10.1109/CIC.2006.22,An Empirical Study of Iterative Data-Flow Analysis,,2011-03-20
10.1145/2882903.2915244,How to Architect a Query Compiler,,2016-03-20
10.1007/978-3-540-30081-6_11,A Runtime System for XML Transformations in Java,,2014-03-20
10.1109/EuroSP48549.2020.00041,Chorus: a Programming Framework for Building Scalable Differential Privacy Mechanisms,,2012-03-20
10.1007/BF00263194,A denotational framework for data flow analysis,,2011-03-20
10.1023/A:1007588710878,Data Dependence Analysis of Assembly Code,,2020-03-20
10.1016/j.scico.2009.11.007,XML graphs in program analysis,,2013-03-20
10.1007/978-3-030-17465-1_22,PhASAR: An Inter-procedural Static Analysis Framework for C/C++,,2012-03-20
10.1145/2220365.2220368,On a Technique for Transparently Empowering Classical Compiler Optimizations on Multithreaded Code,,2012-03-20
10.1016/j.ipl.2005.11.017,Using postdomination to reduce space requirements of data flow analysis,,2015-03-20
10.7939/r3-dk74-he24,Guiding Inlining Decisions Using Post-Inlining Transformations,,2017-03-20
10.1109/ICSM.2004.1357836,Advanced slicing of sequential and concurrent programs,,2017-03-20
10.1109/SCC.2007.22,Advanced Verification of Distributed WS-BPEL Business Processes Incorporating CSSA-based Data Flow Analysis,,2014-03-20
10.1007/978-1-4419-5906-5_1356,Static Program Analysis,,2013-03-20
10.1007/s11432-016-5572-2,High-confidence software evolution,,2013-03-20
10.1145/2678015.2682535,Object-sensitive Type Analysis of PHP,,2020-03-20
10.1145/1932681.1863554,Polyvariant flow analysis with higher-ranked polymorphic types and higher-order effect operators,,2015-03-20
10.1145/2338965.2336758,Remedying the eval that men do,,2020-03-20
10.4230/LIPIcs.ECOOP.2019.8,Static Analysis for Asynchronous JavaScript Programs,,2013-03-20
10.1145/945885.945890,Extending Java for high-level Web service construction,,2012-03-20
10.5075/epfl-thesis-8762,Compilation and Code Optimization for Data Analytics,,2012-03-20
10.1145/1286821.1286829,An improved bound for call strings based interprocedural analysis of bit vector frameworks,,2016-03-20
10.1109/TCAD.2010.2095630,Static Analysis of Register File Vulnerability,,2019-03-20
10.1145/2980983.2908096,From Datalog to flix: a declarative language for fixed points on lattices,,2019-03-20
10.1007/11513988_44,Extended Weighted Pushdown Systems,,2012-03-20
10.1016/j.scico.2012.10.011,Coccinelle: Tool support for automated CERT C Secure Coding Standard certification,,2015-03-20
10.1145/3290356,Concerto: a framework for combined concrete and abstract interpretation,,2012-03-20
10.1109/CGO.2015.7054185,A parallel abstract interpreter for JavaScript,,2016-03-20
10.1145/2950290.2950296,On-demand strong update analysis via value-flow refinement,,2018-03-20
10.1145/2814270.2814272,Static analysis of event-driven Node.js JavaScript applications,,2015-03-20
10.1109/QRS.2016.23,Automatic Invariant Synthesis for Arrays in Simple Programs,,2017-03-20
10.1016/j.jsc.2011.12.051,Applying abstract acceleration to (co-)reachability analysis of reactive programs,,2019-03-20
10.1007/978-3-540-70545-1_6,Abstract Interpretation with Applications to Timing Validation,,2018-03-20
10.1145/1480828.1480854,Programming language concepts for software developers,,2011-03-20
10.1145/2983990.2984011,Finding resume and restart errors in Android applications,,2017-03-20
10.1023/A:1012336809259,Satisfiability of Dataflow Models of Distributed Programs,,2014-03-20
10.1145/2370776.2370784,Layered fixed point logic,,2016-03-20
10.1145/2591635.2667157,Analysis of interprocedural side effects in a parallel programming environment,,2011-03-20
10.1145/1810479.1810481,Buffer-space efficient and deadlock-free scheduling of stream applications on multi-core architectures,,2012-03-20
10.1145/3385412.3385979,Exact and approximate methods for proving unrealizability of syntax-guided synthesis problems,,2012-03-20
10.1007/978-3-319-10936-7_13,Sparse Dataflow Analysis with Pointers and Reachability,,2018-03-20
10.1109/TSE.2004.1271173,Static analysis of XML transformations in Java,,2020-03-20
10.1007/s10207-009-0086-1,Flow-sensitive  context-sensitive  and object-sensitive information flow control based on program dependence graphs,,2020-03-20
10.1007/978-3-319-47166-2_16,Sparse Analysis of Variable Path Predicates Based upon SSA-Form,,2013-03-20
10.5445/IR/1000068211,Information Flow Control with System Dependence Graphs - Improving Modularity  Scalability and Precision for Object Oriented Languages,,2014-03-20
10.1504/IJCSE.2014.060678,Software porting support with component-based and language neutral source code analysis,,2020-03-20
10.1109/ICSM.2011.6080812,Precise detection of un-initialized variables in large  real-life COBOL programs in presence of unrealizable paths,,2011-03-20
10.1109/RTCSA.2016.45,Static Transformation of Power Consumption for Software Attestation,,2019-03-20
10.1016/j.jlamp.2018.06.003,Demand-driven interprocedural analysis for map-based abstract domains,,2013-03-20
10.1145/2025113.2025125,Modeling the HTML DOM and browser API in static analysis of JavaScript web applications,,2016-03-20
10.1007/978-3-642-03331-5_1,Grundlagen und intraprozedurale Optimierung,,2016-03-20
10.1145/1244381.1244383,XML graphs in program analysis,,2013-03-20
10.1201/9781420040579.ch1,Data Flow Analysis,,2020-03-20
10.1145/1863543.1863554,Polyvariant flow analysis with higher-ranked polymorphic types and higher-order effect operators,,2017-03-20
10.1007/978-3-642-03237-0_17,Type Analysis for JavaScript,,2017-03-20
10.1145/3360566,Static analysis with demand-driven value refinement,,2019-03-20
10.1109/ETFA.2008.4638537,Function blocks for decentralised analysis of product flow paths,,2011-03-20
10.5445/KSP/1000016551,Tool-supported identification of functional concerns in object-oriented code,,2017-03-20
10.1109/APSEC.2017.8,A Framework for Array Invariants Synthesis in Induction-Loop Programs,,2017-03-20
10.1007/s10990-005-7005-6,Transformational Derivation of an Improved Alias Analysis Algorithm,,2011-03-20
10.14722/NDSS.2018.23326,K-Miner: Uncovering Memory Corruption in Linux,,2018-03-20
10.1109/TSE.2018.2869336,Value-Flow-Based Demand-Driven Pointer Analysis for C and C++,,2015-03-20
10.1007/978-3-642-19718-5_11,Dataflow Analysis for Datarace-Free Programs,,2018-03-20
10.4230/LIPIcs.ECOOP.2020.16,Value Partitioning: A Lightweight Approach to Relational Static Analysis for JavaScript,,2014-03-20
10.1145/3236454.3236500,The secret sauce in efficient and precise static analysis: the beauty of distributive  summary-based static analyses (and how to master them),,2013-03-20
10.1145/3183399.3183401,Self-Adaptive Static Analysis,,2013-03-20
10.1007/978-3-662-58771-3_15,A fix-point characterization of Herbrand equivalence of expressions in data flow frameworks,,2016-03-20
10.1504/IJBPIM.2009.026985,Advanced Verification of Distributed WS-BPEL Business Processes Incorporating CSSA-based Data Flow Analysis,,2012-03-20
10.1007/978-3-642-19718-5_6,Transfer Function Synthesis without Quantifier Elimination,,2012-03-20
10.1145/1926385.1926457,A technique for the effective and automatic reuse of classical compiler optimizations on multithreaded code,,2020-03-20
10.1145/1542431.1542443,Efficient alias set analysis using SSA form,,2012-03-20
10.1007/BF02242267,A region analysis algorithm for the live variables problem,,2017-03-20
10.1145/2908080.2908096,From Datalog to flix: a declarative language for fixed points on lattices,,2017-03-20
10.1007/978-1-4471-4156-3_4,A First-Order Functional Language,,
10.1007/978-3-642-21461-5_9,Galois Connections for Flow Algebras,,2015-03-20
10.22028/D291-26417,Timing model derivation: static analysis of hardware description languages,,2020-03-20
10.18419/OPUS-2661,Kombinierte statische Ermittlung von Zeigerzielen  Kontroll- und Datenfluss,,2017-03-20
10.22028/D291-25730,A demand-driven solver for constraint-based control flow analysis,,2014-03-20
10.1109/ICDCS47774.2020.00013,PrivacyScope: Automatic Analysis of Private Data Leakage in TEE-Protected Applications,,2019-03-20
10.1007/BF03180570,A security flow control algorithm and its denotational semantics correctness proof,,2015-03-20
10.1023/A:1008186323068,Efficient and Precise Cache Behavior Prediction for Real-Time Systems,,2017-03-20
10.1007/978-3-642-38853-8_20,Formal Verification of Concurrent Embedded Software,,2017-03-20
10.1145/2535838.2535843,Abstract acceleration of general linear loops,,2019-03-20
10.1145/3428236,Eliminating abstraction overhead of Java stream pipelines using ahead-of-time program optimization,,2018-03-20
10.1145/1449764.1449772,Mixing source and bytecode: a case for compilation by normalization,,2019-03-20
10.1145/1857914.1857917,Newtonian program analysis,,2020-03-20
10.1007/978-3-642-15769-1_20,Interprocedural Analysis with Lazy Propagation,,2014-03-20
10.1007/978-3-642-11970-5_8,Practical Extensions to the IFDS Algorithm,,2020-03-20
10.1145/2590811,Global Sparse Analysis Framework,,2011-03-20
10.1007/978-3-540-40018-9_10,Using Locality of Flow in Dataflow Analyses,,2013-03-20
10.1145/2245276.2231982,Precise shape analysis using field sensitivity,,2014-03-20
10.1145/3024084,Newtonian Program Analysis via Tensor Product,,2012-03-20
10.1145/1929954.1929955,Modal abstractions of concurrent behavior,,2018-03-20
10.1007/978-3-642-54013-4_26,Widening for Control-Flow,,2019-03-20
10.1145/1375581.1375620,Dataflow analysis for concurrent programs using datarace detection,,2016-03-20
10.1007/b94290,Programming Languages and Systems,,2017-03-20
10.1080/03081079.2012.757437,Automated formal analysis and verification: an overview,,2012-03-20
10.4230/LIPIcs.FSCD.2020.15,Data-Flow Analyses as Effects and Graded Monads,,2011-03-20
10.1016/J.SCICO.2006.03.007,Abstract interpretation of combinational asynchronous circuits,,2013-03-20
10.1109/HSC.2000.843717,Task response time optimization using cost-based operation motion,,2019-03-20
10.1145/3338906.3338933,Nodest: feedback-driven static analysis of Node.js applications,,2018-03-20
10.1109/ASWEC.2007.7,A Kleene Algebra Framework for Data Flow Analysis,,2020-03-20
10.1023/A:1014535317056,Data-Flow Frameworks for Worst-Case Execution Time Analysis,,2013-03-20
10.1145/2535838.2535842,Freeze after writing: quasi-deterministic parallel programming with LVars,,2016-03-20
10.1145/2508859.2516721,Relational abstract interpretation for the verification of 2-hypersafety properties,,2017-03-20
10.1007/978-3-540-30579-8_6,Checking Herbrand Equalities and Beyond,,2013-03-20
10.2200/S00260ED1V01Y201003SPT002,Analysis Techniques for Information Security,,2019-03-20
10.4230/LIPIcs.ECOOP.2020.24,Flow-Sensitive Type-Based Heap Cloning,,2012-03-20
10.1145/3014427,Programs from Proofs,,2017-03-20
10.17877/DE290R-16409,Tight integration of cache  path and task-interference modeling for the analysis of hard real time systems,,2017-03-20
10.1007/978-3-540-77050-3_4,Program Analysis Using Weighted Pushdown Systems,,2016-03-20
10.1109/OPCS.2019.8880185,Academician Andrei Ershov and Graphs in Programming,,2015-03-20
10.1016/j.cola.2019.100924,FlowSpec: A declarative specification language for intra-procedural flow-Sensitive data-flow analysis,,2018-03-20
10.1016/j.scico.2013.09.016,Abstract acceleration in linear relation analysis,,2015-03-20
10.1109/ICSE.2015.64,Safe Memory-Leak Fixing for C Programs,,2017-03-20
10.29007/6PSR,Program Analysis is Harder than Verification: A Computability Perspective,,2017-03-20
10.1007/978-3-642-14808-8_1,Invariants and Well-Foundedness in Program Algebra,,2020-03-20
10.1007/11901433_21,Reasoning Algebraically About Probabilistic Loops,,2011-03-20
10.14279/TUJ.ECEASST.53.792.791,Fractional permissions and non-deterministic evaluators in interval temporal logic,,2012-03-20
10.1007/10722010_9,On Guarded Commands with Fair Choice,,2014-03-20
10.14279/tuj.eceasst.53.792,Fractional Permissions and Non-Deterministic Evaluators in Interval Temporal Logic,,2020-03-20
10.1007/978-3-642-16265-7_7,Creating Sequential Programs from Event-B Models,,2019-03-20
10.1007/978-3-319-10882-7,Theoretical Aspects of Computing – ICTAC 2014,,2018-03-20
10.1007/s00165-012-0260-5,Derivation of concurrent programs by stepwise scheduling of Event-B models,,2015-03-20
10.1007/978-3-030-31038-7_4,Connecting Fixpoints of Computations with Strict Progress,,2019-03-20
10.1007/978-3-319-10882-7_10,Reasoning Algebraically About Refinement on TSO Architectures,,2015-03-20
10.1049/ip-sen:20010834,Semantic characterisation of dead control-flow paths,,2017-03-20
10.1016/j.entcs.2008.06.004,An Algebraic Approach to Refinement with Fair Choice,,2012-03-20
10.14279/tuj.eceasst.66.889,Simplifying proofs of linearisability using layers of abstraction,,2011-03-20
10.1007/978-3-642-33314-9_2,Unifying Lazy and Strict Computations,,2012-03-20
10.1007/BFb0055150,A Tool for Data Refinement,,2018-03-20
10.1007/10722010_4,Separation and Reduction,,2016-03-20
10.1016/j.scico.2013.08.009,Deriving real-time action systems with multiple time bands using algebraic reasoning,,2019-03-20
10.1016/j.jlamp.2015.11.009,An algebraic approach to computations with progress,,2018-03-20
10.1007/978-3-642-33296-8_14,Verification Rules for Exception Handling in Eiffel,,2014-03-20
10.1007/s00165-016-0384-0,Generalised rely-guarantee concurrency: an algebraic foundation,,2015-03-20
10.1007/11783596_23,Refinement Algebra with Operators for Enabledness and Termination,,2019-03-20
10.1016/j.scico.2007.11.004,Enabledness and termination in refinement algebra,,2013-03-20
10.1007/3-540-48118-4_27,Reasoning About Interactive Systems,,2017-03-20
10.1016/j.tcs.2005.08.003,A theory for execution-time derivation in real-time programs,,2013-03-20
10.1007/978-3-540-79980-1_25,Domain Axioms for a Family of Near-Semirings,,2014-03-20
10.1016/j.entcs.2008.02.020,Refinement Algebra for Probabilistic Programs,,2015-03-20
10.3217/jucs-010-10-1429,Synchronization Can Improve Reactive Systems Control and Modularity,,2015-03-20
10.4204/EPTCS.55.11,Concurrent Scheduling of Event-B Models,,2014-03-20
10.1007/s00165-009-0111-1,Refinement algebra for probabilistic programs,,2014-03-20
10.1109/APSEC.2003.1254398,Reasoning about pointers in refinement calculus,,2013-03-20
10.1007/978-3-540-39893-6_1,Programs as Paths: An Approach to Timing Constraint Analysis,,2017-03-20
10.1007/11783596_19,Continuous Action System Refinement,,2011-03-20
10.1007/3-540-45442-X_14,From Kleene Algebra to Refinement Algebra,,2014-03-20
10.1016/j.jlamp.2014.08.001,Infinite executions of lazy and strict computations,,2016-03-20
10.1109/ASWEC.2009.12,Enforcing Safety and Progress Properties: An Approach to Concurrent Program Derivation,,2014-03-20
10.1007/10722010,Mathematics of Program Construction,,2017-03-20
10.4204/EPTCS.115.2,Data refinement for true concurrency,,2013-03-20
10.1016/j.entcs.2008.02.021,Can Refinement be Automated?,,2016-03-20
10.1007/978-3-030-43520-2,Relational and Algebraic Methods in Computer Science: 18th International Conference  RAMiCS 2020  Palaiseau  France  October 26–29  2020  Proceedings,,2011-03-20
10.1007/978-3-030-43520-2_9,Verifying the Correctness of Disjoint-Set Forests with Kleene Relation Algebras,,2019-03-20
10.1007/s00236-012-0162-2,Algebras for iteration and infinite computations,,2014-03-20
10.1007/s10472-009-9151-8,Automated verification of refinement laws,,2012-03-20
10.1142/S0129054116500349,State Complexity of Insertion,,2019-03-20
10.1007/978-3-319-94631-3_19,Further Closure Properties of Input-Driven Pushdown Automata,,2011-03-20
10.1007/978-3-319-98654-8_18,Site-Directed Deletion,,2017-03-20
10.1016/j.tcs.2019.04.006,Further closure properties of input-driven pushdown automata,,2011-03-20
10.1007/978-3-319-98654-8_21,A General Approach to State Complexity of Operations: Formalization and Limitations,,2020-03-20
10.1111/POMS.12588,Analyzing the Effect of Express Orders on Supply Chain Costs and Delivery Times,,2014-03-20
10.1007/s11134-016-9474-1,Invariance of workload in queueing systems,,2018-03-20
10.1002/9780470400531.EORMS0879,The G/G/s Queue,,2014-03-20
10.1109/ICEBE.2010.38,Prioritizing Service Requests on Cloud with Multi-tenancy,,2017-03-20
10.1007/BF02412247,Delay analysis of discrete-time priority queue with structured inputs,,2017-03-20
10.1007/s11134-017-9515-4,A general workload conservation law with applications to queueing systems,,2012-03-20
10.1007/978-3-642-10631-6_84,Deletion without Rebalancing in Multiway Search Trees,,2012-03-20
10.1145/2540068,Deletion without rebalancing in multiway search trees,,2019-03-20
10.1007/978-3-642-35873-9_15,Robustness Analysis of Networked Systems,,2015-03-20
10.4230/LIPIcs.FSTTCS.2014.431,Lipschitz Robustness of Finite-state Transducers,,2015-03-20
10.1109/TSE.2015.2510001,A Game-Theoretic Foundation for the Maximum Software Resilience against Dense Errors,,2013-03-20
10.1145/3055004.3055014,Enhancing Tolerance to Unexpected Jumps in GR(1) Games,,2020-03-20
10.1109/JPROC.2015.2453253,A Platform-Based Design Methodology With Contracts and Related Tools for the Design of Cyber-Physical Systems,,2018-03-20
10.1145/3359986.3361213,Logical specification and uniform synthesis of robust controllers,,2012-03-20
10.1007/978-3-319-49052-6\_9,Synthesis of Admissible Shields,,2017-03-20
10.4230/LIPIcs.MFCS.2017.39,Faster Algorithms for Mean-Payoff Parity Games,,2015-03-20
10.1007/978-3-030-17465-1_13,Environmentally-friendly GR(1) Synthesis,,2018-03-20
10.1007/978-3-030-01090-4_18,Accelerated Model Checking of Parametric Markov Chains,,2015-03-20
10.1007/978-3-642-27940-9_28,Synthesizing Efficient Controllers,,2019-03-20
10.1145/2897667.2897672,Simple Synthesis of Reactive Systems with Tolerance for Unexpected Environmental Behavior,,2011-03-20
10.4230/LIPIcs.CSL.2018.34,Synthesizing Optimally Resilient Controllers,,2013-03-20
10.1016/j.ic.2020.104596,Quantitative reductions and vertex-ranked infinite games,,2016-03-20
10.4204/EPTCS.232.7,Output Feedback Controller Design with Symbolic Observers for Cyber-physical Systems,,2013-03-20
10.1145/2968478.2968499,Synthesizing time-triggered schedules for switched networks with faulty links,,2018-03-20
10.1145/2461328.2461380,Iterative temporal motion planning for hybrid systems in partially unknown environments,,2016-03-20
10.1007/978-3-662-49122-5_12,Lipschitz Robustness of Timed I/O Systems,,2020-03-20
10.1007/s00224-015-9658-9,Multi-weighted Automata and MSO Logic,,2013-03-20
10.1109/LICS.2012.30,Mean-Payoff Pushdown Games,,2013-03-20
10.4230/LIPIcs.MFCS.2020.74,Optimally Resilient Strategies in Pushdown Safety Games,,2016-03-20
10.1007/978-3-319-24953-7_29,Cooperative Reactive Synthesis,,2014-03-20
10.1109/CDC.2013.6760490,A symbolic approach to the design of robust cyber-physical systems,,2012-03-20
10.1007/s00450-013-0251-7,Quantitative reactive modeling and verification,,2019-03-20
10.1145/2562059.2562128,Resilience to intermittent assumption violations in reactive synthesis,,2020-03-20
10.1007/978-3-319-49052-6_9,Synthesis of Admissible Shields,,2020-03-20
10.23919/FMCAD.2019.8894276,Synthesizing Reactive Systems Using Robustness and Recovery Specifications,,2014-03-20
10.1007/978-3-319-21690-4_9,Faster Algorithms for Quantitative Verification in Constant Treewidth Graphs,,2018-03-20
10.1631/fitee.2000203,Decentralized runtime enforcement for robotic swarms,,2019-03-20
10.1007/978-3-030-41600-3,Verified Software. Theories  Tools  and Experiments: 11th International Conference  VSTTE 2019  New York City  NY  USA  July 13–14  2019  Revised Selected Papers,,2019-03-20
10.1007/978-3-319-34171-2_1,On High-Quality Synthesis,,2015-03-20
10.1145/3064899.3064908,Synthesis of Railway-Signaling Plans using Reachability Games,,2014-03-20
10.1145/3302504.3311812,Evrostos: the rLTL verifier,,2012-03-20
10.1145/3121408,The Complexity of Mean-Payoff Pushdown Games,,2011-03-20
10.1007/978-3-662-49674-9_1,Robots at the Edge of the Cloud,,2011-03-20
10.1145/2699430,Measuring and Synthesizing Systems in Probabilistic Environments,,2012-03-20
10.1007/s00236-019-00345-7,Synthesizing optimally resilient controllers,,2018-03-20
10.1145/2676726.2676968,Quantitative Interprocedural Analysis,,2012-03-20
10.1007/978-3-319-52234-0_4,Synthesizing Non-Vacuous Systems,,2011-03-20
10.1109/TRO.2016.2544339,Iterative Temporal Planning in Uncertain Environments With Partial Satisfaction Guarantees,,2013-03-20
10.1007/978-3-319-02444-8_30,Robustness Analysis of String Transducers,,2013-03-20
10.1016/j.procs.2015.05.091,Software Theory Change for Resilient Near-Complete Specifications,,2016-03-20
10.1145/2539036.2539044,A theory of robust omega-regular software synthesis,,2017-03-20
10.1109/TCAD.2012.2194491,Verifying Coalitions in 3-Party Systems,,2016-03-20
10.4204/EPTCS.157.7,How to Handle Assumptions in Synthesis,,2014-03-20
10.1007/978-3-662-46681-0_51,Shield Synthesis: Runtime Enforcement for Reactive Systems,,2018-03-20
10.1145/2562059.2562133,Abstracting and refining robustness for cyber-physical systems,,2014-03-20
10.1007/s10703-017-0276-9,Shield synthesis,,2011-03-20
10.4204/EPTCS.119.13,Approximating the minimum cycle mean,,2012-03-20
10.1007/s00165-020-00519-y,A Weakness Measure for GR(1) Formulae,,2015-03-20
10.1007/978-3-030-51831-8_3,Synthesis for Multi-weighted Games with Branching-Time Winning Conditions,,2013-03-20
10.1094/PD-89-1331,Suppression of Grapevine Powdery Mildew by a Mycophagous Mite.,,2018-03-20
10.1145/800238.807161,Is Pascal a logical subset of Algol68 or not? Part One,,2014-03-20
10.1145/1101815.1101818,The impact of software engineering research on modern progamming languages,,2014-03-20
10.1017/9781108654555.002,The History of Computing Education Research,,2013-03-20
10.12988/ams.2014.410816,LTL-based Verification of Reconfigurable Workflows,,2015-03-20
10.1016/j.tcs.2016.07.020,A logical characterization of timed regular languages,,2020-03-20
10.4204/EPTCS.119.8,Deciding the Satisfiability of MITL Specifications,,2017-03-20
10.1002/smr.1880,Online verification in cyber‐physical systems: Practical bounds for meaningful temporal costs,,2011-03-20
10.1007/978-3-319-63387-9_21,MightyL: A Compositional Translation from MITL to Timed Automata,,2016-03-20
10.1016/j.tcs.2019.11.023,On the initialization of clocks in timed formalisms,,2016-03-20
10.1186/s40537-019-0199-y,Verifying big data topologies by-design: a semi-automated approach,,2011-03-20
10.4204/EPTCS.232.4,MITL Specification Debugging for Monitoring of Cyber-Physical Systems: Invited Presentation at the The First Workshop on Verification and Validation of Cyber-Physical Systems,,2018-03-20
10.1007/978-3-662-44522-8_7,A Logical Characterization of Timed (non-)Regular Languages,,2012-03-20
10.1145/3161534.3161535,A model-driven approach for the formal verification of storm-based streaming applications,,2020-03-20
10.1007/s00165-020-00509-0,PuRSUE -from specification of robotic environments to synthesis of controllers,,2017-03-20
10.1109/RTSS.2018.00038,Automatic Trace Generation for Signal Temporal Logic,,2020-03-20
10.1145/3019612.3019769,Formal verification of storm topologies through D-VerT,,2020-03-20
10.1007/978-3-319-47846-3_13,Towards the Formal Verification of Data-Intensive Applications Through Metric Temporal Logic,,2015-03-20
10.1145/3147451,Formal Requirement Debugging for Testing and Verification of Cyber-Physical Systems,,2012-03-20
10.1007/978-3-319-63046-5_20,Theorem Proving for Metric Temporal Logic over the Naturals,,2017-03-20
10.1007/s10817-020-09541-4,Theorem Proving for Pointwise Metric Temporal Logic Over the Naturals via Translations,,2019-03-20
10.1007/978-3-319-77935-5_22,On the Timed Analysis of Big-Data Applications,,2014-03-20
10.1145/3383687,Model Checking MITL Formulae on Timed Automata,,2011-03-20
10.1145/3368089.3409737,Mining assumptions for software components using machine learning,,2016-03-20
10.1016/j.ic.2015.06.007,An SMT-based approach to satisfiability checking of MITL,,2020-03-20
10.1109/HASE.2016.46,The Cost of Formal Verification in Adaptive CPS. An Example of a Virtualized Server Node,,2017-03-20
10.4230/LIPIcs.TIME.2017.7,Timed-Automata-Based Verification of MITL over Signals,,2014-03-20
10.14279/tuj.eceasst.66.884,On the Satisfiability of Metric Temporal Logics over the Reals,,2018-03-20
10.1007/s00165-020-00505-4,"Using formal verification to evaluate the
execution time of Spark applications",,2015-03-20
10.1145/2851613.2851833,How bit-vector logic can help improve the verification of LTL specifications over infinite domains,,2014-03-20
10.1145/3290364,Bounded model checking of signal temporal logic properties using syntactic separation,,2011-03-20
10.1007/978-3-319-95582-7_9,The Compound Interest in Relaxing Punctuality,,2016-03-20
10.1145/3106411,A Logic-Based Approach for the Verification of UML Timed Models,,2016-03-20
10.1109/MEMCOD.2015.7340472,Metric interval temporal logic specification elicitation and debugging,,2012-03-20
10.1007/978-3-319-00293-4_11,Spectral Expansion Solution Methodology for QBD-M Processes and Applications in Future Internet Engineering,,2016-03-20
10.1007/978-3-319-00293-4_12,On the Properties of Generalised Markovian Queues with Heterogeneous Servers,,2016-03-20
10.1007/978-3-642-29216-3_85,Spectral Expansion Method for QBD and QBD-M Processes in Performance Modeling of Computing and Communication Systems: A Review,,2017-03-20
10.1504/IJAIP.2014.059586,M/M/1 retrial queue with working vacations and negative customer arrivals,,2013-03-20
10.1007/S12597-012-0117-Y,Analysis of G–queue with unreliable server,,2016-03-20
10.1007/978-3-642-15928-2_27,Recognizable Graph Languages for the Verification of Dynamic Systems,,2012-03-20
10.14279/tuj.eceasst.38.572,Efficient Implementation of Automaton Functors for the Verification of Graph Transformation Systems,,2014-03-20
10.1007/978-3-030-30229-0_10,Well Quasiorders and Hierarchy Theory,,2020-03-20
10.14279/tuj.eceasst.29.408,Recognizable Graph Languages for Checking Invariants,,2016-03-20
10.2201/NIIPI.2012.9.3,A new order theory of set systems and better quasi-orderings,,2020-03-20
10.1007/978-3-642-37064-9_8,Deciding WQO for Factorial Languages,,2014-03-20
10.1007/978-3-030-32304-2_8,Language Inclusion Algorithms as Complete Abstract Interpretations,,2011-03-20
10.1007/978-3-030-13435-8_3,From Words to Graphs  and Back,,2020-03-20
10.4230/LIPIcs.MFCS.2020.40,A Quasiorder-based Perspective on Residual Automata,,2014-03-20
10.1016/j.ic.2017.08.001,WQO is decidable for factorial languages,,2019-03-20
10.20868/upm.thesis.64477,On the Use of Quasiorders in Formal Language Theory,,2018-03-20
10.1016/j.tcs.2015.03.049,Approximation of function evaluation over sequence arguments via specialized data structures,,2017-03-20
10.1007/978-3-319-07956-1_17,Efficient Memoization for Approximate Function Evaluation over Sequence Arguments,,2012-03-20
10.1142/S0218196706002950,The Existence of a Pattern Which Is 5-avoidable but 4-unavoidable,,2019-03-20
10.37236/3038,Application of Entropy Compression in Pattern Avoidance,,2020-03-20
10.1016/j.tcs.2008.08.039,Long binary patterns are Abelian 2-avoidable,,2015-03-20
10.1201/9781420035179.ch47,Concurrent Data Structures,,2017-03-20
10.1201/9781315119335-48,Concurrent Data Structures,,2014-03-20
10.1007/3-540-45446-2_17,Complexity of Layered Binary Search Trees with Relaxed Balance,,2012-03-20
10.1007/978-3-642-02011-7_25,Bulk-Insertion Sort: Towards Composite Measures of Presortedness,,2018-03-20
10.1007/978-3-642-24541-1_14,Computer Storage Fragmentation: Pioneering Work of Brian Randell,,2014-03-20
10.4230/LIPIcs.TIME.2018.8,Faster Dynamic Controllability Checking for Simple Temporal Networks with Uncertainty,,2019-03-20
10.1016/J.TCS.2018.11.005,Dynamic controllability of simple temporal networks with uncertainty: Simple rules and fast real-time execution,,2020-03-20
10.4230/LIPIcs.TIME.2017.10,A Streamlined Model of Conditional Simple Temporal Networks - Semantics and Equivalence Results,,2011-03-20
10.4230/LIPIcs.TIME.2018.14,Sound-and-Complete Algorithms for Checking the Dynamic Controllability of Conditional Simple Temporal Networks with Uncertainty,,2011-03-20
10.1007/978-3-319-25210-0_11,New Techniques for Checking Dynamic Controllability of Simple Temporal Networks with Uncertainty,,2012-03-20
10.4230/LIPIcs.TIME.2017.8,Dynamic Controllability Made Simple,,2020-03-20
10.3233/JIFS-161557,HTN planning with uncontrollable durations for emergency decision-making,,2016-03-20
10.3233/978-1-61499-672-9-930,Solving Dynamic Controllability Problem of Multi-Agent Plans with Uncertainty Using Mixed Integer Linear Programming,,2016-03-20
10.1016/j.artint.2018.11.008,Complexity Bounds for the Controllability of Temporal Networks with Conditions  Disjunctions  and Uncertainty,,2011-03-20
10.1007/978-1-4419-6472-4_6,Discrete Time Networks with Product Form Steady States,,2018-03-20
10.4064/am33-2-5,A new approach to the analysis of a discrete round-robin queue,,2012-03-20
10.1134/S0005117907090202,Processor sharing: A survey of the mathematical theory,,2018-03-20
10.1007/s11134-010-9181-2,Discrete time queueing networks with product form steady state. Availability and performance analysis in an integrated model,,2019-03-20
10.2478/v10129-011-0079-x,Effects of Water Stress on Germination of Yarrow Populations (Achillea Spp.) From Different Bioclimatic Zones in Iran,,2018-03-20
10.1093/jigpal/10.1.1,A Spatial Similarity Measure based on Games: Theory and Practice,,2017-03-20
10.1007/BF00381143,Link inheritance in abstract clause graphs,,2019-03-20
10.1007/3-540-45632-5_10,An Open Research Problem: Strong Completeness of R. Kowalski's Connection Graph Proof Procedure,,2011-03-20
10.1145/1993886.1993889,Recent progress in linear algebra and lattice basis reduction,,2014-03-20
10.1109/ICECS.2005.4633617,Jebelean-Weber's algorithm without spurious factors,,2015-03-20
10.1023/A:1022940530911,Solution of Systems of Linear Equations by the p-Adic Method,,2011-03-20
10.1016/j.jsc.2004.02.006,Efficient algorithms for the gcd and cubic residuosity in the ring of Eisenstein integers,,2016-03-20
10.1007/978-3-319-91155-7_20,Fast computation of power series solutions of systems of differential equations,,2019-03-20
10.4213/DM1218,О сложности и глубине булевых схем для умножения и инвертирования в конечных полях характеристики 2@@@On complexity and depth of Boolean circuits for multiplication and inversion over finite fields of characteristic 2,,2015-03-20
10.3934/dcds.2006.15.281,Euclidean Dynamics,,2016-03-20
10.1006/JNTH.2002.2783,Fast Computation of the Biquadratic Residue Symbol,,2011-03-20
10.1007/s00453-007-9009-6,Gaussian Laws for the Main Parameters of the Euclid Algorithms,,2018-03-20
10.1016/j.ipl.2007.01.004,Jebelean-Weber's algorithm without spurious factors,,2012-03-20
10.1109/TIT.2005.864438,How to fool an unbounded adversary with a short key,,2016-03-20
10.1007/978-0-8176-4705-6_14,Extending the Precision,,2017-03-20
10.1016/j.jsc.2016.11.015,Computing minimal interpolation bases,,2017-03-20
10.1007/978-3-642-02295-1_5,Floating-Point LLL: Theoretical and Practical Aspects,,2015-03-20
10.1145/1101884.1101886,Space-efficient evaluation of hypergeometric series,,2014-03-20
10.1090/S0025-5718-2012-02545-2,Perturbation Analysis of the QR factor R in the context of LLL lattice basis reduction,,2011-03-20
10.1145/780506.780533,Acceleration of Euclidean algorithm and extensions,,2018-03-20
10.1016/j.jsc.2015.08.007,Probabilistic analyses of the plain multiple gcd algorithm,,2012-03-20
10.11540/JSIAMT.12.4_281,ωビット消去による拡張GCD問題の解法 : 逆元計算の一高速化手法( 数論アルゴリズムとその応用 その1),,2015-03-20
10.1504/IJCSM.2014.059380,A novel fast hybrid GCD computation algorithm,,2020-03-20
10.1007/s00037-004-0185-3,On the complexity of computing determinants,,2020-03-20
10.1007/978-3-540-24847-7_31,A Binary Recursive Gcd Algorithm,,2020-03-20
10.1145/1940475.1940513,Exact solutions to linear systems of equations using output sensitive lifting,,2013-03-20
10.1016/J.JSC.2019.07.011,Fast computation of approximant bases in canonical form,,2019-03-20
10.1145/1993636.1993691,An LLL-reduction algorithm with quasi-linear time complexity: extended abstract,,2020-03-20
10.2307/j.ctvc774cp.28,Euclidean algorithm,,2013-03-20
10.1007/978-3-319-31517-1_18,Weak Keys for the Quasi-Cyclic MDPC Public Key Encryption Scheme,,2019-03-20
10.1145/1005285.1005321,Maximal quotient rational reconstruction: an almost optimal algorithm for rational reconstruction,,2015-03-20
10.1016/j.jsc.2008.04.018,Regularity of the Euclid Algorithm; application to the analysis of fast GCD Algorithms,,2013-03-20
10.1145/582475.582479,Modern computer algebra,,2014-03-20
10.1145/1073884.1073927,Computing the rank and a small nullspace basis of a polynomial matrix,,2014-03-20
10.3103/S0027132209040019,The complexity and depth of Boolean circuits for multiplication and inversion in some fields GF(2n),,2018-03-20
10.5802/CCIRM.18,Factorisation des polynômes à plusieurs variables,,2016-03-20
10.1112/S1461157014000138,Finding roots in Fpn with the successive resultants algorithm,,2016-03-20
10.1134/S1995080216060147,An approximating k-ary GCD algorithm,,2013-03-20
10.1017/CBO9780511814549.004,A computational introduction to number theory and algebra,,2013-03-20
10.1007/978-3-540-45077-1_11,Efficient Algorithms for GCD and Cubic Residuosity in the Ring of Eisenstein Integers,,2011-03-20
10.1145/1040034.1040041,ANTS VI: algorithmic number theory symposium poster abstracts,,2017-03-20
10.1090/mcom/3400,Full orbit sequences in affine spaces via fractional jumps and pseudorandom number generation,,2015-03-20
10.1137/S0097539704443793,Linear Recurrences with Polynomial Coefficients and Application to Integer Factorization and Cartier-Manin Operator,,2012-03-20
10.1145/3208976.3209020,On Computing the Resultant of Generic Bivariate Polynomials,,2014-03-20
10.3233/FI-2010-346,Some Remarks on Testing Irreducibility of Polynomials and Normality of Bases in Finite Fields,,2015-03-20
10.1145/1277548.1277572,A gmp-based implementation of schönhage-strassen's large integer multiplication algorithm,,2016-03-20
10.1016/j.jco.2005.04.002,The shifted number system for fast linear algebra on integer matrices,,2015-03-20
10.1145/1073884.1073917,Half-GCD and fast rational recovery,,2011-03-20
10.1145/2930889.2930931,A Fast Algorithm for Computing the Truncated Resultant,,2016-03-20
10.1016/J.JCO.2019.04.001,Fast multivariate multi-point evaluation revisited,,2014-03-20
10.1016/S0927-0507(05)12004-0,Integer Programming  Lattices  and Results in Fixed Dimension,,2016-03-20
10.1145/2930889.2930928,Fast Computation of Minimal Interpolation Bases in Popov Form for Arbitrary Shifts,,2015-03-20
10.1016/j.jda.2006.12.009,A parallel extended GCD algorithm,,2018-03-20
10.1137/1.9781611972979.14,Analysis of Fast Versions of the Euclid Algorithm,,2016-03-20
10.1016/j.ipl.2009.12.008,A randomized sublinear time parallel GCD algorithm for the EREW PRAM,,2012-03-20
10.1007/978-3-642-14518-6_10,An O(M(n) logn) Algorithm for the Jacobi Symbol,,2012-03-20
10.1090/S0025-5718-05-01799-0,Two efficient algorithms for the computation of ideal sums in quadratic orders,,2013-03-20
10.1007/S10958-013-1350-5,Complexity of computation in finite fields,,2012-03-20
10.1137/S0097539703437181,On Rational Number Reconstruction and Approximation,,2013-03-20
10.1016/j.jco.2005.05.001,"Festschrift in honor of Arnold Scho""nhage",,2020-03-20
10.1016/j.jsc.2007.07.001,Symmetric subresultants and applications,,2018-03-20
10.1007/S10208-020-09453-0,On the Complexity Exponent of Polynomial System Solving,,2017-03-20
10.1017/CBO9780511921698,Modern Computer Arithmetic,,2014-03-20
10.1007/11832225_17,Robust HGCD with No Backup Steps,,2017-03-20
10.1007/3-540-46035-7_9,How to fool an unbounded adversary with a short key,,2020-03-20
10.1080/0020716042000301761,How can we solve a linear Diophantine equation by the basis reduction algorithm,,2020-03-20
10.1080/00207170600726477,Asymptotically fast polynomial matrix algorithms for multivariable systems,,2012-03-20
10.1007/978-3-540-68279-0_14,Integer Programming and Algorithmic Geometry of Numbers - A tutorial,,2017-03-20
10.1145/1145768.1145801,Fast rational function reconstruction,,2017-03-20
10.1090/S0025-5718-03-01599-0,Computing special powers in finite fields,,2020-03-20
10.1090/fic/041/26,An Analysis of the Generalized Binary GCD Algorithm,,2020-03-20
10.1016/j.ipl.2009.01.025,Integer programming with 2-variable equations and 1-variable inequalities,,2016-03-20
10.1007/s00037-015-0106-7,On the complexity of inverting integer and polynomial matrices,,2020-03-20
10.1007/978-3-540-24847-7_4,Binary GCD Like Algorithms for Some Complex Quadratic Rings,,2014-03-20
10.1007/11682462_8,A New GCD Algorithm for Quadratic Number Rings with Unique Factorization,,2011-03-20
10.1016/j.jsc.2010.08.012,Kaltofen's division-free determinant algorithm differentiated for matrix adjoint computation,,2017-03-20
10.1016/j.endm.2011.05.024,Some Related Functions to Integer GCD and Coprimality,,2012-03-20
10.1007/978-3-642-55602-9_20,Nachsorge und Rehabilitation,,2018-03-20
10.1016/j.jsc.2018.04.017,On the complexity of the Lickteig-Roy subresultant algorithm,,2013-03-20
10.1016/J.CAM.2003.08.014,A modular reduction for GCD computation,,2019-03-20
10.1017/S0963548304006261,Dynamical Analysis of the Parametrized Lehmer–Euclid Algorithm,,2013-03-20
10.1090/S0025-5718-07-02017-0,On Schönhage's algorithm and subquadratic integer gcd computation,,2011-03-20
10.1137/S0097539702408636,Acceleration of Euclidean Algorithm and Rational Number Reconstruction,,2020-03-20
10.1016/j.jsc.2012.06.003,New fast euclidean algorithms,,2012-03-20
10.5860/choice.47-2623,Solving the Pell equation,,2015-03-20
10.1016/j.endm.2009.11.029,The Mixed Binary Euclid Algorithm,,2012-03-20
10.5802/CCIRM.9,Algorithmes rapides pour les polynômes  séries formelles et matrices,,
10.1007/978-3-662-05355-3,Algorithms in real algebraic geometry,,2020-03-20
10.1515/ijame-2017-0042,Non-Newtonian Momentum Transfer past an Isothermal Stretching Sheet with Applied Suction,,2011-03-20
10.1109/TNET.2005.845530,Can unstructured P2P protocols survive flash crowds?,,2016-03-20
10.1016/j.cor.2011.01.015,Optimal search path for service in the presence of disruptions,,2018-03-20
10.1145/571697.571706,A lightweight  robust P2P system to handle flash crowds,,2017-03-20
10.1109/JSAC.2003.818778,A lightweight  robust P2P system to handle flash crowds,,2014-03-20
10.4230/LIPIcs.RTA.2015.143,A Coinductive Framework for Infinitary Rewriting and Equational Reasoning,,2014-03-20
10.23638/LMCS-14(1:3)2018,Coinductive Foundations of Infinitary Rewriting and Infinitary Equational Logic,,2012-03-20
10.4108/eai.25-10-2016.2267058,Fair workload distribution for multi-server systems with pulling strategies,,2014-03-20
10.1016/j.peva.2017.04.005,Fair workload distribution for multi-server systems with pulling strategies,,2016-03-20
10.1007/978-3-030-02227-3_10,Information Flow Security for Stochastic Processes,,2011-03-20
10.1007/978-3-319-61428-1_11,Aggregation and Truncation of Reversible Markov Chains Modulo State Renaming,,2011-03-20
10.1016/j.peva.2017.08.008,Power control in saturated fork-join queueing systems,,2019-03-20
10.1016/j.ic.2018.04.002,Lumping-based equivalences in Markovian automata: Algorithms and applications to product-form analyses,,2019-03-20
10.4204/EPTCS.276.6,Persistent Stochastic Non-Interference,,2014-03-20
10.1109/Blockchain50366.2020.00063,Fair Work Distribution on Permissioned Blockchains: a Mobile Window Based Approach,,2019-03-20
10.1145/3388831.3388845,Speed scaling in fork-join queues: a comparative study,,2017-03-20
10.1145/3372376,Dynamic Resource Allocation in Fork-Join Queues,,2013-03-20
10.1145/3155335,A Product-Form Model for the Performance Evaluation of a Bandwidth Allocation Strategy in WSNs,,2012-03-20
10.1007/978-3-319-99154-2_17,Biased Processor Sharing in Fork-Join Queues,,2013-03-20
10.1145/3150928.3150942,Efficient Computation of Renaming Functions for ρ-reversible Discrete and Continuous Time Markov Chains,,2012-03-20
10.1007/978-3-319-43425-4_8,Dynamic Control of the Join-Queue Lengths in Saturated Fork-Join Stations,,2016-03-20
10.1017/S0960129516000116,Computation over algebraic structures and a classification of undecidable problems,,2015-03-20
10.4204/EPTCS.334.4,Parallel Hyperedge Replacement String Languages,,2017-03-20
10.1007/978-3-642-16561-0_46,On the Role of Non-functional Properties in Compiler Verification,,2014-03-20
10.22028/D291-25991,Compiler verification in the context of pervasive system verification,,2020-03-20
10.1007/s00165-009-0124-9,An algebraic approach to the design of compilers for object-oriented languages,,2019-03-20
10.1007/978-3-642-33826-7_9,A Denotational Model for Instantaneous Signal Calculus,,2012-03-20
10.1007/978-3-540-95891-8_46,Design Validation by Symbolic Simulation and Equivalence Checking: A Case Study in Memory Optimization for Image Manipulation,,2018-03-20
10.1007/11925040_6,On the Correctness of Transformations in Compiler Back-Ends,,2017-03-20
10.18725/OPARU-1714,Mechanized semantics of simple imperative programming constructs,,2018-03-20
10.1007/s00165-018-0467-1,A UTP approach for rTiMo,,2013-03-20
10.1145/3295699,Theoretical and Practical Aspects of Linking Operational and Algebraic Semantics for MDESL,,2017-03-20
10.1007/s00165-005-0075-8,Provably-correct hardware compilation tools based on pass separation techniques,,2020-03-20
10.1109/ICECCS.2006.1690363,From algebraic semantics to denotational semantics for Verilog,,2016-03-20
10.1007/978-3-319-52228-9_9,UTP Semantics for rTiMo,,2019-03-20
10.1007/s11334-008-0069-9,From algebraic semantics to denotational semantics for Verilog,,2016-03-20
10.1007/978-1-84882-258-0_13,The Algebra of CSP,,2017-03-20
10.1007/s00165-014-0309-8,Denotational semantics and its algebraic derivation for an event-driven system-level language,,2020-03-20
10.1109/rteict42901.2018.9012266,The Multi Language Audio Compiler with Video Help,,2015-03-20
10.1007/BF03259390,Specification  Verification and Prototyping of an Optimized Compiler,,2014-03-20
10.1145/966221.966235,Compiler verification: a bibliography,,2011-03-20
10.1007/s00236-005-0165-3,Compiling quantum programs,,2015-03-20
10.1007/978-1-84882-912-1_1,Insight  Inspiration and Collaboration,,2017-03-20
10.1023/A:1007963427189,The ProCoS Approach to Correct Systems,,2019-03-20
10.1007/s00165-020-00513-4,Theoretical and Practical Approaches to the Denotational Semantics for MDESL based on UTP,,2014-03-20
10.1007/978-3-540-45236-2_18,A Strategy for Compiling Classes  Inheritance  and Dynamic Binding,,2015-03-20
10.1007/S11036-018-1142-8,Formal Verification of mCWQ Using Extended Hoare Logic,,2016-03-20
10.1016/j.entcs.2005.05.007,What Level of Mathematical Reasoning can Computer Science Demand of a Software Implementer?: Auf Deutsch: Welche Art mathematischer Argumentation darf die Informatikwissenschaft einem Softwareimplementierer auf jeden Fall zumuten?,,2012-03-20
10.1109/ICSE.1989.714417,Stepwise Refinement Process With Modularity: An Algebraic Approach,,2013-03-20
10.1179/030801899678605,The needle in the haystack: How experience in cryptoanalysis and mathematics may help in detecting and forming gestalts,,2020-03-20
10.1109/TENCON.1989.177110,Program synthesis in equivalent specifications,,2018-03-20
10.1145/74587.74611,Stepwise refinement process with modularity,,2013-03-20
10.1017/S0960129500000864,Algebraic Implementation of Abstract Data Types: A Survey of Concepts and New Compositionality Results,,2012-03-20
10.1007/BFb0021012,Object Identification and Retrieval in a CAST Library,,2017-03-20
10.1007/3-540-56379-2_36,Implementation and Behavioural Equivalence: A Survey,,2019-03-20
10.1049/sej.1991.0046,Propagating changes in algebraic specifications,,2013-03-20
10.1007/BF01776571,Data spaces with indirect addressing,,2012-03-20
10.1016/j.scico.2009.10.004,Completeness of fair ASM refinement,,2015-03-20
10.1016/j.entcs.2008.06.003,Completeness of ASM Refinement,,2013-03-20
10.1007/s00165-011-0219-y,Starvation-free mutual exclusion with semaphores,,2019-03-20
10.1007/978-1-4020-9688-4_8,The Complexity of Processing Hierarchical Specifications,,2012-03-20
10.4230/LIPIcs.ICALP.2019.106,String-to-String Interpretations with Polynomial-Size Output,,2012-03-20
10.1112/S1461157000000371,Using program schemes to capture polynomial-time logically on certain classes of structures.,,2013-03-20
10.3233/FI-2009-0050,Program Schemes  Queues  the Recursive Spectrum and Zero-one Laws,,2012-03-20
10.1093/logcom/exn025,Logical and Complexity-theoretic Aspects of Models of Computation with Restricted Access to Arrays,,2011-03-20
10.1007/s00224-005-1230-6,An Infinite Hierarchy in a Class of Polynomial-Time Program Schemes,,2011-03-20
10.1016/S0022-0000(02)00034-X,Reachability and connectivity queries in constraint databases,,2014-03-20
10.1016/j.tcs.2004.10.034,On the decidability of termination of query evaluation in transitive-closure logics for polynomial constraint databases,,2016-03-20
10.1145/335168.335213,Reachability and connectivity queries in constraint databases,,2013-03-20
10.1007/s00236-005-0171-5,N-dimensional versus (N–1)-dimensional connectivity testing of first-order queries to semi-algebraic sets,,2020-03-20
10.1201/9780849333255.ch6,Exception Handling,,2020-03-20
10.4169/000298910X521634,Teaching Research: Encouraging Discoveries,,2011-03-20
10.1016/J.PHYSA.2016.03.021,On the likelihood of forests,,2014-03-20
10.1108/ijlm-01-2020-0039,Structure and complexity in six supply chains of the Brazilian wind turbine industry,,2014-03-20
10.1007/978-3-540-79450-9_30,Pattern Matching in RNA Structures,,2013-03-20
10.1016/j.aim.2020.107528,Lower bounds for multicolor Ramsey numbers,,2019-03-20
10.1007/s00037-018-0166-6,The Landscape of Communication Complexity Classes,,2013-03-20
10.1007/978-3-540-30551-4_5,On the Monotone Circuit Complexity of Quadratic Boolean Functions,,2013-03-20
10.1137/080744037,The Sign-Rank of AC0,,2018-03-20
10.1002/JGT.V61:1,On set intersection representations of graphs,,2011-03-20
10.1109/SYSENG.2015.7302772,The domino effect in complex systems: An interdisciplinary view,,2011-03-20
10.1007/s10986-012-9181-5,On the CNF-complexity of bipartite graphs containing no squares,,2016-03-20
10.1002/9783527670468.CH06,The Linear Complexity of a Graph,,2016-03-20
10.1016/J.JOM.2010.11.001,Structural investigation of supply networks: A social network analysis approach,,2018-03-20
10.1007/978-3-642-24508-4,Boolean Function Complexity Advances and Frontiers,,2011-03-20
10.1007/s00224-002-1068-0,Graph Complexity and Slice Functions,,2018-03-20
10.1109/FOCS.2008.19,The Sign-Rank of AC^O,,2018-03-20
10.1561/0400000011,Complexity Lower Bounds using Linear Algebra,,2017-03-20
10.1080/10511970.2013.843626,Personal  Expository  Critical  and Creative: Using Writing in Mathematics Courses,,2016-03-20
10.1017/9781316163047,Reliability and Availability Engineering - Modeling  Analysis  and Applications,,2019-03-20
10.1002/qre.1305,Non-Markovian State-Space Models in Dependability Evaluation,,2015-03-20
10.1016/J.CAMWA.2012.02.038,Investigating dynamic reliability and availability through state-space models,,2014-03-20
10.1007/978-1-84800-131-2_22,Imperfect Coverage Models: Status and Trends,,2016-03-20
10.1002/cpe.5563,Scheduling data streams for low latency and high throughput on a Cray XC40 using Libfabric,,2011-03-20
10.2478/johr-2018-0019,The Use of Physical Factors for Seed Quality Improvement of Horticultural Plants,,2016-03-20
10.1109/TDSC.2004.11,Model-based evaluation: from dependability to security,,2014-03-20
10.1109/ATS.2012.40,Functional Pattern Generation for Asynchronous Designs in a Test Processor Environment,,2017-03-20
10.1016/j.aop.2016.07.022,Symbols of a cosmic order,,2014-03-20
10.1016/J.JTBI.2007.09.044,Systematic mistakes are likely in bounded optimal decision-making systems.,,2017-03-20
10.1007/11561071_22,Optimal Integer Alphabetic Trees in Linear Time,,2020-03-20
10.1109/CCC.2005.32,Toward a Model for Backtracking and Dynamic Programming,,2012-03-20
10.1016/j.jalgor.2005.06.001,Partial alphabetic trees,,2019-03-20
10.1109/ICIEV.2012.6317424,Multi-threaded concurrent wavelet based image compression and image editing,,2016-03-20
10.1007/978-3-642-03367-4_21,Efficient Construction of Near-Optimal Binary and Multiway Search Trees,,2011-03-20
10.1145/1723028.1723036,Efficient decision tree construction for mining time-varying data streams,,2016-03-20
10.1007/978-3-642-03456-5_7,Reflections on Optimal and Nearly Optimal Binary Search Trees,,2015-03-20
10.1016/j.ipl.2007.10.001,Chain-splay trees  or  how to achieve and prove loglogN-competitiveness by splaying,,2019-03-20
10.1007/978-3-319-94821-8_34,Verified Memoization and Dynamic Programming,,2015-03-20
10.1117/12.508005,Techniques for region coding in object-based image compression,,2019-03-20
10.14711/thesis-b987544,Dynamic programming speedups,,2016-03-20
10.1007/978-3-642-18754-4_2,Algorithms and Data Structures,,2016-03-20
10.1007/s00224-005-1281-8,Compact Labeling Scheme for XML Ancestor Queries,,2018-03-20
10.1137/1.9781611975031.77,Tree Edit Distance Cannot be Computed in Strongly Subcubic Time (unless APSP can),,2019-03-20
10.1016/j.dam.2020.04.016,Dynamic programming bi-criteria combinatorial optimization,,2012-03-20
10.1017/cbo9781139195768,Codes and Automata,,2015-03-20
10.1007/3-540-45749-6_14,Partial Alphabetic Trees,,2013-03-20
10.1007/978-3-319-63558-3_47,Fast Subsumption Between Rooted Labeled Trees,,2014-03-20
10.4018/IJGHPC.2016100104,High Performance CGM-based Parallel Algorithms for the Optimal Binary Search Tree Problem,,2011-03-20
10.4213/DM1148,Средняя сложность поиска идентичных объектов для случайных неравномерных баз данных@@@Average complexity of searching for identical objects in random nonuniform databases,,2018-03-20
10.1109/FOCS.2004.23,Dynamic Optimality - Almost,,2011-03-20
10.1007/978-1-4612-0075-8,An Introduction to Data Structures and Algorithms,,2014-03-20
10.1016/j.ejor.2008.06.017,Allocating the fixed cost as a complement of other cost inputs: A DEA approach,,2011-03-20
10.1007/s00453-004-1136-8,Key-Independent Optimality,,2019-03-20
10.1016/J.ANUCENE.2014.10.039,Algorithmic choices in WARP – A framework for continuous energy Monte Carlo neutron transport in general 3D geometries on GPUs,,2017-03-20
10.1016/j.ejor.2014.09.019,Using discrete event simulation cellular automata models to determine multi-mode travel times and routes of terrestrial suppression resources to wildland fires,,2014-03-20
10.1201/9781315119335-15,Trees with Minimum Weighted Path Length,,2020-03-20
10.1007/978-3-319-94361-9_15,Exploring Trends of Lung Cancer Research Based on Word Representation,,2012-03-20
10.1017/s0956796819000194,An optimal  purely functional implementation of the Garsia-Wachs algorithm,,2014-03-20
10.1109/SNPD.2008.37,Message Sequence Charts to Specify the Communicating Threads for Concurrent Discrete Wavelet Transform Based Image Compression and a Verification Analysis,,2020-03-20
10.1007/978-3-540-87473-7_1,Query Responsive Index Structures,,2012-03-20
10.1145/1109557.1109562,The Knuth-Yao quadrangle-inequality speedup is a consequence of total-monotonicity,,2014-03-20
10.1201/B18448-16,Knowledge Contribution and Patterns Usage Analysis of Design Science Research Exemplars,,2020-03-20
10.1155/2016/3537068,Service Arms with Unconventional Robotic Parameters for Intricate Workstations: Optimal Number and Dimensional Synthesis,,2011-03-20
10.1007/978-3-319-32467-8_57,Deriving CGM Based-Parallel Algorithms for the Optimal Binary Search-Tree Problem,,2020-03-20
10.1007/BF01840380,On heuristics for minimum length rectilinear partitions,,2013-03-20
10.4018/IJGHPC.2019010104,Statically Optimal Binary Search Tree Computation Using Non-Serial Polyadic Dynamic Programming on GPU's,,2014-03-20
10.1016/j.tcs.2012.06.023,The binary identification problem for weighted trees,,2015-03-20
10.1109/FOCS.2017.35,Fast & Space-Efficient Approximations of Language Edit Distance and RNA Folding: An Amnesic Dynamic Programming Approach,,2014-03-20
10.1007/978-3-319-72547-5,Guide to Competitive Programming,,2019-03-20
10.1007/BF00263193,On the costs of optimal and near-optimal binary search trees,,2014-03-20
10.1016/j.ipl.2005.03.014,Restructuring binary search trees revisited,,2012-03-20
10.1145/3055399.3055422,Twenty (simple) questions,,2016-03-20
10.1201/9781420059335.CH7,Problem Selection and Development Patterns,,2015-03-20
10.1007/978-3-319-91839-6_17,Binary Search Trees,,2019-03-20
10.1007/978-3-319-13075-0_15,The Power and Limitations of Static Binary Search Trees with Lazy Finger,,2016-03-20
10.1145/777792.777826,Proximate planar point location,,2011-03-20
10.1007/978-3-319-49046-5_5,Sequential Decision Process Supported by a Compositional Model,,2011-03-20
10.1137/S0097539705447347,Dynamic optimality - almost [competitive online binary search tree],,2015-03-20
10.1109/CSIT.2018.8486187,An Efficient Search for Context-Based Chatbots,,2016-03-20
10.1137/1.9781611973082.30,Random access to grammar-compressed strings,,2013-03-20
10.1017/9781316795835,Introduction to Parallel Computing,,2015-03-20
10.1007/978-3-642-04128-0_67,Short Labels for Lowest Common Ancestors in Trees,,2017-03-20
10.1109/HPCC-SmartCity-DSS.2017.79,Speeding up Coarse Grain Multicomputer Based Parallel Algorithm for Optimal Binary Search Tree by Minimizing Idleness of Processors,,2014-03-20
10.7763/IJIET.2012.V2.94,An Improved Concurrent Multi-Threaded Wavelet Transform Based Image Compression and Transmission Over Internet,,2012-03-20
10.1108/02635570910926636,A data structure for supply chain management systems,,2019-03-20
10.1007/978-3-642-22555-0_49,Performance of Routing Lookups,,2020-03-20
10.1016/J.ASCOM.2019.100291,A processing pipeline for high volume pulsar candidate data streams,,2020-03-20
10.7717/peerj.2038,PhySortR: a fast  flexible tool for sorting phylogenetic trees in R,,2011-03-20
10.1142/S0218195912600084,A Static Optimality Transformation with Applications to Planar Point Location,,2011-03-20
10.1007/978-3-642-40273-9_10,A History of Distribution-Sensitive Data Structures,,2014-03-20
10.1016/j.tcs.2013.04.027,Category-Based Routing in Social Networks: Membership Dimension and the Small-World Phenomenon (Full),,2019-03-20
10.6092/UNIBO/AMSDOTTORATO/7462,Power Optimization for Sensor Hubs in Biomedical Applications,,2016-03-20
10.1007/978-3-642-22300-6_22,Binary Identification Problems for Weighted Trees,,2011-03-20
10.1007/978-0-387-30162-4_263,O(log log n)-competitive Binary Search Tree,,2017-03-20
10.1007/978-3-642-54423-1_65,Biased Predecessor Search,,2012-03-20
10.1109/ITNG.2008.158,A Coarse Grain Multicomputer Algorithm Solving the Optimal Binary Search Tree Problem,,2013-03-20
10.1109/ITNG.2011.128,Modeling the Communications in the Multi-threaded System for Concurrent Wavelet Transform to Compress the Image,,2014-03-20
10.1007/978-3-642-15775-2_38,On the Huffman and Alphabetic Tree Problem with General Cost Functions,,2013-03-20
10.1016/S0304-3975(02)00084-1,Optimal binary search trees with costs depending on the access paths,,2015-03-20
10.1137/S0097539701389245,Efficient Algorithms for Optimal Stream Merging for Media-on-Demand,,2018-03-20
10.1109/IPDPS.2013.40,Locally Self-Adjusting Tree Networks,,2012-03-20
10.1016/j.jocs.2020.101246,3D parallel tiled code implementing a modified Knuth's optimal binary search tree algorithm,,2016-03-20
10.1007/978-3-540-24587-2_55,New Ways to Construct Binary Search Trees,,2014-03-20
10.1016/j.amc.2007.02.052,A new genetic approach to construct near-optimal binary search trees,,2013-03-20
10.1504/IJHPCN.2014.062729,Parallel dynamic programming for solving the optimal search binary tree problem on CGM,,2013-03-20
10.4018/ijghpc.2014040105,An Efficient CGM-Based Parallel Algorithm Solving the Matrix Chain Ordering Problem,,2013-03-20
10.1007/3-540-36136-7_1,Biased Skip Lists,,2017-03-20
10.1515/dma.2011.023,Average complexity of searching for identical objects in random nonuniform databases,,2014-03-20
10.1142/9789812837172_0012,Variable-length codes and finite automata,,2020-03-20
10.1109/TC.2010.257,Succinct Greedy Geometric Routing Using Hyperbolic Geometry,,2015-03-20
10.1016/J.INFSOF.2018.11.009,VFL: Variable-based fault localization,,2017-03-20
10.1016/S0304-3975(01)00262-6,A strategy for searching with different access costs,,2020-03-20
10.1142/9789814571784_0006,Algorithms and Data Structures,,2013-03-20
10.1007/11427186_49,How to Splay for loglog N-Competitiveness,,2020-03-20
10.1007/s00453-004-1138-6,Biased Skip Lists,,2017-03-20
10.1007/978-1-4419-7997-1_28,Advanced Techniques for Dynamic Programming,,2016-03-20
10.1109/SNPD.2011.36,Communication Among Multiple Threads in the Concurrent Wavelet Transformation for Image Compression,,2015-03-20
10.1007/978-3-319-40253-6_22,Towards Efficient Fully Randomized Message-Locked Encryption,,2014-03-20
10.1145/3310165.3310170,Toward demand-aware networking: a theory for self-adjusting networks,,2013-03-20
10.1007/BF01210592,The optimal binary search tree for Andersson's search algorithm,,2011-03-20
10.1007/978-3-319-50106-2_44,Offline Drawing of Dynamic Trees: Algorithmics and Document Integration,,2012-03-20
10.1007/978-3-642-14192-8_8,Binary Priority List for Prioritizing Software Requirements,,2011-03-20
10.1007/978-3-642-17226-7_2,Efficient Decision Tree Re-alignment for Clustering Time-Changing Data Streams,,2020-03-20
10.1109/CASON.2011.6085926,Category-based routing in social networks: Membership dimension and the small-world phenomenon,,2018-03-20
10.1016/j.cagd.2013.02.004,Practical distribution-sensitive point location in triangulations,,2020-03-20
10.1145/777412.777439,Off-line and on-line guaranteed start-up delay for media-on-demand with stream merging,,2012-03-20
10.1016/j.tcs.2020.08.009,Extensions of dynamic programming for multi-stage combinatorial optimization,,2018-03-20
10.1145/3168808,Poker: permutation-based SIMD execution of intensive tree search by path encoding,,2019-03-20
10.1007/3-540-36136-7_3,Key Independent Optimality,,2016-03-20
10.1137/1.9781611973068.55,The geometry of binary search trees,,2014-03-20
10.1145/3177540.3177564,Tree Structures and Algorithms for Physical Design,,
10.1007/0-387-25036-0_2,Problems in data structures and algorithms,,2015-03-20
10.1017/S0143385710000015,The zeta functions of renewal systems,,2013-03-20
10.1142/S0218196704001906,An Application of First-Order Logic to The Study of Recognizable Languages,,2013-03-20
10.1007/BF01211084,Essential concepts of algebraic specification and program development,,2020-03-20
10.1016/j.tcs.2007.01.024,Closure properties for the class of behavioral models,,2019-03-20
10.3923/ITJ.2008.599.606,Replicated R-Resilient Process Allocation for Load Distribution in Fault Tolerant System,,2011-03-20
10.1002/spe.655,SESAG: an object‐oriented application framework for real‐time systems,,2020-03-20
10.1142/S179396231100044X,Task Allocation Model for reliability and Cost Optimization in Distributed Computing System,,2018-03-20
10.1016/j.cie.2009.04.004,The decision model of task allocation for constrained stochastic distributed systems,,2020-03-20
10.1109/RTCSA.2016.38,Allocation and Scheduling of Strictly Periodic Tasks in Multi-core Real-Time Systems,,2020-03-20
10.1023/A:1026589200419,Analysis of Checkpointing for Real-Time Systems,,2012-03-20
10.1007/BF01245300,HRT-HOOD: A structured design method for hard real-time systems,,2017-03-20
10.1109/TPDS.2015.2407900,A Survey of Task Allocation and Load Balancing in Distributed Systems,,2019-03-20
10.1016/j.sysarc.2018.09.002,Scheduling non-preemptive tasks with strict periods in multi-core real-time systems,,2019-03-20
10.1007/978-3-540-73547-2_57,An Enhanced DGIDE Platform for Intrusion Detection,,2016-03-20
10.1109/iNCoS.2012.14,Optimizing Task Allocation on Fire Fighting,,2011-03-20
10.1007/s10951-014-0387-8,On-line preemptive machine scheduling with $$\ell _p$$ℓp norm on two uniform machines,,2019-03-20
10.1371/journal.pone.0167041,Task Allocation of Wasps Governed by Common Stomach: A Model Based on Electric Circuits,,2014-03-20
10.1109/ETFA.2009.5347216,Optimizing the fault tolerance capabilities of distributed real-time systems,,2016-03-20
10.1109/MECO.2014.6862676,An energy-aware dynamic scheduling algorithm for hard real-time systems,,2012-03-20
10.1007/s10951-011-0236-y,Reliability of task graph schedules with transient and fail-stop failures: complexity and algorithms,,2020-03-20
10.1007/978-3-030-54560-4_7,Generalization of the Common Stomach: Integral Control at the Supra-Individual Level,,2018-03-20
10.1109/EMBEDDEDSYS.2014.6953097,Mixed criticality scheduling in fault-tolerant distributed real-time systems,,2019-03-20
10.1007/978-3-540-30206-3_16,"Static Fault-Tolerant Real-Time Scheduling with ""Pseudo-topological"" Orders",,2014-03-20
10.1145/2392987.2392992,Resource augmentation for fault-tolerance feasibility of real-time tasks under error bursts,,2013-03-20
10.1007/s11538-013-9851-4,Time Delay Implies Cost on Task Switching: A Model to Investigate the Efficiency of Task Partitioning,,2015-03-20
10.1109/TR.2003.819502,Reliable heterogeneous applications,,2012-03-20
10.1007/BF00365407,Allocating hard real-time tasks: An NP-Hard problem made easy,,2012-03-20
10.1007/BF01088524,Enhancing fault-tolerance in rate-monotonic scheduling,,2017-03-20
10.1016/j.jtbi.2011.10.037,"Regulation of task differentiation in wasp societies: a bottom-up model of the ""common stomach"".",,2013-03-20
10.1007/BF01245401,A massively parallel fault-tolerant architecture for time-critical computing,,2012-03-20
10.1109/TSE.2004.68,VERTAF: an application framework for the design and verification of embedded real-time software,,2011-03-20
10.1007/BF03037452,Inductive inference of logic programs based on algebraic semantics,,2013-03-20
10.1016/j.artint.2009.10.003,Bounded treewidth as a key to tractability of knowledge representation and reasoning,,2014-03-20
10.1145/1838552.1838555,Monadic datalog over finite structures of bounded treewidth,,2020-03-20
10.1145/1265530.1265554,Monadic datalog over finite structures with bounded treewidth,,2019-03-20
10.1142/S0129054112500268,Equality Sets of Morphic Word Sequences,,2012-03-20
10.1016/j.jcss.2005.05.003,An n2-bound for the ultimate equivalence problem of certain D0L systems over an n-letter alphabet,,2020-03-20
10.1016/j.jcss.2012.05.013,The sequence equivalence problem for primitive D0L systems,,2015-03-20
10.4213/SM7904,Об одном методе получения нижних оценок сложности монотонных арифметических схем  вычисляющих действительные многочлены@@@A method for obtaining lower bounds for complexity of monotone arithmetic circuits computing real polynomials,,2020-03-20
10.1007/S10958-010-9977-Y,On algorithm complexity,,2020-03-20
10.1016/j.jcss.2016.01.001,Separating OR  SUM  and XOR circuits,,2018-03-20
10.1007/s00224-014-9574-4,Lower Bounds for Tropical Circuits and Dynamic Programs,,2011-03-20
10.1134/S1990478911020074,On the complexity of linear boolean operators with thin matrices,,2018-03-20
10.1070/SM2012V203N10ABEH004270,A method for deriving lower bounds for the complexity of monotone arithmetic circuits computing real polynomials,,2014-03-20
10.1016/j.tcs.2014.10.014,Cancellation-free circuits in unbounded and bounded depth,,2017-03-20
10.1007/978-3-642-03456-5_2,On Negations in Boolean Networks,,2019-03-20
10.1007/s00453-006-0073-0,The Monotone Circuit Complexity of Quadratic Boolean Functions,,
10.1007/BF01268142,PIk mass production and an optimal circuit for the Nečiporuk slice,,2012-03-20
10.1007/978-3-319-09704-6_16,Biclique Coverings  Rectifier Networks and the Cost of ε-Removal,,2014-03-20
10.4230/LIPIcs.STACS.2017.23,Fractional Coverings  Greedy Coverings  and Rectifier Networks,,2011-03-20
10.1515/rjr-2015-0016,Therapeutic approach in monosymptomatic nasal obstruction,,2011-03-20
10.1007/BF01211617,The rely-guarantee method for verifying shared variable concurrent programs,,2018-03-20
10.1007/978-3-319-30734-3_16,Effectively Eliminating Auxiliaries,,2017-03-20
10.1016/j.tcs.2013.11.012,Inefficiency of Nash Equilibrium for scheduling games with constrained jobs: A parametric analysis,,2017-03-20
10.1016/j.ipl.2013.03.006,Inefficiency of Nash equilibria with parallel processing policy,,2017-03-20
10.1007/978-3-030-64946-3_22,Sequential Solutions in Machine Scheduling Games,,2015-03-20
10.1007/s10878-020-00592-2,Coordination mechanisms for scheduling selfish jobs with favorite machines,,2013-03-20
10.1134/S0005117915100124,Price of anarchy in machine load balancing game,,2014-03-20
10.1007/978-3-540-79309-0_6,The Price of Anarchy on Uniformly Related Machines Revisited,,2015-03-20
10.1007/978-3-319-08016-1_17,The PoA of Scheduling Game with Machine Activation Costs,,2012-03-20
10.1016/j.artint.2006.11.001,A representation theorem for minmax regret policies,,2018-03-20
10.1109/ICDM.2003.1251007,Center-based indexing for nearest neighbors search,,2017-03-20
10.1016/j.amc.2020.125510,Range searching in multidimensional databases using navigation metadata,,2020-03-20
10.1007/978-3-662-45586-9_14,Control Methods in Microspheres Precision Assembly for Colloidal Lithography,,2018-03-20
10.1007/978-3-319-29659-3_9,Time- and Location-Sensitive Recommender Systems,,2015-03-20
10.1109/ICCCSN.2012.6215710,Real-time rendering for massive terrain data using GPUs,,2015-03-20
10.1109/ANTHOLOGY.2013.6784989,Research of indexing techniques for GIS spatial data,,2011-03-20
10.1515/cdbme-2017-0189,Towards a better understanding of the overall health impact of the game of squash: automatic and high-resolution motion analysis from a single camera view,,2012-03-20
10.1007/978-3-642-21458-5_32,A Coarse-to-Fine Approach to Computing the k-Best Viterbi Paths,,2014-03-20
10.1007/978-3-030-47426-3_31,Image Analysis Enhanced Event Detection from Geo-Tagged Tweet Streams,,2018-03-20
10.1109/CMPSAC.2004.1342682,Spatial data query support in peer-to-peer systems,,2016-03-20
10.2514/6.2019-2680,Aeroacoustic Reduced-Order Models Based on a priori/posteriori Data Analysis,,2015-03-20
10.1109/BigData.2015.7363792,Cost-efficient partitioning of spatial data on cloud,,2020-03-20
10.1007/978-3-030-29948-4_7,Enabling Standard Geospatial Capabilities in Spark for the Efficient Processing of Geospatial Big Data,,2018-03-20
10.1016/j.jvcir.2008.09.007,Video quality and system resources: Scheduling two opponents,,2014-03-20
10.1109/MAHSS.2008.4660021,Distributed online data aggregation for large scale sensor networks,,2013-03-20
10.1109/ISPA.2013.6703810,Elementary algorithms for multiresolution geometric tomography with strip model of projections,,2017-03-20
10.1017/S143192760999122X,Visualization of localization microscopy data.,,2017-03-20
10.18419/opus-3540,Visual Analytics of Social Media for Situation Awareness,,2014-03-20
10.1109/HPCC-SmartCity-DSS.2017.35,An Efficient Type-Agnostic Approach for Finding Sub-sequences in Data,,2011-03-20
10.1145/3221269.3223031,Multidimensional range queries on modern hardware,,2018-03-20
10.1016/j.cma.2020.113088,An intelligent nonlinear meta element for elastoplastic continua: deep learning using a new Time-distributed Residual U-Net architecture,,2018-03-20
10.1109/TKDE.2017.2690288,Geo-Social Influence Spanning Maximization,,2018-03-20
10.1007/978-3-319-15024-6_5,Can Road Traffic Volume Information Improve Partitioning for Distributed SUMO,,2019-03-20
10.1109/IROS.2011.6094769,Deterministic Kinodynamic Planning with hardware demonstrations,,2017-03-20
10.1016/j.jpdc.2020.11.004,Hybrid KNN-join: Parallel nearest neighbor searches exploiting CPU and GPU architectural features,,2019-03-20
10.1109/ICCES.2014.7030935,Experimental evaluation of some geodata management systems,,2018-03-20
10.1109/AISPC.2008.4460543,Indexing moving objects in main memory,,2020-03-20
10.1145/3132847.3132969,Interactive Spatial Keyword Querying with Semantics,,
10.4230/LIPIcs.AofA.2018.9,Permutations in Binary Trees and Split Trees,,2018-03-20
10.1109/ICDE.2019.00032,G*-Tree: An Efficient Spatial Index on Road Networks,,2018-03-20
10.1515/opar-2017-0006,Portable XRF on Prehistoric Bronze Artefacts: Limitations and Use for the Detection of Bronze Age Metal Workshops,,2017-03-20
10.14778/2733004.2733026,MESA: A Map Service to Support Fuzzy Type-ahead Search over Geo-Textual Data,,2015-03-20
10.14778/1454159.1454246,Community-driven data grids,,2020-03-20
10.1239/aap/1300198518,Partial match queries in two-dimensional quadtrees: a probabilistic approach,,2013-03-20
10.1080/07038992.2020.1805729,A Comprehensive Survey of Optical Remote Sensing Image Segmentation Methods,,2014-03-20
10.1016/j.comgeo.2017.02.001,Amortized analysis of smooth quadtrees in all dimensions,,2012-03-20
10.1016/j.jcp.2017.08.011,A cellular automaton - finite volume method for the simulation of dendritic and eutectic growth in binary alloys using an adaptive mesh refinement,,2016-03-20
10.1109/MWC.2012.6155874,Privacy protection for users of location-based services,,2018-03-20
10.12957/CADINF.2012.7586,Visualização da manipulação de dados em Point Quadtrees,,2012-03-20
10.2478/atd-2018-0002,Considerations on Intellectual and Academic Leadership of a Scholar in Higher Education: The Descriptive Literature Review,,2012-03-20
10.1109/SERVICES.2013.60,Towards Smarter Task Applications,,2014-03-20
10.5194/ISPRS-ARCHIVES-XLII-4-W4-447-2017,Towards a Cloud Based Smart Traffic Management Framework,,2015-03-20
10.1109/TKDE.2010.77,Effectively Indexing the Uncertain Space,,2019-03-20
10.1007/978-1-4614-2326-3_16,Are Clouds Ready for Geoprocessing,,2014-03-20
10.1016/j.cageo.2013.01.019,Sorted pulse data (SPD) library. Part I: A generic file format for LiDAR data from pulsed laser systems in terrestrial environments,,2020-03-20
10.18452/19786,Efficient Processing of Range Queries in Main Memory,,2016-03-20
10.1145/2452376.2452419,Scalable top-k spatial keyword search,,2011-03-20
10.4108/ICST.SIMUTOOLS.2013.251691,Spatial indexing in agent-based crowd simulation,,2020-03-20
10.3929/ETHZ-A-006231389,Motion estimation from tomographic projections,,2018-03-20
10.1007/978-3-540-31965-8_29,Supercover Model and Digital Straight Line Recognition on Irregular Isothetic Grids,,2011-03-20
10.1109/ICHIS.2004.80,Reinforcement learning/spl I.bar/hierarchical neuro-fuzzy politree model for control of autonomous agents,,2012-03-20
10.1109/TVCG.2018.2865049,MotionRugs: Visualizing Collective Trends in Space and Time,,2016-03-20
10.1017/cbo9780511781636,Data Management for Multimedia Retrieval,,2018-03-20
10.1145/2379776.2379784,Agent-based simulation for large-scale emergency response: A survey of usage and implementation,,2015-03-20
10.1007/s10619-010-7070-7,Irregularity in high-dimensional space-filling curves,,2012-03-20
10.1007/978-3-030-59419-0_23,HEGJoin: Heterogeneous CPU-GPU Epsilon Grids for Accelerated Distance Similarity Join,,2012-03-20
10.1080/14498596.2020.1739575,An improved algorithm for dynamic nearest-neighbour models,,2014-03-20
10.1007/978-3-319-22849-5_3,An Efficient Distributed Index for Geospatial Databases,,2019-03-20
10.1080/10618600.2016.1231064,Adaptive  Delayed-Acceptance MCMC for Targets With Expensive Likelihoods,,2014-03-20
10.1145/2554850.2554863,Finding targets with the nearest favor neighbor and farthest disfavor neighbor by a skyline query,,2018-03-20
10.1145/997817.997836,A scalable simulator for forest dynamics,,2018-03-20
10.1145/2396761.2396812,Location-aware instant search,,2015-03-20
10.1016/J.COMMATSCI.2010.11.009,Semi-stochastic generator (FraGMA) of 2D fractured media by mechanistic analogy – Application to reactive transport in a fractured package of vitrified nuclear waste,,2011-03-20
10.1007/s10619-019-07275-w,BBoxDB: a distributed and highly available key-bounding-box-value store,,2020-03-20
10.1162/neco_a_01255,Transition Scale-Spaces: A Computational Theory for the Discretized Entorhinal Cortex,,2015-03-20
10.1007/978-3-642-31046-1_14,Case Study: Numerical Simulation on Spacetree Grids Using Space-Filling Curves,,2015-03-20
10.1137/1.9781611973099.83,Partial match queries in random quadtrees,,2017-03-20
10.1109/ICODSE.2018.8705804,Region of Interest Mining Using Stay Point Detection and Point Region Quadtree,,2018-03-20
10.1007/978-3-662-54434-1_21,APLicative Programming with Naperian Functors,,2018-03-20
10.1016/B978-0-12-813526-6.00004-0,Computational Intelligence Modelling,,2015-03-20
10.1007/978-3-030-60508-7_2,Monitoring Spatio-Temporal Properties (Invited Tutorial),,2013-03-20
10.25560/17841,Power extraction circuits for piezoelectric energy harvesters and time series data in water supply systems,,2011-03-20
10.1109/ICIG.2013.30,Inter-slice Resolution Improvement of Lung 4D-CT via Adaptively Patch Partition and Sparse Representation,,2012-03-20
10.1109/icomssc45026.2018.8941856,Quadtree-based KNN Search on Road Networks,,2013-03-20
10.1109/ICVRV.2014.10,Stereoscopic Image Recoloring via Consistent Intrinsic Decomposition,,2016-03-20
10.2478/s11532-007-0004-1,Sub-millivolt amplitude potential oscillations observed in the noise of hydrogen evolution on Ag and Cu microelectrodes,,2013-03-20
10.3390/info9050116,Vector Spatial Big Data Storage and Optimized Query Based on the Multi-Level Hilbert Grid Index in HBase,,2018-03-20
10.1145/3019612.3019846,A quadtree replication method to optimize web and mobile applications dealing with large sets of objects on a map,,2011-03-20
10.1007/978-3-030-48325-8,Computer Science – CACIC 2019: 25th Argentine Congress of Computer Science  CACIC 2019  Río Cuarto  Argentina  October 14–18  2019  Revised Selected Papers,,2015-03-20
10.1109/TKDE.2013.21,Effectively Indexing the Multidimensional Uncertain Objects,,2016-03-20
10.1109/EMBC.2015.7320284,Semiautomatic detection of villi in confocal endoscopy for the evaluation of celiac disease,,2015-03-20
10.1109/ACCESS.2019.2944545,Neuroevolutive Algorithms for Learning Gaits in Legged Robots,,2014-03-20
10.1016/j.ejor.2010.09.034,A primogenitary linked quad tree approach for solution storage and retrieval in heuristic binary optimization,,2015-03-20
10.1007/978-3-540-25940-4_47,Using Model-Based Diagnosis to Build Hypotheses about Spatial Environments: A Response to a Technical Challenge,,2017-03-20
10.1109/BigData47090.2019.9005999,Demo Paper: Large Scale Spatial Data Processing With User Defined Filters In BBoxDB,,2020-03-20
10.1109/CCIS.2016.7790279,A hybrid index for multi-dimensional query in HBase,,2020-03-20
10.1016/S0142-0615(03)00060-7,Electric load forecasting: evaluating the novel hierarchical neuro-fuzzy BSP model,,2013-03-20
10.1109/TKDE.2006.151,A Multiresolution Terrain Model for Efficient Visualization Query Processing,,2017-03-20
10.1145/1518701.1518703,Correlating low-level image statistics with users - rapid aesthetic and affective judgments of web pages,,2015-03-20
10.1109/GEOINFORMATICS.2011.5980762,An effective method for interpolation,,2012-03-20
10.1016/j.cag.2015.01.007,Massive point cloud data management: Design  implementation and execution of a point cloud benchmark,,2019-03-20
10.1016/j.patcog.2006.04.045,A survey of content-based image retrieval with high-level semantics,,2020-03-20
10.1049/PBCS053E_ch9,Reconfigurable and approximate computing for video coding,,2012-03-20
10.1177/2399808319892598,On solving large p-median problems,,2011-03-20
10.1515/9783038213925.97,City Portraits and Caricatures,,2017-03-20
10.4028/www.scientific.net/AMM.135-136.37,A High-Efficient Data Model of Road Network in Vehicle Navigation System,,2019-03-20
10.1145/2063576.2063641,Text vs. space: efficient geo-search query processing,,2013-03-20
10.3166/tsi.31.337-373,Vérification partielle de programmes de contrôle-commande par interprétation abstraite,,2015-03-20
10.1109/MOBIQ.2007.4450998,Assessing Standard and Inverted Skip Graphs Using Multi-Dimensional Range Queries and Mobile Nodes,,2015-03-20
10.1109/ICDMW.2014.46,R-HBase: A Multi-dimensional Indexing Framework for Cloud Computing Environment,,2019-03-20
10.1109/TKDE.2013.169,Querying Distributed Spatial Datasets with Unknown Regions,,2019-03-20
10.1007/978-0-387-39940-9_355,Spatial Indexing Techniques,,2013-03-20
10.1109/PCCC.2018.8710770,A Road-Aware Spatial Mapping for Moving Objects,,2015-03-20
10.3929/ETHZ-A-006100288,Large-scale agent-based travel demand optimization applied to Switzerland  including mode choice,,2013-03-20
10.14778/2536360.2536365,Skyline Operator on Anti-correlated Distributions,,2016-03-20
10.1007/978-3-540-75757-3_115,Robust Computation of Mutual Information Using Spatially Adaptive Meshes,,2020-03-20
10.1155/2015/736138,A Comprehensive Study on Pathfinding Techniques for Robotics and Video Games,,2015-03-20
10.1016/j.advengsoft.2007.07.005,A neuro-fuzzy evaluation of steel beams patch load behaviour,,2019-03-20
10.23956/IJERMT.V6I6.291,A Comparative Analysis of Spatial Indexing Schemes in PostGreSQL/PostGIS Using Java-API,,2012-03-20
10.1007/978-3-642-21257-4_61,A Distance for Partially Labeled Trees,,2015-03-20
10.1109/TKDE.2016.2590435,Mutually Beneficial Confluent Routing,,2019-03-20
10.1145/2791347.2791375,Transparent inclusion  utilization  and validation of main memory domain indexes,,2013-03-20
10.1007/s10766-014-0315-8,Downsampling Algorithms for Large Sparse Matrices,,2011-03-20
10.31274/rtd-20200803-206,Distribution independent parallel algorithms and software for hierarchical methods with applications to computational electromagnetics,,2014-03-20
10.1007/BF01759075,Dividedk-d trees,,2011-03-20
10.1023/B:ANOR.0000039513.99038.C6,Pareto Ant Colony Optimization: A Metaheuristic Approach to Multiobjective Portfolio Selection,,2017-03-20
10.1007/978-3-319-23519-6_1056-2,Quadtree and Octree,,2015-03-20
10.1007/s10844-006-0030-z,A scalable algorithm for dispersing population,,2017-03-20
10.1145/2975167.2975205,Library-Based Microbial Source Tracking via Strain Identification,,2017-03-20
10.1109/CLOUD.2013.78,HGrid: A Data Model for Large Geospatial Data Sets in HBase,,2017-03-20
10.1007/S13369-019-03968-7,Massive Point Cloud Space Management Method Based on Octree-Like Encoding,,2020-03-20
10.1007/11672142_1,The Ubiquitous Digital Tree,,2014-03-20
10.1007/978-1-4614-1415-5_25,Geospatial Data Management with Terrafly,,2011-03-20
10.1109/ICCD.2002.1106744,An efficient external-memory implementation of region query with application to area routing,,2017-03-20
10.1109/NCM.2009.360,"An Effective Scene Manager for the Online Game ""Chungmukong's Battle on the Sea'",,2012-03-20
10.5075/epfl-thesis-7952,Graph-based Methods for Visualization and Clustering,,2018-03-20
10.1007/978-3-642-34528-9_96,A Novel Spatial Indexing Mechanism Leveraging Dynamic Quad-Tree Regional Division,,2016-03-20
10.1109/ICCTEC.2017.00135,Quadtree-Based KNN Search on Road Networks,,2013-03-20
10.1109/SciVis.2018.8823761,FTLE Ridge Lines for Long Integration Times,,2013-03-20
10.15701/KCGS.2011.17.1.25,Photo Mosaics using Quad-tree structure on GPU,,2020-03-20
10.1109/EUROCON.2017.8011115,A linear time algorithm for rolling binary trees,,2012-03-20
10.1109/LRA.2019.2926957,Fast Classification of Large Germinated Fields Via High-Resolution UAV Imagery,,2017-03-20
10.1145/1363189.1363196,In-memory grid files on graphics processors,,2012-03-20
10.1109/ITNG.2008.259,Secured and Lossless Watermarking Technique for Patent Infringement,,2012-03-20
10.1007/s10619-012-7109-z,$\mathcal{MD}$-HBase: design and implementation of an elastic data infrastructure for cloud-scale location services,,2018-03-20
10.7282/T3CZ367X,Improving performance  privacy and relevance of location-based services for mobile users,,2020-03-20
10.1587/TRANSINF.2015DAP0005,The Efficient Algorithms for Constructing Enhanced Quadtrees Using MapReduce,,2014-03-20
10.1145/1353343.1353425,Highly scalable trip grouping for large-scale collective transportation systems,,2018-03-20
10.1109/DS-RT.2010.17,Supporting Multi-dimensional Range Query in HD Tree,,2014-03-20
10.17863/CAM.16306,Applying single-molecule localisation microscopy to achieve virtual optical sectioning and study T-cell activation,,2014-03-20
10.1109/ITSC.2015.160,Determining the Nonexistence of Evasive Trajectories for Collision Avoidance Systems,,2018-03-20
10.1002/cnm.2725,Mixed-element Octree: a meshing technique toward fast and real-time simulations in biomedical applications.,,2016-03-20
10.1145/2882903.2882912,Distributed Evaluation of Top-k Temporal Joins,,2015-03-20
10.1145/2806416.2806422,Sampling Big Trajectory Data,,2018-03-20
10.1109/SERA.2017.7965744,Data structure and triangulation algorithm for non-uniform landscapes,,2013-03-20
10.5589/m13-001,Removal of spatial inconsistency and shape disagreement for conflation of road maps with aerial images,,2013-03-20
10.1007/s00779-017-1008-2,Data fusion in automotive applications,,2016-03-20
10.1108/HFF-04-2017-0143,Simulation of a macrosegregation benchmark with a meshless diffuse approximate method,,2016-03-20
10.5194/ISPRS-ARCHIVES-XLII-2-1207-2018,Plane-Based Registration of Several Thousand Laser Scans on Standard Hardware,,2019-03-20
10.4230/LIPIcs.SoCG.2018.45,Dynamic Smooth Compressed Quadtrees,,2016-03-20
10.1109/MIC.2006.92,A Distributed Geotechnical Information Management and Exchange Architecture,,2012-03-20
10.14778/1920841.1920963,A*-tree,,2015-03-20
10.1007/978-3-030-03232-6_2,Self-stabilizing Overlays for high-dimensional Monotonic Searchability,,2016-03-20
10.1109/ASONAM.2018.8508468,SiNA: A Scalable Iterative Network Aligner,,2013-03-20
10.1109/TKDE.2018.2845414,On Spatial-Aware Community Search,,2020-03-20
10.1007/3-540-47789-6_69,Space Tree Structures for PDE Software,,2017-03-20
10.3844/JCSSP.2007.948.955,Functional Link Artificial Neural Network for Classification Task in Data Mining,,2012-03-20
10.1109/INDIN.2016.7819276,Subdivision and homogenization of cells in heterogeneous rectangular dissections by an octal grid graph model,,2012-03-20
10.1016/j.path.2016.02.001,Image Analysis in Surgical Pathology.,,2011-03-20
10.1109/GCC.2008.8,A History-Based Motion Prediction Method for Mouse-Based Navigation in 3D Digital City,,2015-03-20
10.1016/S1005-8885(09)60468-4,HPSIN： a new hybrid P2P spatial indexing network,,2020-03-20
10.1007/978-3-030-37731-1_30,3D Spatial Coverage Measurement of Aerial Images,,2020-03-20
10.1016/J.SPA.2018.08.014,A limit field for orthogonal range searches in two-dimensional random point search trees,,2017-03-20
10.1109/TMC.2017.2711027,Spatio-Temporal Linkage over Location-Enhanced Services,,2019-03-20
10.1111/cgf.12446,Super 4PCS Fast Global Pointcloud Registration via Smart Indexing,,2019-03-20
10.1016/J.ENGANABOUND.2018.10.023,A novel method for estimation of intensity and location of multiple point heat sources based on strain measurement,,2016-03-20
10.1093/comjnl/bxl035,Persistent Semi-Dynamic Ordered Partition Index,,2015-03-20
10.1016/j.entcs.2010.09.008,Quadtrees as an Abstract Domain,,2016-03-20
10.1016/j.inffus.2012.08.006,Spatial query processing in wireless sensor networks - A survey,,2019-03-20
10.1145/3418287,Data-driven Distributionally Robust Optimization For Vehicle Balancing of Mobility-on-Demand Systems,,2017-03-20
10.1515/cjot-2018-0010,New Trends in Geoproducts Development: Železné Hory National Geopark Case Study,,2014-03-20
10.1007/978-3-540-88313-5_12,Access Control Friendly Query Verification for Outsourced Data Publishing,,2012-03-20
10.1007/978-3-8350-9064-4_4,Nachbarschaftssuche bei mehrkriteriellen Flow Shop Problemen,,2011-03-20
10.2514/6.2005-6205,Real-Time Model of Wake Vortices Based on Large Eddy Simulation Datasets,,2015-03-20
10.1016/j.dam.2010.03.014,A theory of decomposition into prime factors of layered interconnection networks,,2016-03-20
10.1016/j.elerap.2010.08.007,A hybrid communication solution to distributed moving query monitoring systems,,2013-03-20
10.1109/MDM.2016.46,D-Grid: An In-Memory Dual Space Grid Index for Moving Object Databases,,2019-03-20
10.1145/2487575.2487576,Who  where  when and what: discover spatio-temporal topics for twitter users,,2015-03-20
10.1016/j.jcp.2018.02.004,Lagrangian particle method for compressible fluid dynamics,,2016-03-20
10.1080/17538947.2018.1523957,A hierarchical indexing strategy for optimizing Apache Spark with HDFS to efficiently query big geospatial raster data,,2017-03-20
10.1109/SERVICES.2015.24,Antares: A Scalable  Real-Time  Fault Tolerant Data Store for Spatial Analysis,,2012-03-20
10.1109/CDC.2016.7798907,Pattern synthesis in a 3D agent-based model of stem cell differentiation,,2019-03-20
10.1145/1629335.1629361,Exploring parallelization strategies for NUFFT data translation,,2014-03-20
10.5075/EPFL-THESIS-2690,Scalable intelligent electronic catalogs,,2017-03-20
10.1109/ACCESS.2020.2974764,A Distributed Storage and Computation k-Nearest Neighbor Algorithm Based Cloud-Edge Computing for Cyber-Physical-Social Systems,,2012-03-20
10.1145/2442968.2442976,Techniques to protect privacy against inference attacks in location based services,,2016-03-20
10.1371/journal.pone.0166126,Vidjil: A Web Platform for Analysis of High-Throughput Repertoire Sequencing,,2020-03-20
10.1007/978-3-030-48325-8_17,MeTree: A Metric Spatial Index,,2019-03-20
10.1016/j.advengsoft.2014.12.001,Data structures and algorithms for high-dimensional structured adaptive mesh refinement,,2020-03-20
10.1016/j.tcs.2015.12.015,Tight bounds in the quadtree complexity theorem and the maximal number of pixels crossed by a curve of given length,,2017-03-20
10.1515/popets-2016-0029,Location Privacy with Randomness Consistency,,2017-03-20
10.1109/ICDE.2014.6816707,Interactive hierarchical tag clouds for summarizing spatiotemporal social contents,,2014-03-20
10.1109/BMSB.2016.7521948,Perceptually meaningful quadtree decomposition using dual-homogeneous criteria,,2012-03-20
10.1109/ROBOT.2010.5509782,Towards optimally efficient field estimation with threshold-based pruning in real robotic sensor networks,,2020-03-20
10.2312/LOCALCHAPTEREVENTS/ITALIANCHAPCONF2006/267-271,Smart Ideas for Photomosaic Rendering,,2014-03-20
10.1145/3393527.3393556,Context-aware Location Search on Maps,,2015-03-20
10.1007/978-3-030-59416-9_48,Spatial Dynamic Searchable Encryption with Forward Security,,2019-03-20
10.3929/ETHZ-A-006686309,High-resolution destination choice in agent-based demand models,,2020-03-20
10.1007/s00778-017-0483-4,Package queries: efficient and scalable computation of high-order constraints,,2019-03-20
10.1007/s10707-018-0329-2,Spatio-temporal access methods: a survey (2010 - 2017),,2013-03-20
10.1145/3018661.3018678,Semantic-aware Query Processing for Activity Trajectories,,2014-03-20
10.1109/VETECS.2012.6240251,Scalable VANET Simulations with NS-3,,2012-03-20
10.1109/BIBE.2016.17,2D Adaptive Grid-Based Image Analysis Approach for Biological Networks,,2015-03-20
10.1145/2386995.2386997,CTOD: collaborative tree-based outlier detection in wireless sensor networks,,2012-03-20
10.1007/978-3-642-40148-0_12,Distributed B-Tree with Weak Consistency,,2017-03-20
10.1109/ICCAS.2010.5670124,Development of a sensor knowledge store using a Quadtree algorithm to support autonomous vehicle path planning,,2013-03-20
10.25911/5D611E273981B,Fast and Optimal Pathfinding,,2020-03-20
10.3390/IJGI6040100,Affine-Invariant Triangulation of Spatio-Temporal Data with an Application to Image Retrieval,,2016-03-20
10.1118/1.3050159,Compression and smart coding of offset and gain maps for intraoral digital x-ray sensors.,,2016-03-20
10.2316/Journal.201.2014.1.201-2516,Optimizing pyramid visibiliy coverage for autonomous robots in 3D environment,,2017-03-20
10.1007/s10707-019-00361-2,A spatially-pruned vertex expansion operator in the Neo4j graph database system,,2016-03-20
10.1109/WI-IAT.2011.171,Clustering and Visualizing Geographic Data Using Geo-tree,,2018-03-20
10.1016/B978-0-12-811986-0.00013-3,CUDA dynamic parallelism,,2012-03-20
10.1109/TIP.2009.2017360,Semi-Automatically Labeling Objects in Images,,2013-03-20
10.7551/978-0-262-31709-2-ch077,Evolving gene regulatory networks controlling foraging strategies of prey and predators in an artificial ecosystem,,2014-03-20
10.1007/978-3-642-54516-0_2,Analogies Between Binary Images: Application to Chinese Characters,,2019-03-20
10.1007/s00466-020-01916-z,Efficient analysis of dense fiber reinforcement using a reduced embedded formulation,,2017-03-20
10.1016/J.PROENV.2011.09.126,A New Color Feature Extraction Method Based on QuadHistogram,,2012-03-20
10.1145/1551609.1551641,Collaborative query coordination in community-driven data grids,,2015-03-20
10.1515/phys-2017-0026,Research on the method of information system risk state estimation based on clustering particle filter,,2017-03-20
10.1007/978-3-030-17642-6_22,An Efficient In-Memory R-Tree Construction Scheme for Spatio-Temporal Data Stream,,2012-03-20
10.1142/S0219649207001846,Support-Less Association Rule Mining Using Tuple Count Cube,,2020-03-20
10.1016/J.JPDC.2019.06.005,Accelerating the similarity self-join using the GPU,,2011-03-20
10.1007/978-3-662-05300-3_8,Indexing and Retrieving High Dimensional Visual Features,,2019-03-20
10.1109/ICIS.2017.7960116,Ridge line detection of terrain maps represented by homogeneous triangular dissections,,2019-03-20
10.1109/BigData47090.2019.9006284,Spatio-temporal Event Detection using Poisson Model and Quad-tree on Geotagged Social Media,,2011-03-20
10.1080/10407790.2019.1580048,Solution of incompressible fluid flow problems with heat transfer by means of an efficient RBF-FD meshless approach,,2011-03-20
10.1145/1146909.1147033,Architecture-aware FPGA placement using metric embedding,,2012-03-20
10.1109/CDC.2014.7039367,A formal methods approach to pattern synthesis in reaction diffusion systems,,2020-03-20
10.1145/3397536.3426358,A Tutorial on Learned Multi-dimensional Indexes,,2014-03-20
10.3390/RS11091087,Automatic Data Selection and Boresight Adjustment of LiDAR Systems,,2020-03-20
10.1109/MDM.2015.67,Interactive and Scalable Exploration of Big Spatial Data -- A Data Management Perspective,,2019-03-20
10.1145/2996913.2996944,On-demand aggregation of gridded data over user-specified spatio-temporal domains,,2018-03-20
10.1007/s10922-013-9287-z,A Survey of Methods for Finding Outliers in Wireless Sensor Networks,,2017-03-20
10.1080/13875868.2010.512673,The Approximation of Two-Dimensional Spatial Objects by Two Bounding Rectangles,,2012-03-20
10.1109/GEOINFORMATICS.2011.5981041,A self-index GML storage approach based on element coding,,2019-03-20
10.1109/DAC.2002.1012694,An efficient routing database,,2011-03-20
10.1111/j.1467-9671.2004.00187.x,A Hybrid Spatio-Temporal Data Model and Structure (HST-DMS) for Efficient Storage and Retrieval of Land Use Information,,2017-03-20
10.1109/ICRA.2019.8794324,Online Continuous Mapping using Gaussian Process Implicit Surfaces,,2016-03-20
10.1137/S0097539700368527,A Probabilistic Analysis of Trie-Based Sorting of Large Collections of Line Segments in Spatial Databases,,2016-03-20
10.1007/978-3-319-22849-5_4,The xBR ^+ -tree: An Efficient Access Method for Points,,2019-03-20
10.1109/TVCG.2015.2467331,JiTTree: A Just-in-Time Compiled Sparse GPU Volume Data Structure,,2014-03-20
10.5120/ijca2017913414,A Comparative Study of Graph Isomorphism Applications,,2014-03-20
10.1007/978-3-642-14980-1_28,New Partially Labelled Tree Similarity Measure: A Case Study,,2020-03-20
10.1109/MDM.2010.95,A Communication Efficient Framework for Finding Outliers in Wireless Sensor Networks,,2020-03-20
10.1142/S0218126619500658,DHC: A Distributed Hierarchical Clustering Algorithm for Large Datasets,,2015-03-20
10.4203/ccp.89.150,Application of Binary Spatial Partitioning to Computer Aided Design,,2012-03-20
10.1109/TKDE.2015.2457899,Finding Top k Most Influential Spatial Facilities over Uncertain Objects,,2019-03-20
10.1109/IADCC.2014.6779398,Perfect Hashing Base R-tree for multiple queries,,2019-03-20
10.1109/ICMLA51294.2020.00190,Geographic Boosting Tree: Modeling Non-Stationary Spatial Data,,2011-03-20
10.1109/TRO.2011.2169619,On Optimizing Autonomous Pipeline Inspection,,2020-03-20
10.1007/s11704-012-1120-4,An efficient approach for continuous density queries,,2011-03-20
10.1371/journal.pone.0172249,Correction: Vidjil: A Web Platform for Analysis of High-Throughput Repertoire Sequencing,,2014-03-20
10.1007/978-0-387-39934-8_15,The Noisy Euclidean Traveling Salesman Problem: A Computational Analysis,,2013-03-20
10.1109/TKDE.2015.2493531,Venus: Scalable Real-Time Spatial Queries on Microblogs with Adaptive Load Shedding,,2016-03-20
10.1007/978-3-030-01132-1_15,Multi-graph Frequent Approximate Subgraph Mining for Image Clustering,,2012-03-20
10.1007/978-3-319-91455-8_3,Time-Based Trajectory Data Partitioning for Efficient Range Query,,2011-03-20
10.1109/TKDE.2011.163,Software Fault Prediction Using Quad Tree-Based K-Means Clustering Algorithm,,2017-03-20
10.1145/2037715.2037788,Real-Time Terrain Modeling Using CPU-GPU Coupled Computation,,2020-03-20
10.1109/SIBGRAPI.2011.28,Real-Time Terrain Modeling Using CPU-GPU Coupled Computation,,2015-03-20
10.1137/070681727,Bottom-Up Construction and 2: 1 Balance Refinement of Linear Octrees in Parallel,,2011-03-20
10.1016/J.COMPFLUID.2010.09.002,Towards an adaptive POD/SVD surrogate model for aeronautic design,,2012-03-20
10.1109/ICC.2009.5199556,Using Area Hierarchy for Multi-Resolution Storage and Search in Large Wireless Sensor Networks,,2019-03-20
10.1145/1871940.1871957,Time-HOBI: indexing dimension hierarchies by means of hierarchically organized bitmaps,,2011-03-20
10.5772/9430,QuadR-Tree Indexing Selection Engine for Tuning Spatial Database System using Mobile Geographical Information System Technology,,2011-03-20
10.1016/j.knosys.2017.11.038,Semantic Enrichment of Mobile Phone Data Records Using Background Knowledge,,2019-03-20
10.3390/ATMOS9050200,A Nowcasting Model for Tropical Cyclone Precipitation Regions Based on the TREC Motion Vector Retrieval with a Semi-Lagrangian Scheme for Doppler Weather Radar,,2014-03-20
10.18419/OPUS-9027,Dense image matching for close range photogrammetry,,2015-03-20
10.1007/s11707-012-0333-z,A pyramid-based approach to visual exploration of a large volume of vehicle trajectory data,,2015-03-20
10.1109/TBDATA.2017.2651898,An Extended Spatio-Temporal Granger Causality Model for Air Quality Estimation with Heterogeneous Urban Big Data,,2018-03-20
10.1016/j.jcp.2016.11.035,A cell-centred finite volume method for the Poisson problem on non-graded quadtrees with second order accurate gradients,,2020-03-20
10.1371/journal.pone.0043254,The Limits of Mean-Field Heterozygosity Estimates under Spatial Extension in Simulated Plant Populations,,2013-03-20
10.1145/2247596.2247655,Effectively indexing the multi-dimensional uncertain objects for range searching,,2016-03-20
10.1007/978-1-4471-4075-7_12,Spatial Data Indexing and Point Location,,2017-03-20
10.1109/JCAI.2009.184,An Improved Density-based Spatial Clustering Algorithm Based on Key Factors of Object's Distribution,,2019-03-20
10.1007/978-3-642-28655-1_31,Quadtree-Based Gridfile: A New Grid for Spatial Data,,2016-03-20
10.1109/GEOINFORMATICS.2011.5980711,A novel method to manage very large raster data on distributed key-value storage system,,2012-03-20
10.1145/3127479.3132254,A scalable distributed spatial index for the internet-of-things,,2019-03-20
10.1007/s10922-020-09549-6,Big Spatial Data Management for the Internet of Things: A Survey,,2016-03-20
10.1109/ICDE.2016.7498361,The era of Big Spatial Data,,2019-03-20
10.1080/12460125.2014.940241,Dynamic cubing for hierarchical multidimensional data space,,2012-03-20
10.3990/1.9789036538527,Resilient in-network aggregation for vehicular networks,,2016-03-20
10.3390/jsan1010059,Techniques and Challenges of Data Centric Storage Scheme in Wireless Sensor Network,,2012-03-20
10.1145/2588555.2588569,Incremental elasticity for array databases,,2015-03-20
10.1002/sam.11218,Dual-tree fast exact max-kernel search,,2017-03-20
10.1016/j.ic.2011.07.001,A unifying approach to picture grammars,,2013-03-20
10.1137/120870761,An Optimized Sparse Approximate Matrix Multiply for Matrices with Decay,,2018-03-20
10.1101/2020.02.15.950873,A Bayesian nonparametric approach to super-resolution single-molecule localization,,2019-03-20
10.1287/trsc.2016.0719,Budgeting Time for Dynamic Vehicle Routing with Stochastic Customer Requests,,2018-03-20
10.1109/MMSE.2003.1254417,Non-uniform partition strategies for indexing high-dimensional data with different distributions,,2011-03-20
10.1007/978-3-319-67220-5_32,Nearest Neighborhood Determination Methods with Regard to Mobile Location-Based Application,,2018-03-20
10.5194/ISPRSARCHIVES-XL-5-615-2014,Filtering of Point Clouds from Photogrammetric Surface Reconstruction,,2020-03-20
10.1109/JSTARS.2016.2565519,Segmentation of Individual Trees From TLS and MLS Data,,2011-03-20
10.1007/BF02241781,Two general methods for dynamizing decomposable searching problems,,2016-03-20
10.21307/IJSSIS-2017-914,User behaviour monitoring using mobile phones to improve 5G services and performance,,2013-03-20
10.1111/j.1467-9671.2012.01355.x,Comparison of Different Strategies for Determining Raster-Based Least-Cost Paths with a Minimum Amount of Distortion,,2019-03-20
10.1109/NCA.2007.18,Enabling Skip Graphs to Process K-Dimensional Range Queries in a Mobile Sensor Network,,2012-03-20
10.5120/IJCA2016908526,Personalized Recommender System using Collaborative Filtering Technique and Pyramid Maintenance Algorithm,,2014-03-20
10.1109/ICDE.2004.1320099,Similarity search in multimedia databases,,2018-03-20
10.1007/978-3-642-22922-0_12,Thread-Level Parallel Indexing of Update Intensive Moving-Object Workloads,,2020-03-20
10.1080/09511920701575278,Aiding design with constraints: an extension of quad trees in order to deal with piecewise functions,,2020-03-20
10.1109/DSAA.2016.73,Maritime Pattern Extraction from AIS Data Using a Genetic Algorithm,,2018-03-20
10.1109/I4CS.2015.7294482,Generating meaningful location descriptions,,2013-03-20
10.1007/978-3-642-29023-7_22,A Grid-Based Index and Queries for Large-Scale Geo-tagged Video Collections,,2014-03-20
10.3390/MCA18030301,Cropped Quad-Tree Based Solid Object Colouring with Cuda,,2018-03-20
10.1080/15536548.2015.1045372,Location Privacy Protection for Smartphone Users Using Quadtree Entropy Maps,,2018-03-20
10.1109/SocialCom.2013.57,Tracking Visitor Engagement in the Blogosphere for Leveraging Rankings,,2020-03-20
10.1080/13658816.2017.1400548,Fast map matching  an algorithm integrating hidden Markov model with precomputation,,2011-03-20
10.1007/978-3-642-31046-1_8,Space-Filling Curves in 3D,,2012-03-20
10.1016/J.SSCI.2012.08.011,Crowd evacuation simulation for bioterrorism in micro-spatial environments based on virtual geographic environments,,2011-03-20
10.1109/BIGCOMP.2019.8679353,P-Index: A Novel Index Based on Prime Factorization for Similarity Search,,2016-03-20
10.1007/s10596-018-9789-6,Adaptive mesh refinement with an enhanced velocity mixed finite element method on semi-structured grids using a fully coupled solver,,2020-03-20
10.1007/s41060-018-0098-x,BJR-tree: fast skyline computation algorithm using dominance relation-based tree structure,,2020-03-20
10.1145/1240233.1240235,Phase changes in random point quadtrees,,2018-03-20
10.1016/J.PSS.2012.01.005,Sino-VirtualMoon: A 3D web platform using Chang’E-1 data for collaborative research,,2013-03-20
10.1007/s00778-013-0344-8,Correlated network data publication via differential privacy,,2020-03-20
10.15676/IJEEI.2017.9.2.12,Trajectory Pattern Mining with Multistage Spatial Partitioning,,2019-03-20
10.1016/j.mlwa.2020.100009,Crowd simulation for crisis management: the outcomes of the last decade,,2020-03-20
10.1002/nme.6390,A high‐order harmonic polynomial method for solving the Laplace equation with complex boundaries and its application to free‐surface flows. Part I: Two‐dimensional cases,,2012-03-20
10.1109/tkde.2020.3036633,Trajectory-Based Spatiotemporal Entity Linking,,2014-03-20
10.1109/ACSD.2005.2,An algebra of Pareto points,,2014-03-20
10.1016/j.pmcj.2013.12.002,TIP-tree: A spatial index for traversing locations in context-aware mobile access to digital libraries,,2020-03-20
10.1016/j.ins.2020.10.033,The F-transform preprocessing for JPEG strong compression of high-resolution images,,2016-03-20
10.1007/978-3-319-22363-6_12,Speed Partitioning for Indexing Moving Objects,,2011-03-20
10.1007/978-3-642-40104-6_43,Dynamic Planar Point Location with Sub-logarithmic Local Updates,,2016-03-20
10.1145/2695664.2695841,Shot-HR: a video shot representation method based on visual features,,2012-03-20
10.1109/TSC.2017.2777970,Privacy-Preserving Linear Region Search Service,,2014-03-20
10.1007/s10707-005-4577-6,SaIL: A Spatial Index Library for Efficient Application Integration,,2013-03-20
10.1007/978-3-319-13102-3_69,Geographic Service Discovery for the Internet of Things,,2012-03-20
10.1007/978-3-642-22922-0_39,Efficient Spatio-temporal Sensor Data Loading for a Sensor Web Browser,,2012-03-20
10.1007/978-3-642-31046-1_9,Refinement Trees and Space-Filling Curves,,2019-03-20
10.1016/j.envsoft.2015.11.015,Improving the computational efficiency of an agent-based spatiotemporal model of livestock disease spread and control,,2017-03-20
10.1117/12.2558168,Compute-bound and low-bandwidth distributed 3D graph-SLAM,,2015-03-20
10.1109/TKDE.2017.2705083,GALLOP: GlobAL Feature Fused LOcation Prediction for Different Check-in Scenarios,,2015-03-20
10.32657/10356/44882,Multi-resolution hybrid mapping for autonomous robots,,2012-03-20
10.11351/JSAERONBUN.41.175,車のMulti-Physics 連成シミュレーション,,2015-03-20
10.1145/1874413.1874415,Peer-to-peer location-based search: engineering a novel peer-to-peer overlay network,,2012-03-20
10.1007/978-3-642-33415-3_27,Non-local Means Resolution Enhancement of Lung 4D-CT Data,,2013-03-20
10.1504/IJAMC.2010.032139,QuON: a quad-tree-based overlay protocol for distributed virtual worlds,,2016-03-20
10.1109/ICDEW.2012.82,Reconstructing Spatial Distributions from Anonymized Locations,,2019-03-20
10.1007/978-3-642-21227-7_16,Real Time Surface Registration for PET Motion Tracking,,2013-03-20
10.1016/j.ins.2017.09.049,Nearest close friend search in geo-social networks,,2020-03-20
10.1016/J.FISHRES.2007.11.002,Improving light and temperature based geolocation by unscented Kalman filtering,,2014-03-20
10.1016/j.neuroimage.2007.01.013,Interactive visualization of multiresolution image stacks in 3D,,2016-03-20
10.2478/V10178-012-0021-Z,Mobile Navigation System for Visually Impaired Users in the Urban Environment,,2017-03-20
10.1109/ICCVW.2011.6130487,A surveillance video analysis and storage scheme for scalable synopsis browsing,,2011-03-20
10.1109/ICDE.2016.7498315,A GPU-based index to support interactive spatio-temporal queries over historical data,,2013-03-20
10.1186/s40537-020-00340-7,Big Data architecture for intelligent maintenance: a focus on query processing and machine learning algorithms,,2015-03-20
10.13097/archive-ouverte/unige:34300,Information-theoretic analysis of identification systems in large-scale databases,,2018-03-20
10.1016/J.AUTCON.2010.03.004,A physics-based simulation approach for cooperative erection activities,,2013-03-20
10.5194/ISPRS-ANNALS-IV-4-W2-7-2017,COMPARISON OF SPATIOTEMPORAL MAPPING TECHNIQUES FOR ENORMOUS ETL AND EXPLOITATION PATTERNS,,2020-03-20
10.7916/D8377GQ7,Thinc: a virtual and remote display architecture for desktop computing and mobile devices,,2016-03-20
10.1016/j.cels.2019.10.008,Automated Design of Pluripotent Stem Cell Self-Organization.,,2013-03-20
10.1007/978-3-030-04503-6_9,A hybrid index model for efficient spatio-temporal search in HBase,,2020-03-20
10.1007/11890393_12,Hybrid Index for Spatio-temporal OLAP Operations,,2016-03-20
10.1145/1830483.1830589,Evolving the placement and density of neurons in the hyperneat substrate,,2018-03-20
10.1007/s10458-020-09468-5,Complexity of planning for connected agents,,2019-03-20
10.1127/1432-8364/2012/0137,Identifying Correspondences in Sparse and Varying 3D Point Clouds using Distinctive Features,,2013-03-20
10.3929/ethz-a-006197144,Hardware architectures for point-based graphics,,2013-03-20
10.1016/j.jpdc.2011.04.003,HD Tree: A novel data structure to support multi-dimensional range query for P2P networks,,2019-03-20
10.1016/j.jweia.2020.104428,Bayesian optimization of typhoon full-track simulation on the Northwestern Pacific segmented by QuadTree decomposition,,2018-03-20
10.1371/journal.pgen.1008794,Exome-wide association study reveals largely distinct gene sets underlying specific resistance to dengue virus types 1 and 3 in Aedes aegypti,,2017-03-20
10.1080/13658816.2020.1778003,Adaptive simplification of GPS trajectories with geographic context – a quadtree-based approach,,2018-03-20
10.1214/105051606000000187,WIDTH AND MODE OF THE PROFILE FOR SOME RANDOM TREES OF LOGARITHMIC HEIGHT,,2013-03-20
10.32628/IJSRSET151422,Optimizing the Search in Hierarchical Database using Quad Tree,,2014-03-20
10.1145/2996913.2996986,GeoTrend: spatial trending queries on real-time microblogs,,2016-03-20
10.1109/ICCKE.2014.6993414,SpatialPDP: A personalized differentially private mechanism for range counting queries over spatial databases,,2016-03-20
10.1007/978-3-319-30515-8_4,Approximate Nearest Neighbor Search in Intelligent Classification Systems,,2015-03-20
10.5445/IR/1000057058,Real-Time Event Analysis and Spatial Information Extraction From Text Using Social Media Data,,2019-03-20
10.5120/5512-7504,Comparison of Advance Tree Data Structures,,2013-03-20
10.1117/12.896190,On the use of directional transforms for still image coding,,2013-03-20
10.1007/s10732-013-9229-7,Less-Than-Truckload carrier collaboration problem: modeling framework and solution approach,,2016-03-20
10.1007/978-1-4899-7993-3_355-3,Spatial Indexing Techniques,,2017-03-20
10.1007/s11786-017-0308-2,Real-time Animated Dynamic Geometry in the Classrooms by Using Fast Gröbner Basis Computations,,2016-03-20
10.1068/b130199p,Gradual rasterization: redefining spatial resolution in transport modelling,,2016-03-20
10.1007/978-3-540-30551-4_37,Randomized insertion and deletion in point quad trees,,2017-03-20
10.1109/CTS.2016.0087,An Evolutionary Algorithm for an Agent-Based Fleet Simulation Focused on Electric Vehicles,,2019-03-20
10.3390/app10207220,A Resilient Large-Scale Trajectory Index for Cloud-Based Moving Object Applications,,2014-03-20
10.1007/s00453-019-00667-5,Embedding Small Digraphs and Permutations in Binary Trees and Split Trees,,2019-03-20
10.1145/3159652.3160587,Supporting Large-scale Geographical Visualization in a Multi-granularity Way,,2018-03-20
10.1007/978-3-319-25017-5_12,Agent-Based Simulation of Crowds in Indoor Scenarios,,2017-03-20
10.1016/B978-0-12-409548-9.10340-9,Advances in Utilization of Hierarchical Representations in Remote Sensing Data Analysis,,2013-03-20
10.1145/3274895.3274932,Adaptive processing of spatial-keyword data over a distributed streaming cluster,,2014-03-20
10.1016/j.chemolab.2020.104076,A “big-data” algorithm for KNN-PLS,,2016-03-20
10.1007/978-3-319-68474-1_18,Succinct Quadtrees for Road Data,,2011-03-20
10.1109/RCAR.2017.8311949,Flash scanning: An ultra fast local scanning of complicated objects for PSD microscopy using 2D bisection,,2018-03-20
10.1007/978-3-642-31046-1_4,Arithmetic Representation of Space-Filling Curves,,2014-03-20
10.1109/MEMCOD.2014.6961863,Cost-efficient implementation of k-NN algorithm on multi-core processors,,2012-03-20
10.1109/HPCS.2018.00042,Optimizing Agent-Based Simulations for the GPU,,2015-03-20
10.1007/s00211-015-0785-7,A nearly optimal multigrid method for general unstructured grids,,2016-03-20
10.1007/3-540-45465-9_44,On the Average Performance of Orthogonal Range Search in Multidimensional Data Structures,,2012-03-20
10.1007/978-3-642-40235-7_9,Geodetic Distance Queries on R-Trees for Indexing Geographic Data,,2017-03-20
10.1007/s10115-017-1075-8,The largest empty circle with location constraints in spatial databases,,2014-03-20
10.1023/A:1012809914301,SP-GiST: An Extensible Database Index for Supporting Space Partitioning Trees,,2015-03-20
10.1109/ISPAW.2011.23,Brushstroke Control from Image Saliency,,2018-03-20
10.1007/978-3-319-05452-0_7,Geometric Layout Analysis in a Wearable Reading Device for the Blind and Visually Impaired,,2015-03-20
10.1007/978-3-642-31046-1_2,How to Construct Space-Filling Curves,,2016-03-20
10.5194/SE-5-741-2014,Plate tectonic raster reconstruction in GPlates,,2016-03-20
10.1145/2833312.2833314,D8-tree: a de-normalized approach for multidimensional data analysis on key-value databases,,2013-03-20
10.1109/DASC.2011.200,Parallel Range Query Processing on R-Tree with Graphics Processing Unit,,2018-03-20
10.14778/2904483.2904489,Scalable Package Queries in Relational Database Systems,,2020-03-20
10.1007/s11063-016-9556-4,Learning Sparse Feature Representations Using Probabilistic Quadtrees and Deep Belief Nets,,2015-03-20
10.1109/CCNC.2013.6488423,Plane segmentation and decimation of point clouds for 3D environment reconstruction,,2013-03-20
10.1016/j.jcp.2016.11.048,A Voronoi Interface approach to cell aggregate electropermeabilization,,2014-03-20
10.1145/2342896.2342998,A resolution reduction method for multi-resolution terrain maps,,2011-03-20
10.4028/WWW.SCIENTIFIC.NET/AMM.380-384.1605,The Model of Fuzzy Retrieval Based on External Index,,2017-03-20
10.1515/rnam-2017-0011,Fast topological-shape optimization with boundary elements in two dimensions,,2019-03-20
10.1007/S00158-017-1739-8,A survey of adaptive sampling for global metamodeling in support of simulation-based complex engineering design,,2019-03-20
10.1137/1.9781611974775.13,Partial Match Queries in Relaxed K-dt trees,,2011-03-20
10.1109/ISIDF.2011.6024229,An Internet-Based Visualization System for LIDAR Point Cloud,,2017-03-20
10.1007/978-3-540-30466-1_27,A New Dynamic Indexing Structure for Searching Time-Series Patterns,,2019-03-20
10.1145/956060.956070,Spatial hierarchy and OLAP-favored search in spatial data warehouse,,2014-03-20
10.5120/ijca2015907501,Cardinal Neighbor Quadtree: a New Quadtree-based Structure for Constant-Time Neighbor Finding,,2015-03-20
10.1007/11574798_11,Analogy-Based Reasoning in Classifier Construction,,2015-03-20
10.22215/etd/2018-12991,Distributed Real-Time Analysis of High-Velocity Many-Dimensional Data Sets,,2014-03-20
10.1016/j.cag.2005.10.009,Supercover model  digital straight line recognition and curve reconstruction on the irregular isothetic grids,,2014-03-20
10.1109/SSDBM.2007.10,Duplicate Elimination in Space-partitioning Tree Indexes,,2020-03-20
10.1145/1739041.1739092,Querying spatial patterns,,2018-03-20
10.1109/IVS.2013.6629556,Building variable resolution occupancy grid map from stereoscopic system — A quadtree based approach,,2019-03-20
10.1007/S10479-006-0063-2,A primogenitary linked quad tree data structure and its application to discrete multiple criteria optimization,,2015-03-20
10.1016/S0196-6774(02)00213-4,On the average performance of orthogonal range search in multidimensional data structures,,2015-03-20
10.1145/3154525,Large-Scale Indexing  Discovery  and Ranking for the Internet of Things (IoT),,2017-03-20
10.1109/ISCCSP.2014.6877833,An algorithm for counting line segments intersections using planar partitions,,2015-03-20
10.1109/ICDE.2003.1260787,Distance based indexing for string proximity search,,2014-03-20
10.1145/3344341.3368802,ATLAS: A Distributed File System for Spatiotemporal Data,,2011-03-20
10.1093/bioinformatics/bth359,QuickJoin - fast neighbour-joining tree reconstruction,,2015-03-20
10.1109/TIM.2020.3021514,Beyond Euclidean Distance for Error Measurement in Pedestrian Indoor Location,,2018-03-20
10.1145/3414685.3417875,Real-time rendering of decorative sound textures for soundscapes,,2020-03-20
10.3233/AIS-150338,Efficient customisable dynamic motion planning for assistive robots in complex human environments,,2016-03-20
10.14288/1.0166572,Transport-level transactions : simple consistency for complex scalable low-latency cloud applications,,2013-03-20
10.1016/j.amc.2019.125010,The n-dimensional k-vector and its application to orthogonal range searching,,2014-03-20
10.1162/ARTL_a_00071,An Enhanced Hypercube-Based Encoding for Evolving the Placement  Density  and Connectivity of Neurons,,2018-03-20
10.9708/JKSCI.2014.19.9.001,Task Balancing Scheme of MPI Gridding for Large-scale LiDAR Data Interpolation,,2019-03-20
10.1088/0305-4470/35/32/101,Phase Transition in a Random Fragmentation Problem with Applications to Computer Science,,2012-03-20
10.1016/j.ultramic.2013.10.014,Height drift correction in non-raster atomic force microscopy.,,2020-03-20
10.1016/j.patcog.2007.06.024,Unified 3D face and ear recognition using wavelets on geometry images,,2014-03-20
10.1177/1729881417750787,Cooperation between an unmanned aerial vehicle and an unmanned ground vehicle in highly accurate localization of gamma radiation hotspots,,2020-03-20
10.1007/978-3-319-19066-2_21,Multiobjective Optimization for the Stochastic Physical Search Problem,,2011-03-20
10.25148/ETD.FIDC000741,Online Moving Object Visualization with Geo-Referenced Data,,2015-03-20
10.1109/GRC.2009.5255026,Choosing the root node of a quadtree,,2015-03-20
10.1109/E-SCIENCE.2007.20,Community Training: Partitioning Schemes in Good Shape for Federated Data Grids,,2019-03-20
10.1016/j.future.2020.01.009,SwapQt: Cloud-based in-memory indexing of dynamic spatial data,,2019-03-20
10.1007/s00453-015-0097-4,On the Cost of Fixed Partial Match Queries in K-d Trees,,2020-03-20
10.1007/978-3-319-05461-2_6,On Index Structures for Star Query Processing in Data Warehouses,,2014-03-20
10.1007/978-3-319-05810-8_29,Efficient Processing of Probabilistic Group Nearest Neighbor Query on Uncertain Data,,2020-03-20
10.1364/AO.57.003444,Deformation reconstruction by means of surface optimization. Part II: time-resolved electronic speckle pattern interferometry.,,2016-03-20
10.1145/3299869.3300079,Designing Fair Ranking Schemes,,2019-03-20
10.1111/itor.12366,Siting of HIV/AIDS diagnostic equipment in South Africa: a case study in locational analysis,,2020-03-20
10.1109/BigData.2013.6691586,Spatio-temporal indexing in non-relational distributed databases,,2012-03-20
10.1007/BF02704178,Understanding search trees via statistical physics,,2015-03-20
10.1111/J.1467-8667.1993.TB00204.X,An Intelligent Vehicle Highway Information Management System,,2011-03-20
10.1007/978-3-642-31046-1_11,Locality Properties of Space-Filling Curves,,2011-03-20
10.4171/OWR/2011/23,Mini-Workshop: Random Trees  Information and Algorithms,,2011-03-20
10.1145/2213598.2213608,RecDB: towards DBMS support for online recommender systems,,2011-03-20
10.1109/CEC.2012.6256468,An adaptive data structure for evolutionary multi-objective algorithms with unbounded archives,,2012-03-20
10.1109/ACCESS.2013.2281080,GPU-Accelerated Visualization of Scattered Point Data,,2015-03-20
10.1007/s11042-012-1036-x,A multi-level depiction method for painterly rendering based on visual perception cue,,2011-03-20
10.1109/IIAI-AAI.2014.120,Translation and Projection Algorithms for Multiple Layer Images with a Hexadecimal Grid Graph Model,,2017-03-20
10.1109/FUZZ-IEEE.2017.8015614,A hybrid image compression algorithm based on JPEG and Fuzzy transform,,2017-03-20
10.1016/j.jss.2017.07.005,Efficient query processing on large spatial databases: A performance study,,2019-03-20
10.1109/ICC.2007.551,Distributed Quad-Tree for Spatial Querying in Wireless Sensor Networks,,2017-03-20
10.1088/1742-6596/513/5/052011,A well-separated pairs decomposition algorithm for k-d trees implemented on multi-core architectures,,2019-03-20
10.1109/TMI.2012.2202245,Hierarchical Patch-Based Sparse Representation—A New Approach for Resolution Enhancement of 4D-CT Lung Data,,2016-03-20
10.1109/ICDCS.2017.267,Scaling k-Nearest Neighbours Queries (The Right Way),,2015-03-20
10.5753/sibgrapi.est.2019.8304,Concomitant Hierarchy Construction and Rendering of Large Point Clouds,,2013-03-20
10.1109/TPAMI.2013.125,Trinary-Projection Trees for Approximate Nearest Neighbor Search,,2018-03-20
10.4018/978-1-60960-024-2.CH001,Intelligent Vision Systems for Landmark-Based Vehicle Navigation,,2019-03-20
10.1109/NCA.2015.17,A Scalable Architecture for Spatio-Temporal Range Queries over Big Location Data,,2017-03-20
10.1109/CRV.2009.37,A Generic Moment Invariants Based Supervised Learning Framework for Classification Using Partial Object Information,,2013-03-20
10.1007/BF01891833,Analytic variations on quadtrees,,2014-03-20
10.1631/jzus.C1100051,Accelerating geospatial analysis on GPUs using CUDA,,2013-03-20
10.1109/CVPR.2005.241,Multimodal face recognition: combination of geometry with physiological information,,2015-03-20
10.1016/j.ijar.2006.12.002,Operating with potentials of discrete variables,,2020-03-20
10.1109/TSMCB.2008.927730,PARM—An Efficient Algorithm to Mine Association Rules From Spatial Data,,2020-03-20
10.7551/978-0-262-32621-6-CH017,Evolution of Animats Following a Moving Target in an Artificial Ecosystem,,2011-03-20
10.14778/3352063.3352115,Machine Learning Meets Big Spatial Data,,2019-03-20
10.1145/2897937.2898074,QB-trees: Towards an optimal topological representation and its applications to analog layout designs,,2013-03-20
10.1080/13658816.2011.577746,Using cloud computing to process intensive floating car data for urban traffic surveillance,,2017-03-20
10.1109/GEOINFORMATICS.2011.5980977,Management and visualization of laser scanning point cloud data based on the virtual global platform,,2018-03-20
10.1007/s11390-012-1296-y,Data Structures in Multi-Objective Evolutionary Algorithms,,2018-03-20
10.1016/j.tcs.2015.12.030,Quad-kd trees: A general framework for kd trees and quad trees,,2018-03-20
10.1016/B978-0-08-099995-1.00011-7,Principles of Grid Generation,,2018-03-20
10.17535/CRORR.2014.0006,Approximation of Euclidean k-size cycle cover problem,,2012-03-20
10.1080/10798587.2009.10643019,Light Weight Majority Voting Based Data Accuracy Assurance Scheme for Wireless Sensor Networks Using Quadtree Topology,,2014-03-20
10.1109/TPAMI.2007.37,Intraclass Retrieval of Nonrigid 3D Objects: Application to Face Recognition,,2015-03-20
10.1007/s00778-018-0497-6,Augmented keyword search on spatial entity databases,,2020-03-20
10.1007/978-0-387-39940-9_2837,Indexing,,2014-03-20
10.1109/CSE.2013.74,Load Balancing for Real-Time  Location-Based Event Processing on Cloud Systems,,2019-03-20
10.1111/j.1467-8659.2009.01700.x,Winding Roads: Routing edges into bundles,,2018-03-20
10.1109/CAMAD.2018.8514950,In-memory Spatial-Aware Framework for Processing Proximity-Alike Queries in Big Spatial Data,,2012-03-20
10.7848/KSGPC.2013.31.4.259,k-Interest Places Search Algorithm for Location Search Map Service,,2013-03-20
10.14257/IJSEIA.2015.9.11.19,Efficient Processing of Nearest Surrounder Query for 3D Geospatial Data,,2018-03-20
10.1007/s11548-012-0783-5,Fast reconstructed radiographs from octree-compressed volumetric data,,2019-03-20
10.1109/CVPR.2005.573,Evaluation of 3D Face Recognition in the presence of facial expressions: an Annotated Deformable Model approach,,2011-03-20
10.1145/508791.508872,The P-tree algebra,,2018-03-20
10.1109/ACCESS.2018.2885651,A Decision Support System for Managing the Water Space,,2012-03-20
10.1007/978-1-4614-4981-2_237,Organization of LiDAR Point Cloud Based on 2D,,2014-03-20
10.14778/3007328.3007334,Fast and Adaptive Indexing of Multi-Dimensional Observational Data,,2018-03-20
10.1109/UCC.2013.46,Polygon-Based Query Evaluation over Geospatial Data Using Distributed Hash Tables,,2016-03-20
10.1016/j.knosys.2016.06.031,An efficient approximation to the K-means clustering for massive data,,2012-03-20
10.1145/3093754.3093761,A Scalable Execution Engine for Package Queries,,2015-03-20
10.1142/S021812661240004X,Automatic Parallel Code Generation for NUFFT Data Translation on multicores,,2016-03-20
10.1109/ICRA.2014.6907667,Quadtree sampling-based superpixels for 3D range data,,2018-03-20
10.1145/3360901.3364414,Interactive Supervision with t-SNE,,2012-03-20
10.1109/BigData.2015.7364035,On compressing massive streaming graphs with Quadtrees,,2018-03-20
10.1093/jigpal/jzu045,A novel hyperspectral segmentation algorithm - concept and evaluation,,2020-03-20
10.1109/MDM.2015.82,The Era of Big Spatial Data: Challenges and Opportunities,,2019-03-20
10.1007/s10707-018-0330-9,Spatial data management in apache spark: the GeoSpark perspective and beyond,,2014-03-20
10.1109/CASE.2011.6042492,Software tool for constructing cell decompositions,,2020-03-20
10.1016/j.engappai.2016.01.030,Improving graph-based image classification by using emerging patterns as attributes,,2013-03-20
10.1007/11788911_14,SC-Tree: An Efficient Structure for High-Dimensional Data Indexing,,2013-03-20
10.3390/mi10120796,Numerical Study of Electro-Osmotic Fluid Flow and Vortex Formation,,2018-03-20
10.1101/543801,Transition scale-spaces: A computational theory for the discretized entorhinal cortex,,2020-03-20
10.1016/j.patrec.2014.04.019,Fusion of ground truths and hierarchies of segmentations,,2018-03-20
10.1109/MDM.2014.37,ToSS-it: A Cloud-Based Throwaway Spatial Index Structure for Dynamic Location Data,,2016-03-20
10.1016/bs.adcom.2016.05.003,Indexing and Querying Techniques for Moving Objects in Both Euclidean Space and Road Network,,2017-03-20
10.1080/10106049.2019.1624987,Performance evaluation of spatial indexing to identify polygon intersection,,2011-03-20
10.1109/VAST50239.2020.00012,STULL: Unbiased Online Sampling for Visual Exploration of Large Spatiotemporal Data,,2012-03-20
10.11185/IMT.10.305,The Era of Big Spatial Data: A Survey,,2011-03-20
10.2991/eusflat.2013.79,Image compression methodology based on fuzzy transform using block similarity,,2018-03-20
10.1111/j.1467-8659.2007.01021.x,Digital Mosaic Frameworks ‐ An Overview,,2012-03-20
10.1541/IEEJEISS.136.1683,空間分割法を用いた線分交差列挙アルゴリズム;空間分割法を用いた線分交差列挙アルゴリズム;An Algorithm for Enumerating Intersections of Line Segments Using Space Segmentation Method,,2019-03-20
10.1155/2012/541890,Medical Image Compression Based on Vector Quantization with Variable Block Sizes in Wavelet Domain,,2013-03-20
10.1145/1255175.1255177,World explorer: visualizing aggregate data from unstructured text in geo-referenced collections,,2016-03-20
10.1145/3347146.3359384,An Investigation of Grid-enabled Tree Indexes for Spatial Query Processing,,2017-03-20
10.18419/OPUS-3894,Computational aeroacoustics with a high order discontinuous Galerkin scheme,,2013-03-20
10.1109/DSAA.2016.39,Closest Interval Join Using MapReduce,,2015-03-20
10.1109/ECMR.2017.8098717,Multi-robot human scene observation based on hybrid metric-topological mapping,,2015-03-20
10.17771/pucrio.acad.11695,Otimizacao Estat´ istica de Buscas para Estruturas Hierarquicas Espaciais,,2019-03-20
10.1109/TPAMI.2008.145,A Constant-Time Algorithm for Finding Neighbors in Quadtrees,,2016-03-20
10.4018/jisp.2010040101,Protecting User Privacy Better with Query l-Diversity,,2017-03-20
10.1007/978-3-540-76298-0_57,Spatially-Augmented Knowledgebase,,2016-03-20
10.1109/IROS.2015.7354302,Planning handovers involving humans and robots in constrained environment,,
10.1109/CSICSSE.2015.7369240,High performance GPU implementation of k-NN based on Mahalanobis distance,,2017-03-20
10.1007/978-3-642-32115-3_23,Optimization of Quadtree Representation and Compression,,2015-03-20
10.1109/ICIT.2016.7475018,A rotation algorithm for multiple layer images by a hexadecimal grid graph model,,2012-03-20
10.1016/j.knosys.2011.12.002,Frequent approximate subgraphs as features for graph-based image classification,,
10.5772/10691,Robust Navigation using Markov Models,,2015-03-20
10.5441/002/edbt.2019.16,BB-Tree: A practical and efficient main-memory index structure for multidimensional workloads,,2018-03-20
10.2312/EGGH/EGGH08/021-031,A hardware processing unit for point sets,,2011-03-20
10.1007/978-3-642-31046-1_3,Grammar-Based Description of Space-Filling Curves,,2012-03-20
10.1145/2245276.2245429,Row manipulation in the heterogeneous tabular forms with a hexadecimal grid graph model,,2012-03-20
10.13140/RG.2.1.2394.2485,A New Algorithm for Updating and Querying Sub-arrays of Multidimensional Arrays,,2020-03-20
10.1007/s11280-014-0294-0,G-Index Model: A generic model of index schemes for top-k spatial-keyword queries,,2015-03-20
10.1145/3299881,Scalable computation of high-order optimization queries,,2020-03-20
10.1109/ICMLA.2018.00066,Cognitive-Assisted Interactive Labeling of Skin Lesions and Blood Cells,,2019-03-20
10.1002/cpe.3160,Supporting multidimensional range queries in Hierarchically Distributed Tree,,2012-03-20
10.1201/9781420035179.pt4,Multidimensional Spatial Data Structures,,2016-03-20
10.1016/j.jenvman.2019.04.118,Supporting the improvement of air quality management practices: The “FAIRMODE pilot” activity,,2020-03-20
10.1016/j.cag.2020.06.006,Comparing navigation meshes: Theoretical analysis and practical metrics,,2020-03-20
10.1007/978-3-642-30344-9_8,On the Gradual Evolvement of Things,,2019-03-20
10.1587/TRANSINF.2017DAP0017,G-HBase: A High Performance Geographical Database Based on HBase,,2011-03-20
10.4230/LIPIcs.ICDT.2020.21,Optimal Joins using Compact Data Structures,,2012-03-20
10.1007/3-540-47887-6_7,Association Rule Mining on Remotely Sensed Images Using P-trees,,2019-03-20
10.1007/978-3-319-27149-1_46,Visual Localization Based on Quadtrees,,2012-03-20
10.1007/978-3-642-40270-8,Database Systems for Advanced Applications,,2018-03-20
10.1007/3-540-36970-8_36,A New Data Structure for the Nondominance Problem in Multi-objective Optimization,,2011-03-20
10.1007/978-1-4614-2326-3,Cloud Computing and Services Science,,2018-03-20
10.3390/rs5073259,Segmentation for High-Resolution Optical Remote Sensing Imagery Using Improved Quadtree and Region Adjacency Graph Technique,,2013-03-20
10.5565/REV/ELCVIA.618,Towards an interactive index structuring system for content-based image retrieval in large image databases. (Vers un système interactif de structuration des index pour une recherche par le contenu dans des grandes bases d'images),,2012-03-20
10.1007/S13319-016-0092-9,Cornered Quadtrees/Octrees and Multiple Gateways Between Each Two Nodes; A Structure for Path Planning in 2D and 3D Environments,,2015-03-20
10.1145/3002151.3002160,Hexagonal gridded maps and information layers: a novel approach for the exploration and analysis of retail data,,2012-03-20
10.1007/978-3-319-27140-8_27,Skyline Query on Anti-correlated Distributions: From the Perspective of Spatial Index,,2019-03-20
10.1080/19942060.2015.1071526,Numerical analysis of post-impact droplet deformation for direct-print,,2020-03-20
10.1145/2666310.2666397,Taghreed: a system for querying  analyzing  and visualizing geotagged microblogs,,2012-03-20
10.1109/infocom41043.2020.9155505,Search Me in the Dark: Privacy-preserving Boolean Range Query over Encrypted Spatial Data,,2011-03-20
10.1109/GMAI.2007.15,Efficient Affine-Invariant Similarity Retrieval,,2018-03-20
10.2991/LEMCS-14.2014.246,Sensitivity Analysis of Bipartition Dissimilarity under Tree Rearrangement Operations,,2019-03-20
10.1145/1031120.1031123,Object-based and image-based object representations,,2014-03-20
10.1145/3397536.3422199,Distributed Spatial-Keyword kNN Monitoring for Location-aware Pub/Sub,,2017-03-20
10.1038/NPRE.2010.4512.1,Fractal geometry of nature (bone) may inspire medical devices shape,,2012-03-20
10.1145/2001576.2001783,Enhancing es-hyperneat to evolve more complex regular neural networks,,2020-03-20
10.1109/MUE.2009.83,A New Spatial Index Structure for GIS Data,,2015-03-20
10.1504/IJWET.2015.073952,The skip-octree: a dynamic cloud storage index framework for multidimensional big data systems,,2014-03-20
10.1002/IMA.V19:2,Algorithms for connected component labeling based on quadtrees,,2015-03-20
10.3724/SP.J.1016.2011.02224,Image Retrieval Based on Locally Features Aggregating: Image Retrieval Based on Locally Features Aggregating,,2020-03-20
10.2514/6.2014-2985,High-order residual-based compact schemes for compressible flows on overset grids,,2011-03-20
10.3929/ETHZ-A-010437712,Cluster-Computing and Parallelization for the Multi-Dimensional PH-Index,,2020-03-20
10.26483/IJARCS.V8I5.3977,A Review Paper on Information Retrieval Techniques for Point and Range Query in Database System,,2014-03-20
10.1007/978-3-319-02432-5_14,Compact Querieable Representations of Raster Data,,2011-03-20
10.1007/978-1-4419-8420-3_2,Region-Guarding Problem in 3-D Areas,,2011-03-20
10.1587/TRANSINF.E96.D.2776,Accelerating Range Query Processing on R-Tree Using Graphics Processing Units,,2018-03-20
10.1109/TKDE.2016.2572697,D-ToSS: A Distributed Throwaway Spatial Index Structure for Dynamic Location Data,,2014-03-20
10.14778/3137765.3137828,The era of big spatial data,,2011-03-20
10.1080/13658816.2015.1131830,A spatiotemporal indexing approach for efficient processing of big array-based climate data with MapReduce,,2012-03-20
10.1145/2543581.2543584,From taxi GPS traces to social and community dynamics,,2015-03-20
10.1145/2666310.2666363,VisCAT: spatio-temporal visualization and aggregation of categorical attributes in twitter data,,2012-03-20
10.1109/ITSC.2015.439,A Scalable Spatio-temporal Data Storage for Intelligent Transportation Systems Based on HBase,,2017-03-20
10.6092/JOSER_2012_03_01_P2,Comparison of nearest-neighbor-search strategies and implementations for efficient shape registration,,2018-03-20
10.1007/978-3-642-12200-2_58,Rank Selection in Multidimensional Data,,2019-03-20
10.1109/TKDE.2003.1185836,Toward an Accurate Analysis of Range Queries on Spatial Data,,2017-03-20
10.1007/978-3-540-39666-6_7,Multimedia Data Mining Using P-Trees,,2013-03-20
10.1109/MDM.2012.67,Key Formulation Schemes for Spatial Index in Cloud Data Managements,,2013-03-20
10.1016/j.cageo.2012.03.012,Feature tracking on the hierarchical equal area triangular mesh,,2016-03-20
10.1016/J.CVIU.2019.02.004,Video synopsis: A survey,,2017-03-20
10.1145/3329785.3329920,GPU-Accelerated Similarity Self-Join for Multi-Dimensional Data,,2015-03-20
10.1007/s10707-020-00404-z,A Framework for Group Converging Pattern Mining using Spatiotemporal Trajectories,,2013-03-20
10.1038/srep14069,VirtualMicroscopy: ultra-fast interactive microscopy of gigapixel/terapixel images over internet,,2011-03-20
10.1109/BigDataCongress.2016.19,Enhanced State History Tree (eSHT): A Stateful Data Structure for Analysis of Highly Parallel System Traces,,2014-03-20
10.23919/INM.2017.7987467,Distributed spatial indexing for the Internet of Things data management,,2020-03-20
10.1007/978-3-642-24870-2_8,Efficient Rendering of Light Field Images,,2019-03-20
10.1117/12.458811,Effective classification of 3D image data using partitioning methods,,2019-03-20
10.1109/VAST.2006.261423,Pixnostics: Towards Measuring the Value of Visualization,,2012-03-20
10.1002/rsa.20476,Selection by rank in K-dimensional binary search trees,,2018-03-20
10.5220/0006437203970404,Using Inverse Compensation Vectors for Autonomous Maze Exploration,,2020-03-20
10.1590/S1982-21702014000100011,DWSI: an approach to solving the polygon intersection-spreading problem with a parallel union algorithm at the feature layer level,,2018-03-20
10.1109/INNOVATIONS.2011.5893828,A spatial index structure using dynamic recursive space partitioning,,2011-03-20
10.22215/etd/2009-08826,Towards Classifying and Selecting Appropriate Security Visualization Techniques,,2012-03-20
10.1134/S0081543815050107,A polynomial-time approximation scheme for the Euclidean problem on a cycle cover of a graph,,2017-03-20
10.1109/NAS.2008.58,VDMS: A Vector Data Management System for GIS Applications,,2013-03-20
10.18419/OPUS-2603,Simulation and optimized scheduling of pedestrian traffic : from geometric modeling to pedestrian navigation,,2018-03-20
10.1016/j.sigpro.2011.12.009,Graph based k-means clustering,,2020-03-20
10.1016/J.IJLEO.2018.06.093,Multi-focus image fusion based on edges and focused region extraction,,2011-03-20
10.5121/csit.2019.91410,Drawbacks and Proposed Solutions for Real-time Processing on Existing State-of-the-art Locality Sensitive Hashing Techniques,,2012-03-20
10.1109/DS-RT.2011.14,Error-Resilient Routing for Supporting Multi-dimensional Range Query in HD Tree,,2017-03-20
10.1016/S0377-2217(01)00104-7,Genetic local search for multi-objective combinatorial optimization,,2016-03-20
10.1016/j.cageo.2014.05.010,Surface roughness of rock faces through the curvature of triangulated meshes,,2016-03-20
10.1109/ICSSSM.2008.4598528,A compact index structure with high data retrieval efficiency,,2016-03-20
10.1145/958491.958500,Multi-dimensional range queries in sensor networks,,2015-03-20
10.1109/ICHIS.2005.13,A neuro-fuzzy system for steel beams patch load prediction,,2011-03-20
10.1007/s41060-020-00208-2,Grid-R-tree: a data structure for efficient neighborhood and nearest neighbor queries in data mining,,2020-03-20
10.1145/3119881.3119883,Visual complexity of chinese ink paintings,,2018-03-20
10.1145/2996913.2997013,Gloria: a batch friendly indexing and storage framework,,2018-03-20
10.1007/978-1-4615-0843-4_23,Outcome — Based Neighborhood Search (ONS),,2018-03-20
10.1109/ICCCHINA.2013.6671200,PPPA: A practical privacy-preserving aggregation scheme for smart grid communications,,2017-03-20
10.1007/978-81-322-1157-0_74,Quadtree Based Feature Extraction Technique for Recognizing Handwritten Kannada Characters,,2019-03-20
10.1109/ICMCS.2016.7905524,Relaxing the data access bottleneck of geographic big-data analytics applications using distributed quad trees,,2020-03-20
10.2991/ICMT-13.2013.115,Calligraphy Word Style Recognition by KNN Based Feature Library Filtering,,2015-03-20
10.1080/13658816.2015.1104317,Spatiotemporal data model for network time geographic analysis in the era of big data,,2015-03-20
10.1007/s12652-016-0420-1,Agent architecture for crowd simulation in indoor environments,,2017-03-20
10.14778/3055330.3055337,Effective Community Search over Large Spatial Graphs,,2019-03-20
10.1016/B978-008044506-9/50013-8,Chapter 11 – Principles of Grid Generation,,2011-03-20
10.20381/RUOR-5483,Data Distribution Management in Large-Scale Distributed Environments,,2011-03-20
10.22215/etd/2015-10640,Partial Enclosure Range Searching ∗,,2020-03-20
10.1016/j.ins.2020.05.068,Uncertain probabilistic range queries on multidimensional data,,2014-03-20
10.1109/ICDE.2018.00036,FAST: Frequency-Aware Indexing for Spatio-Textual Data Streams,,2012-03-20
10.1007/978-3-319-68783-4_21,Location-Based Top-k Term Querying over Sliding Window,,2019-03-20
10.1109/IJCNN.2002.1007660,A SAM-SOM family: incorporating spatial access methods into constructive self-organizing maps,,2014-03-20
10.1109/ICDE.2017.28,Mutually Beneficial Confluent Routing,,2019-03-20
10.1007/978-3-642-31046-1_12,Sierpinski Curves on Triangular and Tetrahedral Meshes,,2014-03-20
10.1007/978-3-642-31046-1_13,Case Study: Cache Efficient Algorithms for Matrix Operations,,2011-03-20
10.1007/978-3-319-18374-9_45,A Smart Walking Assistant for Safe Navigation in Complex Indoor Environments,,2012-03-20
10.2514/6.2018-1381,Efficient Large-Scale Thermoelastic Topology Optimization of CAD Geometry with Automated Adaptive Mesh Generation,,2020-03-20
10.1109/ACIT-CSI.2015.34,A 64-Degree Grid Graph Model of the Time-Continuous 4D Objects,,2012-03-20
10.1109/SNPD.2013.90,The Number of Cells in Regions Shifted on 2D Images Represented by Raster Data with Heterogeneous Parts,,2017-03-20
10.1109/ICASSP.2014.6854315,Efficient two stage decoding scheme to achieve content identification capacity,,2019-03-20
10.1007/978-3-319-95168-3_45,Spatial-HTM: A MapReduce-Based System for Querying Spatial Data with the Hierarchical Triangular Mesh,,2012-03-20
10.1109/TBDATA.2018.2830780,Sampling Big Trajectory Data for Traversal Trajectory Aggregate Query,,2017-03-20
10.1109/BigData.2017.8257956,A single-node datastore for high-velocity multidimensional sensor data,,2012-03-20
10.1016/j.jcp.2018.12.009,A parallel Voronoi-based approach for mesoscale simulations of cell aggregate electropermeabilization,,2016-03-20
10.1145/1097064.1097097,ASPEN: an adaptive spatial peer-to-peer network,,2019-03-20
10.14778/3424573.3424580,DeltaPQ: Lossless Product Quantization Code Compression for High Dimensional Similarity Search,,2014-03-20
10.3233/KES-2010-0203,Web-based multi-agent system architecture in a dynamic environment,,2016-03-20
10.1007/978-3-642-29038-1_38,Indexing Network Voronoi Diagrams,,2018-03-20
10.1016/J.FUTURE.2018.09.061,A novel method for parallel indexing of real time geospatial big data generated by IoT devices,,2017-03-20
10.1137/090747774,A Parallel Geometric Multigrid Method for Finite Elements on Octree Meshes,,2017-03-20
10.1107/S1600576716011353,Accelerating k‐nearest‐neighbor searches,,2014-03-20
10.1145/1141277.1141294,Schemes for SR-Tree packing,,2016-03-20
10.13053/RCS-71-1-1,Representative Pattern Mining in Graph Collections,,2011-03-20
10.1016/J.BIOSYSTEMSENG.2017.11.006,A methodology of orchard architecture design for an optimal harvesting robot,,2019-03-20
10.1145/2030112.2030139,On the limitations of query obfuscation techniques for location privacy,,2020-03-20
10.1109/TCNS.2016.2609138,A Formal Methods Approach to Pattern Recognition and Synthesis in Reaction Diffusion Networks,,2018-03-20
10.1109/MARSS.2016.7561695,An experimental comparison of path planning techniques applied to micro-sized magnetic agents,,2011-03-20
10.1007/978-3-642-33078-0_6,Vectorized Algorithms for Quadtree Construction and Descent,,2018-03-20
10.14778/2556549.2556580,Parallel Computation of Skyline and Reverse Skyline Queries Using MapReduce,,2017-03-20
10.1137/S0097539702412131,Partial Match Queries in Random Quadtrees,,2014-03-20
10.1145/1620545.1620550,Privately querying location-based services with SybilQuery,,2018-03-20
10.4230/LIPIcs.AofA.2020.6,Largest Clusters for Supercritical Percolation on Split Trees,,2018-03-20
10.1007/978-3-319-29659-3,Recommender Systems,,2020-03-20
10.1142/S0219622002000154,Multiobjective Decision Support in IT-Risk Management,,2019-03-20
10.1145/2557642.2563673,World-wide scale geotagged image dataset for automatic image annotation and reverse geotagging,,2015-03-20
10.5220/0003394203710381,C2Geo - Techniques and Tools for Real-time Data-intensive Geoprocessing in Cloud Computing,,2012-03-20
10.1007/978-3-642-40270-8_8,An Efficient Data Access Method Exploiting Quadtrees on MapReduce Frameworks,,2015-03-20
10.1109/ICCSE.2013.6554064,Optimizing pyramid visibiliy coverage for autonomous robots in 3D environment,,2018-03-20
10.1371/journal.pone.0037739,Application of Approximate Pattern Matching in Two Dimensional Spaces to Grid Layout for Biochemical Network Maps,,2018-03-20
10.1080/15481603.2019.1568679,Unsupervised evaluation-based region merging for high resolution remote sensing image segmentation,,2012-03-20
10.1007/s10898-015-0391-3,Approximability of the minimum-weight k-size cycle cover problem,,2012-03-20
10.1007/978-3-319-32049-6_10,On Efficient Spatial Keyword Querying with Semantics,,2015-03-20
10.1007/s12145-019-00405-z,Improving and evaluating boundary algebra filling for identifying polygon intersections,,2012-03-20
10.1587/TRANSFUN.E100.A.367,A Loitering Discovery System Using Efficient Similarity Search Based on Similarity Hierarchy,,2018-03-20
10.1109/ISCCSP.2008.4537278,Constant time neighbor finding in quadtrees: An experimental result,,2020-03-20
10.1109/ICDE48307.2020.00169,Machine Learning Meets Big Spatial Data,,2016-03-20
10.1109/ITSC.2012.6338600,Quadtree-based domain decomposition for parallel map-matching on GPS data,,2012-03-20
10.1145/2393347.2393378,Query-driven iterated neighborhood graph search for large scale indexing,,2017-03-20
10.1007/978-3-642-31046-1_7,Further Space-Filling Curves,,2015-03-20
10.1007/BF01999102,A comparison of the space requirements of multi-dimensional quadtree-based file structures,,2018-03-20
10.4018/978-1-61350-053-8.ch002,The Graph Traversal Pattern,,2020-03-20
10.1109/IPDPSW.2018.00084,GPU Accelerated Self-Join for the Distance Similarity Metric,,2011-03-20
10.1109/TKDE.2015.2391107,INSPIRE: A Framework for Incremental Spatial Prefix Query Relaxation,,2017-03-20
10.1007/s10707-013-0199-6,Large-scale geo-tagged video indexing and queries,,2011-03-20
10.1117/1.JRS.13.028501,Index model based on top-down greedy splitting R-tree and three-dimensional quadtree for massive point cloud management,,2018-03-20
10.1057/palgrave.ivs.9500150,An Automated Approach for the Optimization of Pixel-Based Visualizations,,2013-03-20
10.1109/ICDE.2019.00098,Moving Object Linking Based on Historical Trace,,2018-03-20
10.1007/s11704-016-5525-3,Handling query skew in large indexes: a view based approach,,2016-03-20
10.1109/TR.2019.2892230,KDFC-ART: a KD-tree approach to enhancing Fixed-size-Candidate-set Adaptive Random Testing,,2019-03-20
10.4156/JDCTA.VOL4.ISSUE6.3,Spatial Clustering Algorithm Based on Hierarchical-Partition Tree,,2016-03-20
10.1109/ICDE.2019.00039,Towards Longitudinal Analytics on Social Media Data,,2014-03-20
10.1145/3318464.3389703,LISA: A Learned Index Structure for Spatial Data,,2019-03-20
10.1016/j.jcp.2019.109074,Sequential local mesh refinement solver with separate temporal and spatial adaptivity for non-linear two-phase flow problems,,2012-03-20
10.1007/978-1-4614-5725-1_9,Chapter 8 Advanced Topics in the Theory of Functions,,2015-03-20
10.1016/j.jcp.2009.01.005,A grid based particle method for moving interface problems,,2011-03-20
10.11606/D.55.2002.tde-19062015-113225,Indexação e recuperação de informações utilizando redes neurais da família ART,,2013-03-20
10.1145/3428233,Testing differential privacy with dual interpreters,,2018-03-20
10.1109/TIT.2016.2612234,Identification Rate  Search and Memory Complexity Tradeoff: Fundamental Limits,,2011-03-20
10.1007/BF01188717,External segment trees,,2016-03-20
10.1016/J.PROENG.2016.11.039,Discrete CAD Model for Visualization and Meshing,,2011-03-20
10.2200/S00394ED1V01Y201111DTM021,Spatial Data Management,,2013-03-20
10.1007/978-3-319-17885-1_597,Index Structures  Extensible,,2015-03-20
10.21090/ijaerd.65090,Comparative Analysis on Path Planning Algorithm ’ s on Mobile Robot in Image Processing,,2015-03-20
10.1007/978-3-642-31046-1_15,Further Applications of Space-Filling Curves: References and Readings,,2014-03-20
10.1109/ICASSP.2011.5946592,High performance deartifacting filters in video compression,,2011-03-20
10.1145/3325135,Distributed Spatial and Spatio-Temporal Join on Apache Spark,,2011-03-20
10.7939/R3416T300,Exploring the Color Histogram's Dataspace for Content Based Image Retrieval,,2012-03-20
10.1145/1032222.1032249,Efficient query routing in distributed spatial databases,,2015-03-20
10.1016/S0020-0190(02)00221-1,Comparison of various trees for nearest-point search with/without the Voronoi diagram,,2014-03-20
10.1109/ISQED.2010.5450518,Efficient hierarchical discretization of off-chip power delivery network geometries for 2.5D electrical analysis,,2011-03-20
10.1134/S1064562415020313,Approximability of the problem about a minimum-weight cycle cover of a graph,,2017-03-20
10.1109/ICIS.2013.6607876,Reduction of resolution for binary images by an octal grid graph representation model,,2017-03-20
10.1007/978-3-642-03730-6_8,HOBI: Hierarchically Organized Bitmap Index for Indexing Dimensional Data,,2015-03-20
10.1186/s12942-020-00205-5,Using gridded population and quadtree sampling units to support survey sample design in low-income settings,,2016-03-20
10.1007/S10208-018-9400-5,On the Number of Face-Connected Components of Morton-Type Space-Filling Curves,,2014-03-20
10.14778/2733085.2733099,Generating Top-k Packages via Preference Elicitation,,2013-03-20
10.1109/ICOSP.2014.7015141,A new image compression algorithm base on rotating mapping and curve fitting,,2013-03-20
10.1145/2335484.2335501,Location-aware event-driven query processing in sensor database management,,2011-03-20
10.4018/JCIT.2019070103,Multi-Dimensional Indexes in DBMSs,,2020-03-20
10.1145/3292500.3332292,Tutorial: Are You My Neighbor?: Bringing Order to Neighbor Computing Problems.,,2019-03-20
10.1109/ICSAI.2017.8248376,PaIndex: An online index system for vehicle trajectory data exploiting parallelism,,2012-03-20
10.1109/SNPD.2015.7176258,A method of safe and efficient editing in tabular forms using a descriptive grammar of semantic structures,,2020-03-20
10.1007/s10707-016-0245-2,The direction-constrained k nearest neighbor query,,2017-03-20
10.1007/978-3-642-04686-5_21,A Cooperative CiberMouse@RTSS08 Team,,2013-03-20
10.1109/TITS.2017.2784371,ADS-BI: Compressed Indexing of ADS-B Data,,2016-03-20
10.1145/585147.585155,The 2-3TR-tree  a trajectory-oriented index structure for fully evolving valid-time spatio-temporal datasets,,2019-03-20
10.1145/3131365.3131377,Recursive lattice search: hierarchical heavy hitters revisited,,2013-03-20
10.1561/1900000054,The Era of Big Spatial Data: A Survey,,2016-03-20
10.1016/j.future.2008.05.006,Scalable community-driven data sharing in e-science grids,,2011-03-20
10.1214/12-AAP912,A limit process for partial match queries in random quadtrees,,2014-03-20
10.1007/978-3-642-02279-1_12,MLR-Index: An Index Structure for Fast and Scalable Similarity Search in High Dimensions,,2015-03-20
10.1007/s00778-017-0473-6,Geo-social group queries with minimum acquaintance constraints,,2019-03-20
10.1145/3055004.3055024,Data-Driven Distributionally Robust Vehicle Balancing Using Dynamic Region Partitions,,2011-03-20
10.1007/s00236-008-0069-0,Weighted height of random trees,,2012-03-20
10.1145/1653771.1653805,Trees or grids?: indexing moving objects in main memory,,2012-03-20
10.1109/GPMC50267.2020.9333811,Towards a quadtree based approach to learn local plans in robotic motion planning,,2013-03-20
10.1145/2396761.2396878,Finding top k most influential spatial facilities over uncertain objects,,2012-03-20
10.1017/S0963548318000512,Inversions in Split Trees and Conditional Galton–Watson Trees,,2017-03-20
10.1007/s41019-020-00145-x,Heterogeneous CPU-GPU Epsilon Grid Joins: Static and Dynamic Work Partitioning Strategies,,2020-03-20
10.1007/s41060-017-0092-8,Maritime pattern extraction and route reconstruction from incomplete AIS data,,2012-03-20
10.1109/ICEAA.2011.6046480,Coupled thermal-fluid-electrical simulation for printed circuit board design,,2019-03-20
10.1515/pjen-2017-0009,An annotated checklist of the aquatic Polyphaga (Coleoptera) of Egypt III. Families: Helophoridae  Georissidae  Hydrochidae  Spercheidae  Scirtidae  Elmidae  Dryopidae  Limnichidae and Heteroceridae,,2012-03-20
10.1007/BF02679611,The contraction method for recursive algorithms,,2014-03-20
10.1109/ICMLC.2003.1264521,QR-tree: a hybrid spatial index structure,,2015-03-20
10.1007/978-3-642-03564-7_2,Picture Languages: From Wang Tiles to 2D Grammars,,2012-03-20
10.1109/tcyb.2020.2983962,Concept Drift Detection via Equal Intensity k-means Space Partitioning,,2014-03-20
10.1109/ICRA.2016.7487213,Multi-level mapping: Real-time dense monocular SLAM,,2018-03-20
10.1109/ICDE.2015.7113390,Demonstration of Taghreed: A system for querying  analyzing  and visualizing geotagged microblogs,,2018-03-20
10.3390/APP6020044,Web3DGIS-Based System for Reservoir Landslide Monitoring and Early Warning,,2015-03-20
10.1016/j.pmcj.2016.07.002,Monitoring continuous all k-nearest neighbor query in mobile network environments,,2016-03-20
10.3138/carto.49.1.2137,A Comprehensive Multi-criteria Model for High Cartographic Quality Point-Feature Label Placement,,2020-03-20
10.1109/ICAR.2015.7251518,A probabilistic  variable-resolution and effective quadtree representation for mapping of large environments,,2011-03-20
10.6084/M9.FIGSHARE.1350620.V1,Finding Neighbors in Images Represented By Quadtree,,2014-03-20
10.1016/S0262-8856(02)00027-6,Quadtree representations for storage and manipulation of clusters of images,,2011-03-20
10.1145/2618243.2618247,Integrating non-spatial preferences into spatial location queries,,2012-03-20
10.1049/iet-cds.2015.0395,Unified approach for simultaneous functional and timing ECO,,2018-03-20
10.5120/5819-8132,A State-of-Art in R-Tree Variants for Spatial Indexing,,2019-03-20
10.1002/9780470050118.ecse408,Spatial Databases,,2017-03-20
10.1109/3DV.2014.33,Efficient Colorization of Large-Scale Point Cloud Using Multi-pass Z-Ordering,,2012-03-20
10.14778/1454159.1454229,A benchmark for evaluating moving object indexes,,2020-03-20
10.1016/J.CVIU.2005.09.007,Texture enhanced appearance models,,2020-03-20
10.11575/PRISM/17658,The 2dr-tree: a 2-dimensional spatial access method,,2012-03-20
10.1145/3274895.3274987,TurboReg: a framework for scaling up spatial logistic regression models,,
10.1093/MNRAS/STT781,A fast matching algorithm for sheared stellar samples: k-d match,,2015-03-20
10.1007/s11042-018-6249-1,Fused feature encoding in convolutional neural network,,2014-03-20
10.1007/s11280-011-0120-x,Discovery of unusual regional social activities using geo-tagged microblogs,,2012-03-20
10.1145/3394486.3403301,Map Generation from Large Scale Incomplete and Inaccurate Data Labels,,2019-03-20
10.1145/3366459,RegRocket: Scalable Multinomial Autologistic Regression with Unordered Categorical Variables Using Markov Logic Networks,,2017-03-20
10.1145/3265007.3265017,Oct-TINs: A Data Structure of Triangular Irregular Networks for Terrain Map Visualization,,2016-03-20
10.1109/MDM.2015.47,Efficient and Scalable Spatial Retrieval of Resident Involvement Information in City Events,,2014-03-20
10.1109/UMEDIA.2017.8074115,An efficient distributed range query processing algorithm on LiDAR data,,2012-03-20
10.1142/S1793351X15400085,NBC: An Efficient Hierarchical Clustering Algorithm for Large Datasets,,2014-03-20
10.1186/S13640-018-0374-7,Real-time car tracking system based on surveillance videos,,2015-03-20
10.1109/ICDCS.2018.00108,Geodabs: Trajectory Indexing Meets Fingerprinting at Scale,,2015-03-20
10.1016/J.ENVSOFT.2017.11.036,Multilevel mesh workflows towards CONUS scale watersheds: How small should triangles be to capture stream curvature for hydrological modeling?,,2014-03-20
10.1007/s11280-018-0560-7,Direction-based vacancy queries in camera sensor networks,,2012-03-20
10.1080/13658816.2012.743663,LOST-Tree: a spatio-temporal structure for efficient sensor data loading in a sensor web browser,,2016-03-20
10.1109/BigData.Congress.2014.55,Adaptive Indexing for Distributed Array Processing,,2015-03-20
10.1016/j.ins.2019.08.007,Extending general compact querieable representations to GIS applications,,2020-03-20
10.1145/3385851,Tetrahedral Trees,,2015-03-20
10.18637/jss.v086.c01,Rectangular Statistical Cartograms in R: The recmap Package,,2019-03-20
10.1016/J.COMPSTRUC.2014.07.001,A background decomposition method for domain integration in weak-form meshfree methods,,2012-03-20
10.1090/conm/223/03131,Geometric Range Searching and Its Relatives,,2017-03-20
10.5860/choice.46-6858,Analytic Combinatorics,,2013-03-20
10.1137/100791634,p4est: Scalable Algorithms for Parallel Adaptive Mesh Refinement on Forests of Octrees,,2015-03-20
10.1109/LCSYS.2020.2973199,Max-Plus Linear Approximations for Deterministic Continuous-State Markov Decision Processes,,2020-03-20
10.1109/GEOINFORMATICS.2011.5980974,A new spatial index methodology of mobile GIS based on smart phone,,2019-03-20
10.1109/SISY.2009.5291156,Model of image decomposition presentation with a quadtree,,2014-03-20
10.1007/978-3-319-58524-6_30,A New Approach to Telecommunications Network Design Automated and Data Driven,,2016-03-20
10.2478/papd-2018-0001,Risk and Protective Factors in the Life of Youth in Relation to Resilience,,2016-03-20
10.21236/ada469272,Multi-Dimensional Range Querying Using a Modification of the Skip Graph,,2011-03-20
10.14778/2824032.2824057,Spatial Partitioning Techniques in Spatial Hadoop,,2019-03-20
10.1109/ICDEW.2015.7129574,Scalable collective spatial keyword query,,2017-03-20
10.4000/CYBERGEO.25271,Vers une visualisation de la complexité de l’image cartographique,,2014-03-20
10.1109/WICOM.2006.401,Performance Tests and Application Strategies of Spatial Indexes in the Embedded-GIS Data Management,,2019-03-20
10.5194/ISPRS-ARCHIVES-XLII-4-41-2018,ON VOLUME DATA REDUCTION FOR LIDAR DATASETS,,2016-03-20
10.1145/513918.514068,An efficient routing database,,2016-03-20
10.1023/A:1009601513674,Efficient Near Neighbor Searching Using Multi-Indexes for Content-Based Multimedia Data Retrieval,,2018-03-20
10.1002/0471224634.CH14,Multidimensional Indexing Structures for Content‐Based Retrieval,,2017-03-20
10.1007/11890348_11,Semantic Information Retrieval in the COMPASS Location System,,2019-03-20
10.1016/j.cpc.2020.107229,Robust event-driven particle tracking in complex geometries,,2020-03-20
10.1109/IPDPS47924.2020.00088,Efficient Parallel and Adaptive Partitioning for Load-balancing in Spatial Join,,2019-03-20
10.1002/9781118786352.wbieg0992,Sorting Spatial Data,,2019-03-20
10.1016/J.ADVENGSOFT.2019.05.004,A scalable framework for large-scale 3D multimaterial topology optimization with octree-based mesh adaptation,,2011-03-20
10.1007/978-1-4614-5725-1_7,Chapter 6 Weierstrass’s Analytic Function Theory,,2013-03-20
10.1088/1361-6420/ab4c9a,CoverBLIP: accelerated and scalable iterative matched-filtering for Magnetic Resonance Fingerprint reconstruction,,2015-03-20
10.1145/3369759,Parallel Data Distribution Management on Shared-memory Multiprocessors,,2015-03-20
10.1109/WICOM.2007.1468,Design and Implementation of QR+Tree Index Algorithms,,2019-03-20
10.1016/j.patrec.2008.09.002,Exploration of configural representation in landmark learning using working memory toolkit,,2013-03-20
10.1023/A:1019047229571,Storing spatial data on a network of workstations,,2015-03-20
10.1109/ISCC.2011.5983794,Geographical quadtree routing,,2020-03-20
10.1109/BigData.2017.8258020,Queryable compression on streaming social networks,,2014-03-20
10.1002/9781118640708.CH05,Data Distribution Management,,2017-03-20
10.4208/CICP.SCPDE14.30S,An Anisotropic Convection-Diffusion Model Using Tailored Finite Point Method for Image Denoising and Compression,,2012-03-20
10.1109/ICIT.2016.7475015,A 40 degree grid model for multiple 3D objects,,2012-03-20
10.1007/978-3-642-04397-0_34,A Linear Time and Space Algorithm for Detecting Path Intersection,,2020-03-20
10.1186/1471-2105-7-29,Recrafting the neighbor-joining method,,2014-03-20
10.3929/ETHZ-A-007134902,Contribution to Agent-Based Demand Optimization in a Multi-Agent Transport Simulation,,2013-03-20
10.1016/J.JCSR.2006.04.005,A parametric analysis of the patch load behaviour using a neuro-fuzzy system,,2018-03-20
10.1145/2588555.2588564,The PH-tree: a space-efficient storage structure and multi-dimensional index,,2020-03-20
10.1007/978-3-319-98809-2_9,Efficient Aggregation Query Processing for Large-Scale Multidimensional Data by Combining RDB and KVS,,2011-03-20
10.1016/j.disc.2012.09.016,Survey of two-dimensional acute triangulations,,2017-03-20
10.1007/s10846-020-01230-z,Hierarchical Clustering Matching for Features with Repetitive Patterns in Visual Odometry,,2016-03-20
10.1109/IJCNN.2014.6889750,Automatic forest species recognition based on multiple feature sets,,2018-03-20
10.5626/JOK.2015.42.3.390,An Efficient Retrieval Technique for Spatial Web Objects,,2018-03-20
10.1145/2666310.2666399,Top-k point of interest retrieval using standard indexes,,2019-03-20
10.1007/978-3-030-48981-6_2,Introduction to Mobile Robots Navigation  Localization and Mapping,,2017-03-20
10.14778/3407790.3407829,Effectively learning spatial indices,,2014-03-20
10.1007/S00170-016-9340-7,A comprehensive approach to determining minimum cutter lengths for five-axis milling,,2020-03-20
10.1007/978-0-387-30440-3_114,Data-Mining and Knowledge Discovery: Case-Based Reasoning  Nearest Neighbor and Rough Sets,,2020-03-20
10.1145/800096.803139,A Tree Algorithm For Nearest Neighbor Searching In Document Retrieval Systems,,
10.1177/2041297510393455,A new non-contact automatic inspection method for micro-structures,,2020-03-20
10.1007/S11431-008-5009-2,Efficient visualization techniques for high resolution remotely sensed data in a network environment,,2020-03-20
10.1016/J.MARPOLBUL.2019.02.039,Generation of large pollution patches via collisions of sticky floating parcels driven by wind and surface currents.,,2016-03-20
10.1109/BigData.2018.8621943,Revisiting Exact kNN Query Processing with Probabilistic Data Space Transformations,,2019-03-20
10.1109/TVCG.2019.2934654,Semantic Concept Spaces: Guided Topic Model Refinement using Word-Embedding Projections,,2019-03-20
10.14279/DEPOSITONCE-6803,Grammar-guided reconstruction of semantic 3D building models from airborne LiDAR data using half-space modeling,,2020-03-20
10.1002/9781118662953.CH8,The Algorithmic Building Blocks,,2013-03-20
10.5075/EPFL-THESIS-3284,Sparse image approximation with application to flexible image coding,,2012-03-20
10.1007/S00466-011-0662-X,A fast object-oriented Matlab implementation of the Reproducing Kernel Particle Method,,2020-03-20
10.1109/UCC48980.2020.00024,Towards Timely  Resource-Efficient Analyses Through Spatially-Aware Constructs within Spark,,2018-03-20
10.1145/3007540.3007543,Trajbase: searching trajectories in multi-region,,2017-03-20
10.1109/ICTC.2018.8539517,Tile Visibility Index,,2020-03-20
10.3390/s19071522,A Participation Degree-Based Fault Detection Method for Wireless Sensor Networks,,2014-03-20
10.4018/978-1-5225-5039-6.CH007,Keyword Search Mechanisms in Geo-Spatial Databases,,2011-03-20
10.1145/3205929.3205931,Multiscale scanpath visualization and filtering,,2013-03-20
10.1007/S11431-016-9093-Y,Flow reconstructions and aerodynamic shape optimization of turbomachinery blades by POD-based hybrid models,,2019-03-20
10.1007/978-3-319-73521-4_1,On Attributed Community Search,,2014-03-20
10.1145/2542182.2542186,Mondrian tree,,2014-03-20
10.1007/978-3-319-19548-3_15,Handling Query Skew in Large Indexes: A View Based Approach,,2020-03-20
10.1109/PDCAT.2009.83,Parallelized Critical Path Search in Electrical Circuit Designs,,2018-03-20
10.1007/s10707-019-00380-z,Local trend discovery on real-time microblogs with uncertain locations in tight memory environments,,2013-03-20
10.1109/IJCNN.2010.5596648,A new domain decomposition for B-spline Neural Networks,,2019-03-20
10.1016/j.jss.2011.07.027,P2P-based multidimensional indexing methods: A survey,,2017-03-20
10.1109/TPAMI.2011.49,Using Facial Symmetry to Handle Pose Variations in Real-World 3D Face Recognition,,2015-03-20
10.4028/www.scientific.net/AMM.347-350.2436,A Multi-Dimensional Data Storage Using Quad-Tree and Z-Ordering,,2016-03-20
10.1093/bioinformatics/btx752,Reactome diagram viewer: data structures and strategies to boost performance,,2018-03-20
10.1109/IGARSS.2017.8128423,Merkle quad-tree based remote sensing image analysis,,2015-03-20
10.3929/ETHZ-A-010006641,Destination choice modeling of discretionary activities in transport microsimulations,,2014-03-20
10.2174/1874110X01509010110,Matching Similar Splits between Unrooted Leaf-labeled Trees,,2011-03-20
10.4236/JBISE.2012.512094,Multimodal compression applied to biomedical data,,2020-03-20
10.1007/978-3-642-41278-3_16,An Extended Version of the LVA-Index,,2018-03-20
10.1145/585147.585179,Performance of multi-dimensional space-filling curves,,2013-03-20
10.2298/CSIS120702022T,Indexing method for multidimensional vector data,,2012-03-20
10.1109/JSTARS.2010.2052790,Adaptive Sky: From Instrument Pixels to a Sensor Web Gestalt,,2016-03-20
10.1145/564691.564709,Implementing database operations using SIMD instructions,,2017-03-20
10.1007/978-3-319-64367-0_8,Indexing the Pickup and Drop-Off Locations of NYC Taxi Trips in PostgreSQL - Lessons from the Road,,2015-03-20
10.1007/s11548-018-1859-7,ImFEATbox: a toolbox for extraction and analysis of medical image features,,2019-03-20
10.1016/j.mri.2018.07.003,A Machine-learning framework for automatic reference-free quality assessment in MRI,,2015-03-20
10.25148/ETD.FI12041101,A large-scale dynamic vector and raster data visualization geographic information system based on parallel map tiling,,2015-03-20
10.1109/IGARSS.2017.8128399,Research and implementation on the WEB3D visualization of digtal moon based on WebGL,,2020-03-20
10.1145/2557642.2557655,SPEX: scalable spatial publish/subscribe for distributed virtual worlds without borders,,2011-03-20
10.1007/978-3-319-68155-9_3,Boosting Point-Based Trajectory Search with Quad-Tree,,2014-03-20
10.1109/GEOINFORMATICS.2017.8090926,Organizing large-scale trajectories with adaptive Geohash-tree based on secondo database,,2019-03-20
10.1175/JTECH-D-14-00217.1,Wavelet Compression Technique for High-Resolution Global Model Data on an Icosahedral Grid,,2015-03-20
10.1109/ICTAI.2016.0108,Incremental and Adaptive Multi-Robot Mapping for Human Scene Observation,,2016-03-20
10.14778/2536274.2536333,Storing and Processing Temporal Data in a Main Memory Column Store,,2016-03-20
10.1109/ISCCSP.2010.5463412,Graphs representing quadtree structures using eight edges,,2011-03-20
10.1089/cmb.2006.13.43,Flexible Secondary Structure Based Protein Structure Comparison Applied to the Detection of Circular Permutation,,2020-03-20
10.3384/DISS.DIVA-104110,Methods for Network Optimization and Parallel Derivative-free Optimization,,2013-03-20
10.1007/s42154-019-00081-1,Driving Space for Autonomous Vehicles,,2014-03-20
10.1109/ICDE.2006.146,Space-Partitioning Trees in PostgreSQL: Realization and Performance,,2011-03-20
10.1145/3340964.3340965,Period Index: A Learned 2D Hash Index for Range and Duration Queries,,2015-03-20
10.1137/20m1328786,A generic finite element framework on parallel tree-based adaptive meshes,,2019-03-20
10.14279/DEPOSITONCE-2272,Investigating the technical possibilities of real-time interaction with simulations of mobile intelligent particles,,2017-03-20
10.1109/GPMC50267.2020.9333817,GPMC 2020 Proceedings,,2015-03-20
10.1016/J.ENGANABOUND.2018.10.006,Nonlocal damage modelling by the scaled boundary finite element method,,2013-03-20
10.1007/978-3-319-21257-9_6,Indexing for Similarity Search Operators,,2016-03-20
10.1201/9781315119335-27,Approximate Geometric Query Structures,,2019-03-20
10.1109/ICDE.2012.54,LARS: A Location-Aware Recommender System,,2012-03-20
10.5441/002/edbt.2014.80,Benchmarking Bitemporal Database Systems: Ready for the Future or Stuck in the Past?,,2014-03-20
10.1137/110825698,Triangulating the square and squaring the triangle: quadtrees and Delaunay triangulations are equivalent,,2013-03-20
10.4018/978-1-60566-733-1,Techniques for the generation of 3D Finite Element Meshes of human organs,,2013-03-20
10.1023/A:1025196714293,Analysis of Multi-Dimensional Space-Filling Curves,,2018-03-20
10.1016/j.patcog.2009.10.018,A new clustering algorithm for coordinate-free data,,2014-03-20
10.1007/s11280-017-0472-y,Semantic-aware top-k spatial keyword queries,,2011-03-20
10.1109/CANDO-EPE47959.2019.9111034,Vectors-based method to deduce neighboring cells in mobile networks,,2018-03-20
10.1007/978-981-10-2525-9_38,Collectively Find Spatial Objects in Time-Dependent Spatial Network,,2018-03-20
10.1080/01431161.2016.1256511,Airborne laser scanning data storage and indexing: state-of-the-art review,,2013-03-20
10.30871/JAGI.V1I2.520,Challenges and opportunities for geospatial integration into ‘trotro’ road travel in Ghana,,2013-03-20
10.1007/978-1-84882-215-3_5,Graph-based Image Classification by Weighting Scheme,,2015-03-20
10.1109/WSC.2014.7020130,Map stream: Initializing what-if analyses for real-time symbiotic traffic simulations,,2012-03-20
10.1145/2983323.2983751,A Unified Index for Spatio-Temporal Keyword Queries,,2011-03-20
10.18653/v1/P18-3020,Mixed Feelings: Natural Text Generation with Variable  Coexistent Affective Categories,,2012-03-20
10.1051/epjconf/201921402032,Belle II Track Reconstruction and Results from first Collisions,,2015-03-20
10.1201/9781315119335-17,Multidimensional Spatial Data Structures,,2014-03-20
10.1109/TSMCC.2004.843220,Inverted hierarchical neuro-fuzzy BSP system: a novel neuro-fuzzy model for pattern classification and rule extraction in databases,,2013-03-20
10.1145/508791.508870,Decision tree classification of spatial data streams using Peano Count Trees,,2018-03-20
10.1023/A:1008729828172,Multidimensional Index Structures in Relational Databases,,2011-03-20
10.1109/CVPR.2004.478,Wedgelet Enhanced Appearance Models,,2012-03-20
10.1016/j.artmed.2009.05.007,Morphometric analysis of brain images with reduced number of statistical tests: A study on the gender-related differentiation of the corpus callosum,,2018-03-20
10.1145/3035918.3054773,Query Processing Techniques for Big Spatial-Keyword Data,,2020-03-20
10.1007/978-3-540-28649-3_46,Fast Statistically Geometric Reasoning About Uncertain Line Segments in 2D- and 3D-Space,,2013-03-20
10.1109/NaNA.2016.38,A Hierarchical Quadtree-Based Link State Routing Scheme for Routing Table Compression,,2018-03-20
10.1515/wpsr-2014-0006,Mobilization Against the Left? Partisan Consequences of Voter Turnout in the Post-Communist Context,,2012-03-20
10.1109/ICOSC.2015.7050840,NNB: An efficient nearest neighbor search method for hierarchical clustering on large datasets,,2013-03-20
10.1109/IROS.2006.281773,A Framework for Automatic Deployment of Robots in 2D and 3D Environments,,2014-03-20
10.1145/3219819.3220079,An Iterative Global Structure-Assisted Labeled Network Aligner,,2011-03-20
10.1109/RAIT.2016.7507967,Quad tree based algorithm for building of network model from road layers of vector maps,,2017-03-20
10.3929/ethz-b-000165685,Explicitly Correlating Agent’s Daily Plans in a Multiagent Transport Simulation: Towards the Consideration of Social Relationships,,2017-03-20
10.1007/11951957_38,Extension of R-Tree for Spatio-temporal OLAP Operations,,2017-03-20
10.1145/1516360.1516366,Workload-aware data partitioning in community-driven data grids,,2016-03-20
10.1145/3091966.3091971,Quad Ropes: immutable  declarative arrays with parallelizable operations,,2019-03-20
10.1109/JIOT.2019.2902483,Pystin: Enabling Secure LBS in Smart Cities With Privacy-Preserving Top- $k$ Spatial–Textual Query,,2015-03-20
10.1109/VR.2009.4811022,Efficient Large-Scale Sweep and Prune Methods with AABB Insertion and Removal,,2011-03-20
10.1080/19475683.2012.758171,Quadtree- and octree-based approach for point data selection in 2D or 3D,,2019-03-20
10.1007/978-3-7908-1812-3_7,On the Computational Effectiveness of Multiple Objective Metaheuristics,,2015-03-20
10.2200/S00892ED1V01Y201901DTM056,Scalable Processing of Spatial-Keyword Queries,,2015-03-20
10.1109/ISCC.2018.8538616,Cost-Effective Strategies for Provisioning NoSQL Storage Services in Support for Industry 4.0,,2014-03-20
10.1016/J.COMPGEO.2017.08.007,Simulation of penetration of a foundation element in Tresca soil using the generalized interpolation material point method (GIMP),,2013-03-20
10.1145/3299869.3300080,RRR: Rank-Regret Representative,,2020-03-20
10.4230/LIPIcs.SoCG.2016.28,Two Approaches to Building Time-Windowed Geometric Data Structures,,2012-03-20
10.1080/00207721.2013.843735,Global path planning of mobile robots using a memetic algorithm,,2014-03-20
10.1007/s11704-012-2069-z,VGQ-Vor: extending virtual grid quadtree with Voronoi diagram for mobile k nearest neighbor queries over mobile objects,,2011-03-20
10.1145/3318464.3389774,A GPU-friendly Geometric Data Model and Algebra for Spatial Queries,,2019-03-20
10.1016/j.ipm.2020.102205,Efficient generation of spatiotemporal relationships from spatial data streams and static data,,2015-03-20
10.1214/11-AAP812,The total path length of split trees,,2017-03-20
10.1145/2809563.2809573,Using machine learning for unsupervised maritime waypoint discovery from streaming AIS data,,2015-03-20
10.1016/J.APM.2017.09.034,Simulation of direct chill casting under the influence of a low-frequency electromagnetic field,,2016-03-20
10.1145/2600428.2609562,Processing spatial keyword query as a top-k aggregation query,,2014-03-20
10.1016/j.pmcj.2013.07.001,Indexing spatial data in cloud data managements,,2019-03-20
10.1007/1-84628-137-7_5,Quad-trees: A Data Structure for Storing Pareto Sets in Multiobjective Evolutionary Algorithms with Elitism,,2018-03-20
10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0037,Improving Data Fusion in Big Data Stream Computing for Automotive Applications,,2017-03-20
10.1002/NME.2900,A new fast hybrid adaptive grid generation technique for arbitrary two-dimensional domains,,2015-03-20
10.1016/j.eswa.2013.03.018,Integrating similarity and dissimilarity notions in recommenders,,2012-03-20
10.1007/s00453-010-9430-0,Preprocessing Imprecise Points for Delaunay Triangulation: Simplified and Extended,,2015-03-20
10.1201/B13092-4,Data-centric storage in wireless sensor networks,,2012-03-20
10.1002/cpe.1849,Accelerating physics in large  continuous virtual environments,,2020-03-20
10.1109/NCA.2016.7778584,GeoTrie: A scalable architecture for location-temporal range queries over massive geotagged data sets,,2016-03-20
10.1145/3055167.3055179,Optimizing Spatial Queries in MapReduce,,2012-03-20
10.1016/j.image.2015.11.006,A full photometric and geometric model for attached webcam/matte screen devices,,2018-03-20
10.1016/S0165-0114(01)00145-2,Hierarchical neuro-fuzzy quadtree models,,2011-03-20
10.1049/iet-ipr.2016.0072,Segmentation of large images based on super-pixels and community detection in graphs,,2013-03-20
10.1007/978-1-4614-3501-3_34,A Framework for Surveillance Video Fast Browsing Based on Object Flags,,2019-03-20
10.3390/plants2010016,Systems Modeling at Multiple Levels of Regulation: Linking Systems and Genetic Networks to Spatially Explicit Plant Populations,,2015-03-20
10.1007/978-3-642-31046-1_10,Parallelisation with Space-Filling Curves,,2012-03-20
10.1007/978-3-642-31046-1_1,Two Motivating Examples: Sequential Orders on Quadtrees and Multidimensional Data Structures,,2013-03-20
10.1145/3047307,Hashing Techniques,,2017-03-20
10.1109/ICCIT.2007.175,Design of Real-Time Image Acquisition System of IC Wafer,,2012-03-20
10.1145/3193835,Continuous Spatial Query Processing,,2017-03-20
10.1115/1.4001363,A Meshless Finite Difference Method for Conjugate Heat Conduction Problems,,2017-03-20
10.1109/ICCIT.2007.59,A Quadtree Based Data Accuracy Scheme for Wireless Sensor Networks,,2018-03-20
10.20381/RUOR-5380,Studying the properties of a distributed decentralized b+ tree with weak- consistency,,2015-03-20
10.1007/978-3-319-16595-0_12,Fast Nearest Neighbor Search in SE(3) for Sampling-Based Motion Planning,,2012-03-20
10.1007/978-3-642-00563-3_65,LVA-Index: An Efficient Way to Determine Nearest Neighbors,,2015-03-20
10.11606/T.18.2007.TDE-04042008-143239,MFIS: algoritmo de reconhecimento e indexação em base de dados de impressões digitais em espaço métrico,,2018-03-20
10.1016/j.cag.2018.05.017,Hierarchical representation for rasterized planar face complexes,,2019-03-20
10.1007/978-3-319-92013-9_4,Histogram Construction for Difference Analysis of Spatio-Temporal Data on Array DBMS,,2012-03-20
10.1021/ct400474w,Efficient Maintenance and Update of Nonbonded Lists in Macromolecular Simulations,,2020-03-20
10.1016/j.ins.2017.01.016,Parallel trajectory search based on distributed index,,2013-03-20
10.1109/BigData47090.2019.9006302,Multi-spatial Scale Event Detection from Geo-tagged Tweet Streams via Power-law Verification,,2019-03-20
10.3390/ijerph14070742,Health Impact of PM10  PM2.5 and Black Carbon Exposure Due to Different Source Sectors in Stockholm  Gothenburg and Umea  Sweden,,2018-03-20
10.1109/ICDE.2014.6816649,Mercury: A memory-constrained spatio-temporal real-time search on microblogs,,2019-03-20
10.1007/978-3-642-15291-7_13,Scalable Parallelization Strategies to Accelerate NuFFT Data Translation on Multicores,,2013-03-20
10.1117/12.819302,3D visualization for improved manipulation and mobility in EOD and combat engineering applications,,
10.1007/s10055-017-0307-2,Faster dynamic spatial partitioning in OpenSimulator,,2019-03-20
10.1016/j.is.2017.02.001,Handling multi-dimensional complex queries in key-value data stores,,2019-03-20
10.1007/s00778-002-0073-x,Energy-performance trade-offs for spatial access methods on memory-resident data,,2011-03-20
10.1145/3300053.3319417,KNN-Joins Using a Hybrid Approach: Exploiting CPU/GPU Workload Characteristics,,2020-03-20
10.1145/2723372.2746481,Location-Aware Pub/Sub System: When Continuous Moving Queries Meet Dynamic Event Streams,,2013-03-20
10.1214/14-AOP919,On a functional contraction method,,2016-03-20
10.1017/s0263574720000818,One Way to Fill All the Concave Region in Grid-Based Map,,2018-03-20
10.1109/ICCE.2006.1598517,Smart search & retrieval on video databases,,2017-03-20
10.5121/csit.2020.101801,New Algorithms for Computing Field of Vision over 2D Grids,,2012-03-20
10.1109/ICDE.2015.7113290,Finding top-k local users in geo-tagged social media data,,2014-03-20
10.1109/TPDS.2008.217,An In-Network Querying Framework for Wireless Sensor Networks,,2011-03-20
10.1016/j.cam.2011.05.044,An adaptive multiresolution method on dyadic grids: Application to transport equations,,2014-03-20
10.1145/1989323.1989362,Location-aware type ahead search on spatial databases: semantics and efficiency,,2020-03-20
10.1201/9781584888239-C6,Multidimensional data structures for spatial applications,,2012-03-20
10.1007/978-3-540-45081-8_7,Architectures and Implementations of Spatio-temporal Database Management Systems,,2017-03-20
10.1007/978-3-319-18123-3_14,Spatial Keyword Range Search on Trajectories,,2019-03-20
10.1109/ICDE.2005.14,Acceleration technique of snake-shaped regions retrieval method for telematics navigation service system,,2018-03-20
10.1016/j.cpc.2020.107610,Track finding at Belle II,,2017-03-20
10.1017/S096354831200017X,Strong Convergence of Partial Match Queries in Random Quadtrees,,2016-03-20
10.1101/gr.094607.109,JBrowse: a next-generation genome browser.,,2020-03-20
10.1145/2424321.2424373,Multi-track map matching,,2016-03-20
10.1109/DSAA.2017.15,BJR-Tree: Fast Skyline Computation Algorithm for Serendipitous Searching Problems,,2017-03-20
10.1504/IJDMMM.2014.066766,Towards effective GML data management: framework and prototype,,2016-03-20
10.1145/1206049.1206056,Spatial join techniques,,2016-03-20
10.6092/UNIBO/AMSDOTTORATO/914,A tuple space implementation for large-scale infrastructures,,2014-03-20
10.1145/2487788.2488175,EventShop: recognizing situations in web data streams,,2013-03-20
10.1007/s10618-016-0489-3,On searching and indexing sequences of temporal intervals,,2012-03-20
10.13016/UFFE-H6IO,Gradual Rasterization: Redefining the Spatial Resolution in Transport Modeling,,2016-03-20
10.1007/978-3-319-19264-2_2,A New Method Based on Graph Transformation for FAS Mining in Multi-graph Collections,,2020-03-20
10.1109/ISDA.2012.6416659,Large-scale socio-demographic pattern discovery on microblog metadata,,2020-03-20
10.1016/j.is.2011.06.002,Time-HOBI: Index for optimizing star queries,,2017-03-20
10.1109/TKDE.2013.29,LARS*: An Efficient and Scalable Location-Aware Recommender System,,2016-03-20
10.1007/S11235-018-0479-4,Computing over encrypted spatial data generated by IoT,,2020-03-20
10.1145/2820783.2820835,An arc orienteering algorithm to find the most scenic path on a large-scale road network,,2015-03-20
10.1101/174946,Multi-Transition Systems: A theory for neural spatial navigation,,2015-03-20
10.1007/s10619-017-7194-0,M-Grid: a distributed framework for multidimensional indexing and querying of location based data,,2012-03-20
10.1016/S1047-3203(03)00034-8,A quadtree-based representation technique for indexing and retrieval of image databases,,2012-03-20
10.1515/jengeo-2016-0012,Identification and Spectral Evaluation of Agricultural Crops on Hyperspectral Airborne Data,,2015-03-20
10.1016/j.ins.2012.06.028,Dynamic point-region quadtrees for particle simulations,,2020-03-20
10.1145/3352593.3352615,Path Planning and Obstacle Avoidance in CG Space of a 10 DOF Rover using RRT,,2020-03-20
10.1109/GLOCOM.2014.7037533,Quadtree-based optimal path routing with the smallest routing table size,,2019-03-20
10.1145/2629333,Towards a Painless Index for Spatial Objects,,2011-03-20
10.1109/ICBDA.2017.8078787,Spatial query processing for location based application on Hbase,,2011-03-20
10.1016/j.jcp.2012.07.029,Automatic off-body overset adaptive Cartesian mesh method based on an octree approach,,2015-03-20
10.1007/3-540-45986-3_30,Multi-scale Discrete Surfaces,,2018-03-20
10.1016/j.neucom.2016.11.078,Real-time social media retrieval with spatial  temporal and social constraints,,2020-03-20
10.1007/978-3-319-07995-0_11,Hyperspectral Image Analysis Based on Quad Tree Decomposition,,2016-03-20
10.1109/IEMCON.2015.7344425,Using exemplars to create predictable volumetric diversity in object volumes with a 3D Voronoi Subdivison Tree,,2011-03-20
10.1109/TGRS.2015.2469138,Hashing-Based Scalable Remote Sensing Image Search and Retrieval in Large Archives,,2012-03-20
10.1007/978-3-319-21257-9_3,Common Similarity Search Operators,,2018-03-20
10.1145/2588555.2612175,Overlap interval partition join,,2017-03-20
10.1007/978-3-319-08404-6_4,Amortized Analysis of Smooth Quadtrees in All Dimensions,,2011-03-20
10.1016/j.neucom.2017.05.095,Probabilistic group nearest neighbor query optimization based on classification using ELM,,2015-03-20
10.1109/ISNCC.2017.8072032,Speeding up construction of distributed quadtrees for big-data analytics applications using dilated integers and hashmaps,,2017-03-20
10.1016/j.tcs.2011.04.019,A linear time and space algorithm for detecting path intersection in Zd,,2016-03-20
10.1145/3139958.3139967,On Spatial Joins in MapReduce,,2016-03-20
10.1007/s13173-012-0097-z,Marching cubes technique for volumetric visualization accelerated with graphics processing units,,2019-03-20
10.1007/978-3-030-18576-3_24,Efficient Search of the Most Cohesive Co-located Community in Attributed Networks,,2020-03-20
10.1007/978-3-662-49529-2_28,Random Partial Match in Quad-K-d Trees,,2018-03-20
10.1142/S0218001418590115,Demand Forecast and Multi-Objective Ambulance Allocation,,2017-03-20
10.1142/S0218488519500284,Collaborative Recommendations using Hierarchical Clustering based on K-d Trees and Quadtrees,,2013-03-20
10.1109/ConTEL.2019.8848503,A Performance Evaluation of Spatial Indices for Geospatial Publish/Subscribe Systems,,2018-03-20
10.1145/2619112.2619114,Exploiting Geo-tagged Tweets to Understand Localized Language Diversity,,2018-03-20
10.1109/MDM.2011.41,MD-HBase: A Scalable Multi-dimensional Data Infrastructure for Location Aware Services,,2016-03-20
10.1109/ICIIECS.2015.7193237,A multidimensional data storage model for location based application on Hbase,,2019-03-20
10.1109/IROS.2005.1545091,Robust navigation using Markov models,,2019-03-20
10.1109/AFGR.2008.4813361,Non-rigid registration using free-form deformations for recognition of facial actions and their temporal dynamics,,2017-03-20
10.1109/ISCC.2011.5984033,Hierarchically distributed tree,,2016-03-20
10.1109/CICT.2015.32,Spatio-Temporal Data Index Model of Moving Objects on Fixed Networks Using HBase,,2018-03-20
10.1109/ICDE.2004.1319982,Bulk operations for space-partitioning trees,,2020-03-20
10.1109/TPDS.2020.3036014,MO-Tree: An Efficient Forwarding Engine for Spatiotemporal-Aware Pub/Sub Systems,,2013-03-20
10.1109/TransAI49837.2020.00033,Spatial Data Management in IoT systems: A study of available storage and indexing solutions,,2013-03-20
10.1137/1.9781611975499.14,A Practical Algorithm for Spatial Agglomerative Clustering,,2019-03-20
10.24963/ijcai.2019/21,Reachability and Coverage Planning for Connected Agents,,2014-03-20
10.4018/978-1-60566-733-1.CH009,Techniques for the Generation of 3D Finite Element Meshes of Human Organs,,2015-03-20
10.1016/j.cageo.2010.04.016,3D geo-database research: Retrospective and future directions,,2020-03-20
10.25560/51553,Active constraints for robotic surgery in deforming tissue,,2019-03-20
10.1118/1.4802747,Resolution enhancement of lung 4D-CT data using multiscale interphase iterative nonlocal means.,,2015-03-20
10.1007/s00778-019-00559-8,Indexing in flash storage devices: a survey on challenges  current approaches  and future trends,,2011-03-20
10.1201/9780203323687.ch40,Distributed Data Structures for Peer-to-Peer Systems,,2011-03-20
10.2298/AADM0802234P,Records in geometrically distributed words: Sum of positions,,2019-03-20
10.1145/2902251.2902276,Anti-Persistence on Persistent Storage: History-Independent Sparse Tables and Dictionaries,,2019-03-20
10.5120/ijca2017913112,A New Improved Circular Skip List with Priority Search,,2018-03-20
10.14569/IJACSA.2016.070220,Skip List Data Structure Based New Searching Algorithm and Its Applications: Priority Search,,2014-03-20
10.1016/j.tcs.2005.10.041,The binomial transform and the analysis of skip lists,,2020-03-20
10.1016/S0304-3975(02)00641-2,Combinatorics of geometrically distributed random variables: run statistics,,2017-03-20
10.4230/LIPIcs.OPODIS.2018.9,Lock-Free Search Data Structures: Throughput Modelling with Poisson Processes,,2015-03-20
10.1142/S0218126618502183,Pyramid Search: Skip Ring Data Structure-Based New Searching Algorithm,,2016-03-20
10.1145/1290672.1290674,Skip graphs,,2020-03-20
10.1016/J.SPL.2008.11.008,The average position of the dth maximum in a sample of geometric random variables,,2020-03-20
10.1089/cmb.2013.0032,Efficient Identification of Equivalences in Dynamic Graphs and Pedigree Structures,,2020-03-20
10.1007/978-3-540-72845-0_8,On the Cost of Persistence and Authentication in Skip Lists,,2014-03-20
10.1007/978-3-0348-7915-6_35,The Number of Descents in Samples of Geometric Random Variables,,2016-03-20
10.1145/3034786.3056117,Write-Optimized Skip Lists,,2015-03-20
10.1007/S13369-016-2288-Y,Fair Priority Scheduling (FPS): A Process Scheduling Algorithm Based on Skip Ring Data Structure,,2015-03-20
10.1145/1011767.1011785,Load balancing and locality in range-queriable data structures,,2014-03-20
10.1016/J.SPL.2017.01.017,Geometric random variables: Descents following maxima,,2013-03-20
10.1007/3-540-45066-1_9,A Finite Complete Set of Equations Generating Graphs,,2016-03-20
10.1016/j.tcs.2007.11.022,Graph automata,,2011-03-20
10.1016/j.tcs.2016.11.006,One-way reversible multi-head finite automata,,2015-03-20
10.1142/S012905411540002X,Investigations on Automata and Languages Over a Unary Alphabet,,2013-03-20
10.1145/2213977.2214082,Strict fibonacci heaps,,2012-03-20
10.1007/s00224-011-9357-0,Two Skew-Binary Numeral Systems and One Application,,2016-03-20
10.1007/978-3-642-14031-0_51,The Violation Heap: A Relaxed Fibonacci-Like Heap,,2012-03-20
10.1142/S1793830910000838,The Violation Heap: a Relaxed Fibonacci-like Heap,,2017-03-20
10.1137/100785351,Rank-Pairing Heaps,,2014-03-20
10.1051/ita/2017010,Bipartite binomial heaps,,2017-03-20
10.1007/s00607-008-0019-2,Two new methods for constructing double-ended priority queues from priority queues,,2013-03-20
10.1007/978-3-642-13122-6_17,The Magic of a Number System,,2018-03-20
10.1007/978-3-642-13731-0_4,Strictly-Regular Number System and Data Structures,,2017-03-20
10.1007/978-3-642-40313-2_32,In-Place Binary Counters,,2014-03-20
10.1007/978-3-642-30642-6_13,Worst-Case Optimal Priority Queues via Extended Regular Counters,,2013-03-20
10.1016/j.jda.2012.04.010,The weak-heap data structure: Variants and applications,,2011-03-20
10.1145/990000/982795,Compact representations of ordered sets,,2012-03-20
10.1007/3-540-44808-X_7,Experiments on Adaptive Set Intersections for Text Retrieval Systems,,2016-03-20
10.1007/978-3-642-25011-8_16,Two Constant-Factor-Optimal Realizations of Adaptive Heapsort,,2012-03-20
10.1145/1412228.1455267,Inversion-sensitive sorting algorithms in practice,,2017-03-20
10.1007/978-3-540-30213-1_24,Concurrency Control and I/O-Optimality in Bulk Insertion,,2016-03-20
10.1007/3-540-36494-3_57,Adaptive Sorting and the Information Theoretic Lower Bound,,
10.1007/978-3-642-40104-6_25,Blame Trees,,2017-03-20
10.1007/3-540-45465-9_17,Priority Queues  Pairing  and Adaptive Sorting,,2020-03-20
10.1109/SMAP.2014.26,Towards Formal Representation and Comparison of Video Content Using Algebraic Semiotics,,2018-03-20
10.1007/978-3-642-24897-9_1,Selected Decision Problems for Square-Refinement Collage Grammars,,2018-03-20
10.1007/978-3-642-03564-7_11,An Eilenberg Theorem for Pictures,,2019-03-20
10.1007/978-3-319-68103-0_22,A Formal Representation of Video Content with the Picture Hyperoperation,,2011-03-20
10.1007/3-540-36477-3_2,Combinatorial Auctions  an Example of Algorithm Theory in Real Life,,2012-03-20
10.1007/978-3-319-70169-1_37,PLATINUm: A New Framework for Planning and Acting,,2020-03-20
10.1016/J.PROCIR.2018.03.022,Fostering Robust Human-Robot Collaboration through AI Task Planning,,2020-03-20
10.1609/AAAI.V33I01.33017538,Robustness Envelopes for Temporal Plans,,2014-03-20
10.1109/RO-MAN47096.2020.9223605,A Two-Layered Approach to Adaptive Dialogues for Robotic Assistance,,2015-03-20
10.1109/IRC.2019.00016,Model-Driven Scheduling of Real-Time Tasks for Robotics Systems,,2017-03-20
10.4204/EPTCS.277.14,Complexity of Timeline-Based Planning over Dense Temporal Domains: Exploring the Middle Ground,,2013-03-20
10.1007/978-3-030-38561-3_12,Design of Timeline-Based Planning Systems for Safe Human-Robot Collaboration,,2016-03-20
10.1007/978-3-319-49130-1_37,Steps in Assessing a Timeline-Based Planner,,2013-03-20
10.1016/j.actaastro.2019.10.002,Heuristic search via graphical structure in temporal interval-based planning for deep space exploration,,2014-03-20
10.1016/J.ACTAASTRO.2018.04.056,Effective search strategy via internal state transition graphs on onboard planning for deep space probes,,2015-03-20
10.24963/ijcai.2017/140,Bounded Timed Propositional Temporal Logic with Past Captures Timeline-based Planning with Bounded Constraints,,2013-03-20
10.1007/978-3-030-04324-7_67,Giraff Meets KOaLa to Better Reason on Sensor Networks,,2019-03-20
10.1109/MAES.2019.2905922,ARIES: An Autonomous Controller For Multirobot Cooperation,,2013-03-20
10.1016/j.tcs.2019.12.030,Timeline-based planning over dense temporal domains,,2016-03-20
10.4230/LIPIcs.TIME.2018.13,A game-theoretic approach to timeline-based planning with uncertainty,,2016-03-20
10.1007/978-3-030-05921-7_14,"Will Robin Ever Help ""Nonna Lea"" Using Artificial Intelligence?",,2013-03-20
10.1109/RO-MAN46459.2019.8956417,ROS-TiPlEx: How to make experts in A.I. Planning and Robotics talk together and be happy,,2018-03-20
10.3233/IA-160100,Investigating domain independent heuristics in a timeline-based planner,,2019-03-20
10.1007/978-3-030-35166-3_18,Evaluating Robustness of an Acting Framework over Temporally Uncertain Domains,,2011-03-20
10.4230/LIPIcs.TIME.2019.5,Customizing BPMN Diagrams Using Timelines,,2019-03-20
10.1016/J.CIRP.2019.05.002,Symbiotic human-robot collaborative assembly,,2015-03-20
10.1016/j.rcim.2020.102051,A software tool for human-robot shared-workspace collaboration with task precedence constraints,,2016-03-20
10.1007/s12652-020-01766-w,Toward intelligent continuous assistance,,2017-03-20
10.1109/TIME.2016.18,Timelines Are Expressive Enough to Capture Action-Based Temporal Planning,,2016-03-20
10.4230/LIPIcs.FSTTCS.2019.34,Taming the Complexity of Timeline-Based Planning over Dense Temporal Domains,,2013-03-20
10.1016/j.tcs.2020.02.011,On timeline-based games and their complexity,,2016-03-20
10.1007/s00366-018-0630-6,Knowledge-based adaptive agents for manufacturing domains,,2012-03-20
10.1007/978-3-030-38561-3,Knowledge Engineering Tools and Techniques for AI Planning,,2019-03-20
10.1109/TAES.2019.2920046,Extended State-Based Planning Approach for Deep Space Exploration,,2016-03-20
10.1109/TAAI48200.2019.8959867,Chatbot-mediated Personal Daily Context Modeling upon User Story Graph,,2011-03-20
10.1109/ETFA.2016.7733585,Towards a planning-based framework for symbiotic human-robot collaboration,,2011-03-20
10.1117/12.2282947,Enriching mission planning approach with state transition graph heuristics for deep space exploration,,2014-03-20
10.1109/RO-MAN47096.2020.9223483,A Layered Control Approach to Human-Aware Task and Motion Planning for Human-Robot Collaboration,,2019-03-20
10.24963/ijcai.2017/750,On the Complexity and Expressiveness of Automated Planning Languages Supporting Temporal Reasoning,,2013-03-20
10.1007/978-3-030-34507-5_4,PIROS: Cooperative  Safe and Reconfigurable Robotic Companion for CNC Pallets Load/Unload Stations,,2012-03-20
10.1007/s12369-019-00617-9,A Holistic Approach to Behavior Adaptation for Socially Assistive Robots,,2014-03-20
10.1109/ROMAN.2018.8525622,A Cognitive Loop for Assistive Robots - Connecting Reasoning on Sensed Data to Acting,,2017-03-20
10.1007/978-3-030-03840-3_34,A Goal Triggering Mechanism for Continuous Human-Robot Interaction,,2016-03-20
10.1007/978-3-030-01054-6_53,A Semantic Representation of Sensor Data to Promote Proactivity in Home Assistive Robotics,,2015-03-20
10.1016/J.CIRP.2017.04.095,Motion planning and scheduling for human and industrial-robot collaboration,,2018-03-20
10.1109/TLA.2019.8896810,On-board Automated Mission Planning for Spacecraft Autonomy: A Survey,,2014-03-20
10.3233/FAIA200362,Lifted Heuristics for Timeline-Based Planning,,2016-03-20
10.1007/BF00264256,Size-depth tradeoff in non-monotone Boolean formulae,,2013-03-20
10.1007/BF01744302,On the depth complexity of formulas,,2012-03-20
10.1145/3340321,Faster Adder Circuits for Inputs with Prescribed Arrival Times,,2018-03-20
10.1134/s1990478919040161,On a Relation Between the Depth and Complexity of Monotone Boolean Formulas,,2012-03-20
10.1134/S1990478908020063,On possibility of refining bounds for the delay of a parallel adder,,2011-03-20
10.1016/j.ic.2018.09.009,Distributed Synthesis for Parameterized Temporal Logics,,2012-03-20
10.4204/EPTCS.226.16,Distributed PROMPT-LTL Synthesis,,2015-03-20
10.1007/978-3-662-48971-0_7,Optimal Search Trees with 2-Way Comparisons,,2011-03-20
10.1007/BF02311231,P — A logic — a compositional proof system for distributed programs,,2018-03-20
10.1109/SOCA.2011.6166223,Invariants as a unified knowledge model for Cyber-Physical Systems,,2013-03-20
10.1007/BF02973486,Proof techniques for port-directed communication and broadcast,,2014-03-20
10.1007/978-0-387-09766-4_182,Owicki-Gries Method of Axiomatic Verification,,2011-03-20
10.1109/TSG.2013.2283171,Unified Invariants for Cyber-Physical Switched System Stability,,2013-03-20
10.1016/j.tcs.2004.09.019,An assertion-based proof system for multithreaded Java,,2019-03-20
10.1007/BF00289498,Total correctness of CSP programs,,2014-03-20
10.1007/978-3-540-39656-7_1,A Tool-Supported Proof System for Multithreaded Java,,2016-03-20
10.1007/3-540-45931-6_2,Verification for Java's Reentrant Multithreading Concept,,2018-03-20
10.1109/COMPSAC.2005.121,Power transmission control using distributed max-flow,,2018-03-20
10.1007/s10009-015-0403-0,Some recent advances in automated analysis,,2012-03-20
10.1016/J.CAMWA.2005.02.015,Computation of equilibriain noncooperative games,,2012-03-20
10.1109/CSF.2011.11,Automated Proofs for Diffie-Hellman-Based Key Exchanges,,2019-03-20
10.1007/3-540-45426-8_6,An Environment for the Integrated Modelling of Systems with Complex Continuous and Discrete Dynamics,,2015-03-20
10.1007/BF01843567,A model and temporal proof system for networks of processes,,2018-03-20
10.1109/ISPDC.2011.17,Formal Refinement of BSP Programs with Early Cost Evaluation,,2014-03-20
10.1007/978-3-540-39958-2_11,Inductive Proof Outlines for Monitors in Java,,2019-03-20
10.1016/j.entcs.2005.12.072,Inductive Proof Outlines for Exceptions in Multithreaded Java,,2015-03-20
10.1109/IPDPS.2006.1639626,Cost evaluation from specifications for BSP programs,,2020-03-20
10.1007/BF00268075,Specification-oriented semantics for Communicating Processes,,2019-03-20
10.1007/3-540-45426-8_13,Compositional Verification of Continuous-Discrete Systems,,2020-03-20
10.1145/1555349.1555385,Self-adaptive admission control policies for resource-sharing systems,,2017-03-20
10.1007/BF00271344,A note on the influence of program loading on the page fault rate,,2016-03-20
10.1007/BF02943541,A feedback macro-scheduler,,2020-03-20
10.1287/moor.1090.0412,Law of Large Number Limits of Limited Processor-Sharing Queues,,2012-03-20
10.1145/1353343.1353420,BI batch manager: a system for managing batch workloads on enterprise data-warehouses,,2020-03-20
10.1214/10-AAP709,Diffusion Limits of Limited Processor Sharing Queues,,2018-03-20
10.1007/BF01840450,An evaluation of buffer management strategies for relational database systems,,2011-03-20
10.1007/BF00262979,Program behavior prediction and prepaging,,2015-03-20
10.1007/s11134-008-9095-4,Steady state approximations of limited processor sharing queues in heavy traffic,,
10.1145/1070838.1070856,The locality principle,,2018-03-20
10.1109/MWSCAS.2008.4616873,Handshaking expansion as action refinement,,2019-03-20
10.1109/ICIS.2009.6,An Eliminating Causal Ambiguity Approach to Reactive Systems,,2018-03-20
10.17706/jsw.11.8.712-732,Preservation of Dynamic Behaviours in a Hierarchical Event Structure,,2015-03-20
10.1093/logcom/exy008,A temporal dynamic deontic logic,,2014-03-20
10.1145/1562814.1562822,BMS revisited,,2020-03-20
10.1093/logcom/exv025,Commands changing obligations 1,,2018-03-20
10.1145/2908080.2908108,Temporal NetKAT,,2019-03-20
10.1007/978-3-662-48561-3_14,Trace Semantics for IPDL,,2020-03-20
10.1007/978-3-642-39992-3_22,Ockhamist Propositional Dynamic Logic: A Natural Link between PDL and CTL,,2018-03-20
10.1016/S1570-8683(03)00008-9,Mathematical modal logic: A view of its evolution,,2015-03-20
10.1007/978-3-319-08587-6_22,dTL2: Differential Temporal Dynamic Logic with Nested Temporalities for Hybrid Systems,,2012-03-20
10.1016/S1874-5857(06)80027-0,Mathematical modal logic: A view of its evolution,,2011-03-20
10.1109/DEXA.2006.19,A Strongly Minimal Axiomatisation of Multivalued Dependencies in Incomplete Database Relations,,2018-03-20
10.1007/978-3-540-77684-0_7,Appropriate Reasoning about Data Dependencies in Fixed and Undetermined Universes,,2016-03-20
10.1016/j.entcs.2003.12.012,A Membership Algorithm for Functional and Multi-valued Dependencies in the Presence of Lists,,2012-03-20
10.1007/s10472-012-9275-0,Appropriate inferences of data dependencies in relational databases,,2018-03-20
10.1142/S0129054108005899,On the Implication of Multivalued Dependencies in Partial Database Relations,,2020-03-20
10.1007/978-3-540-24627-5_10,Reasoning about Functional and Multi-valued Dependencies in the Presence of Lists,,2020-03-20
10.1007/s10472-007-9067-0,Full hierarchical dependencies in fixed and undetermined universes,,2013-03-20
10.1016/j.tcs.2005.08.036,On a problem of Fagin concerning multivalued dependencies in relational databases,,2012-03-20
10.1145/1055558.1055603,Multi-valued dependencies in the presence of lists,,2014-03-20
10.1007/978-1-4757-9670-4_38,Requirements for Production Targets for Middle-Energy Cyclotrons,,
10.2478/V10109-011-0003-9,Związki pomiędzy wysklepieniem poprzecznym stóp a wybranymi cechami morfologicznymi u młodych osób dorosłych / Correlations between the transverse arch of the foot and chosen morphological characteristics in young adults,,2011-03-20
10.1145/384192.384194,Enhanced operational semantics: a tool for describing and analyzing concurrent systems,,2019-03-20
10.1006/inco.2000.3058,Language-based Performance Prediction for Distributed and Mobile Systems,,2017-03-20
10.1016/S0304-3975(01)00136-0,Primitives for authentication in process algebras,,2012-03-20
10.1145/372202.380701,A debugging calculus for mobile ambients,,2015-03-20
10.1007/978-3-319-25527-9_21,From Safety Critical Java Programs to Timed Process Models,,2014-03-20
10.1007/3-540-46691-6_24,The Receptive Distributed pi-Calculus (Extended Abstract),,2011-03-20
10.1109/32.962559,Performance Evaluation of Mobile Processes via Abstract Machines,,2018-03-20
10.1007/BF01214958,Modularising the specification of a small database system in extended ML,,2018-03-20
10.1007/978-3-540-73001-9_4,RZ: A Tool for Bringing Constructive and Computable Mathematics Closer to Programming Practice,,2017-03-20
10.7551/mitpress/1104.001.0001,Advanced Topics In Types And Programming Languages,,2014-03-20
10.1017/S0960129513000212,Property-oriented semantics of structured specifications,,2012-03-20
10.1016/j.jlap.2003.12.001,Manipulating algebraic specifications with term-based and graph-based representations,,2019-03-20
10.1016/j.entcs.2005.03.013,Testing from Structured Algebraic Specifications: The Veritas Case Study,,2014-03-20
10.1016/j.tcs.2004.09.037,Amalgamation in the semantics of CASL,,2015-03-20
10.1007/978-3-540-39993-3_7,Composing Hidden Information Modules over Inclusive Institutions,,2015-03-20
10.1093/logcom/exn026,RZ: a Tool for Bringing Constructive and Computable Mathematics Closer to Programming Practice,,2011-03-20
10.1016/j.tcs.2018.02.034,CoFI with Don Sannella,,2017-03-20
10.1007/978-3-540-25951-0_1,Specifying Compositional Units for Correct Program Development in Computational Logic,,2018-03-20
10.1016/B978-0-12-374708-2.00005-X,The Language of Action,,2011-03-20
10.1007/978-3-642-03564-7_23,Parallel Communicating Grammar Systems with Regular Control,,2012-03-20
10.1109/MC.2007.154,A Language for Human Action,,2011-03-20
10.3217/jucs-018-14-2024,Controlled Pure Grammar Systems,,2011-03-20
10.1016/j.tcs.2010.10.017,Parallel communicating grammar systems with regular control and skeleton preserving FRR automata,,2019-03-20
10.1109/ICHR.2006.321365,A Sensory-Motor Language for Human Activity Understanding,,2019-03-20
10.1007/978-1-4939-0369-6_14,Chapter 14 Controlled Pure Grammar Systems,,2013-03-20
10.1142/S0219843609001814,The Morphology of Human Actions: Finding Essential Actuators  Motion Patterns  and their Coordination,,2018-03-20
10.1007/978-3-540-72982-2_1,Well-Founded Semantics for Hybrid Rules,,2013-03-20
10.1007/s10115-010-0300-5,Hybrid rules with well-founded semantics,,2014-03-20
10.1007/978-3-540-27775-0_20,Implementation Results in Classical Constructive Negation,,2015-03-20
10.1145/1244002.1244284,Implementing type-based constructive negation,,2020-03-20
10.1023/A:1020116927466,SLT-Resolution for the Well-Founded Semantics,,2020-03-20
10.1007/BF03037598,Constructive negation and constraint logic programming with sets,,2011-03-20
10.1007/11680093_9,A Transformational Semantics of Static Embedded Implications of Normal Logic Programs,,2014-03-20
10.1007/978-3-642-13840-9_12,Chess Revision: Acquiring the Rules of Chess Variants through FOL Theory Revision from Examples,,2016-03-20
10.1007/11780274_29,A Functorial Framework for Constraint Normal Logic Programming,,2014-03-20
10.1007/11680093_5,An Algorithm for Local Variable Elimination in Normal Logic Programs,,2015-03-20
10.1007/BF00125368,Intensional query answering by partial evaluation,,2018-03-20
10.1007/978-3-642-04581-3_1,Hybrid Reasoning with Rules and Ontologies,,2018-03-20
10.1145/967900.968194,Constructive negation by bottom-up computation of literal answers,,2020-03-20
10.1007/s10485-008-9128-5,A Functorial Framework for Constraint Normal Logic Programming,,2011-03-20
10.1016/j.jlap.2012.03.001,Semantics of structured normal logic programs,,2011-03-20
10.1007/978-3-540-30227-8_25,"Soundness and Completeness of an ""Efficient"" Negation for Prolog",,2012-03-20
10.1017/S147106840500253X,Proving correctness and completeness of normal programs - a declarative approach,,2015-03-20
10.3217/jucs-012-11-1574,Constructive Failure in Functional-Logic Programming: From Theory to Implementation,,2012-03-20
10.1007/BF03037483,Constrained partial deduction and the preservation of characteristic trees,,2012-03-20
10.1080/01969722.2016.1276777,Extending Query-Subquery Nets for Deductive Databases under the Well-Founded Semantics,,2012-03-20
10.1016/J.JLAP.2013.07.002,An extended constraint deductive database: Theory and implementation,,2011-03-20
10.1016/j.entcs.2005.01.037,Elimination of Local Variables from Definite Logic Programs,,2014-03-20
10.1007/978-3-642-15543-7_2,Hybrid Reasoning with Non-monotonic Rules,,2016-03-20
10.1016/j.tcs.2016.12.025,Promise problems solved by quantum and classical finite automata,,2015-03-20
10.1007/S10773-019-04031-9,On Coverings of Products of Uninitialized Sequential Quantum Machines,,2012-03-20
10.1016/j.jcss.2015.01.001,On hybrid models of quantum finite automata,,2016-03-20
10.1016/J.TCS.2011.10.021,Characterizations of one-way general quantum finite automata,,2018-03-20
10.1016/J.JCSS.2014.06.008,Exponentially more concise quantum recognition of non-RMM regular languages,,2016-03-20
10.1051/ita/2018020,On the power of two-way multihead quantum finite automata,,2018-03-20
10.1109/TFUZZ.2014.2315620,On the State Minimization of Fuzzy Automata,,2020-03-20
10.1016/j.jcss.2020.08.004,Equivalence Checking of Quantum Finite-State Machines,,2012-03-20
10.1007/978-3-319-13350-8_18,From Quantum Query Complexity to State Complexity,,2019-03-20
10.1007/s11128-020-02842-y,QPSO-CD: Quantum-behaved Particle Swarm Optimization Algorithm with Cauchy Distribution,,2016-03-20
10.1016/j.ic.2019.104452,Periodic generalized automata over the reals,,2019-03-20
10.4236/AM.2016.79088,1-Way Multihead Quantum Finite State Automata,,2014-03-20
10.1007/BF00985822,Specification of data restructuring software based on the attribute method,,2015-03-20
10.1016/j.jlap.2012.06.003,Twenty years of rewriting logic,,2015-03-20
10.1109/WSC.2007.4419655,Semantics of petri nets: A comparison,,2018-03-20
10.1007/978-3-319-25527-9_17,Language Representability of Finite P/T Nets,,2011-03-20
10.1109/LICS.2017.8005135,Domains and event structures for fusions,,2013-03-20
10.1007/978-3-642-02424-5_2,Unifying Petri Net Semantics with Token Flows,,2014-03-20
10.1007/978-3-319-23165-5_9,A Normal Form for Stateful Connectors,,2017-03-20
10.1007/978-3-319-23165-5_1,José Meseguer: Scientist and Friend Extraordinaire,,2013-03-20
10.1007/978-3-642-16310-4_2,Twenty Years of Rewriting Logic,,2017-03-20
10.1007/978-3-540-68679-8_1,Ugo Montanari in a Nutshell,,2011-03-20
10.1016/J.JMSY.2018.04.006,Dynamic Production System Identification for Smart Manufacturing Systems.,,2018-03-20
10.1007/978-3-642-40213-5_3,Deadlock Checking by Data Race Detection,,2017-03-20
10.1007/978-3-540-73420-8_64,Undecidability of 2-Label BPP Equivalences and Behavioral Type Systems for the pi -Calculus,,2014-03-20
10.1007/978-3-540-28644-8_15,Type Based Discretionary Access Control,,2018-03-20
10.1007/11580850_2,A Theory of Noninterference for the pi-Calculus,,2011-03-20
10.1007/978-3-540-70545-1_10,A Hybrid Type System for Lock-Freedom of Mobile Processes,,2016-03-20
10.1016/j.ic.2009.10.011,Spatial and behavioral types in the pi-calculus,,2012-03-20
10.1145/1375696.1375708,A type system for data-flow integrity on windows vista,,2017-03-20
10.1007/978-3-540-75698-9_20,Type abstractions of name-passing processes,,2017-03-20
10.1016/j.entcs.2007.09.012,State-oriented Noninterference for CCS,,2019-03-20
10.1007/978-3-319-19282-6,Coordination Models and Languages,,2013-03-20
10.3990/1.9789036536523,Qualitative and Quantitative Information Flow Analysis for Multi-threaded Programs,,2017-03-20
10.1016/j.ic.2016.03.004,Deadlock analysis of unbounded process networks,,2018-03-20
10.1145/1513443.1513447,A type system for data-flow integrity on Windows Vista,,2015-03-20
10.1109/TR.2017.2665164,An Approach for Identifying and Analyzing Implicit Interactions in Distributed Systems,,2016-03-20
10.1145/2166956.2166960,Limiting information leakage in event-based communication,,2014-03-20
10.3233/JCS-130492,Effective verification of confidentiality for multi-threaded programs,,2015-03-20
10.1007/978-3-319-28766-9_7,Disjunctive Information Flow for Communicating Processes,,2012-03-20
10.1145/2364527.2364557,Addressing covert termination and timing channels in concurrent information flow systems,,2018-03-20
10.1017/S0960129509007762,A type system for Discretionary Access Control,,2018-03-20
10.1145/2384616.2384621,Towards a practical secure concurrent language,,2012-03-20
10.1007/978-3-319-02444-8_21,An Expressive Framework for Verifying Deadlock Freedom,,2014-03-20
10.1109/CSF.2012.15,Securing Interactive Programs,,2011-03-20
10.1145/2993600.2993608,On Formalizing Information-Flow Control Libraries,,2013-03-20
10.1007/978-3-662-44471-9_6,From Linear Types to Behavioural Types and Model Checking,,2012-03-20
10.24251/HICSS.2017.726,Identifying Implicit Component Interactions in Distributed Cyber-Physical Systems,,2013-03-20
10.1007/978-3-030-61362-4_3,Composing Communicating Systems  Synchronously,,2017-03-20
10.1016/j.tcs.2008.08.017,Responsiveness in process calculi,,2012-03-20
10.1007/978-3-540-76637-7_11,Timed  Distributed  Probabilistic  Typed Processes,,2015-03-20
10.1145/1180337.1180339,P-congruences as non-interference for the pi-calculus,,2020-03-20
10.1007/11817949_16,A New Type System for Deadlock-Free Processes,,2014-03-20
10.1016/j.jlap.2011.11.001,Deadlock checking by a behavioral effect system for lock handling,,2012-03-20
10.1007/978-3-642-15375-4_17,Session Types for Access and Information Flow Control,,2013-03-20
10.1007/978-3-319-47166-2_30,Information Flow Analysis for Go,,2013-03-20
10.1007/11609773_20,Resource Usage Analysis for the Pi-Calculus,,2014-03-20
10.1007/978-3-642-30065-3_7,Constraints for Service Contracts,,2015-03-20
10.1007/978-3-642-40203-6_40,Eliminating Cache-Based Timing Attacks with Instruction-Based Scheduling,,2015-03-20
10.1016/j.jlamp.2016.05.003,Effect-polymorphic behaviour inference for deadlock checking,,2018-03-20
10.1145/1745312.1745313,A hybrid type system for lock-freedom of mobile processes,,2013-03-20
10.1007/978-3-030-31175-9_4,Deadlock Analysis of Wait-Notify Coordination,,2013-03-20
10.1007/978-3-642-30065-3_11,Transactional Correctness for Secure Nested Transactions - (Extended Abstract),,2019-03-20
10.1007/978-3-030-17138-4,Principles of Security and Trust,,2014-03-20
10.1109/TASE.2014.23,Behaviour Inference for Deadlock Checking,,2011-03-20
10.1007/978-3-319-99725-4_18,Process-Local Static Analysis of Synchronous Processes,,2020-03-20
10.1016/j.ic.2014.07.005,Typing access control and secure information flow in sessions,,2012-03-20
10.1007/978-3-540-85361-9_30,Spatial and Behavioral Types in the Pi-Calculus,,2012-03-20
10.1007/978-3-319-05119-2_5,Security Correctness for Secure Nested Transactions - Extended Abstract,,2014-03-20
10.1007/978-3-540-77505-8_11,Responsiveness in Process Calculi,,2016-03-20
10.1007/978-3-319-05302-8_6,Enforcing Information Flow by Combining Static and Dynamic Analysis,,2013-03-20
10.1007/978-3-319-47958-3_7,Static Trace-Based Deadlock Analysis for Synchronous Mini-Go,,2016-03-20
10.4204/EPTCS.227.5,Parameterized Dataflow (Extended Abstract),,2020-03-20
10.1007/978-3-030-50029-0_6,Choreography Automata,,2018-03-20
10.1007/978-3-662-44584-6_6,Deadlock Analysis of Unbounded Process Networks,,2011-03-20
10.22152/programming-journal.org/2018/2/15,Deadlock-Free Typestate-Oriented Programming,,2018-03-20
10.1007/978-3-540-31982-5_19,Bridging Language-Based and Process Calculi Security,,2019-03-20
10.1007/978-3-319-24177-7_25,Factorization of Behavioral Integrity,,2016-03-20
10.1007/978-3-540-40018-9_5,Useless Code Elimination and Programm Slicing for the Pi-Calculus,,2013-03-20
10.1007/978-3-540-71316-6_33,Type-Based Analysis of Deadlock for a Concurrent Calculus with Interrupts,,2012-03-20
10.1145/1134744.1134750,Combining type-based analysis and model checking for finding counterexamples against non-interference,,2012-03-20
10.1016/j.ic.2006.03.002,Ensuring termination by typability,,2011-03-20
10.1007/978-3-642-33704-8_11,Enforcing Information Flow Policies by a Three-Valued Analysis,,2012-03-20
10.2168/LMCS-2(3:4)2006,Resource Usage Analysis for the p-Calculus,,
10.1007/978-3-642-01187-0_22,Verification of Information Flow in Agent-Based Systems,,2011-03-20
10.1007/978-3-319-71237-6_3,Taming Message-Passing Communication in Compositional Reasoning About Confidentiality,,2020-03-20
10.1016/j.ic.2007.01.001,Controlling information release in the pi-calculus,,2018-03-20
10.1007/978-3-642-01465-9_6,Causality and Accountability,,2020-03-20
10.1016/J.JLAMP.2017.12.003,MAC  A Verified Static Information-Flow Control Library,,2015-03-20
10.1007/978-3-540-89330-1_12,Type-Based Deadlock-Freedom Verification for Non-Block-Structured Lock Primitives and Mutable References,,2019-03-20
10.1016/J.COLA.2019.100904,Enforcing globally dependent flow policies in message-passing systems,,2014-03-20
10.1007/978-3-319-19282-6_6,Type Reconstruction Algorithms for Deadlock-Free and Lock-Free Linear π-Calculi,,2015-03-20
10.1109/CSF.2008.9,A Type System for Observational Determinism,,2015-03-20
10.1007/978-3-030-17138-4_1,Foundations for Parallel Information Flow Control Runtime Systems,,2014-03-20
10.1145/2603088.2603116,Deadlock and lock freedom in the linear π-calculus,,
10.1109/ISCC.2008.4625595,Relaxed min-augmented range trees for the representation of dynamic IP router tables,,2014-03-20
10.1016/S0022-0000(03)00027-8,Relaxed multi-way trees with group updates,,2016-03-20
10.1142/S0129054107004607,Update-efficient Data Structures for Dynamic Ip Router Tables,,2012-03-20
10.1016/j.entcs.2004.04.043,A Modal Logic for pi-Calculus and Model Checking Algorithm,,2012-03-20
10.1145/2211616.2211619,A logical verification methodology for service-oriented computing,,2017-03-20
10.1016/S0890-5401(03)00052-X,A semantic theory for value-passing processes based on the late approach,,2011-03-20
10.1007/BF02944747,Model checking real-time value-passing systems,,2019-03-20
10.2168/LMCS-7(3:7)2011,Permission-Based Separation Logic for Message-Passing Concurrency,,2015-03-20
10.1007/11562436_8,Fast Generic Model-Checking for Data-Based Systems,,2017-03-20
10.4230/LIPIcs.CONCUR.2015.198,Modal Logics for Nominal Transition Systems,,2017-03-20
10.1145/963778.963783,On exponential-time completeness of the circularity problem for attribute grammars,,2018-03-20
10.1117/1.OE.53.10.102108,Inspection algorithm based on Gaussian filtering for oil seal spring,,2012-03-20
10.4249/scholarpedia.9269,Gene assembly in Ciliates,,2019-03-20
10.1017/S1062798713000598,The P versus NP Problem from the Membrane Computing View,,2019-03-20
10.4249/scholarpedia.9290,Computational complexity in P systems,,2011-03-20
10.1007/s41965-019-00024-z,A new method to simulate restricted variants of polarizationless P systems with active membranes,,2020-03-20
10.1007/978-3-642-36751-9_14,A New Approach for Solving SAT by P Systems with Active Membranes,,2012-03-20
10.1007/978-3-540-31834-7_6,Computational Completeness of P Systems with Active Membranes and Two Polarizations,,2011-03-20
10.1080/00207160701326764,A general approach for building combinational P automata,,2013-03-20
10.1007/s00500-004-0399-y,Further remarks on P systems with active membranes  separation  merging  and release rules,,2011-03-20
10.25596/jalc-2016-107,Polarizationless P Systems with Active Membranes: Computational Complexity Aspects,,2020-03-20
10.1007/978-3-642-11467-0_10,A computational complexity theory in membrane computing,,2019-03-20
10.1007/978-981-15-0035-0_40,An N-Puzzle Solver Using Tissue P System with Evolutional Symport/Antiport Rules and Cell Division,,2015-03-20
10.1007/11603047_19,Boolean Circuits and a DNA Algorithm in Membrane Computing,,2017-03-20
10.1007/978-3-319-73359-3_5,Counting Membrane Systems,,2012-03-20
10.3217/jucs-010-05-0630,P Systems with Active Membranes and Separation Rules,,2013-03-20
10.3233/FI-2017-1572,Cooperation in Transport of Chemical Substances: A Complexity Approach within Membrane Computing,,2018-03-20
10.1007/s11047-005-3771-7,P Systems with Mobile Membranes,,2015-03-20
10.1007/978-3-540-31837-8_5,An Approach to Computational Complexity in Membrane Computing,,2017-03-20
10.1007/978-3-540-74593-8_11,Uniform Solution of,,2013-03-20
10.3233/FI-2011-544,Looking for Small Efficient P Systems,,2014-03-20
10.1007/978-3-540-95885-7_8,Solving PP-Complete and #P-Complete Problems by P Systems with Active Membranes,,2017-03-20
10.1155/2019/5793234,Solution to PSPACE-Complete Problem Using P Systems with Active Membranes with Time-Freeness,,2017-03-20
10.1007/978-3-540-31862-0_7,Replicative - Distribution Rules in P Systems with Active Membranes,,2015-03-20
10.1007/978-3-642-04186-0_2,Simple  Enhanced and Mutual Mobile Membranes,,2011-03-20
10.3233/FI-2015-1158,Uniform Solution to Common Algorithmic Problem by P Systems Working in the Minimally Parallel Mode,,2014-03-20
10.1007/978-3-319-54072-6_14,Remarks on the Computational Power of Some Restricted Variants of P Systems with Active Membranes,,2013-03-20
10.1016/j.ipl.2005.01.017,P systems without multiplicities of symbol-objects,,2012-03-20
10.1007/978-3-540-31837-8_8,On the Efficiency of P Systems with Active Membranes and Two Polarizations,,2011-03-20
10.1016/j.tcs.2013.11.014,Time-free solution to SAT problem using P systems with active membranes,,2016-03-20
10.1002/int.20359,On the efficiency of cell‐like and tissue‐like recognizing membrane systems,,2019-03-20
10.17345/triangle6.1-17,Minimal Parallelism and Number of Membrane Polarizations,,2019-03-20
10.1016/j.tcs.2017.04.015,Reaching efficiency through collaboration in membrane systems: Dissolution  polarization and cooperation,,2018-03-20
10.4028/www.scientific.net/AMM.568-570.802,Semi-Uniform Solution for Common Algorithmic Problem by P System in the Minimally Parallel Mode,,2018-03-20
10.1007/978-3-662-45049-9_53,Uniform Solution to Common Algorithmic Problem in the Minimally Parallel Mode,,2018-03-20
10.1007/978-3-642-22600-7_22,A S2P ÈP2P\Sigma_2^P \cup \Pi_2^P Lower Bound Using Mobile Membranes,,2017-03-20
10.1017/S0960129518000282,The computational power of timed P systems with active membranes using promoters,,2018-03-20
10.1016/j.ic.2020.104542,Cell-like P systems with evolutional symport/antiport rules and membrane creation,,2017-03-20
10.1007/11603047_16,On the power of dissolution in p systems with active membranes,,2020-03-20
10.1002/INT.20359,On the efficiency of cell-like and tissue-like recognizing membrane systems,,2016-03-20
10.17345/triangle6.19-28,Membrane Operations in P Systems with Active Membranes,,2011-03-20
10.1007/978-3-319-14370-5,Membrane Computing,,
10.1016/j.jpdc.2006.01.003,Further remark on P systems with active membranes and two polarizations,,2011-03-20
10.1007/s41965-020-00039-x,Bounding the space in P systems with active membranes,,2019-03-20
10.1007/978-3-642-54239-8_14,Solving SAT by P Systems with Active Membranes in Linear Time in the Number of Variables,,2014-03-20
10.1007/978-981-10-3611-8_13,Membrane Algorithm with Genetic Operation and VRPTW-Based Public Optimization System,,2012-03-20
10.1007/s11047-014-9471-4,Time-free solution to SAT problem by P systems with active membranes and standard cell division rules,,
10.1002/INT.V24:7,On the efficiency of cell-like and tissue-like recognizing membrane systems,,2017-03-20
10.1007/11925903_2,Minimal Parallelism for Polarizationless P Systems,,2020-03-20
10.1080/10020070708541015,Seasonal variance in P system models for metapopulations,,2015-03-20
10.1400/150953,List of Publications Related to This Thesis,,2015-03-20
10.1007/978-3-319-13560-1_39,K-means Pattern Learning for Move Evaluation in the Game of Go,,2020-03-20
10.1016/J.TCS.2007.05.031,On the fairness and complexity of generalized k-in-a-row games,,2016-03-20
10.1109/WCICA.2012.6359058,“knowing more is less” in combinatorial games,,2017-03-20
10.1145/1599410.1599419,Alternation as a programming paradigm,,2013-03-20
10.1007/978-3-030-59671-2_9,Squares  Cats and Mazes: The Art and Magic of Spatial Complexity,,2012-03-20
10.1007/978-3-030-58115-2_37,Warm-Start AlphaZero Self-Play Search Enhancements,,2019-03-20
10.1007/978-3-030-13435-8_30,A Note with Computer Exploration on the Triangle Conjecture,,2019-03-20
10.1007/978-3-319-95630-5_202,Predictive Modeling of Design Innovative Solutions on Tooling Configurations at High-Tech Manufacturing Companies,,2020-03-20
10.1007/978-3-642-14455-4_31,Fast Parsing for Boolean Grammars: A Generalization of Valiant's Algorithm,,2019-03-20
10.1016/j.tcs.2013.09.011,Parsing by matrix multiplication generalized to Boolean grammars,,2017-03-20
10.1007/978-3-540-78127-1_21,Tree Automata over Infinite Alphabets,,2020-03-20
10.1007/978-3-642-39274-0,Implementation and Application of Automata,,2016-03-20
10.1007/11874683_3,Automata and Logics for Words and Trees over an Infinite Alphabet,,2012-03-20
10.1016/j.ic.2016.08.002,On temporal logics with data variable quantifications: Decidability and complexity,,2016-03-20
10.1145/1276301.1276308,Static analysis of XML processing with data values,,2015-03-20
10.4204/EPTCS.96.16,Higher-Order Pushdown Systems with Data,,2014-03-20
10.1007/978-3-642-39274-0_11,Towards Nominal Context-Free Model-Checking,,2019-03-20
10.1007/978-3-642-28729-9_26,Model Checking Languages of Data Words,,2014-03-20
10.1007/978-3-642-31606-7_11,Nominal Automata for Resource Usage Control,,2012-03-20
10.1007/978-3-642-31585-5_30,Algorithmic Games for Full Ground References,,2017-03-20
10.1109/LICS.2015.73,Timed Pushdown Automata Revisited,,2016-03-20
10.1007/978-3-642-28332-1_30,Feasible Automata for Two-Variable Logic with Successor on Data Words,,2015-03-20
10.1007/978-3-642-01748-3_8,The Power of Non-deterministic Reassignment in Infinite-Alphabet Pushdown Automata,,2012-03-20
10.1016/J.TCS.2020.11.003,Optimal run problem for weighted register automata,,2014-03-20
10.1007/s10703-017-0292-9,Algorithmic games for full ground references,,2016-03-20
10.4230/LIPIcs.CSL.2015.244,Reachability Analysis of First-order Definable Pushdown Systems,,2012-03-20
10.1007/978-3-030-13435-8_19,Generalized Register Context-Free Grammars,,2017-03-20
10.1016/j.jcss.2017.02.008,Reachability in pushdown register automata,,2020-03-20
10.1142/9789814271059_0017,Automata over Infinite Alphabets,,2020-03-20
10.1007/978-3-319-56841-6_6,Formal Reasoning on Infinite Data Values: An Ongoing Quest,,2013-03-20
10.1007/978-3-030-32505-3_6,Optimal Run Problem for Weighted Register Automata,,2016-03-20
10.1007/978-3-030-02508-3_22,Complexity Results on Register Context-Free Grammars and Register Tree Automata,,2012-03-20
10.1007/978-3-662-44522-8_39,Reachability in Pushdown Register Automata,,2016-03-20
10.1007/978-3-319-08867-9_14,Symbolic Visibly Pushdown Automata,,2018-03-20
10.1142/S0129054110007532,Finite-Memory Automata with Non-Deterministic Reassignment,,2011-03-20
10.1007/11963516_23,P Finite Automata and Regular Languages over Countably Infinite Alphabets,,2019-03-20
10.1016/c2014-0-02660-3,Foundations of Quantum Programming,,2016-03-20
10.1109/TSE.2010.94,A Flowchart Language for Quantum Programming,,2015-03-20
10.1007/978-3-642-17164-2_2,Foundations of Quantum Programming (Extended Abstract),,2011-03-20
10.1007/3-540-44612-5_20,Iterative Arrays with Small Time Bounds,,2012-03-20
10.4028/www.scientific.net/AMM.166-169.2570,Emergency Evacuation from a Multi-Room Compartment,,2019-03-20
10.1007/3-540-45132-3_17,Efficient Universal Pushdown Cellular Automata and Their Application to Complexity,,2012-03-20
10.1016/S0167-8191(97)00075-6,Some Relations Between Massively Parallel Arrays,,2013-03-20
10.1016/j.tcs.2009.10.005,Simulation of one-way cellular automata by boolean circuits,,2017-03-20
10.1007/3-540-48321-7_26,On Time-Constructible Functions in One-Dimensional Cellular Automata,,2018-03-20
10.1016/j.cosrev.2013.06.001,Conjunctive and Boolean grammars: The true general case of the context-free grammars,,2013-03-20
10.4204/EPTCS.151.8,Measuring Communication in Parallel Communicating Finite Automata,,2017-03-20
10.1007/978-3-642-02979-0_7,Cellular Automata with Sparse Communication,,2016-03-20
10.1007/978-1-4939-8700-9_49,Cellular Automata as Models of Parallel Computation,,2011-03-20
10.1016/S0304-3975(01)00112-8,Constructible functions in cellular automata and their applications to hierarchy results,,2011-03-20
10.1007/978-3-540-78291-9_6,Cellular Automata - A Computational Point of View,,2017-03-20
10.1016/J.PHYSA.2007.05.055,An evacuation model using cellular automata,,2012-03-20
10.1007/978-3-319-09698-8_23,Measuring Communication in Automata Systems - (Invited Paper),,2016-03-20
10.1080/03081079.2012.695896,Non-deterministic cellular automata and languages,,2017-03-20
10.1007/978-3-319-18812-6_1,Complexity of One-Way Cellular Automata,,2017-03-20
10.1007/978-3-030-10801-4_25,On the Expressive Power of GF(2)-Grammars,,2014-03-20
10.1007/978-3-319-99813-8_31,Self-verifying Cellular Automata,,2016-03-20
10.4028/www.scientific.net/AMM.580-583.2663,Modelling of the Human Behavior in Evacuation,,2019-03-20
10.1007/978-3-540-30550-7_24,The Boolean Closure of Linear Context-Free Languages,,2019-03-20
10.1007/BFb0055832,One Guess One-Way Cellular Arrays,,2014-03-20
10.1007/s11047-016-9588-8,Shrinking one-way cellular automata,,2015-03-20
10.1016/j.tcs.2010.05.024,Cellular automata with sparse communication,,2011-03-20
10.1007/978-3-642-33350-7_5,Iterative Arrays: Little Resources Big Size Impact,,2020-03-20
10.1007/978-3-540-92910-9_4,Language Recognition by Cellular Automata,,2011-03-20
10.1007/978-3-662-47221-7_11,Shrinking One-Way Cellular Automata,,2012-03-20
10.1016/S0304-3975(02)00406-1,Fast one-way cellular automata,,2016-03-20
10.1142/S0129054115400146,Returning Parallel Communicating Finite Automata with Communication Bounds: Hierarchies  Decidabilities  and Undecidabilities,,2014-03-20
10.1016/J.PHYSA.2006.12.044,A novel algorithm of simulating multi-velocity evacuation based on cellular automata modeling and tenability condition,,2020-03-20
10.3233/FI-2010-339,Automorphissm Classification of Cellular Automata,,2017-03-20
10.1007/BF01888228,The projection of systolic programs,,2020-03-20
10.1007/BF01558666,Synthesizing systolic arrays with control signals from recurrence equations,,2016-03-20
10.1007/BF02311229,Towards systolizing compilation,,2015-03-20
10.1145/509705.509706,Automatic data and computation decomposition on distributed memory parallel computers,,2013-03-20
10.1109/ICACTE.2008.174,Presenting a Systematic Method for LU Decomposition of a Matrix with Linear Systolic Arrays,,2011-03-20
10.1007/978-3-662-54434-1_6,Confluence of Graph Rewriting with Interfaces,,2012-03-20
10.1007/978-3-540-71070-7_30,Unification and Matching Modulo Leaf-Permutative Equational Presentations,,2016-03-20
10.1016/S0020-0190(02)00395-2,Algorithms and reductions for rewriting problems II,,2018-03-20
10.1016/j.jalgebra.2014.08.007,A strong geometric hyperbolicity property for directed graphs and monoids,,2018-03-20
10.1007/11596219_17,Completion Attacks and Weak Keys of Oleshchuk's Public Key Cryptosystem,,2020-03-20
10.1142/S012905411000757X,Compressed Membership Problems for Regular Expressions and Hierarchical Automata,,2015-03-20
10.1007/BF02945519,Some results on the confluence property of combined Term Rewriting Systems,,2017-03-20
10.1007/978-3-319-13524-3_21,Reconfiguration over Tree Decompositions,,2015-03-20
10.1016/j.aim.2012.05.010,Higher-dimensional normalisation strategies for acyclicity,,2014-03-20
10.1007/978-3-540-30550-7_26,Decidability and Complexity in Automatic Monoids,,2012-03-20
10.1142/S0218196702000985,Some Exact Sequences for The Homotopy (Bi-)Module af A Monoid,,2016-03-20
10.1016/j.jcss.2017.11.003,Reconfiguration in bounded bandwidth and tree-depth,,2020-03-20
10.1016/S0021-8693(03)00177-7,For finitely presented monoids the homological finiteness conditions FHT and bi-FP3 coincide,,2015-03-20
10.1007/s00224-004-1099-9,Decidable First-Order Theories of One-Step Rewriting in Trace Monoids,,2017-03-20
10.1142/S0129054105003248,Decidability and complexity in automatic monoids,,2018-03-20
10.1007/BF01692068,Finite canonical rewriting systems for congruences generated by concurrency relations,,2017-03-20
10.1023/A:1005764526878,Single Versus Simultaneous Equational Unification and Equational Unification for Variable-Permuting Theories,,2017-03-20
10.1007/BF02127799,Exact complexity of problems of incompletely specified automata,,2012-03-20
10.1016/J.AAM.2016.01.002,Operads  quasiorders and regular languages,,2018-03-20
10.1016/j.jda.2015.03.001,Extended to multi-tilde-bar regular expressions and efficient finite automata constructions,,2014-03-20
10.1007/s00453-016-0116-0,Approximating Vector Scheduling: Almost Matching Upper and Lower Bounds,,2015-03-20
10.1007/978-3-642-54423-1_5,Approximating Vector Scheduling: Almost Matching Upper and Lower Bounds,,2013-03-20
10.1137/1.9781611975031.63,Randomized Algorithms for Online Vector Load Balancing,,2011-03-20
10.26481/dis.20180119to,Approximation Algorithms in Allocation  Scheduling and Pricing,,2019-03-20
10.1137/1.9781611973105.67,Minimum Makespan Scheduling with Low Rank Processing Times,,2017-03-20
10.1007/978-1-4939-2864-4_504,Vector Scheduling Problems,,2018-03-20
10.1007/s10288-017-0356-0,Vector scheduling with rejection on a single machine,,2018-03-20
10.1007/s10898-014-0254-3,A note on the complexity of scheduling problems with linear job deterioration,,2012-03-20
10.1016/S0305-0548(01)00077-6,Scheduling start time dependent tasks with deadlines and identical initial processing times on a single machine,,2019-03-20
10.1007/S00170-011-3303-9,A unique integer mathematical model for scheduling deteriorating jobs with rate-modifying activities on a single machine,,2012-03-20
10.1057/palgrave.jors.2602225,Due-date assignment and parallel-machine scheduling with deteriorating jobs,,2014-03-20
10.1057/palgrave.jors.2601693,Makespan minimization in single-machine scheduling with step-deterioration of processing times,,2015-03-20
10.1007/S10898-018-0707-1,Parallel-machine group scheduling with inclusive processing set restrictions  outsourcing option and serial-batching under the effect of step-deterioration,,2015-03-20
10.1007/11602613_92,Scheduling to Minimize Makespan with Time-Dependent Processing Times,,2017-03-20
10.15388/informatica.2018.168,Single-Machine and Parallel-Machine Parallel-Batching Scheduling Considering Deteriorating Jobs  Various Group  and Time-Dependent Setup Time,,2017-03-20
10.1016/j.dam.2005.04.016,Analysis of a time-dependent scheduling problem by signatures of deterioration rate sequences,,2017-03-20
10.1016/J.APM.2009.03.037,Rescheduling problems with deteriorating jobs under disruptions,,2015-03-20
10.1016/j.eswa.2012.12.019,Genetic algorithms for single machine scheduling with time-dependent deterioration and rate-modifying activities,,2011-03-20
10.1016/j.amc.2003.12.073,Single machine scheduling problems with deteriorating jobs,,2016-03-20
10.1007/s10951-019-00630-w,A review of four decades of time-dependent scheduling: main results  new topics  and open problems,,2015-03-20
10.7737/KMSR.2013.30.1.015,A Study on Single Machine Scheduling with a Rate-Modifying Activity and Time-Dependent Deterioration After the Activity,,2013-03-20
10.1080/0305215X.2016.1163629,Scheduling with non-decreasing deterioration jobs and variable maintenance activities on a single machine,,
10.1016/J.OMEGA.2003.08.003,Minimization of maximum lateness under linear deterioration,,2013-03-20
10.1007/S00170-018-3043-1,Multiobjective approach for deteriorating jobs scheduling for a sustainable manufacturing system,,2012-03-20
10.1007/S00170-012-4553-X,Scheduling a single machine with multiple preventive maintenance activities and position-based deteriorations using genetic algorithms,,2017-03-20
10.1016/j.ejor.2008.04.040,Equivalent time-dependent scheduling problems,,2012-03-20
10.7232/IEMS.2011.10.4.247,Single-Machine Total Completion Time Scheduling with Position-Based Deterioration and Multiple Rate-Modifying Activities,,2019-03-20
10.1080/00207721003802263,Single-machine scheduling with deteriorating jobs,,2018-03-20
10.1016/j.cor.2003.08.001,Minimizing the total completion time in single-machine scheduling with step-deteriorating jobs,,2018-03-20
10.1007/978-3-662-59362-2,Models and Algorithms of Time-Dependent Scheduling,,2011-03-20
10.1016/S0377-2217(02)00909-8,A concise survey of scheduling with time-dependent processing times,,2015-03-20
10.1016/j.tcs.2012.08.022,Scheduling of deteriorating jobs with release dates to minimize the maximum lateness,,2017-03-20
10.1007/s10479-012-1222-2,Isomorphic scheduling problems,,2016-03-20
10.11121/IJOCTA.01.2015.00260,An efficient time algorithm for makespan objectives,,2012-03-20
10.1016/j.advengsoft.2009.03.018,A memetic algorithm for minimizing the total weighted completion time on a single machine under step-deterioration,,2017-03-20
10.1007/BF00264563,Nearly optimal binary search trees,,2015-03-20
10.1590/S1519-69842008000500003,Hypotheses to explain the origin of species in Amazonia.,,2018-03-20
10.1145/3177540.3177563,Influence of Professor T. C. Hu's Works on Fundamental Approaches in Layout,,2011-03-20
10.3233/FI-2009-165,Instruction Sequences with Dynamically Instantiated Instructions,,2011-03-20
10.3233/FI-2013-950,Data Linkage Algebra  Data Linkage Dynamics  and Priority Rewriting,,2012-03-20
10.7561/SACS.2013.2.169,Timed Tuplix Calculus and the Wesseling and van den Bergh Equation,,2013-03-20
10.3233/FI-2010-254,An Interface Group for Process Components,,2012-03-20
10.4204/EPTCS.120.6,Algebraic Meta-Theory of Processes with Data,,2018-03-20
10.1007/978-3-540-76650-6_20,Formalizing SANE Virtual Processor in Thread Algebra,,2013-03-20
10.1007/s00165-007-0024-9,Thread algebra for strategic interleaving,,2015-03-20
10.1007/s00224-013-9468-x,A Process Calculus with Finitary Comprehended Terms,,2017-03-20
10.1017/S0960129509990314,On the operating unit size of load/store architectures,,2015-03-20
10.1016/j.jal.2007.04.001,Simulating Turing machines on Maurer machines,,2014-03-20
10.1007/978-3-642-03466-4_8,Transmission Protocols for Instruction Streams,,2012-03-20
10.1007/s00224-010-9301-8,On the Expressiveness of Single-Pass Instruction Sequences,,2013-03-20
10.3233/FI-2010-317,Data Linkage Dynamics with Shedding,,2017-03-20
10.1109/ICDCSW.2009.86,Predictive Scheduling in Rate-Adaptive Multi-user Relay Channels with Reconfiguration Delays,,2017-03-20
10.1007/978-3-540-77918-6_22,Online Rectangle Filling,,2014-03-20
10.1007/s00236-009-0110-y,M/M/1 retrial queue with working vacations,,2017-03-20
10.1109/MCSI.2017.63,TDM-Energy Detection Based Dynamic Spectrum Sensing and Assignment,,2015-03-20
10.1007/s10878-009-9246-5,New algorithms for online rectangle filling with k-lookahead,,2018-03-20
10.1109/ICAIE.2010.5641506,The design of PE course grade management system based on wireless POS and C/S technology,,2020-03-20
10.1016/j.tcs.2011.05.033,Online rectangle filling,,2019-03-20
10.1007/978-3-540-69733-6_38,New Algorithms for Online Rectangle Filling with k-Lookahead,,2017-03-20
10.1109/INFCOMW.2011.5928916,On data transmission scheduling considering switching penalty in mobile sensor networks,,2020-03-20
10.1007/BF03180569,Program morphisms,,2017-03-20
10.1007/BF03037416,Lambda-hoisting: A transformation technique for fully lazy evaluation of functional programs,,2011-03-20
10.1007/BF03160271,Abstraction from constructors and functional constructors and their applications,,2016-03-20
10.1016/j.jcss.2010.05.006,On the complexity of regular-grammars with integer attributes,,2015-03-20
10.1145/872035.872048,Software transactional memory for dynamic-sized data structures,,2013-03-20
10.1007/s00778-013-0345-7,Transactional support for adaptive indexing,,2012-03-20
10.1007/11563952_11,Design and Implementation of the Modified R-Tree Structure with Non-blocking Querying,,2015-03-20
10.1007/s00778-015-0406-1,Read/write-optimized tree indexing for solid-state drives,,2016-03-20
10.1145/2555243.2555269,Practical concurrent binary search trees via logical ordering,,2015-03-20
10.1007/978-3-540-45072-6_2,Performance Evaluation of Main-Memory R-tree Variants,,2011-03-20
10.1016/j.datak.2007.11.001,Optimizing lock protocols for native XML processing,,2016-03-20
10.1007/978-3-319-12292-2_15,Processing of Write-Intensive Transactions,,2016-03-20
10.1145/1629635.1629643,Comparing the performance of concurrent linked-list implementations in Haskell,,2012-03-20
10.1016/j.jpdc.2019.11.005,Practical concurrent unrolled linked lists using lazy synchronization,,2018-03-20
10.1145/2517349,Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles,,2016-03-20
10.1007/978-3-642-33651-5_1,CBTree: A Practical Concurrent Self-Adjusting Search Tree,,2013-03-20
10.1016/j.ins.2003.09.019,Global parallel index for multi-processors database systems,,2013-03-20
10.1145/1693453.1693488,A practical concurrent binary search tree,,2016-03-20
10.1007/978-3-662-44202-9_8,Reusable Concurrent Data Types,,2018-03-20
10.1109/SBAC-PAD.2012.36,Transactional Forwarding: Supporting Highly-Concurrent STM in Asynchronous Distributed Systems,,2017-03-20
10.1109/ICDE.2018.00033,Waterwheel: Realtime Indexing and Temporal Range Query Processing over Massive Data Streams,,2019-03-20
10.1201/1086.1065898X/45528.14.4.20050901/90085.3,Hiding Tree Structured Data and Queries from Untrusted Data Stores,,2017-03-20
10.1145/2312005.2312016,A lock-free B+tree,,2020-03-20
10.2307/j.ctt5hjr57.13,The lesson.,,2018-03-20
10.1145/1326542.1326544,B-trees  shadowing  and clones,,2015-03-20
10.1109/ICTTA.2006.1684876,Concurrent and Recoverable Restructuring Method for Database Indices,,2020-03-20
10.1007/978-3-642-59412-0_14,B-Trees and Databases  Past and Future,,2014-03-20
10.1007/BF02946622,Concurrent manipulation of expanded AVL trees,,2013-03-20
10.1145/1122971.1122992,Proving correctness of highly-concurrent linearisable objects,,2019-03-20
10.1007/3-540-44853-5_35,Hiding Traversal of Tree Structured Data from Untrusted Data Stores,,2020-03-20
10.1007/978-3-540-30073-1_1,Secure and Privacy Preserving Outsourcing of Tree Structured Data,,2020-03-20
10.1007/978-3-319-12292-2_11,Online Index Construction and Maintenance,,2014-03-20
10.1109/HPCA.2014.6835957,Improving in-memory database index performance with Intel® Transactional Synchronization Extensions,,2012-03-20
10.2200/S00499ED1V01Y201304CAC023,Shared-Memory Synchronization,,
10.1109/PARELEC.2006.27,Creating a Forest of Binary Search Trees for a Multiprocessor System,,2013-03-20
10.1007/978-3-319-12292-2_10,Bulk Operations on B-Trees,,2017-03-20
10.4230/LIPIcs.OPODIS.2017.10,The Teleportation Design Pattern for Hardware Transactional Memory,,2011-03-20
10.1007/BF01263046,Performance of B+ tree concurrency control algorithms,,2019-03-20
10.1145/1620432.1620441,Concurrent updating transactions on versioned data,,2014-03-20
10.1109/ICPADS.2012.18,Performance Evaluation of Concurrent Lock-free Data Structures on GPUs,,2011-03-20
10.1007/978-3-319-12292-2_7,B-Tree Traversals,,2019-03-20
10.1007/978-3-319-12292-2_14,Transactions in Page-Server Systems,,2011-03-20
10.1007/s00446-002-0073-5,Compact and localized distributed data structures,,2012-03-20
10.1145/1353343.1353363,A concurrency control protocol for parallel B-tree structures without latch-coupling for explosively growing digital content,,2018-03-20
10.1002/cpe.2995,A concurrent van Emde Boas array as a fast and simple concurrent dynamic set alternative,,2020-03-20
10.1007/978-3-642-17679-1_12,On the Performance of Distributed Lock-Based Synchronization,,2017-03-20
10.1145/2007183.2007187,On the performance of distributed lock-based synchronization?,,2012-03-20
10.4230/LIPIcs.OPODIS.2017.16,Lower Bounds on the Amortized Time Complexity of Shared Objects,,2020-03-20
10.1007/978-3-642-25873-2_9,On the Cost of Concurrency in Transactional Memory,,2019-03-20
10.1007/BF02243072,Integrated concurrency control in shared B-trees,,2011-03-20
10.1007/978-3-642-04355-0_12,Elastic Transactions,,2012-03-20
10.1007/978-3-642-12098-5_19,Highly Scalable Multiprocessing Algorithms for Preference-Based Database Retrieval,,2019-03-20
10.1145/2926697.2926699,Fast non-intrusive memory reclamation for highly-concurrent data structures,,2017-03-20
10.1002/cpe.5024,A multi‐granularity locking scheme for java packedobjects based on a concurrent multiway tree,,2013-03-20
10.1016/j.jpdc.2010.08.004,BlobSeer: Next-generation data management for large scale infrastructures,,2012-03-20
10.1007/s00446-014-0229-0,The CB tree: a practical concurrent self-adjusting search tree,,2015-03-20
10.1007/978-3-319-12292-2_9,Advanced Locking Protocols,,2019-03-20
10.1016/j.tcs.2017.03.017,Contention-sensitive data structures and algorithms,,2020-03-20
10.1109/INFOSEEE.2014.6946267,Transaction management in B-tree-indexed database systems,,2016-03-20
10.1007/978-3-319-12292-2_6,Lock-Based Concurrency Control,,2017-03-20
10.1007/978-3-319-96983-1_33,Snapshot-Based Synchronization: A Fast Replacement for Hand-over-Hand Locking,,2019-03-20
10.1145/1806907.1806908,A survey of B-tree locking techniques,,2017-03-20
10.1007/3-540-46017-9_5,Symmetry Reduction Criteria for Software Model Checking,,2020-03-20
10.1145/2517349.2522724,From ARIES to MARS: transaction support for next-generation  solid-state drives,,2016-03-20
10.1145/2972206.2972213,Multi-tier Data Synchronization Based on an Optimized Concurrent Linked-list,,2018-03-20
10.1145/2523616.2523617,EventWave: programming model and runtime support for tightly-coupled elastic cloud applications,,2018-03-20
10.1109/ICDE.2004.1319981,Simple  robust and highly concurrent b-trees with node deletion,,2013-03-20
10.1007/s00287-020-01270-7,Informatikpionierleistungen aus dem deutschsprachigen Raum – Eine Schatzsuche!,,2016-03-20
10.1007/s10009-004-0154-9,Symmetry reductions for model checking of concurrent dynamic software,,2018-03-20
10.1145/2933057.2933123,Concurrent Data Structures,,2015-03-20
10.1109/ICACCAF.2018.8776727,Bpoint-tree: An Indexing Structure for Efficient Search in Data Retrieval,,2014-03-20
10.1145/1376616.1376645,Building a database on S3,,2019-03-20
10.1109/ICIS.2005.39,Concurrency control of spatial join on spatial database,,2014-03-20
10.1504/IJAC.2010.033011,Online monitoring and visualisation of database structural deterioration,,2016-03-20
10.1145/1458550.1458563,Concurrency control and recovery for multiversion database structures,,2019-03-20
10.1007/11795490_3,A Lazy Concurrent List-Based Set Algorithm,,2020-03-20
10.14778/3402707.3402719,PALM: Parallel Architecture-Friendly Latch-Free Modifications to B+ Trees on Many-Core Processors,,2014-03-20
10.1145/1066157.1066196,Online B-tree merging,,2020-03-20
10.1145/3318464.3380576,Parallel Index-based Stream Join on a Multicore CPU,,2013-03-20
10.1145/3267809.3267824,An Efficient Memory-Mapped Key-Value Store for Flash Storage,,2011-03-20
10.1007/978-3-319-12292-2,Transaction Processing,,
10.1007/3-540-45073-4_20,A Concurrent B-Tree Algorithm Using a Cooperative Locking Protocol,,2014-03-20
10.1007/978-3-642-37134-9_6,Making Transaction Execution the Bottleneck - (Instead of All the Overheads),,2015-03-20
10.1007/BF02577871,Parallel-access memory management using fast-fits,,2015-03-20
10.1007/s00287-020-01295-y,Vom Bindestrich zur Digitalisierung: Interdisziplinarität in der Informatik,,2016-03-20
10.1587/TRANSINF.2016EDP7437,Concurrency Control Protocol for Parallel B-Tree Structures That Improves the Efficiency of Request Transfers and SMOs within a Node,,2020-03-20
10.1016/j.jpdc.2016.10.010,Elastic transactions,,2013-03-20
10.1007/11562382_4,Improved Concurrency Control Technique with Lock-Free Querying for Multi-dimensional Index Structure,,2014-03-20
10.1007/978-3-642-04355-0_17,Contention-Sensitive Data Structures and Algorithms,,2017-03-20
10.1016/S0020-0255(02)00261-X,Restructuring the concurrent B+-tree with non-blocked search operations,,2013-03-20
10.1007/978-3-030-33836-7,Database Design and Implementation: Second Edition,,2011-03-20
10.2200/S00912ED2V01Y201904DTM059,On Transactional Concurrency Control,,2014-03-20
10.1145/319566.319567,A Concurrency Control Method for Parallel Btree Structures,,2015-03-20
10.1145/1385486.1385492,Tailor-made lock protocols and their DBMS integration,,2015-03-20
10.1109/SBAC-PAD.2017.21,Towards a Deterministic Fine-Grained Task Ordering Using Multi-Versioned Memory,,2020-03-20
10.1145/3183713.3196895,Building a Bw-Tree Takes More Than Just Buzz Words,,2015-03-20
10.1007/978-3-662-45174-8_19,On Correctness of Data Structures under Reads-Write Concurrency,,2018-03-20
10.1145/3018743.3019026,POSTER: State Teleportation via Hardware Transactional Memory,,2012-03-20
10.1145/2611462.2611471,Concurrent updates with RCU: search tree as an example,,2020-03-20
10.1145/3300208,Accelerating Synchronization Using Moving Compute to Data Model at 1 000-core Multicore Scale,,2017-03-20
10.1109/ICDE48307.2020.00054,PA-Tree: Polled-Mode Asynchronous B+ Tree for NVMe,,2014-03-20
10.1023/A:1015682215394,A Taxonomy of Indexing Schemes for Parallel Database Systems,,2019-03-20
10.1007/978-3-319-12292-2_3,Logging and Buffering,,2013-03-20
10.1145/3428224,The anchor verifier for blocking and non-blocking concurrent software,,2014-03-20
10.1145/1345206.1345237,Transactional boosting: a methodology for highly-concurrent transactional objects,,2011-03-20
10.1109/ICDE.2004.1320027,Authenticating query results in edge computing,,2016-03-20
10.1145/2338626.2338630,Foster b-trees,,2018-03-20
10.7936/K76972Z7,Easier Parallel Programming with Provably-Efficient Runtime Schedulers,,2018-03-20
10.1109/CIT.2006.106,Index Cache Consistency in Client-Server Database Systems,,
10.1007/978-3-319-12292-2_2,Operations on the Physical Database,,2017-03-20
10.1007/BF00881946,METEOR: Exploring model elimination theorem proving,,2013-03-20
10.14778/3397230.3397232,HydraList: A Scalable In-Memory Index Using Asynchronous Updates and Partial Replication,,2013-03-20
10.1145/2933349.2933352,The ART of practical synchronization,,2012-03-20
10.3929/ETHZ-A-006007449,Building database applications in the cloud,,2020-03-20
10.1145/1132863.1132866,B-tree concurrency control and recovery in page-server database systems,,2015-03-20
10.1007/s00446-017-0310-6,$$\hbox {TM}^{2}$$TM2C: a software transactional memory for many-cores,,2015-03-20
10.1145/1385486.1385489,A relational file system as an example for tailor-made DMS,,2013-03-20
10.1023/A:1008191111512,Real-Time Access Control and Reservation on B-Tree Indexed Data,,2018-03-20
10.1007/978-3-319-12292-2_8,B-Tree Structure Modifications,,2014-03-20
10.21660/2016.27.1322,OPTIMIZATION OF LOCAL PARALLEL INDEX (LPI) IN PARALLEL/DISTRIBUTED DATABASE SYSTEMS,,2011-03-20
10.1145/2612669.2612688,Provably good scheduling for parallel programs that use data structures through implicit batching,,2020-03-20
10.1145/1996130.1996167,HyFlow: a high performance distributed software transactional memory framework,,2017-03-20
10.1145/1146381.1146382,The art of multiprocessor programming,,2017-03-20
10.1023/A:1026458902456,Intensive Data Management in Parallel Systems: A Survey,,2015-03-20
10.1007/978-3-319-12292-2_12,Concurrency Control by Versioning,,2014-03-20
10.1145/1481839.1481845,Comparing the performance of concurrent linked-list implementations in Haskell,,2017-03-20
10.1109/PRDC.2004.1276567,Availabilities and costs of reliable Fat-Btrees,,2013-03-20
10.1109/ICDEW.2006.7,A Concurrency Control Method for Parallel Btree Structures,,2011-03-20
10.1016/S1571-0661(04)81017-X,Space and Time Adaptive Non-blocking Algorithms,,2016-03-20
10.1145/3361525.3361549,Boosting concurrency in Parallel State Machine Replication,,2015-03-20
10.1142/S0129626407003125,A Lazy Concurrent List-Based Set Algorithm,,2019-03-20
10.1007/BF00288968,A new data structure for representing sorted lists,,2020-03-20
10.1007/978-3-319-12292-2_4,Transaction Rollback and Restart Recovery,,2016-03-20
10.1007/BF00977254,Syntax extension using a run time model,,2012-03-20
10.1007/s10270-016-0575-4,Lessons learned from developing mbeddr: a case study in language engineering with MPS,,2013-03-20
10.1007/978-3-540-24723-4_6,Elkhound: A Fast  Practical GLR Parser Generator,,2017-03-20
10.14279/DEPOSITONCE-2333,Parsing mixfix expressions: dealing with user-defined mixfix operators efficiently,,2019-03-20
10.1007/978-3-319-08123-6,Unconventional Computation and Natural Computation,,2017-03-20
10.1007/978-3-642-21501-8_55,About Complete Obligatory Hybrid Networks of Evolutionary Processors without Substitution,,2016-03-20
10.1016/j.tcs.2020.08.003,Filters defined by random contexts versus polarization in networks of evolutionary processors,,2012-03-20
10.1007/S41965-018-0001-9,Polarization: a new communication protocol in networks of bio-inspired processors,,2011-03-20
10.3233/FI-2010-341,Target Based Accepting Networks of Evolutionary Processors,,2011-03-20
10.1007/s11047-015-9534-1,Computational completeness of complete  star-like  and linear hybrid networks of evolutionary processors with a small number of processors,,2020-03-20
10.1007/978-3-319-04921-2_8,Networks of Polarized Evolutionary Processors Are Computationally Complete,,2012-03-20
10.3233/FI-2015-1142,On the Power of Accepting Networks of Evolutionary Processors with Special Topologies and Random Context Filters,,2013-03-20
10.1007/978-3-642-22321-1_29,Deciding Networks of Evolutionary Processors,,2018-03-20
10.1007/978-3-642-19917-2_33,Complete Obligatory Hybrid Networks of Evolutionary Processors,,2013-03-20
10.1016/j.tcs.2012.06.029,Complexity results for deciding Networks of Evolutionary Processors,,2011-03-20
10.1016/j.ic.2016.06.004,On the computational power of networks of polarized evolutionary processors,,2014-03-20
10.1007/978-3-319-08123-6_1,Five Nodes Are Sufficient for Hybrid Networks of Evolutionary Processors to Be Computationally Complete,,2014-03-20
10.1007/978-3-662-49674-9_39,Parameterized Compositional Model Checking,,2015-03-20
10.1007/978-3-319-11936-6_23,Formal Verification of Skiplists with Arbitrary Many Levels,,2019-03-20
10.1145/3009837.3009893,Thread modularity at many levels: a pearl in compositional verification,,2018-03-20
10.1007/978-3-319-08867-9_41,LEAP: A Tool for the Parametrized Verification of Concurrent Datatypes,,2015-03-20
10.1109/TIME.2014.11,Parametrized Verification Diagrams,,2014-03-20
10.1007/s10472-016-9531-9,Parametrized verification diagrams: temporal verification of symmetric parametrized concurrent systems,,2017-03-20
10.3929/ETHZ-A-010596095,Anonymous distributed computing: computability  randomization and checkability,,2020-03-20
10.1007/978-3-642-10877-8_25,Safe and Eventually Safe: Comparing Self-stabilizing and Non-stabilizing Algorithms on a Common Ground,,2012-03-20
10.1007/978-3-662-48653-5_18,Randomness vs. Time in Anonymous Networks,,2014-03-20
10.1007/978-3-642-05118-0_57,Randomization Adaptive Self-stabilization,,2013-03-20
10.1007/978-3-319-49259-9_4,Self-stabilizing Byzantine-Tolerant Distributed Replicated State Machine,,
10.1007/978-3-030-64348-5_7,Invited Paper: Reactive PLS for Distributed Decision,,2016-03-20
10.1007/978-3-319-21155-8_12,From UML/OCL to Base Models: Transformation Concepts for Generic Validation and Verification,,2011-03-20
10.1007/978-3-319-09099-3_8,Filmstripping and Unrolling: A Comparison of Verification Approaches for UML and OCL Behavioral Models,,2014-03-20
10.1007/978-3-642-32759-9_18,Correctness of Pointer Manipulating Algorithms Illustrated by a Verified BDD Construction,,2013-03-20
10.1109/MODELS.2017.31,Partial Evaluation of OCL Expressions,,2012-03-20
10.1109/ICSTW.2008.54,Verification of UML/OCL Class Diagrams using Constraint Programming,,2017-03-20
10.1109/DSD.2015.85,Leveraging the Analysis for Invariant Independence in Formal System Models,,2020-03-20
10.1007/978-3-642-13977-2_5,Proving and Visualizing OCL Invariant Independence by Automatically Generated Test Cases,,2012-03-20
10.1145/3297280.3297612,Synthesising call sequences from OCL operational contracts,,2017-03-20
10.1145/1868294.1868303,Automatic and efficient simulation of operation contracts,,2011-03-20
10.1016/j.scico.2013.10.003,On OCL-based imperative languages,,2016-03-20
10.5381/jot.2020.19.3.a3,Model Transformation as Conservative Theory-Transformation,,2016-03-20
10.1007/978-3-642-12261-3_25,Extending OCL with null-references: towards a formal semantics for OCL 2.1,,2020-03-20
10.1016/j.asoc.2018.08.025,Verification of fuzzy UML models with fuzzy Description Logic,,2012-03-20
10.1016/j.jss.2014.03.023,On the verification of UML/OCL class diagrams using constraint programming,,2011-03-20
10.1007/978-3-319-72814-8_8,Re-utilizing Verification Results of UML/OCL Models,,2019-03-20
10.1007/978-3-642-41533-3_42,Automated Verification of Model Transformations in the Automotive Industry,,2016-03-20
10.1145/2428516.2428520,Featherweight OCL: a study for the consistent semantics of OCL 2.3 in HOL,,2011-03-20
10.1007/978-3-319-72814-8_3,A Symbolic Formulation for Models,,2011-03-20
10.1007/s10270-009-0129-0,A UML/OCL framework for the analysis of graph transformation rules,,2020-03-20
10.1007/978-3-642-21210-9_33,A Specification-Based Test Case Generation Method for UML/OCL,,2012-03-20
10.1007/978-3-662-46081-8,Verification  Model Checking  and Abstract Interpretation,,2018-03-20
10.1007/s10009-014-0312-7,Model-checking fair dense-time systems with propositions and events,,2019-03-20
10.1007/s00165-011-0185-4,Model-checking timed automata with deadlines with Uppaal,,2017-03-20
10.1016/bs.adcom.2017.06.002,Chapter Three - Testing the Control-Flow  Data-Flow  and Time Aspects of Communication Systems: A Survey,,2018-03-20
10.1007/11901914_8,Model Checking Timed Systems with Urgencies,,2017-03-20
10.1016/j.cosrev.2013.05.001,A survey of timed automata for the development of real-time systems,,2015-03-20
10.1109/ICSTW.2011.71,Test Selection for Data-Flow Reactive Systems Based on Observations,,2013-03-20
10.1109/TC.2008.15,Extending EFSMs to Specify and Test Timed Systems with Action Durations and Time-Outs,,2019-03-20
10.1007/s10626-017-0240-2,Controller synthesis for dynamic hierarchical real-time plants using timed automata,,2019-03-20
10.1007/978-3-319-09581-3_21,A Formal Driving Behavior Model for Intelligent Transportation Systems,,2018-03-20
10.1109/FORMALISE.2017..9,Formal verification of ROS-based robotic applications using timed-automata,,2017-03-20
10.1109/IWCMC.2014.6906362,A formal model of human driving behavior in vehicular networks,,2011-03-20
10.1109/FormaliSE.2017.9,Formal Verification of ROS-Based Robotic Applications Using Timed-Automata,,2013-03-20
10.5120/8938-3077,Verification of Durational Action Timed Automata using UPPAAL,,2017-03-20
10.1145/2797433.2797436,Modeling Collaborations in Adaptive Systems of Systems,,2012-03-20
10.1007/978-3-642-04368-0_15,A Compositional Translation of Timed Automata with Deadlines to Uppaal Timed Automata,,2019-03-20
10.3233/FI-2009-171,A Decidable Probability Logic for Timed Probabilistic Systems,,2018-03-20
10.1007/978-3-662-46081-8_9,A Model for Industrial Real-Time Systems,,2014-03-20
10.1016/j.jss.2009.03.013,Modeling and verification of real-time embedded systems with urgency,,2014-03-20
10.1016/j.infsof.2015.03.009,Passive testing of communicating systems with timeouts,,2017-03-20
10.3182/20090603-3-RU-2001.0420,Building Meaningful Timed Plant Models for Verification Purposes,,2020-03-20
10.1145/1807085.1807125,Performance guarantees for B-trees with different-sized atomic keys,,2019-03-20
10.4018/978-1-59904-887-1.CH011,Strategies for Static Tables,,2013-03-20
10.1145/2907945,B-Trees and Cache-Oblivious B-Trees with Different-Sized Atomic Keys,,2017-03-20
10.1007/978-3-642-17517-6_12,Should Static Search Trees Ever Be Unbalanced?,,2012-03-20
10.1201/B18448-14,Evaluation and Validation Patterns,,2016-03-20
10.1201/B18448-13,Suggestion and Development Patterns,,2016-03-20
10.4018/978-1-59904-887-1,Handbook of research on modern systems analysis and design technologies and applications,,2017-03-20
10.1145/3210257,Algorithms for Algebraic Path Properties in Concurrent Systems of Constant Treewidth Components,,2015-03-20
10.1145/2837614.2837624,Algorithms for algebraic path properties in concurrent systems of constant treewidth components,,2015-03-20
10.1145/989393.989419,Interprocedural slicing using dependence graphs,,2012-03-20
10.1145/3363525,Faster Algorithms for Dynamic Algebraic Queries in Basic RSMs with Constant Treewidth,,2019-03-20
10.1007/BF00264579,Computation and use of data flow information in optimizing compilers,,2019-03-20
10.1145/2814251.2814257,Reference attribute grammar controlled graph rewriting: motivation and overview,,2016-03-20
10.1007/BF03037280,Circular attribute grammars with remote attribute references and their evaluators,,2013-03-20
10.1007/BF00265992,One-pass transformations of attributed program trees,,2011-03-20
10.1145/2211616.2211618,A framework for the checking and refactoring of crosscutting concepts,,2016-03-20
10.1007/978-3-540-77220-0_25,Partial Flow Sensitivity,,2018-03-20
10.1016/j.entcs.2006.06.020,Using Verified Data-Flow Analysis-based Optimizations in Attribute Grammars,,2013-03-20
10.1007/978-3-030-44914-8_5,Optimal and Perfectly Parallel Algorithms for On-demand Data-Flow Analysis,,2012-03-20
10.1007/s00373-017-1774-7,More Restricted Growth Functions: Gray Codes and Exhaustive Generation,,2020-03-20
10.1515/puma-2015-0035,On the exhaustive generation of generalized ballot sequences in lexicographic and Gray code order,,2015-03-20
10.1007/978-3-662-45234-9_28,DSL Implementation for Model-Based Development of Pumps,,2015-03-20
10.1145/2633628.2633633,Scoping rules on a platter: a framework for understanding and specifying name binding,,2017-03-20
10.1002/spe.2489,Name analysis for modern languages: a general solution,,2011-03-20
10.1007/11877028_18,Modular Name Analysis for Java Using JastAdd,,2018-03-20
10.1002/spe.560,Implementation of visual languages using pattern‐based specifications,,2015-03-20
10.1145/3426425.3426934,Principles and patterns of JastAdd-style reference attribute grammars,,2013-03-20
10.1145/2847538.2847543,A constraint language for static semantic analysis based on scope graphs,,2016-03-20
10.1016/j.tcs.2011.01.011,On learning multivalued dependencies with queries,,2011-03-20
10.1007/s00224-015-9659-8,Learning Sets of Antecedent-restricted Functional and Multivalued Dependencies with Queries,,2016-03-20
10.1023/A:1007627028578,Efficient Read-Restricted Monotone CNF/DNF Dualization by Learning with Membership Queries,,2016-03-20
10.1145/267460.267500,Generating all maximal independent sets of bounded-degree hypergraphs,,2011-03-20
10.1016/S0004-3702(99)00021-1,Computing Intersections of Horn Theories for Reasoning with Models,,2019-03-20
10.1016/S0004-3702(01)00118-7,On functional dependencies in q-Horn theories,,2011-03-20
10.1016/S0004-3702(97)00044-1,Defaults and Relevance in Model-Based Reasoning,,2017-03-20
10.1145/1284320.1284323,On computing all abductive explanations from a propositional Horn theory,,2016-03-20
10.1007/b14292,Discovery Science,,2017-03-20
10.5772/16211,Automation of Cellular Network Faults,,2020-03-20
10.1016/j.artint.2015.08.005,The complexity of reasoning with FODD and GFODD,,2013-03-20
10.1016/S0004-3702(98)00114-3,Functional Dependencies in Horn Theories,,2013-03-20
10.1007/978-3-540-39644-4_1,Abduction and the Dualization Problem,,2019-03-20
10.1007/978-3-319-24486-0_5,Exact Learning of Multivalued Dependencies,,2013-03-20
10.1016/j.ipl.2011.07.007,Negative results on learning multivalued dependencies with queries,,2016-03-20
10.1016/j.tcs.2017.11.018,Exact learning of multivalued dependency formulas,,2016-03-20
10.1007/s00354-015-0301-8,Learning an Extension of the Class of Functional Dependencies with Queries,,2018-03-20
10.1007/3-540-48344-6_11,Temporal Dependencies Generalized for Spatial and Other Dimensions,,2014-03-20
10.1007/978-3-540-39624-6_1,Abduction and the Dualization Problem,,2016-03-20
10.1007/978-3-319-63100-4_6,Algebra  Grammars  and Computation,,2014-03-20
10.1007/s002360050052,Syntactic complexity of context-free grammars over word monoids,,2017-03-20
10.1007/s00236-012-0165-z,Disjunctive languages related to $$p$$ -primitive words,,2016-03-20
10.1007/S00236-012-0165-Z,Disjunctive languages related to $$p$$-primitive words,,2019-03-20
10.1007/s00236-014-0200-3,Some kinds of primitive and non-primitive words,,2018-03-20
10.1080/00207160701398029,Overlapping words  codes  disjunctivity and density of languages,,2020-03-20
10.1016/J.INS.2017.02.009,An efficient Wikipedia semantic matching approach to text document classification,,2014-03-20
10.1673/031.013.11601,Predicting Habitat Distribution of Five Heteropteran Pest Species in Iran,,2014-03-20
10.1016/j.ejor.2020.02.027,A new correlation coefficient for comparing and aggregating non-strict and incomplete rankings,,2018-03-20
10.1109/TSMCA.2007.893459,Bottom-Up Construction of Minimum-Cost and/ or Trees for Sequential Fault Diagnosis,,2012-03-20
10.1145/1921659.1921661,Decision trees for entity identification: Approximation algorithms and hardness results,,2012-03-20
10.1016/j.mejo.2014.03.005,A novel test optimizing algorithm for sequential fault diagnosis,,2011-03-20
10.1109/AUTEST.2002.1047898,Rollout strategies for sequential fault diagnosis,,2016-03-20
10.1109/ICINFA.2010.5512421,Application of information gain based heuristic search in optimal test strategy,,2017-03-20
10.1137/1.9781611975994.7,A Tight Analysis of Greedy Yields Subexponential Time Approximation for Uniform Decision Tree,,2013-03-20
10.1145/1265530.1265538,Decision trees for entity identification: approximation algorithms and hardness results,,2015-03-20
10.1109/34.993557,Geometric Probing of Dense Range Data,,2016-03-20
10.1016/J.ENGAPPAI.2019.08.003,Community detection based on Game Theory,,2018-03-20
10.1023/A:1009744630224,Automatic Construction of Decision Trees from Data: A Multi-Disciplinary Survey,,2011-03-20
10.1007/978-3-642-17514-5_18,On Greedy Algorithms for Decision Trees,,2015-03-20
10.1109/TSMCA.2003.809206,Rollout strategies for sequential fault diagnosis,,2011-03-20
10.1109/TENCON.2002.1182652,Sequential diagnostic strategy for the diagnosis of complex systems,,2014-03-20
10.1007/s00453-011-9510-9,Approximating Optimal Binary Decision Trees,,2017-03-20
10.1038/s41598-017-14876-x,Microscopy as a statistical  Rényi-Ulam  half-lie game: a new heuristic search strategy to accelerate imaging,,2020-03-20
10.1109/TIT.2011.2169298,The Geometry of Generalized Binary Search,,2019-03-20
10.1007/978-3-642-02927-1_19,Approximating Decision Trees with Multiway Branches,,2013-03-20
10.1007/BF00289410,Performances of an algorithm constructing a nearly optimal binary tree,,2016-03-20
10.1007/BF00290148,Performance bounds for binary testing with arbitrary weights,,2017-03-20
10.1007/978-3-540-85363-3_1,Approximating Optimal Binary Decision Trees,,2012-03-20
10.1016/j.dam.2002.08.001,Sequential testing of complex systems: a review,,2012-03-20
10.1109/TSMCB.2004.825940,On a multimode test sequencing problem,,2019-03-20
10.7936/3192-8w87,Automating Active Learning for Gaussian Processes,,2015-03-20
10.1007/978-3-642-14165-2_58,Approximation Algorithms for Optimal Decision Trees and Adaptive TSP Problems,,2013-03-20
10.1007/s10845-015-1088-7,Fault isolation by test scheduling for embedded systems using a probabilistic approach,,2011-03-20
10.4230/LIPIcs.STACS.2013.550,Constrained Binary Identification Problem,,2015-03-20
10.1613/jair.3278,Adaptive Submodularity: Theory and Applications in Active Learning and Stochastic Optimization,,2015-03-20
10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00118,Analysis of Community In Social Networks Based on Game Theory,,2014-03-20
10.1109/AUTEST.2003.1243577,On multi-mode test sequencing problem,,2019-03-20
10.1145/3297280.3297574,A deep learning based community detection approach,,2015-03-20
10.1287/moor.2016.0831,Approximation Algorithms for Optimal Decision Trees and Adaptive TSP Problems,,2014-03-20
10.1007/978-3-642-15552-9_14,Adaptive and Generic Corner Detection Based on the Accelerated Segment Test,,2020-03-20
10.1007/978-3-642-22661-8,Average Time Complexity of Decision Trees,,2020-03-20
10.1007/978-981-15-5400-1_10,An Approach for Collaborative Data Publishing Using Self-adaptive Genetic Grey Wolf Optimizer,,2018-03-20
10.1109/APSEC.2016.044,Improving Reliability of Dynamic Software Updating Using Runtime Recovery,,2014-03-20
10.4108/eai.28-12-2017.153520,Access methods for Big Data: current status and future directions,,2013-03-20
10.1007/978-3-030-31729-4_3,Untraceable Electronic Cash System in the Internet of Things,,2020-03-20
10.1109/IWBIS.2019.8935849,An Approach for Distributing Sensitive Values in k-Anonymity,,2017-03-20
10.1109/ICACCI.2017.8125967,Enhanced utility in preserving privacy for multiple heterogeneous sensitive attributes using correlation and personal sensitivity flags,,2015-03-20
10.1109/ACCESS.2018.2859758,Efficient k-Nearest Neighbor Classification Over Semantically Secure Hybrid Encrypted Cloud Database,,2016-03-20
10.2991/ijcis.11.1.51,A computer aided analysis scheme for detecting epileptic seizure from EEG data,,2012-03-20
10.1007/978-3-030-31729-4_13,Distributed Access Control Through Blockchain Technology,,2011-03-20
10.1007/978-3-642-29280-4_18,A Sensitive Attribute Based Clustering Method for k-Anonymization,,2019-03-20
10.1007/S13369-019-03999-0,Adaptive k -Anonymity Approach for Privacy Preserving in Cloud,,2013-03-20
10.1007/978-3-030-31729-4_2,Electronic Commerce Items and Related Technology,,2012-03-20
10.3233/kes-190415,Fine-grained k-anonymity for privacy preserving in cloud,,2019-03-20
10.1007/978-3-030-31729-4_6,Using RBAC to Secure Payment Process in Cloud,,2016-03-20
10.1007/978-3-319-55783-0_14,Using Differential Privacy for the Internet of Things,,2018-03-20
10.1109/ICOT.2016.8278970,Ensuring data integrity in electronic health records: A quality health care implication,,2015-03-20
10.1007/s11280-018-0539-4,Privacy preserving k-nearest neighbor classification over encrypted database in outsourced cloud environments,,2015-03-20
10.1007/978-981-15-3415-7_42,Survival Time Prediction Model of Esophageal Cancer Based on Hierarchical Clustering and Random Neural Network,,2016-03-20
10.1016/j.future.2017.01.029,A novel statistical technique for intrusion detection systems,,2016-03-20
10.1007/978-3-319-68786-5_38,A Study on Securing Software Defined Networks,,2017-03-20
10.1007/s11277-020-07320-3,Privacy Based Data Publishing Model for Cloud Computing Environment,,2011-03-20
10.1007/978-981-10-8639-7_46,Stipulation-Based Anonymization with Sensitivity Flags for Privacy Preserving Data Publishing,,2016-03-20
10.4018/978-1-5225-5152-2.CH016,Mutual Correlation-Based Anonymization for Privacy Preserving Medical Data Publishing,,2016-03-20
10.1007/978-3-319-68786-5_43,Cryptographic Access Control in Electronic Health Record Systems: A Security Implication,,2019-03-20
10.1007/978-3-319-27668-7_8,Supporting Streaming Data Anonymization with Expressions of User Privacy Preferences,,2014-03-20
10.1007/978-981-10-5544-7_58,Mutual Correlation-based Optimal Slicing for Preserving Privacy in Data Publishing,,2018-03-20
10.1016/J.JKSUCI.2016.06.001,C-mixture and multi-constraints based genetic algorithm for collaborative data publishing,,2012-03-20
10.1016/J.JVCIR.2018.12.052,A K-anonymous clustering algorithm based on the analytic hierarchy process,,2013-03-20
10.1155/2014/396529,A Clustering Approach for the -Diversity Model in Privacy Preserving Data Mining Using Fractional Calculus-Bacterial Foraging Optimization Algorithm,,2019-03-20
10.4018/IJISP.2016010103,A Clustering Approach Using Fractional Calculus-Bacterial Foraging Optimization Algorithm for k-Anonymization in Privacy Preserving Data Mining,,2017-03-20
10.1007/978-3-642-35795-4_46,A Multi-phase k-anonymity Algorithm Based on Clustering Techniques,,2012-03-20
10.1007/978-3-030-31729-4,Access Control Management in Cloud Environments,,2018-03-20
10.1016/j.ins.2019.10.019,Privacy-preserving clustering for big data in cyber-physical-social systems: Survey and perspectives,,2014-03-20
10.1109/ICISC.2017.8068629,Privacy protected documents on openstack cloud,,2013-03-20
10.1016/J.JPDC.2017.12.011,Privacy-preserving anomaly detection in the cloud for quality assured decision-making in smart cities,,2018-03-20
10.1109/TKDE.2012.73,Novel Biobjective Clustering (BiGC) Based on Cooperative Game Theory,,2013-03-20
10.1007/978-3-030-31729-4_5,A Self-Scalable Anonymity Payment Approach in Cloud Environment,,2012-03-20
10.1007/978-3-030-31729-4_10,Trust-Based Access Control Management in Collaborative Open Social Networks,,2015-03-20
10.1007/978-981-13-7564-4_22,Alcoholic Brain State Identification from Brain Signals Using Support Vector Machine-Based Algorithm,,2020-03-20
10.1142/S1793962318500587,Genetic grey wolf optimization and C-mixture for collaborative data publishing,,2017-03-20
10.4018/978-1-4666-6158-5.CH003,A State-of-the-Art Review of Data Stream Anonymization Schemes,,2012-03-20
10.1002/9781119107781.CH04,Advances and Trends in Organic Fruit and Vegetable Farming Research,,2016-03-20
10.1142/S0218488519500089,k-DDD Measure and MapReduce Based Anonymity Model for Secured Privacy-Preserving Big Data Publishing,,2013-03-20
10.4304/JSW.7.11.2415-2423,Microdata Protection Method Through Microaggregation: A Systematic Approach,,2014-03-20
10.1109/ICMECG.2012.14,An Anonymization Method Based on Tradeoff between Utility and Privacy for Data Publishing,,2014-03-20
10.12733/JICS20102082,Achieving \emph{k}-anonymity Base on Nearest Neighbor Search,,2013-03-20
10.1007/s11280-018-0575-0,E-voting scheme using secret sharing and K-anonymity,,2013-03-20
10.1016/j.jcss.2014.04.017,Building access control policy model for privacy preserving and testing policy conflicting problems,,2015-03-20
10.1007/S13042-018-0806-9,Dynamic optimisation based fuzzy association rule mining method,,2013-03-20
10.1007/978-3-319-89884-1_4,Deterministic Concurrency: A Clock-Synchronised Shared Memory Approach,,2020-03-20
10.1145/3127041.3127056,A refinement-based compiler development for synchronous languages,,2018-03-20
10.1109/FDL50818.2020.9232944,From Lustre to Graphical Models and SCCharts,,2019-03-20
10.13164/ma.2019.06,Two network transformations,,2014-03-20
10.14279/tuj.eceasst.47.723,Graph Passing in Graph Transformation,,2013-03-20
10.14279/tuj.eceasst.41.612,Categorical Abstract Rewriting Systems and Functoriality of Graph Transformation,,2016-03-20
10.1007/978-3-540-31847-7_8,Changing Labels in the Double-Pushout Approach Can Be Treated Categorically,,2013-03-20
10.1007/BF02249935,On the generative power of sequential and parallel programmed graph grammars,,2018-03-20
10.1007/BF01752403,Transformations of structures: An algebraic approach,,2011-03-20
10.14279/TUJ.ECEASST.41.612.683,Categorical Abstract Rewriting Systems and Functoriality of Graph Transformation,,2013-03-20
10.1007/BF02252341,On labelled graph grammars,,2012-03-20
10.1007/978-3-540-71316-6_18,Computing Procedure Summaries for Interprocedural Analysis,,2019-03-20
10.1145/2955811.2955814,A Note on the Soundness of Difference Propagation,,2015-03-20
10.1016/J.JCSS.2019.04.002,Space complexity of reachability testing in labelled graphs,,2020-03-20
10.3233/FI-2016-1371,On the Complexity of L-reachability,,2016-03-20
10.1109/QSIC.2011.15,Context-Sensitive Interprocedural Defect Detection Based on a Unified Symbolic Procedure Summary Model,,2012-03-20
10.5445/IR/1000119646,Autotuning for Automatic Parallelization on Heterogeneous Systems,,2011-03-20
10.1007/978-3-540-73595-3_11,Logical Interpretation: Static Program Analysis Using Theorem Proving,,2013-03-20
10.1007/978-3-662-46663-6_10,Towards a Scalable Framework for Context-Free Language Reachability,,2013-03-20
10.1109/UEMCON.2017.8249039,Efficient exact paths for dyck and semi-dyck labeled path reachability (extended abstract),,2014-03-20
10.1007/978-3-319-53733-7_26,Space Complexity of Reachability Testing in Labelled Graphs,,2015-03-20
10.1007/978-3-319-09704-6_23,On the Complexity of L-reachability,,2013-03-20
10.1145/3434315,The fine-grained and parallel complexity of andersen’s pointer analysis,,2017-03-20
10.1016/j.entcs.2004.06.011,Using Off-the-Shelf Formal Methods to Verify Attribute Grammar Properties,,2018-03-20
10.1007/978-3-642-00722-4_11,Decorated Attribute Grammars: Attribute Evaluation Meets Strategic Programming,,2015-03-20
10.1016/j.entcs.2008.03.048,Development of a Modelica Compiler Using JastAdd,,2019-03-20
10.1016/j.scico.2015.10.010,Oberon-0 in Kiama,,2017-03-20
10.14236/EWIC/VOCS2008.23,Component-Based Description of Programming Languages,,2013-03-20
10.1093/comjnl/bxl008,A Document-Oriented Paradigm for the Construction of Content-Intensive Applications,,2012-03-20
10.1145/973097.973102,Traversals of object structures: Specification and Efficient Implementation,,2013-03-20
10.1016/j.scico.2009.07.004,Silver: An extensible attribute grammar system,,2017-03-20
10.1145/1117303.1117308,Incremental definition and operationalization of domain-specific markup languages in ADDS,,2018-03-20
10.1145/3138224,Reliable and automatic composition of language extensions to C: the ableC extensible language framework,,2018-03-20
10.1109/scam.2007.13,Extending Attribute Grammars with Collection Attributes--Evaluation and Applications,,2012-03-20
10.1109/HICSS.2003.1174889,Embedding domain specific languages in the attribute grammar formalism,,2016-03-20
10.1145/1297027.1297029,The jastadd extensible java compiler,,2019-03-20
10.1016/j.scico.2015.11.003,Modular language implementation in Rascal - experience report,,2016-03-20
10.1142/S0218194005002634,Document-oriented Development of Content-intensive Applications,,2015-03-20
10.1007/s11334-009-0111-6,An agile approach to language modelling and development,,2015-03-20
10.1007/978-3-540-73589-2_27,Attribute Grammar-Based Language Extensions for Java,,2012-03-20
10.1109/SCAM.2007.8,Extending Attribute Grammars with Collection Attributes--Evaluation and Applications,,2020-03-20
10.1007/978-3-540-71289-3_9,Flexible and Extensible Notations for Modeling Languages,,2013-03-20
10.1007/3-540-40048-6,Generative and Component-Based Software Engineering,,2016-03-20
10.1145/1072997.1073000,Toward an engineering discipline for grammarware,,2014-03-20
10.1007/978-3-642-36089-3_18,Declarative Name Binding and Scope Rules,,2011-03-20
10.1016/j.entcs.2008.03.047,Silver: an Extensible Attribute Grammar System,,2011-03-20
10.2298/CSIS111223022R,A systematic approach to the implementation of attribute grammars with conventional compiler construction tools,,2020-03-20
10.1109/SCAM.2007.13,Keynote Address: .QL for Source Code Analysis,,2020-03-20
10.1007/978-3-642-39614-4_1,Reusable Components for Lightweight Mechanisation of Programming Languages,,2013-03-20
10.1007/978-3-030-02508-3_4,Modular Design of Domain-Specific Languages Using Splittings of Catamorphisms,,2013-03-20
10.1016/j.scico.2014.02.011,Domain-specific program profiling and its application to attribute grammars and term rewriting,,2014-03-20
10.24926/2017.188954,Reliably composable language extensions,,2011-03-20
10.1109/ITCC.2005.134,Document-oriented software construction based on domain-specific markup languages,,2020-03-20
10.1016/j.entcs.2010.08.034,SLAMM - Automating Memory Analysis for Numerical Algorithms,,2011-03-20
10.1145/2620678.2620686,First Class Syntax  Semantics  and Their Composition,,2015-03-20
10.1109/HICSS.2007.139,Composable Language Extensions for Computational Geometry: A Case Study,,2020-03-20
10.1007/978-3-540-39815-8_19,Generating Spreadsheet-Like Tools from Strong Attribute Grammars,,2018-03-20
10.1016/J.SCICO.2011.11.005,A pure embedding of attribute grammars,,2018-03-20
10.1145/1597849.1384307,An environment for supporting active learning in courses on language processing,,2011-03-20
10.1016/J.JLAP.2004.03.006,Evolution of rule-based programs,,2016-03-20
10.1002/SPE.V39:9,Reusable specification modules for type analysis,,2020-03-20
10.1016/j.scico.2007.02.003,The JastAdd system - modular extensible compiler construction,,2014-03-20
10.1016/J.ENTCS.2004.08.032,Evolution of Language Interpreters,,2018-03-20
10.1145/3426425.3426941,Monadification of attribute grammars,,2013-03-20
10.1145/2384716.2384748,The spoofax name binding language,,2011-03-20
10.1145/1082036.1082042,Remote attribute grammars,,2014-03-20
10.1016/S1571-0661(05)82628-3,Aspects as Modular Language Extensions,,2011-03-20
10.1049/iet-sen.2007.0114,Domain-specific aspect languages for modularising crosscutting concerns in grammars,,2017-03-20
10.1007/978-3-540-88643-3_12,Adding Dimension Analysis to Java as a Composable Language Extension,,2012-03-20
10.1016/j.scico.2005.06.006,Implementing aspect-oriented programming constructs as modular language extensions,,2020-03-20
10.1007/978-3-642-12107-4_19,A Role-Based Approach towards Modular Language Engineering,,2020-03-20
10.1109/SCAM.2003.1238042,Parse-tree annotations meet re-engineering concerns,,2018-03-20
10.1145/1297105.1297029,The JastAdd Extensible Java Compiler,,2011-03-20
10.1016/j.scico.2015.10.008,Compositional compiler construction: Oberon0,,2011-03-20
10.1016/j.csi.2012.06.006,The grammatical approach: A syntax-directed declarative specification method for XML processing tasks,,2019-03-20
10.1007/s10009-009-0107-4,Flexibility in modeling languages and tools: a call to arms,,2016-03-20
10.1145/1384271.1384307,An environment for supporting active learning in courses on language processing,,2013-03-20
10.1002/9780470387207,Modeling for Insight,,2015-03-20
10.1145/2814251.2814252,Melange: a meta-language for modular and reusable development of DSLs,,2012-03-20
10.1007/978-3-642-36089-3_3,Profile-Based Abstraction and Analysis of Attribute Grammar Evaluation,,2012-03-20
10.1109/DEXA.2010.72,Modular Specifications of XML Processing Tasks with Attribute Grammars Defined on Multiple Syntactic Views,,2017-03-20
10.3217/jucs-010-09-1302,ADDS: A Document-Oriented Approach for Application Development,,2015-03-20
10.1051/PS:2007043,DIGITAL SEARCH TREES AND CHAOS GAME REPRESENTATION,,2012-03-20
10.1007/978-3-319-91268-4_13,Modeling Operational Semantics with Interval Orders Represented by Sequences of Antichains,,2016-03-20
10.1109/ACSD.2017.17,Reduction of Order Structures,,2019-03-20
10.1007/978-3-030-21571-2_12,On Interval Semantics of Inhibitor and Activator Nets,,2011-03-20
10.1109/TCBB.2017.2749225,Reduction of Qualitative Models of Biological Networks for Transient Dynamics Analysis,,2012-03-20
10.7561/sacs.2018.2.237,A Precise Characterisation of Step Traces and Their Concurrent Histories,,2016-03-20
10.1007/978-3-319-96154-5_9,Petri Nets: A Simple Language and Tool for Modeling Complex Ideas,,2019-03-20
10.1007/978-3-319-77935-5_20,Stubborn Transaction Reduction,,2014-03-20
10.3233/fi-2019-1838,Operational Semantics  Interval Orders and Sequences of Antichains,,2014-03-20
10.3233/FI-2017-1562,Alphabets of Acyclic Invariant Structures,,2011-03-20
10.3233/FI-2017-1574,Invariant Structures and Dependence Relations,,2012-03-20
10.1007/978-3-319-45177-0_16,Goal-Oriented Reduction of Automata Networks,,2012-03-20
10.1016/J.JCSS.2017.05.002,Classifying invariant structures of step traces,,2018-03-20
10.1142/S021819591850005X,A Low Arithmetic-Degree Algorithm for Computing Proximity Graphs,,2012-03-20
10.1145/997817.997854,Towards in-place geometric algorithms and data structures,,2015-03-20
10.1016/J.COMGEO.2004.02.002,Expected time analysis for Delaunay point location,,2016-03-20
10.1109/ACSD.2007.72,Synthesis of Petri Nets from Finite Partial Languages,,2020-03-20
10.1007/978-3-642-00899-3_9,Does My Service Have Partners?,,2011-03-20
10.1007/S00170-009-2299-X,Enhancement of an efficient liveness-enforcing supervisor for flexible manufacture systems,,2016-03-20
10.1007/978-3-642-31131-4_8,On the α-Reconstructibility of Workflow Nets,,2019-03-20
10.1007/978-3-540-68746-7_24,Process Discovery Using Integer Linear Programming,,2012-03-20
10.1007/978-3-319-63390-9_16,Synchronization Synthesis for Network Programs,,2012-03-20
10.1007/978-3-642-35179-2_1,The Label Splitting Problem,,2011-03-20
10.1007/978-3-662-46436-6_1,The Effect of Noise on Mined Declarative Constraints,,2011-03-20
10.1007/978-3-540-85758-7_26,A Region-Based Algorithm for Discovering Petri Nets from Event Logs,,2011-03-20
10.3233/FI-2010-274,Minimal Regions of ENL-Transition Systems,,2015-03-20
10.1007/978-3-642-38143-0_10,Discovering Petri Nets from Event Logs,,2019-03-20
10.1007/978-3-642-13675-7_14,Process Mining from a Basis of State Regions,,2011-03-20
10.1145/2629447,On the Discovery of Declarative Control Flows for Artful Processes,,2019-03-20
10.1109/ACSD.2007.34,Synthesis of Petri Nets from Infinite Partial Languages with VipTool,,2019-03-20
10.4028/www.scientific.net/AMR.255-260.1989,Structural Property Analysis of a Kind of Petri Net Synthesis,,2019-03-20
10.3233/FI-2011-612,Light Region-based Techniques for Process Discovery,,2018-03-20
10.1016/j.is.2015.06.009,Efficient discovery of Target-Branched Declare constraints,,2011-03-20
10.1109/ICWS.2011.40,On the Optimal Petri Net Representation for Service Composition,,2016-03-20
10.1007/978-3-642-29072-5_10,Incremental Process Discovery,,2018-03-20
10.1007/978-3-662-45730-6_7,Tissue Systems and Petri Net Synthesis,,2018-03-20
10.3233/FI-2009-132,Synthesis of Nets with Step Firing Policies,,2015-03-20
10.1007/3-540-44988-4_1,Hardware and Petri Nets: Application to Asynchronous Circuit Design,,2020-03-20
10.1007/978-3-319-57861-3_7,travis - An Online Tool for the Synthesis and Analysis of Petri Nets with Final States,,2013-03-20
10.3390/s120607828,A Novel Human Autonomy Assessment System,,2017-03-20
10.6100/IR770080,Aligning observed and modeled behavior,,2018-03-20
10.1080/17517570802245433,Getting rid of OR-joins and multiple start events in business process models,,2019-03-20
10.1109/EDOC.2007.10,Getting Rid of the OR-Join in Business Process Models,,2011-03-20
10.1007/978-3-540-75183-0_27,Process Mining Based on Regions of Languages,,2014-03-20
10.1017/S0960129509990132,Process discovery and Petri nets,,2013-03-20
10.1007/978-3-540-68746-7_11,Synthesis of Nets with Step Firing Policies,,2018-03-20
10.1109/ICSMC.2009.5346581,An efficient liveness enforcing supervisor for FMSs based on Petri nets and the theory of regions,,2020-03-20
10.1109/TC.2009.131,New Region-Based Algorithms for Deriving Bounded Petri Nets,,2013-03-20
10.1007/978-3-540-68746-7_25,Synthesis of Petri Nets from Scenarios with VipTool,,2017-03-20
10.1007/s10270-014-0422-4,The Petri net twist in explicit model checking,,2013-03-20
10.1016/j.tcs.2017.02.036,Signal set tissue systems and overlapping localities,,2017-03-20
10.1016/j.tcs.2016.01.040,Applying regions,,2017-03-20
10.1007/978-3-642-35179-2_14,Aggregating Causal Runs into Workflow Nets,,2013-03-20
10.1007/978-3-540-78942-0_10,From Human Knowledge to Process Models,,2013-03-20
10.4204/EPTCS.100.1,Membrane Systems and Petri Net Synthesis,,2013-03-20
10.7561/SACS.2017.2.177,Adding A/Sync Places to the Synthesis Procedure for Whole-Place Operations Nets with Localities,,2018-03-20
10.4204/EPTCS.40,Fourth Workshop on Membrane Computing and Biologically Inspired Process Calculi,,2020-03-20
10.1007/978-3-540-68746-7_10,A Symbolic Algorithm for the Synthesis of Bounded Petri Nets,,2019-03-20
10.1007/s10618-011-0226-x,Projection approaches to process mining using region-based techniques,,2020-03-20
10.1109/ACSD.2007.50,Finding Structure in Unstructured Processes: The Case for Process Mining,,2020-03-20
10.1007/978-3-662-45730-6,Transactions on Petri Nets and Other Models of Concurrency IX,,2019-03-20
10.1016/j.tcs.2012.04.016,Regions of Petri nets with a/sync connections,,2011-03-20
10.1109/TKDE.2011.192,Region-Based Foldings in Process Discovery,,2020-03-20
10.1007/978-3-642-29072-5_7,Synthesis Problem for Petri Nets with Localities,,2012-03-20
10.1007/s10270-008-0106-z,Process mining: a two-step approach to balance between underfitting and overfitting,,2019-03-20
10.1007/978-3-642-03848-8_22,Divide-and-Conquer Strategies for Process Mining,,2020-03-20
10.1007/978-3-030-51831-8_14,Automated Repair of Process Models Using Non-local Constraints,,2012-03-20
10.3233/FI-2009-0090,Analysis and Synthesis of Net Structures and Transition Graphs,,2012-03-20
10.1007/s00287-013-0755-3,Explizites Model Checking: Welche Vorteile bieten Petrinetze?,,2018-03-20
10.1007/978-3-662-60651-3_1,A Tour in Process Mining: From Practice to Algorithmic Challenges,,2020-03-20
10.1007/978-3-319-46750-4_7,Synthesis of Petri Nets with Whole-Place Operations and Localities,,2016-03-20
10.3233/FI-2020-1946,Discovering Object-centric Petri Nets,,2014-03-20
10.1016/j.tcs.2015.07.021,On the n-permutation Post Correspondence Problem,,2020-03-20
10.3233/FI-2017-1558,A New Proof for Undecidability of the Bi-Infinite Post Correspondence Problem,,2019-03-20
10.4230/LIPIcs.CONCUR.2016.10,Stability in Graphs and Games,,2014-03-20
10.1007/s00236-016-0274-1,Average-energy games,,2019-03-20
10.1016/j.jcss.2019.10.001,Non-deterministic weighted automata evaluated over Markov chains,,2012-03-20
10.1007/978-3-642-40313-2_25,On Stochastic Games with Multiple Objectives,,2011-03-20
10.4230/LIPIcs.CONCUR.2020.24,Games Where You Can Play Optimally with Arena-Independent Finite Memory,,2020-03-20
10.4204/EPTCS.227.1,Limit Your Consumption! Finding Bounds in Average-energy Games,,2020-03-20
10.1109/LICS.2017.8005105,Perfect half space games,,2015-03-20
10.4230/LIPIcs.FSTTCS.2018.38,Extending finite-memory determinacy by Boolean combination of winning conditions,,2016-03-20
10.4230/LIPIcs.CONCUR.2019.21,Energy mean-payoff games,,2020-03-20
10.4204/EPTCS.305.2,Reachability Games with Relaxed Energy Constraints,,2014-03-20
10.1145/2603088.2603100,Infinite-state energy games,,2014-03-20
10.1007/978-3-642-40184-8_9,Solving Parity Games on Integer Vectors,,2016-03-20
10.4204/EPTCS.229.8,Developing a Practical Reactive Synthesis Tool: Experience and Lessons Learned,,2020-03-20
10.1007/s10339-015-0736-3,Visual re-identification of individual objects: a core problem for organisms and AI,,2014-03-20
10.1007/978-3-319-46520-3_3,Optimizing the Expected Mean Payoff in Energy Markov Decision Processes,,2014-03-20
10.1007/978-3-662-46681-0_22,Strategy Synthesis for Stochastic Games with Multiple Long-Run Objectives,,2014-03-20
10.1016/J.JLAMP.2019.02.001,Model checking and synthesis for branching multi-weighted logics,,2015-03-20
10.1007/978-3-319-10575-8_27,Graph Games and Reactive Synthesis,,2017-03-20
10.1016/j.ic.2017.09.010,Compositional strategy synthesis for stochastic games with multiple objectives,,2016-03-20
10.4230/LIPIcs.FSTTCS.2015.69,Weighted Strategy Logic with Boolean Goals Over One-Counter Games,,2013-03-20
10.1007/978-3-319-21690-4_8,Percentile Queries in Multi-dimensional Markov Decision Processes,,2017-03-20
10.1145/3209108.3209154,Playing with Repetitions in Data Words Using Energy Games,,2018-03-20
10.1007/978-3-319-24537-9_6,On Reachability-Related Games on Vector Addition Systems with States,,2020-03-20
10.1007/978-3-319-11936-6_6,Quantitative Verification of Weighted Kripke Structures,,2016-03-20
10.1007/978-3-662-46678-0_20,Robust Multidimensional Mean-Payoff Games are Undecidable,,2020-03-20
10.1007/978-3-662-47666-6_21,Fixed-Dimensional Energy Games are in Pseudo-Polynomial Time,,2014-03-20
10.1007/978-3-662-54458-7_11,Bounding Average-energy Games,,2017-03-20
10.4230/LIPIcs.FSTTCS.2016.42,Admissibility in Quantitative Graph Games,,2014-03-20
10.1007/978-3-319-07494-8_3,On Values of Games,,2019-03-20
10.1016/j.ic.2016.10.011,Meet your expectations with guarantees: Beyond worst-case synthesis in quantitative games,,2015-03-20
10.4204/EPTCS.218.4,Rational verification in Iterated Electric Boolean Games,,2013-03-20
10.4230/LIPIcs.STACS.2014.199,Meet Your Expectations With Guarantees: Beyond Worst-Case Synthesis in Quantitative Games,,2020-03-20
10.1007/978-3-319-02444-8_10,Looking at Mean-Payoff and Total-Payoff through Windows,,2017-03-20
10.4204/EPTCS.193.1,Average-energy games,,2016-03-20
10.1007/978-3-642-36742-7_12,Synthesis from LTL Specifications with Mean-Payoff Objectives,,2015-03-20
10.1145/2603088.2603096,Finite-memory strategy synthesis for robust multidimensional mean-payoff objectives,,2011-03-20
10.4204/EPTCS.146.1,Expectations or Guarantees? I Want It All! A crossroad between games and MDPs,,2020-03-20
10.1145/2933575.2934513,Perfect-Information Stochastic Games with Generalized Mean-Payoff Objectives*,,2016-03-20
10.1007/s10703-016-0262-7,Percentile queries in multi-dimensional Markov decision processes,,2017-03-20
10.1007/978-3-319-00395-5_90,Automated synthesis of reliable and efficient systems through game theory: a case study,,2011-03-20
10.4230/LIPIcs.CONCUR.2020.26,Reaching Your Goal Optimally by Playing at Random,,2014-03-20
10.4230/LIPIcs.FSTTCS.2012.362,Approximate Determinization of Quantitative Automata,,2020-03-20
10.1007/978-3-642-40196-1_28,Synthesis for Multi-objective Stochastic Games: An Application to Autonomous Urban Driving,,2014-03-20
10.4204/EPTCS.326.8,Optimal Strategies in Weighted Limit Games,,2018-03-20
10.5278/VBN.PHD.ENGSCI.00182,Synchronization and Control of Quantitative Systems,,2015-03-20
10.1007/978-3-662-44522-8_19,Alternating Vector Addition Systems with States,,2013-03-20
10.1007/978-3-319-67089-8_1,The Multiple Dimensions of Mean-Payoff Games - (Extended Abstract),,2012-03-20
10.1016/j.ic.2015.03.001,The complexity of multi-mean-payoff and multi-energy games,,2017-03-20
10.1007/978-3-319-46520-3_15,Decidability Results for Multi-objective Stochastic Games,,
10.1007/978-3-030-53291-8_22,Qualitative Controller Synthesis for Consumption Markov Decision Processes,,2011-03-20
10.1016/j.ic.2015.03.010,Looking at mean-payoff and total-payoff through windows,,2012-03-20
10.4204/EPTCS.229.5,Symbolic BDD and ADD Algorithms for Energy Games,,2019-03-20
10.1145/3055399.3055409,Deciding parity games in quasipolynomial time,,2012-03-20
10.4204/EPTCS.226.10,Window Parity Games: An Alternative Approach Toward Parity Games with Time Bounds (Full Version),,2013-03-20
10.1007/s00224-016-9739-4,Prediction of Infinite Words with Automata,,2013-03-20
10.1007/978-3-319-34171-2_28,Prediction of Infinite Words with Automata,,2016-03-20
10.1201/B13055-11,Quantum Finite Automata,,2011-03-20
10.1007/978-3-540-73208-2_9,Multi-letter Reversible and Quantum Finite Automata,,2012-03-20
10.1007/11965893_20,Database Query Processing Using Finite Cursor Machines,,2020-03-20
10.1007/s00224-008-9137-7,Database Query Processing Using Finite Cursor Machines,,2014-03-20
10.1007/BF02090389,On problems for which no oracle can help,,2017-03-20
10.1080/23799927.2016.1246477,Multi-head Watson–Crick automata,,2012-03-20
10.1016/J.TCS.2009.03.040,Hierarchy and equivalence of multi-letter quantum finite automata,,2020-03-20
10.15017/1398533,A study on CNOT−based quantum circuits using rewriting systems,,2017-03-20
10.1007/978-3-540-31847-7_10,From Conditional Specifications to Interaction Charts,,2011-03-20
10.1109/SEFM.2003.1236212,Towards a well-founded UML-based development method,,2019-03-20
10.1016/S0304-3975(99)00205-4,Formalism and method,,2017-03-20
10.1007/3-540-45499-3_21,Invited Talk: Plugging Data Constructs into Paradigm-Specific Languages: Towards an Application to UML,,2015-03-20
10.1007/978-1-84882-736-3_3,Abstract State Machines. A Method for High-Level System Design and Analysis,,2013-03-20
10.1007/978-3-540-40007-3_9,From Formal Techniques to Well-Founded Software Development Methods,,2017-03-20
10.1016/j.jlap.2005.09.003,A formally grounded software specification method,,2016-03-20
10.1016/j.jlap.2012.06.001,Rewriting logic bibliography by topic: 1990-2011,,2012-03-20
10.1007/978-3-540-24721-0_18,Improving Use Case Based Requirements Using Formally Grounded Specifications,,2014-03-20
10.1016/S0304-3975(01)00357-7,Rewriting logic: roadmap and bibliography,,2015-03-20
10.1109/ACSD.2016.10,Products of Transition Systems and Additions of Petri Nets,,2018-03-20
10.1007/978-3-030-30806-3_16,Synthesis of Structurally Restricted b-bounded Petri Nets: Complexity Results,,2015-03-20
10.1016/J.INS.2017.01.037,An extension of the taxonomy of persistent and nonviolent steps,,2013-03-20
10.1007/978-3-662-60651-3_7,Synthesis of Weighted Marked Graphs from Constrained Labelled Transition Systems,,2018-03-20
10.3233/FI-2017-1548,Incremental Process Discovery using Petri Net Synthesis,,2016-03-20
10.1007/978-3-319-96154-5_27,From Nets to Circuits and from Circuits to Nets,,2013-03-20
10.1007/978-3-662-63079-2_4,Efficient Synthesis of Weighted Marked Graphs with Circular Reachability Graph  and Beyond,,2011-03-20
10.1007/978-1-4613-0075-5,Automatic Differentiation of Algorithms: From Simulation to Optimization,,2011-03-20
10.1201/B11644-6,Combinatorial Problems in Algorithmic Differentiation,,2011-03-20
10.1007/978-3-319-12451-3_9,Stable Isotopes in Study of the Global Hydrological Cycle,,2013-03-20
10.1007/s00224-008-9124-z,A New Characterization of NP  P  and PSPACE with Accepting Hybrid Networks of Evolutionary Processors,,2014-03-20
10.1007/s00236-003-0114-y,Networks of evolutionary processors,,2015-03-20
10.1387/THEORIA.410,Networks of Evolutionary Processors: A Survey,,2014-03-20
10.4018/ijrat.2013010102,Towards a Bio-Inspired Theoretical Linguistics to Model Man-Machine Communication,,2016-03-20
10.1007/978-3-642-21254-3_20,Networks of Evolutionary Processors with Subregular Filters,,2016-03-20
10.1007/11494645_38,Accepting Networks of Splicing Processors,,2013-03-20
10.1007/978-3-642-02264-7_34,Computing Natural Language with Biomolecules: Overview and Challenges,,2011-03-20
10.3390/math8081217,Networks of Uniform Splicing Processors: Computational Power and Simulation,,2019-03-20
10.1007/11499305_11,Analysing Sentences with Networks of Evolutionary Processors,,2014-03-20
10.1016/j.dam.2004.06.011,A remark on evolutionary systems,,2014-03-20
10.1016/J.BIOSYSTEMS.2004.05.009,A computational model for cell differentiation.,,2014-03-20
10.1007/s00236-004-0158-7,Hybrid networks of evolutionary processors are computationally complete,,2019-03-20
10.1007/3-540-45105-6_49,Hybrid Networks of Evolutionary Processors,,2016-03-20
10.5220/0001796305970604,Accepting Networks of Evolutionary Processors: Complexity Aspects - Recent Results and New Challenges,,2012-03-20
10.1007/s00224-013-9502-z,Accepting Networks of Evolutionary Processors with Subregular Filters,,2015-03-20
10.1016/j.biosystems.2019.104037,Networks of polarized splicing processors as problem solvers,,2014-03-20
10.1007/s11047-012-9331-z,Networks of evolutionary processors: computationally complete normal forms,,2014-03-20
10.1007/978-3-642-04186-0_9,Accepting Networks of Non-inserting Evolutionary Processors,,2013-03-20
10.1007/978-3-642-01639-4_27,Multi-agent Simulation of Linguistic Processes: A NEPs Perspective,,2017-03-20
10.1007/978-3-540-31834-7_22,Solving 3CNF-SAT and HPP in Linear Time Using WWW,,2018-03-20
10.1007/s11047-012-9305-1,Biocomputing: an insight from linguistics,,2015-03-20
10.1007/978-3-642-12433-4_49,A Visual Language for Modelling and Simulation of Networks of Evolutionary Processors,,2012-03-20
10.1007/978-3-319-71069-3_13,Networks of Polarized Splicing Processors,,2020-03-20
10.3233/FI-2010-337,Low Disruption Transformations on Cyclic Automata,,2018-03-20
10.1109/AICCSA.2008.4493643,Networks of evolutionary processors with a self-organizing learning,,2016-03-20
10.1007/978-3-642-21341-0_14,On Normal Forms for Networks of Evolutionary Processors,,2011-03-20
10.5220/0001809406260631,Networks of Evolutionary Processors - A Historical Account,,2017-03-20
10.4018/978-1-59904-849-9.CH171,Natural Language Processing and Biological Methods,,2020-03-20
10.1007/978-3-642-02478-8_59,PNEPs  NEPs for Context Free Parsing: Application to Natural Language Processing,,2014-03-20
10.5220/0002789004030410,PNEPs for Shallow Parsing - NEPs Extended for Parsing Applied to Shallow Parsing,,2016-03-20
10.5220/0001809306190625,NETWORKS OF EVOLUTIONARY PROCESSORS AS NATURAL LANGUAGE PARSERS,,2015-03-20
10.1016/j.tcs.2004.07.035,On the size complexity of hybrid networks of evolutionary processors,,2018-03-20
10.1007/978-3-540-78987-1_33,A BioInspired Model for Parsing of Natural Languages,,2011-03-20
10.1007/s11047-018-9691-0,Small networks of polarized splicing processors are universal,,2013-03-20
10.1142/S0129054111007915,Filter Position in Networks of Substitution Processors Does not Matter,,2017-03-20
10.17345/triangle7.63-100,NEPs Applied to Solve Specific Problems,,2017-03-20
10.17345/triangle7.25-59,Developing Tools for Networks of Processors,,2015-03-20
10.1007/s11047-010-9238-5,Complexity-preserving simulations among three variants of accepting networks of evolutionary processors,,2012-03-20
10.1016/j.ins.2016.07.036,Networks of splicing processors with evaluation sets as optimization problems solvers,,2016-03-20
10.1007/11493785_21,Accepting Hybrid Networks of Evolutionary Processors,,2011-03-20
10.1016/j.tcs.2006.10.015,Accepting networks of splicing processors: Complexity results,,2017-03-20
10.1007/3-540-45833-6_7,Filtrons of Automata,,2018-03-20
10.1007/978-4-431-56606-9_3,Classification of Reversible Logic Elements with Memory and Their Universality,,2016-03-20
10.1007/978-4-431-56606-9_2,Reversible logic elements with memory,,2017-03-20
10.1007/978-3-319-13350-8_26,How Can We Construct Reversible Machines Out of Reversible Logic Element with Memory?,,2013-03-20
10.1007/978-3-319-09039-9_6,Constructing Reversible Turing Machines by Reversible Logic Element with Memory,,2018-03-20
10.4204/EPTCS.128.3,Reversible Logic Elements with Memory and Their Universality,,2019-03-20
10.1007/BF01213603,The weakest precondition calculus: Recursion and duality,,2017-03-20
10.1007/s00165-011-0195-2,Invariant diagrams with data refinement,,2017-03-20
10.1007/BF00289263,Proving total correctness of nondeterministic programs in infinitary logic,,2019-03-20
10.1007/11768173_1,Retrospective and Prospective for Unifying Theories of Programming,,2020-03-20
10.1007/s00165-009-0137-4,An elementary and unified approach to program correctness,,2011-03-20
10.1007/11589976_19,A Fixpoint Semantics of Event Systems With and Without Fairness Assumptions,,2013-03-20
10.1007/11767589_1,Invariant Based Programming,,2016-03-20
10.1201/9781420064872.CH3,Refinement of Parallel Algorithms,,2016-03-20
10.1007/s00165-008-0070-y,Invariant based programming: basic approach and teaching experiences,,2020-03-20
10.1145/1639950.1640070,Agile specifications,,2016-03-20
10.1007/BF01211249,Proof rules for recursive procedures,,2018-03-20
10.1145/2933575.2935317,Reasoning about Recursive Probabilistic Programs*,,2018-03-20
10.1145/1982185.1982532,Semantics and proof rules of invariant based programs,,2017-03-20
10.1137/S0097539797322425,Examining Computational Geometry  Van Emde Boas Trees  and Hashing from the Perspective of the Fusion Tree,,2014-03-20
10.1145/79147.79149,Lower bounds for orthogonal range searching: part II. The arithmetic model,,2018-03-20
10.1109/TCBB.2011.112,Output-Sensitive Algorithms for Finding the Nested Common Intervals of Two General Sequences,,2016-03-20
10.1016/0031-3203(85)90040-8,The relative neighborhood graph for mixed feature variables,,2014-03-20
10.1016/0020-0190(82)90090-4,Polygonal Intersection Searching,,2016-03-20
10.1007/BFb0024021,The Volume of the Union of Many Sheres and Point Inclusion Problems,,2015-03-20
10.1007/978-981-10-2398-9_10,An Improved Multi-Kernel Estimation Method for Vehicle Localization,,2011-03-20
10.1007/978-3-319-04921-2_11,Efficient List-Based Computation of the String Subsequence Kernel,,2012-03-20
10.1016/J.TRC.2007.05.002,Current map-matching algorithms for transport applications: State-of-the art and future research directions,,2013-03-20
10.1109/ICCAD.1988.122522,An efficient sequential range query model for minimum width/space verification (circuit analysis),,2011-03-20
10.1016/J.COMPBIOMED.2005.09.003,Unsupervised clustering in mRNA expression profiles,,2016-03-20
10.1007/3-540-27468-5_51,Towards an Integrated Concept for Geographical Information Systems in Disaster Management,,2011-03-20
10.1109/CMPSAC.1990.139338,Dynamic query range for multikey searching,,2017-03-20
10.1016/0031-3203(82)90070-X,Computing the relative neighborhood graph in the L1 and Linfinity metrics,,2011-03-20
10.1007/978-3-642-83539-1_1,Geometric data structures for computer graphics: an overview,,2013-03-20
10.1007/978-3-642-61340-1_4,Computational Geometry and its Application to Computer Graphics,,2018-03-20
10.1109/TC.1982.1675881,Computing Point Enclosures,,2018-03-20
10.1109/SFCS.1981.5,A direct dynamic solution to range search and related problems for product regions,,2018-03-20
10.1080/00207169208804136,A UNIFIED APPROACH TO GEOMETRIC PROBLEMS USING DUAL CONE TRANSFORMATION,,2019-03-20
10.1007/978-3-540-77974-2_5,Orthogonal Range Searching,,2012-03-20
10.1006/inco.1995.1030,Multiple Matching of Rectangular Patterns,,2017-03-20
10.1016/j.mcm.2006.12.035,Generalizing the k-Windows clustering algorithm in metric spaces,,2020-03-20
10.1145/3828.3839,Adding range restriction capability to dynamic data structures,,2019-03-20
10.1016/B978-0-444-87806-9.50011-6,Practical use of Bucketing Techniques in Computational Geometry,,2017-03-20
10.1145/800070.802185,Space-time tradeoff for answering range queries (Extended Abstract),,2017-03-20
10.1016/0166-218X(79)90045-3,On the number of range queries in k-space,,2013-03-20
10.1145/602259.602281,Efficient processing of relational calculus expressions using range query theory,,2018-03-20
10.1006/jagm.2000.1135,Balanced aspect ratio trees: combining the advantages of k-d trees and octrees,,2012-03-20
10.1145/160985.161138,Dominance range-query: the one-reporting case,,2014-03-20
10.1109/ITSC.2014.6957717,Probabilistic error model for a lane marking based vehicle localization coupled to open source maps,,2015-03-20
10.1051/ita/1989230201651,An Application of m-Ary Trees to The Design of Data Structures for Geometric Searching Problems,,2013-03-20
10.1117/12.542701,Structural-surface extraction from 3D laser radar point clouds,,2012-03-20
10.1016/S0925-7721(97)00005-9,On the Difficulty of Range Searching,,2018-03-20
10.1137/0215051,Filtering search: A new approach to query-answering,,2015-03-20
10.1137/S0097539702402354,Compressed Suffix Arrays and Suffix Trees with Applications to Text Indexing and String Matching,,2016-03-20
10.1016/0196-6774(80)90015-2,Decomposable Searching Problems I: Static-to-Dynamic Transformation,,2013-03-20
10.1007/978-3-7908-1880-2_2,Physical Design of Fuzzy Databases,,2014-03-20
10.1109/TC.1980.1675628,An Optimal Worst Case Algorithm for Reporting Intersections of Rectangles,,2018-03-20
10.1016/j.comgeo.2010.09.001,Improved data structures for the orthogonal range successor problem,,2012-03-20
10.1145/358841.358852,A unifying look at data structures,,2019-03-20
10.1007/BF02247943,The region approach for computing relative neighbourhood graphs in the Lp metric,,2019-03-20
10.1109/VLDB.1979.718131,On Search Performance For Conjunctive Queries In Compressed  Fully Transposed Ordered Files,,2014-03-20
10.1006/jcom.2001.0633,The New k-Windows Algorithm for Improving the k-Means Clustering Algorithm,,2012-03-20
10.1007/3-540-57155-8_283,An Optimal Algorithm for Roundness Determination on Convex Polygons,,2012-03-20
10.1007/978-3-540-39763-2_33,Match Chaining Algorithms for cDNA Mapping,,2016-03-20
10.1109/TPAMI.1985.4767732,Min-Max Operators in Texture Analysis,,2015-03-20
10.1109/PARBSE.1990.77112,Range search in parallel using distributed data structures,,2016-03-20
10.1109/TITS.2015.2465141,A Novel Approach for Improved Vehicular Positioning Using Cooperative Map Matching and Dynamic Base Station DGPS Concept,,2019-03-20
10.1007/978-3-642-36279-8_36,The Path Inference Filter: Model-Based Low-Latency Map Matching of Probe Vehicle Data,,2017-03-20
10.1145/358841.358850,Multidimensional divide-and-conquer,,2019-03-20
10.1109/SFCS.1986.29,Lower bounds on the complexity of multidimensional searching,,2011-03-20
10.1109/SFCS.2000.892088,New data structures for orthogonal range searching,,2014-03-20
10.1109/5.163409,Dynamic algorithms in computational geometry,,2019-03-20
10.1109/ICDE.1998.655808,Processing incremental multidimensional range queries in a direct manipulation visual query environment,,2014-03-20
10.1007/3-540-60220-8_86,On the Difficulty of Range Searching,,2019-03-20
10.1145/192309.192313,Data structures for dynamic queries: an analytical and experimental evaluation,,2017-03-20
10.1134/S1054661806020015,Estimating the number of clusters using a windowing technique,,2017-03-20
10.1145/335305.335351,Compressed suffix arrays and suffix trees with applications to text indexing and string matching (extended abstract),,2017-03-20
10.1145/320613.320618,Quintary trees: a file structure for multidimensional datbase sytems,,2015-03-20
10.1016/S0747-7171(89)80002-1,General Methods for Adding Range Restrictions to Decomposable Searching Problems,,2015-03-20
10.1186/S41070-017-0013-1,An offline mobile application for automatic evacuation guiding in outdoor environments,,2012-03-20
10.1016/j.jda.2012.09.002,On position restricted substring searching in succinct space,,2016-03-20
10.1007/978-3-642-61340-1,Advances in Computer Graphics V,,2013-03-20
10.1029/2019ea000856,Opportunistic Constant Target Matching—A New Method for Satellite Intercalibration,,2018-03-20
10.1007/3-540-49257-7_17,Optimal Dynamic Range Searching in Non-replicating Index Structures,,2013-03-20
10.1145/356789.356797,Data Structures for Range Searching,,2017-03-20
10.1090/dimacs/059/08,Locally lifting the curse of dimensionality for nearest neighbor search (extended abstract),,2017-03-20
10.1016/0890-5401(89)90064-3,Lower Bounds for the Addition-Subtraction Operations in Orthogonal Range Queries and Related Problems,,2013-03-20
10.1016/S0968-090X(00)00026-7,Some map matching algorithms for personal navigation assistants,,2018-03-20
10.1016/0020-0190(81)90053-3,On the Intersection of Orthogonal Objects,,2019-03-20
10.4230/LIPIcs.SoCG.2020.59,Four-Dimensional Dominance Range Reporting in Linear Space,,2020-03-20
10.1007/978-3-540-24669-5_29,Parallelizing the Unsupervised k-Windows Clustering Algorithm,,2013-03-20
10.1016/j.comgeo.2008.03.004,On the minimum total length of interval systems expressing all intervals  and range-restricted queries,,2019-03-20
10.1016/0021-9991(90)90006-M,Efficient data structures for adaptive remeshing with the FEM,,2011-03-20
10.1007/978-0-85729-085-4_14,Enhancing Vehicle Positioning Data Through Map-Matching,,2019-03-20
10.1016/0743-7315(92)90059-V,Range Search in Parallel Using Distributed Data Structures,,2019-03-20
10.1145/50020.50021,Hierarchical representations of collections of small rectangles,,2013-03-20
10.1007/3-540-32394-5_5,Novel Approaches to Unsupervised Clustering Through k-Windows Algorithm,,2020-03-20
10.1007/978-3-642-71071-1_11,Bibliography on quadtrees and related hierarchical data structures,,2017-03-20
10.1109/SFCS.1984.715941,A fast approximation for minimum spanning trees in k-dimensional space,,2019-03-20
10.1145/2534732.2534738,CrowdRoute: a crowd-sourced routing algorithm in public transit networks,,2013-03-20
10.1016/0146-664X(80)90034-9,Data structures for the rectangle containment and enclosure problems,,2011-03-20
10.1007/978-3-030-24766-9_21,Orthogonal Range Reporting and Rectangle Stabbing for Fat Rectangles,,2013-03-20
10.1006/jcss.1996.0012,Applications of Range Query Theory to Relational Data Base Join and Selection Operations,,2016-03-20
10.1016/S0020-0255(98)10079-8,An Access Structure for Similarity-Based Fuzzy Databases,,2016-03-20
10.1016/0898-1221(95)00029-X,A unified algorithm for finding maximum and minimum object enclosing rectangles and cuboids,,2016-03-20
10.1007/3-540-61422-2_141,Neighbours on a Grid,,2018-03-20
10.1145/2629557,CEPR: A Collaborative Exploration and Periodically Returning Model for Location Prediction,,2019-03-20
10.1145/31846.42228,Multidimensional search trees that provide new types of memory reductions,,2020-03-20
10.1109/IJCNN.2005.1556290,Computational intelligence techniques for acute leukemia gene expression data classification,,2017-03-20
10.1145/167088.167116,Multiple matching of rectangular patterns,,2017-03-20
10.1109/CEC.2005.1554992,The new window density function for efficient evolutionary unsupervised clustering,,2014-03-20
10.1109/SFCS.1979.47,Transforming static data structures to dynamic structures,,2013-03-20
10.1016/0196-6774(82)90016-5,Rectilinear Line Segment Intersection  Layered Segment Trees  and Dynamization,,2015-03-20
10.1016/S0020-0190(98)00128-8,Efficient Dynamic Range Searching Using Data Replication,,2015-03-20
10.1109/TC.1984.1676388,Computational Geometry&#8212;A Survey,,2011-03-20
10.1007/3-540-51517-8_148,Towards a refined classification of geometric search and computation problems,,2020-03-20
10.1007/3-540-16761-7_94,Lower Bounds for Dynamic Range Query Problems That Permit Subtraction (Extended Abstract),,2019-03-20
10.1007/BFb0024024,Reduced Memory Space for Multi-Dimensional Search Trees (Extended Abstract),,2019-03-20
10.1145/10515.10524,On the application of sheared retrieval to orthogonal range queries,,2012-03-20
10.1142/S021812740601591X,Unsupervised Clustering Using Fractal Dimension,,2016-03-20
10.1007/978-3-540-45145-7_32,Parallel Unsupervised k-Windows: An Efficient Parallel Clustering Algorithm,,2014-03-20
10.1109/ACCESS.2019.2958982,A Hidden Markov Model-Based Map Matching Algorithm for Low Sampling Rate Trajectory Data,,2020-03-20
10.1145/73833.73848,Computing partial sums in multidimensional arrays,,2019-03-20
10.1051/ita/1987210201991,An Almost Naive Algorithm for Finding Relative Neighbourhood Graphs in Lp Metrics,,2011-03-20
10.1007/3-540-44503-X_23,Orthogonal Range Queries in OLAP,,2020-03-20
10.1016/J.TRC.2019.03.012,A distributionally robust optimization approach to reconstructing missing locations and paths using high-frequency trajectory data,,2016-03-20
10.1145/101306.101308,A compendium of key search references,,2017-03-20
10.1142/S0218195905001853,On multi-level k-ranges for range search,,2019-03-20
10.1016/j.trb.2013.03.008,The Path Inference Filter: Model-Based Low-Latency Map Matching of Probe Vehicle Data,,2015-03-20
10.1007/BF01933636,The rectangle intersection problem revisited,,2017-03-20
10.1006/jcss.1995.1061,Spatial Query Optimization: From Boolean Constraints to Range Queries,,2015-03-20
10.1109/TITS.2019.2910591,TrajCompressor: An Online Map-matching-based Trajectory Compression Framework Leveraging Vehicle Heading Direction and Change,,2013-03-20
10.1016/j.patrec.2005.03.023,Unsupervised clustering on dynamic databases,,2011-03-20
10.1007/978-1-4020-6268-1_37,Towards Logarithmic Search Time Complexity for R-Trees,,2011-03-20
10.1016/0196-6774(88)90041-7,Efficient Data Structures for Range Searching on a Grid,,2018-03-20
10.1145/73393.73398,Quasi-Valid range querying and its implications for nearest neighbor problems,,2014-03-20
10.1016/0031-3203(85)90023-8,Relative neighborhood graphs in the Li-metric,,2016-03-20
10.1007/s00236-004-0157-8,A deterministic skip list for k-dimensional range search,,2013-03-20
10.1109/TC.1982.1675973,Counting and Reporting Intersections of d-Ranges,,2018-03-20
10.1007/BFb0016256,On the Inherent Combinatorial Complexity of Geometric Problems in D-Dimensional Space,,2011-03-20
10.1145/22145.22164,Space-time tradeoffs for orthogonal range queries,,2013-03-20
10.1061/9780784413159.351,An ArcGIS-Based Hybrid Topological Map Matching Algorithm for GPS Probe Data,,2013-03-20
10.1007/3-540-62501-1_37,Querying Indexed Files,,2013-03-20
10.1109/SFCS.1983.17,Filtering Search: A New Approach to Query-Answering,,2013-03-20
10.1007/978-3-540-68830-3_8,A Review of Major Application Areas of Differential Evolution,,2013-03-20
10.1016/0020-0190(79)90117-0,Decomposable Searching Problems,,2011-03-20
10.1109/MAHSS.2008.4660035,Adaptive QoS routing for significant events in wireless sensor networks,,2012-03-20
10.14236/EWIC/VOCS2008.29,Adaptive random re-routing for differentiated QoS in sensor networks,,2014-03-20
10.1093/comjnl/bxp082,Adaptive Random Re-Routing for Differentiated QoS in Sensor Networks,,2012-03-20
10.1016/j.jlap.2005.10.003,Linearization of hybrid processes,,2020-03-20
10.1145/1734229.1734232,A verification system for interval-based specification languages,,2020-03-20
10.1080/09537280600683099,Linking hybrid systems to ACD models: a case study in the fibre-glass industry,,2015-03-20
10.22028/D291-26494,Model checking stochastic hybrid systems,,2014-03-20
10.1109/CCA.2007.4389334,Implementation of Hybrid Automata in Scicos,,2019-03-20
10.1080/00207540600988113,Modelling hybrid production systems through the ACD specification: a case study in the fibre-glass industry,,2016-03-20
10.1007/s001650050015,A Formal Definition of Time in LOTOS,,2015-03-20
10.6100/IR719526,Assessing and improving the quality of model transformations,,2013-03-20
10.1017/CBO9780511777653,Combinatorics  Automata and Number Theory,,
10.1016/j.ic.2019.104440,Freeness properties of weighted and probabilistic automata over bounded languages,,2017-03-20
10.1016/j.tcs.2015.01.008,On the commutative equivalence of bounded context-free and regular languages: The semi-linear case,,2013-03-20
10.1016/j.tcs.2014.10.005,On the commutative equivalence of bounded context-free and regular languages: The code case,,2020-03-20
10.1007/978-3-642-60207-8_12,A Power Series Approach to Bounded Languages,,2018-03-20
10.1016/j.tcs.2006.01.037,On the structure of the counting function of sparse context-free languages,,2011-03-20
10.1016/j.tcs.2018.11.021,On counting functions and slenderness of languages,,2016-03-20
10.1007/978-3-030-28796-2_9,On the Commutative Equivalence of Bounded Semi-linear Codes,,2011-03-20
10.1016/j.tcs.2009.09.006,The Parikh counting functions of sparse context-free languages are quasi-polynomials,,2015-03-20
10.4230/LIPIcs.MFCS.2019.70,Acceptance Ambiguity for Quantum Automata,,2011-03-20
10.1016/S0304-3975(98)00266-7,On lengths of words in context-free languages,,2016-03-20
10.1007/978-3-030-28796-2,Combinatorics on Words: 12th International Conference  WORDS 2019  Loughborough  UK  September 9–13  2019  Proceedings,,2017-03-20
10.25596/jalc-2008-095,On the Growth of Context-Free Languages,,2012-03-20
10.1051/ita:2000100,A characterization of poly-slender context-free languages,,
10.1007/s00224-008-9143-9,On Bounded Rational Trace Languages,,2016-03-20
10.1142/S0218196700000054,Results Concerning Thinness of D0l Languages,,2014-03-20
10.1007/978-3-642-02737-6_39,On the Decidability of the Equivalence for a Certain Class of Transducers,,2012-03-20
10.1007/BF00625282,On termination problems for finitely interpreted ALGOL-like programs,,2018-03-20
10.1145/1086365.1086401,A logical analysis of aliasing in imperative higher-order functions,,2012-03-20
10.1007/s001650050057,Hoare Logic and Auxiliary Variables,,2017-03-20
10.1007/s00287-010-0433-7,Dijkstras fruchtbarer  folgenreicher Irrtum,,2018-03-20
10.1007/978-3-540-24773-9_3,An ALGOL-View on Turbo ASM,,2011-03-20
10.1515/pcr-2017-0001,Cartographic generalization yesterday and today,,2017-03-20
10.1007/978-3-540-75221-9_19,On Revival of Algol-Concepts in Modern Programming and Specification Languages,,2015-03-20
10.1007/978-3-319-23506-6_2,Ernst-Rüdiger Olderog: A Life for Meaning,,2020-03-20
10.1007/11787006_31,Descriptive and Relative Completeness of Logics for Higher-Order Functions,,2011-03-20
10.1007/978-3-540-39993-3_12,Consistency of Inheritance in Object-Oriented Languages and of Static  ALGOL-like Binding,,2012-03-20
10.1155/2015/247356,Parallel Machine Scheduling with Batch Delivery to Two Customers,,2019-03-20
10.1016/j.tcs.2015.01.014,Integrated production and delivery scheduling on a serial batch machine to minimize the makespan,,2018-03-20
10.1287/opre.1060.0280,Order Assignment and Scheduling in a Supply Chain,,2014-03-20
10.1016/J.JMSY.2017.05.005,Toward an integrated modeling approach for production and delivery operations in flow shop system: Trade-off between direct and routing delivery methods,,2012-03-20
10.1007/978-3-319-03780-6_9,Online Scheduling on Two Parallel Machines with Release Times and Delivery Times,,2016-03-20
10.1007/s10479-015-1903-8,Two parallel machines problem with job delivery coordination and availability constraint,,2020-03-20
10.1007/S10479-019-03267-2,Solving parallel machine problems with delivery times and tardiness objectives,,2020-03-20
10.1016/j.tcs.2009.02.019,A new heuristic algorithm for the machine scheduling problem with job delivery coordination,,2020-03-20
10.3844/AJASSP.2009.601.607,The Coordinated Scheduling Support System of Production and Delivery,,2019-03-20
10.1155/2016/3203728,Parallel Machine Scheduling with Nested Processing Set Restrictions and Job Delivery Times,,2020-03-20
10.1007/978-1-4020-7953-5_17,Integrated Production and Distribution Operations,,2018-03-20
10.1504/IJLSM.2006.008217,Methodologies for synchronised scheduling of assembly and air transportation in a consumer electronics supply chain,,2019-03-20
10.1002/NAV.21639,Integrated scheduling of loading and transportation with tractors and semitrailers separated,,2013-03-20
10.1504/IJLSM.2011.042626,An approach for the sustainable integration of production and transportation scheduling,,2018-03-20
10.1016/j.cor.2012.10.006,Multi-location production and delivery with job selection,,2017-03-20
10.1201/9780203489802.ch10,Minimizing the Maximum Lateness,,2013-03-20
10.1007/s10878-020-00593-1,A tight approximation algorithm for problem $$P2\rightarrow D|v=1 c=1|C_{\max }$$P2→D|v=1 c=1|Cmax,,2013-03-20
10.3390/pr8091025,Scheduling Two Identical Parallel Machines Subjected to Release Times  Delivery Times and Unavailability Constraints,,2015-03-20
10.1002/9780470400531.EORMS0200,Coordination of Production and Delivery in Supply Chain Scheduling,,2012-03-20
10.1109/ROBOT.2003.1242138,Task planning with transportation constraints: approximation bounds  implementation and experiments,,2011-03-20
10.24200/SCI.2017.4437,A Joint Scheduling of Production and Distribution Operations in a Flow Shop Manufacturing System,,2018-03-20
10.1007/S00170-007-1356-6,Coordinating scheduling with batch deliveries in a two-machine flow shop,,2019-03-20
10.1007/978-3-642-11996-5_40,Dynamic Scheduling of Production and Inter-Facilities Logistic Systems,,2015-03-20
10.1016/j.ejor.2012.11.049,Integrated machine scheduling and vehicle routing with time windows,,2013-03-20
10.1007/s10878-014-9760-y,Online scheduling on two parallel machines with release dates and delivery times,,2018-03-20
10.1109/ICSSSM.2010.5530174,Integration of order scheduling with delivery vehicles routing for two-echelon supply chain system,,2019-03-20
10.1287/mnsc.1040.0325,Integrated Scheduling of Production and Distribution Operations,,2011-03-20
10.1016/S0377-2217(03)00364-3,Machine scheduling with job delivery coordination,,2017-03-20
10.1016/j.tcs.2016.01.044,Two-stage scheduling on identical machines with assignable delivery times to minimize the maximum delivery completion time,,2016-03-20
10.1016/j.tcs.2013.04.025,Approximation algorithms for two-machine open shop scheduling with batch and delivery coordination,,2020-03-20
10.1016/J.CIRPJ.2010.03.003,Integrating manufacturing and logistic systems along global supply chains,,2017-03-20
10.1504/IJLSM.2014.062817,A representation scheme for integrated production and outbound distribution models,,2020-03-20
10.3923/ITJ.2010.1202.1206,Integration of Job Scheduling with Delivery Vehicles Routing,,2012-03-20
10.1109/ICSSSM.2009.5175017,Integration of scheduling and routing for two-echelon supply chain system,,2013-03-20
10.1002/NAV.20100,Scheduling a production–distribution system to optimize the tradeoff between delivery tardiness and distribution cost,,2016-03-20
10.1287/opre.1080.0688,Integrated Production and Outbound Distribution Scheduling: Review and Extensions,,2013-03-20
10.1007/s11590-011-0392-1,Coordinating multi-location production and customer delivery,,2020-03-20
10.1016/j.cor.2020.105126,Parallel Machine Scheduling with the Total Weighted Delivery Time Performance Measure in Distributed Manufacturing,,2014-03-20
10.1016/j.tcs.2015.03.046,Preemptive scheduling on identical machines with delivery coordination to minimize the maximum delivery completion time,,2017-03-20
10.1016/S0377-0427(01)00458-7,Laws of large numbers and tail inequalities for random tries and PATRICIA trees,,2020-03-20
10.1023/A:1026258911996,Average Case Analysis in Database Problems,,2013-03-20
10.1007/978-3-319-08783-2_9,On the Smoothed Heights of Trie and Patricia Index Trees,,2017-03-20
10.1007/BF02679622,Dynamical sources in information theory: Fundamental intervals and word prefixes,,2015-03-20
10.1007/BF01759045,On the height of digital trees and related problems,,2020-03-20
10.1016/S0196-6774(02)00212-2,Limit laws for the height in PATRICIA tries,,2012-03-20
10.23638/DMTCS-19-1-22,Asymptotics of the occupancy scheme in a random environment and its applications to tries,,2020-03-20
10.1007/s00453-004-1137-7,Universal Asymptotics for Random Tries and PATRICIA Trees,,2014-03-20
10.1137/1.9781611973105.63,Towards More Realistic Probabilistic Models for Data Structures: The External Path Length in Tries under the Markov Model,,2012-03-20
10.1109/ITW.2006.1633790,Statistics for dynamical sources,,2020-03-20
10.1137/070685531,Profiles of Tries,,2016-03-20
10.1007/BF02679623,Dynamical sources in information theory: A general analysis of trie structures,,2012-03-20
10.1214/009117906000000232,Rounding of continuous random variables and oscillatory asymptotics,,2015-03-20
10.1016/S0166-218X(03)00365-2,Expected worst-case partial match in random quadtries,,2012-03-20
10.1017/CBO9780511843204,Analytic Pattern Matching by Philippe Jacquet,,2011-03-20
10.1007/978-3-540-78773-0_1,Profile of Tries,,2020-03-20
10.1002/RSA.V27:2,Probabilistic behavior of asymmetric level compressed tries,,2014-03-20
10.1002/rsa.20067,Probabilistic behavior of asymmetric level compressed tries,,2017-03-20
10.1017/S0963548304006200,Concentration of Size and Path Length of Tries,,2017-03-20
10.1016/j.tcs.2015.02.009,Smoothed heights of tries and patricia tries,,2016-03-20
10.1017/S0963548307008796,An Analysis of the Height of Tries with Random Weights on the Edges,,2016-03-20
10.1002/jgt.21655,Transversals in Trees,,2015-03-20
10.1214/EJP.V16-952,A note on the probability of cutting a Galton-Watson tree,,2018-03-20
10.1002/rsa.20202,The height of increasing trees,,2020-03-20
10.1016/S0304-3975(01)00006-8,The Variance of the height of binary search trees,,2015-03-20
10.1007/978-3-0348-8211-8_10,Giant Components for Two Expanding Graph Processes,,2016-03-20
10.1002/rsa.10103,Random suffix search trees,,2020-03-20
10.1007/s00453-006-0109-5,Profiles of Random Trees: Limit Theorems for Random Recursive Trees and Binary Search Trees,,2019-03-20
10.1007/978-3-319-93725-0_6,Arbres binaires de recherche,,2015-03-20
10.1214/17-EJP31,Asymptotics of heights in random trees constructed by aggregation,,2016-03-20
10.1007/978-3-319-93725-0_3,Arbres  algorithmes et données,,2019-03-20
10.1007/S11425-007-0129-X,Limiting theorems for the nodes in binary search trees,,2016-03-20
10.1007/978-3-0348-8211-8_16,A Note on Random Suffix Search Trees,,2020-03-20
10.1017/S026996480707009X,Extremal Weighted Path Lengths In Random Binary Search Trees,,2018-03-20
10.1002/RSA.V32:4,The height of increasing trees,,2018-03-20
10.1002/rsa.20701,Oscillations in the height of the Yule tree and application to the binary search tree,,2018-03-20
10.1145/765568.765571,The height of a random binary search tree,,2013-03-20
10.1016/S0377-0427(01)00460-5,Limit distribution for the maximum degree of a random recursive tree,,2017-03-20
10.1007/s11512-009-0118-0,Long and short paths in uniform random recursive dags,,2016-03-20
10.1017/jpr.2018.75,Weak convergence of the number of vertices at intermediate levels of random recursive trees,,2011-03-20
10.1214/17-AAP1285,General Edgeworth expansions with applications to profiles of random trees,,2014-03-20
10.1002/rsa.20753,High degrees in random recursive trees,,2018-03-20
10.20382/jocg.v6i1a6,Random hyperplane search trees in high dimensions,,2016-03-20
10.1002/rsa.20649,Finding Adam in random growing trees,,2016-03-20
10.1002/rsa.20391,Depth Properties of scaled attachment random recursive trees,,2019-03-20
10.1186/1029-242X-2013-416,Retraction Note: Strong limiting behavior in binary search trees,,2012-03-20
10.1017/S0963548317000232,Diameter of the Stochastic Mean-Field Model of Distance,,2014-03-20
10.1109/FOCS.2010.69,All-Pairs Shortest Paths in O(n2) Time with High Probability,,2016-03-20
10.1142/9789812567673_0016,Applications of Stein's method in the analysis of random binary search trees,,2016-03-20
10.1214/09-AAP640,A functional limit theorem for the profile of b-ary trees.,,2018-03-20
10.1002/rsa.20901,The height of depth-weighted random recursive trees,,2017-03-20
10.1002/RSA.V35:3,Critical random graphs and the structure of a minimum spanning tree,,2016-03-20
10.1098/rspa.2003.1243,Stochastic analysis of tree–like data structures,,2014-03-20
10.1145/2505988,All-Pairs Shortest Paths in O(n²) Time with High Probability,,2014-03-20
10.1186/1029-242X-2013-60,RETRACTED ARTICLE: Strong limiting behavior in binary search trees,,2011-03-20
10.1016/S0304-3975(01)00387-5,The height of a binary search tree: the limiting distribution perspective,,2013-03-20
10.1142/S0218196715500058,Search problems in groups and branching processes,,2017-03-20
10.1137/060678609,Random Hyperplane Search Trees,,2020-03-20
10.1137/S0097539701383923,Limit Laws for Sums of Functions of Subtrees of Random Binary Search Trees,,2014-03-20
10.1016/j.tcs.2004.08.003,On Robson's convergence and boundedness conjectures concerning the height of binary search trees,,2013-03-20
10.1007/978-3-319-93725-0_8,Arbres m-aires et quadrants,,2018-03-20
10.1007/978-3-0348-8211-8_23,Growth Rate and Ergodicity Conditions for a Class of Random Trees,,2016-03-20
10.1017/S0963548309990204,The Longest Minimum-Weight Path in a Complete Graph,,2015-03-20
10.1002/rsa.20828,Notes on Growing a Tree in a Graph,,2013-03-20
10.1007/s10474-019-00976-9,Moments of general time dependent branching processes with applications,,2016-03-20
10.1214/12-AAP840,Poisson-Dirichlet branching random walks,,2016-03-20
10.1002/RSA.20576,The height of random k-trees and related branching processes,,2020-03-20
10.1007/s00453-006-0112-x,Large Deviations for the Weighted Height of an Extended Class of Trees,,2015-03-20
10.1137/S0895480104440134,Bimodality and Phase Transitions in the Profile Variance of Random Binary Search Trees,,2013-03-20
10.1002/rsa.20241,Critical random graphs and the structure of a minimum spanning tree,,2020-03-20
10.1016/j.endm.2015.07.075,High degrees in recursive trees,,2018-03-20
10.1137/1.9781611974331.CH109,Distance in the Forest Fire Model How far are you from Eve?,,2015-03-20
10.1007/S00026-009-0009-X,The Height of Increasing Trees,,2012-03-20
10.1007/s00440-003-0311-1,Birth and death processes on certain random trees: classification and stationary laws,,2011-03-20
10.1002/rsa.20340,A phase transition for the heights of a fragmentation tree,,2011-03-20
10.1145/2435349.2435356,Expression rewriting for optimizing secure computation,,2018-03-20
10.1016/j.aam.2013.12.004,The shape of random pattern-avoiding permutations,,2011-03-20
10.1017/cbo9781316339831,Introduction to Random Graphs,,2015-03-20
10.1017/S0963548320000073,A non-increasing tree growth process for recursive trees and applications,,2012-03-20
10.1023/B:TELS.0000014793.19622.0e,Lossy Communicating Finite State Machines,,2020-03-20
10.1007/3-540-45678-3_22,On Removing the Pushdown Stack in Reachability Constructions,,2016-03-20
10.1016/S0304-3975(02)00545-5,Eliminating the storage tape in reachability constructions,,2011-03-20
10.1016/S0304-3975(02)00076-2,Verification in loosely synchronous queue-connected discrete timed automata,,2013-03-20
10.1007/978-3-030-25540-4_6,Verifying Asynchronous Interactions via Communicating Session Automata,,2013-03-20
10.1145/2660193.2660233,EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation,,2015-03-20
10.1145/2660193.2660211,Natural proofs for asynchronous programs using almost-synchronous reductions,,2013-03-20
10.1007/11817963_24,Communicating Timed Automata: The More Synchronous  the More Difficult to Verify,,2020-03-20
10.1007/978-3-540-78800-3_21,Context-Bounded Analysis of Concurrent Queue Systems,,2012-03-20
10.1145/1065167.1065203,XML type checking with macro tree transducers,,2020-03-20
10.1007/978-3-642-32172-6_16,An Attribute Labeled Grid Graph Grammar and Its Application to Program Specification Forms,,2011-03-20
10.1007/978-3-319-61470-0_7,Predictive Shift-Reduce Parsing for Hyperedge Replacement Grammars,,2020-03-20
10.2197/ipsjjip.20.622,Automatic Generation of XML Files and Their Database Registration from Tabular Form Specifications,,2020-03-20
10.1016/j.jlamp.2018.12.006,Formalization and Correctness of Predictive Shift-Reduce Parsers for Graph Grammars based on Hyperedge Replacement,,2011-03-20
10.1007/978-3-319-74730-9_7,Generating Efficient Predictive Shift-Reduce Parsers for Hyperedge Replacement Grammars,,2016-03-20
10.0253/TUPRINTS-00003352,Incremental model synchronization with precedence-driven triple graph grammars,,2016-03-20
10.1007/978-3-319-21145-9_2,Predictive Top-Down Parsing for Hyperedge Replacement Grammars,,2018-03-20
10.1109/SNPD.2015.7176260,A formalization of financial statements with heterogeneous parts by graph grammars,,2011-03-20
10.1007/978-3-319-50230-4_9,Approximating Parikh Images for Generating Deterministic Graph Parsers,,2020-03-20
10.1587/TRANSINF.E92.D.401,A visual software development environment based on graph grammars,,2012-03-20
10.1007/978-3-319-11331-9_24,Characteristics of Bottom-Up Parsable edNLC Graph Languages for Syntactic Pattern Recognition,,2019-03-20
10.1007/978-3-540-31862-0_9,A Logical Characterization of Efficiency Preorders,,2020-03-20
10.1007/978-3-319-06251-8_13,Parameterised Bisimulations: Some Applications,,2017-03-20
10.4204/EPTCS.8.6,Robustness of a bisimulation-type faster-than preorder,,2018-03-20
10.1109/ACSD.2005.11,Dead-path-elimination in BPEL4WS,,2012-03-20
10.4204/EPTCS.300.2,Comparing Process Calculi Using Encodings,,2015-03-20
10.1145/2971339,Equations  Contractions  and Unique Solutions,,2020-03-20
10.1007/3-540-45061-0_47,Bisimulation Proof Methods for Mobile Ambients,,2013-03-20
10.1051/ita:2005030,Bisimulation on speed: Lower time bounds,,2018-03-20
10.1016/j.tcs.2007.02.060,New up-to techniques for weak bisimulation,,2019-03-20
10.1007/978-3-540-76637-7_24,Complete Lattices and Up-To Techniques,,2011-03-20
10.1016/j.ic.2008.05.001,Comparing communication primitives via their relative expressive power,,2013-03-20
10.1007/978-3-319-25150-9_5,The Proof Technique of Unique Solutions of Contractions,,2017-03-20
10.1016/j.ic.2018.01.001,A Semantic Theory for the Internet of Things,,2020-03-20
10.1007/978-3-540-85361-9_38,Towards a Unified Approach to Encodability and Separation Results for Process Calculi,,2011-03-20
10.1007/978-3-662-44584-6_8,Bisimulations Up-to: Beyond First-Order Transition Systems,,2020-03-20
10.1007/b110123,Formal Methods for the Design of Real-Time Systems,,2016-03-20
10.1007/11804192_8,"Beyond Bisimulation: The ""up-to"" Techniques",,2019-03-20
10.1016/j.entcs.2006.10.054,Synchrony vs Asynchrony in Communication Primitives,,2011-03-20
10.1016/j.tcs.2007.09.002,Formalising Java RMI with explicit code mobility,,2017-03-20
10.1007/978-3-662-54458-7_25,The Paths to Choreography Extraction,,2011-03-20
10.1016/j.tcs.2006.03.004,Bisimulation on speed: A unified approach,,2020-03-20
10.2168/LMCS-10(2:15)2014,Compositional Reasoning for Explicit Resource Management in Channel-Based Concurrency,,2018-03-20
10.1007/978-3-319-39519-7,A semantic theory of the internet of things (Extended abstract),,2018-03-20
10.1016/j.ic.2020.104606,Unique solutions of contractions  CCS  and their HOL formalisation,,2011-03-20
10.1007/978-3-540-30080-9_2,Timed Petri Nets: Efficiency of Asynchronous Systems,,2018-03-20
10.1007/s00165-019-00497-w,Bisimulation and Coinduction Enhancements: A Historical Perspective,,2011-03-20
10.1007/978-3-319-39519-7_10,A Semantic Theory of the Internet of Things - (Extended Abstract),,2013-03-20
10.1016/J.ENTCS.2007.02.039,An Observational Theory for Mobile Ad Hoc Networks,,2013-03-20
10.1007/978-3-642-31424-7_33,On Decidability of Prebisimulation for Timed Automata,,2015-03-20
10.4204/EPTCS.276.10,Unique Solutions of Contractions  CCS  and their HOL Formalisation,,2016-03-20
10.1017/S0960129504004323,On asynchrony in name-passing calculi,,2015-03-20
10.1016/j.ic.2010.05.002,Towards a unified approach to encodability and separation results for process calculi,,2012-03-20
10.1016/j.entcs.2007.08.021,An Operational Semantics for Shared Messaging Communication,,2017-03-20
10.1007/978-3-540-24727-2_24,Bisimulation on Speed: Lower Time Bounds,,2013-03-20
10.1007/11523468_59,Up-to Techniques for Weak Bisimulation,,2014-03-20
10.1007/978-3-662-44584-6_7,Trees from Functions as Processes,,2015-03-20
10.1016/j.ic.2002.08.001,Bisimulation on speed: worst-case efficiency,,2013-03-20
10.1007/978-3-642-40213-5_6,On Efficiency Preorders,,2019-03-20
10.1007/978-3-319-06251-8,Relational and Algebraic Methods in Computer Science,,2013-03-20
10.1145/1101821.1101825,Behavioral theory for mobile ambients,,2020-03-20
10.1007/11817949_26,Weak Bisimulation Up to Elaboration,,2015-03-20
10.1007/978-3-319-67729-3_4,Logical Characterisation of Parameterised Bisimulations,,2011-03-20
10.1145/1929529.1929532,Verifying stateful programs with substructural state and hoare types,,2019-03-20
10.1016/j.tcs.2008.04.035,Using bisimulation proof techniques for the analysis of distributed abstract machines,,2016-03-20
10.1007/11562436_24,Amortised Bisimulations,,2019-03-20
10.1016/j.entcs.2009.06.042,Counting the Cost in the Picalculus (Extended Abstract),,2019-03-20
10.1145/3158131,Up-to techniques using sized types,,2012-03-20
10.1007/1-4020-8141-3_42,Behavioural Theory for Mobile Ambients,,2015-03-20
10.1016/S0890-5401(03)00065-8,Faster asynchronous systems,,2015-03-20
10.4230/LIPIcs.FSTTCS.2017.7,Monitoring for Silent Actions,,2017-03-20
10.1007/978-3-540-31982-5_5,Bisimulation on Speed: A Unified Approach,,2011-03-20
10.1007/s00446-010-0120-6,A taxonomy of process calculi for distribution and mobility,,2019-03-20
10.1145/1094811.1094843,Formalising Java RMI with explicit code mobility,,2014-03-20
10.1007/978-3-642-00596-1_17,The Calculus of Handshake Configurations,,2016-03-20
10.1007/978-3-540-30080-9_4,Expressiveness of Timed Events and Timed Languages,,2020-03-20
10.1016/J.IC.2005.06.002,Communication and mobility control in boxed ambients,,2019-03-20
10.1017/S0960129512000965,The algebra of multirelations,,2011-03-20
10.1007/978-3-319-19797-5_3,A Relation-Algebraic Approach to Multirelations and Predicate Transformers,,2020-03-20
10.1016/j.jlamp.2015.10.008,Towards patterns for heaps and imperative lambdas,,2018-03-20
10.1109/TASE.2013.18,Designs with Angelic Nondeterminism,,2015-03-20
10.1075/CILT.326.18LOS,Recycling “junk”: A case for exaptation as a response to breakdown,,2013-03-20
10.1080/03946975.2003.10531186,Systematics of Platyceps brevis (Boulenger 1895) and related East African racers (Serpentes Colubrinae),,2017-03-20
10.4171/022-2/76,Convexity  complexity  and high dimensions,,2018-03-20
10.11606/ISSN.2316-9079.V10I2P177-182,Morphology and geographical distribution of the poorly known snake Umbrivaga pygmaea (Serpentes: Dipsadidae) in Brazil,,2011-03-20
10.3897/zookeys.569.7458,Taxonomic revision of the Carpathian endemic Pedicia (Crunobia) staryi species–group (Diptera  Pediciidae) based on morphology and molecular data,,2013-03-20
10.4102/ABC.V40I1.178,A generic classification of the Restioneae (Restionaceae)  southern Africa,,2011-03-20
10.3161/00034541ANZ2018.68.1.001,The Checklist of the Weevils (Coleoptera: Curculionoidea) of Poland Revisited,,2013-03-20
10.1017/S1755691018000464,True flies (Insecta: Diptera) from the late Eocene insect limestone (Bembridge Marls) of the Isle of Wight  England  UK,,2012-03-20
10.1017/S1360674308002876,The consequences of the loss of verb-second in English: information structure and syntax in interaction1,,2012-03-20
10.1515/AMM-2015-0006,Processing and Properties of Distaloy Sa Sintered Alloys with Boron and Carbon,,2013-03-20
10.1007/s00236-020-00381-8,Synchronous and asynchronous communication(s) between three parties,,2018-03-20
10.1016/S0304-3975(00)00282-6,On the expressive power of first-order boolean functions in PCF,,2012-03-20
10.1016/j.tcs.2006.12.020,A compositional natural semantics and Hoare logic for low-level languages,,2018-03-20
10.1007/BF00264021,Proof rules for gotos,,2013-03-20
10.1007/978-3-642-05089-3_40,Reasoning about Memory Layouts,,2018-03-20
10.1007/s10703-010-0098-5,Reasoning about memory layouts,,2013-03-20
10.1007/978-3-540-39958-2_5,A Syntax-Directed Hoare Logic for Object-Oriented Programming Concepts,,2019-03-20
10.1007/978-94-010-0413-8_11,Hoare Logics in Isabelle/HOL,,2014-03-20
10.1145/1709093.1709094,Semantic foundations for typed assembly languages,,2020-03-20
10.1145/1016850.1016874,From process logic to program logic,,2019-03-20
10.1007/11609773_6,A Compositional Logic for Control Flow,,2012-03-20
10.14279/tuj.eceasst.23.319,High-level Proofs about Low-level Programs,,2020-03-20
10.1145/2500365.2500593,Hoare-style reasoning with (algebraic) continuations,,2019-03-20
10.1007/978-3-540-71389-0_26,Logical Reasoning for Higher-Order Functions with Local State,,2016-03-20
10.1007/3-540-45614-7_6,Hoare Logic for NanoJava: Auxiliary Variables  Side Effects  and Virtual Methods Revisited,,2015-03-20
10.1007/978-3-030-58768-0,Software Engineering and Formal Methods: 18th International Conference  SEFM 2020  Amsterdam  The Netherlands  September 14–18  2020  Proceedings,,2011-03-20
10.1007/978-3-030-58768-0_11,Hoare-Style Logic for Unstructured Programs,,2019-03-20
10.14279/TUJ.ECEASST.23.319.304,High-level Proofs about Low-level Programs,,2016-03-20
10.20868/upm.thesis.47796,Hoare-style Reasoning with Higher-order Control : Continuations and Concurrency,,2011-03-20
10.2168/LMCS-4(4:2)2008,Logical Reasoning for Higher-Order Functions with Local State,,2012-03-20
10.1145/1013963.1013985,A compositional logic for polymorphic higher-order functions,,2013-03-20
10.1007/978-3-540-71067-7_18,Lightweight Separation,,2016-03-20
10.1016/j.entcs.2005.09.031,A Compositional Natural Semantics and Hoare Logic for Low-Level Languages,,2013-03-20
10.1007/978-3-540-39737-3_28,A Robust Scheme for Multilevel Extendible Hashing,,2018-03-20
10.15803/IJNC.4.1_111,k-Selection Protocols from Energetic Complexity Perspective,,2019-03-20
10.1145/506309.506312,Burst tries: a fast  efficient data structure for string keys,,2017-03-20
10.1515/dma.1995.5.4.289,Some estimates for the distribution of the height of digital search trees,,2013-03-20
10.1007/978-3-319-08608-8_17,A Functional Database Representation of Large Sets of Objects,,2020-03-20
10.1002/rsa.20979,Node Profiles of Symmetric Digital Search Trees: Concentration Properties.,,2016-03-20
10.1137/1.9781611974775.12,External Profile of Symmetric Digital Search Trees (Extended Abstract),,2011-03-20
10.1109/IPDPSW.2013.80,K-Selection Protocols from Energetic Complexity Perspective,,2015-03-20
10.1007/3-540-36574-5,Algorithms for Memory Hierarchies,,2016-03-20
10.1002/rsa.20023,On the number of full levels in tries,,2019-03-20
10.1007/3-540-36574-5_2,Basic External Memory Data Structures,,2012-03-20
10.1145/1462198.1462202,Information filtering and query indexing for an information retrieval model,,2019-03-20
10.1007/978-3-642-23702-7_22,Bound Analysis of Imperative Programs with the Size-Change Abstraction,,2011-03-20
10.1007/978-3-319-20297-6_27,Asymptotically Precise Ranking Functions for Deterministic Size-Change Systems,,2020-03-20
10.2168/LMCS-5(2:8)2009,Ranking Functions for Size-Change Termination II,,2017-03-20
10.1007/978-3-540-78800-3_16,A SAT-Based Approach to Size Change Termination with Global Ranking Functions,,2015-03-20
10.1007/978-3-642-15769-1_4,Size-Change Termination and Transition Invariants,,2017-03-20
10.1145/1498926.1498928,Ranking functions for size-change termination,,2012-03-20
10.1017/S1471068411000147,SAT-based termination analysis using monotonicity constraints over the integers,,2014-03-20
10.1109/IRI.2011.6009537,Local as view information integration in the Semantic Model approach,,2013-03-20
10.1109/IRI.2012.6303030,Efficient query processing in the semantic model approach to information integration,,2018-03-20
10.1109/ICDIM.2011.6093349,Query optimization in information integration for queries involving aggregation and group by,,2019-03-20
10.1109/AICCSA.2013.6616473,Semantic metadata mediation: XML  RDF and RuleML,,2014-03-20
10.1145/2396761.2396873,On the foundations of probabilistic information integration,,2015-03-20
10.1504/IJMSO.2015.068264,Reconciliation model of heterogeneous information in decisional information systems,,2014-03-20
10.1007/978-3-319-19548-3_7,Belief Revision in Uncertain Data Integration,,
10.1145/2513591.2513638,A compact representation for efficient uncertain-information integration,,2016-03-20
10.1007/11817949_27,Generic Forward and Backward Simulations,,2012-03-20
10.1016/S0022-4049(97)00167-9,Gabriel-Ulmer duality for categories enriched in bicategories,,2014-03-20
10.1007/3-540-48168-0_39,Data-Refinement for Call-By-Value Programming Languages,,2019-03-20
10.1007/b75154,Recent Trends in Algebraic Development Techniques,,2018-03-20
10.1007/3-540-45022-X_9,Lax Logical Relations,,2017-03-20
10.1016/j.entcs.2008.12.081,Axiomatics for Data Refinement in Call by Value Programming Languages,,2013-03-20
10.1016/j.entcs.2008.12.064,Category Theoretic Models of Data Refinement,,2016-03-20
10.1007/978-3-540-44616-3_12,A General Completeness Result in Refinement,,2014-03-20
10.1007/978-3-319-11764-5_12,SMT-Based Synthesis of Distributed Self-stabilizing Systems,,2012-03-20
10.1109/IPDPS.2018.00114,Self-Stabilizing Supervised Publish-Subscribe Systems,,2019-03-20
10.2514/1.19848,Self-Stabilization with r-Operators revisited,,2013-03-20
10.1007/978-3-319-69084-1_15,ASSESS: A Tool for Automated Synthesis of Distributed Self-stabilizing Algorithms,,2017-03-20
10.2478/s11696-008-0083-2,Polymer interfaces used in electrochemical DNA-based biosensors,,2011-03-20
10.1109/IPDPS.2009.5161053,Optimal deterministic self-stabilizing vertex coloring in unidirectional anonymous networks,,2020-03-20
10.1109/ICDCS.2015.65,Synthesizing Self-Stabilizing Protocols under Average Recovery Time Constraints,,2017-03-20
10.1007/s00607-010-0107-y,A survey on self-healing systems: approaches and systems,,2017-03-20
10.7936/K7NG4NW0,Self-Stabilization in the Distributed Systems of Finite State Machines,,2014-03-20
10.1007/11577327_5,Self-stabilization with r-Operators Revisited,,2014-03-20
10.1145/2767133,SMT-Based Synthesis of Distributed Self-Stabilizing Systems,,2012-03-20
10.1109/ITSC.2014.6957835,Cooperation with disagreement correction in the presence of communication failures,,2020-03-20
10.1109/CIT.2004.1357244,A self-stabilizing distributed multicast algorithm for mobile ad-hoc networks,,2017-03-20
10.1145/3427796.3427836,Self-Stabilizing Indulgent Zero-degrading Binary Consensus,,2014-03-20
10.1007/978-3-319-28183-4_7,Towards Predictable Vehicular Networks,,2017-03-20
10.23638/LMCS-14(1:12)2018,Automated Synthesis of Distributed Self-Stabilizing Protocols,,2018-03-20
10.1007/978-3-319-39570-8_9,Specification-Based Synthesis of Distributed Self-Stabilizing Protocols,,2012-03-20
10.1134/S1990478907030052,Equilibrium resource distribution in a network model,,2016-03-20
10.1109/ICDCS.2010.69,Stabilizing Locally Maximizable Tasks in Unidirectional Networks Is Hard,,2012-03-20
10.1007/978-3-642-11322-2_19,Probabilistic Self-stabilizing Vertex Coloring in Unidirectional Anonymous Networks,,2017-03-20
10.1007/3-540-45032-7_5,Self-Stabilizing Group Communication in Directed Networks,,2015-03-20
10.1023/A:1025165407063,Affine Dependence Classification for Communications Minimization,,2011-03-20
10.1109/IPDPS.2003.1213292,PROSIDIS: a special purpose processor for protein similarity discovery,,2015-03-20
10.1007/s42979-020-00160-9,Discovering Evolving Temporal Information: Theory and Application to Clinical Databases,,2019-03-20
10.4230/LIPIcs.TIME.2017.11,Evaluation of Temporal Datasets via Interval Temporal Logic Model Checking,,2020-03-20
10.1109/ICHI.2017.80,Discovering Quantitative Temporal Functional Dependencies on Clinical Data,,2020-03-20
10.1016/j.eswa.2018.06.025,A rough set approach for approximating differential dependencies,,2020-03-20
10.4230/LIPIcs.TIME.2018.7,Extracting Interval Temporal Logic Rules: A First Approach,,2016-03-20
10.1016/j.jbi.2017.10.002,Consistent discovery of frequent interval-based temporal patterns in chronic patients' data,,2015-03-20
10.1587/TRANSINF.E94.D.707,On Non-overlapping Words,,2019-03-20
10.1007/s00236-017-0309-2,A first step in characterizing three-element codes,,
10.1587/TRANSINF.E92.D.1577,d-Primitive Words and D(1)-Concatenated Words,,2019-03-20
10.1093/ietisy/e91-d.10.2514,Some Results on Primitive Words  Square-Free Words  and Disjunctive Languages,,2019-03-20
10.1587/TRANSINF.E95.D.2710,d-Primitive Words and Contextual Grammars,,2014-03-20
10.1016/j.dam.2018.02.026,On the ratio of prefix codes to all uniquely decodable codes with a given length distribution,,2013-03-20
10.1007/s00236-004-0155-x,Three-element codes with one d-primitive word,,2013-03-20
10.1016/j.disc.2020.111939,On the proportion of prefix codes in the set of three-element codes,,2011-03-20
10.1007/s00236-010-0126-3,A note on prefix primitive words,,2016-03-20
10.1007/s00778-017-0463-8,Efficiently making (almost) any concurrency control mechanism serializable,,2016-03-20
10.1007/BF01840347,A cautious scheduler for multistep transactions,,2012-03-20
10.1145/2771937.2771949,The Serial Safety Net: Efficient Concurrency Control on Modern Hardware,,2011-03-20
10.1145/2641638.2641654,Language support for lightweight transactions,,2017-03-20
10.1201/9781315371801-13,Multiscale Models of Flow and Transport,,2012-03-20
10.1145/949305.949340,Language support for lightweight transactions,,2016-03-20
10.1007/BF02253206,An experimental study of processor thrashing in multiprocessor systems,,2018-03-20
10.1007/978-3-642-24897-9_5,Rational Transformations and a Kleene Theorem for Power Series over Rational Monoids,,2019-03-20
10.1007/978-3-642-24897-9_2,Weighted Tree Automata over Valuation Monoids and Their Characterization by Weighted Logics,,2014-03-20
10.1016/j.tcs.2010.11.018,Varieties of recognizable tree series over fields,,2020-03-20
10.1016/j.tcs.2009.09.040,Definable transductions and weighted logics for texts,,2016-03-20
10.1016/j.fss.2007.02.016,Fuzzy tree automata,,2017-03-20
10.23638/LMCS-13(1:16)2017,Minimisation of Multiplicity Tree Automata,,2014-03-20
10.1142/S0129054111009070,The Category of Simulations for Weighted Tree Automata,,2016-03-20
10.1007/978-3-662-46678-0_19,Minimisation of Multiplicity Tree Automata,,2018-03-20
10.25596/jalc-2007-333,Learning Deterministically Recognizable Tree Series,,2017-03-20
10.1016/j.tcs.2006.08.025,Weighted tree automata and weighted logics,,2019-03-20
10.1007/978-3-540-73208-2_23,Bisimulation Minimisation for Weighted Tree Automata,,2011-03-20
10.1007/978-3-540-73208-2_31,Definable Transductions and Weighted Logics for Texts,,2013-03-20
10.1007/978-3-642-01492-5_9,Weighted Tree Automata and Tree Transducers,,2015-03-20
10.1051/ita/2010014,On the syntactic complexity of tree series,,2019-03-20
10.1007/3-540-45007-6_11,The Myhill-Nerode Theorem for Recognizable Tree Series,,2017-03-20
10.1016/j.ic.2009.01.004,Minimizing deterministic weighted tree automata,,2019-03-20
10.1007/BF02252909,Berechnungen in partiellen Algebren endlichen Typs,,2018-03-20
10.1007/BF01272076,Fast exponentiation using the truncation operation,,2017-03-20
10.1007/BF01272518,Some computational problems in linear algebra as hard as matrix multiplication,,2016-03-20
10.1007/s10208-002-0078-2,The Computational Complexity of the Chow Form,,2017-03-20
10.1016/j.jsc.2016.07.004,On the arithmetic complexity of Strassen-like matrix multiplications,,2013-03-20
10.1007/s11280-010-0100-6,A space and time efficient algorithm for SimRank computation,,2014-03-20
10.1109/CEC.2008.4631317,Using fast matrix multiplication in bio-inspired computation for complex optimization problems,,2020-03-20
10.1016/j.imavis.2005.01.005,Conditional solutions for the affine reconstruction of N-views,,2013-03-20
10.1109/APWeb.2010.42,A Space and Time Efficient Algorithm for SimRank Computation,,2019-03-20
10.1109/CloudCom.2012.6427556,Design fast matrix algorithms on high-performance cloud platforms,,2020-03-20
10.3233/sat-200125,Backdoors into Two Occurrences,,2015-03-20
10.1093/comjnl/bxm056,Fixed-Parameter Algorithms For Artificial Intelligence  Constraint Satisfaction and Database Problems,,2020-03-20
10.1016/j.tcs.2012.12.039,Satisfiability of acyclic and almost acyclic CNF formulas,,2018-03-20
10.1007/978-3-642-31594-7_31,Backdoors to Acyclic SAT,,2018-03-20
10.1007/978-3-642-27848-8_781-1,Backdoors to SAT,,2014-03-20
10.1007/978-3-642-33293-7_15,Homomorphic Hashing for Sparse Coefficient Extraction,,2014-03-20
10.1016/j.artint.2014.12.001,Backdoors to tractable answer set programming,,2012-03-20
10.5591/978-1-57735-516-8/IJCAI11-150,Backdoors to Tractable Answer-Set Programming,,2017-03-20
10.1007/978-3-540-75560-9_35,Algorithms for Propositional Model Counting,,2020-03-20
10.1007/s10817-008-9114-5,Backdoor Sets of Quantified Boolean Formulas,,2011-03-20
10.1007/s10994-008-5075-5,Learning to assign degrees of belief in relational domains,,2013-03-20
10.1007/978-3-540-72788-0_23,Backdoor Sets of Quantified Boolean Formulas,,2018-03-20
10.1007/978-3-540-72788-0_12,Matched Formulas and Backdoor Sets,,2015-03-20
10.3233/978-1-58603-929-5-425,Fixed-Parameter Tractability,,2020-03-20
10.1007/978-3-540-79719-7_15,Computation of Renameable Horn Backdoors,,2015-03-20
10.1145/1998196.1998200,A static optimality transformation with applications to planar point location,,2014-03-20
10.1007/S00791-006-0019-8,A Poisson Integrator for Gaussian Wavepacket Dynamics,,2016-03-20
10.1007/978-3-540-39993-3_11,Efficient Coroutine Generation of Constrained Gray Sequences,,2019-03-20
10.1007/BF00268134,An axiomatic proof technique for parallel programs I,,2017-03-20
10.1109/HLDVT.2007.4392796,Hierarchical cache coherence protocol verification one level at a time through assume guarantee,,2014-03-20
10.1007/s002360200080,An assertional criterion for atomicity,,2011-03-20
10.1109/ASE.2006.60,Security Analysis of Crypto-based Java Programs using Automated Theorem Provers,,2017-03-20
10.17863/CAM.11791,Concurrent verification for sequential programs,,2015-03-20
10.1007/978-3-319-77935-5_5,Simpler Specifications and Easier Proofs of Distributed Algorithms Using History Variables,,2014-03-20
10.1145/1042038.1042044,Eternity variables to prove simulation of specifications,,2019-03-20
10.1007/978-1-4419-5998-0_6,Connecting Different Proof Styles,,2014-03-20
10.1007/BF00264565,A closer look at termination,,2011-03-20
10.4204/EPTCS.212.1,A verified abstract machine for functional coroutines,,2011-03-20
10.1007/978-3-540-89897-9_10,Milestones: Mythical Signals in UML to Analyze and Monitor Progress,,2018-03-20
10.1007/s10703-010-0092-y,Efficient methods for formally verifying safety properties of hierarchical cache coherence protocols,,2015-03-20
10.1007/s10817-008-9098-1,A Mechanical Analysis of Program Verification Strategies,,2019-03-20
10.2478/v10058-011-0026-1,New and Rare Species of Orthocladiinae (Diptera  Chironomidae) from the Crimea  Ukraine,,2017-03-20
10.2478/s11532-011-0114-7,Considerations on the application of miniaturized sample preparation approaches for the analysis of organic compounds in environmental matrices,,2019-03-20
10.1515/folmed-2017-0063,Electrodermal Activity Monitoring during Endotracheal Suction in Sedated Adult Intensive Care Unit Patients,,2019-03-20
10.1515/vzoo-2017-0028,A New Species of Hendrella (Diptera  Tephritidae) from South-Eastern Iran,,2016-03-20
10.1515/oszn-2016-0005,Effect of different nickel soil contents on cock’s-foot yield and nitrogen  phosphorus and potassium contents,,2020-03-20
10.2478/PHYSIO-2013-0005,Comprehensive physiotherapy in traumatic brachial plexus injuries conducted in health-resort conditions,,2011-03-20
10.1515/AEMNP-2017-0078,Renefouqueosis peruviensis  a new genus and species of Stenosini (Coleoptera: Tenebrionidae) from Peru with a key to the Stenosini of the World and notes on the genera Anchomma and Fitzsimonsium,,2019-03-20
10.1007/978-3-319-44878-7_7,Real-Time Synthesis is Hard!,,2012-03-20
10.1109/ICCSNT.2011.6182546,The solution to the roll back problem in Multi - version concurrency control Timestamp protocol,,2016-03-20
10.1504/IJIIDS.2015.070826,An incremental hash-based optimistic concurrency control scenario for failure management in HDDBs - an application approach,,2013-03-20
10.1007/978-3-319-11227-5_13,Hash Based Incremental Optimistic Concurrency Control Algorithm in Distributed Databases,,2013-03-20
10.1007/978-3-662-49674-9_46,Reduction of Nondeterministic Tree Automata,,2014-03-20
10.1109/ICECCS.2019.00031,Bi-Abductive Inference for Shape and Ordering Properties,,2018-03-20
10.1007/978-3-319-24953-7_7,On Automated Lemma Generation for Separation Logic with Inductive Definitions,,2011-03-20
10.1007/978-3-642-39799-8_52,Fully Automated Shape Analysis Based on Forest Automata,,2020-03-20
10.17185/DUEPUBLICO/70359,Analysis and Abstraction of Graph Transformation Systems via Type Graphs,,2011-03-20
10.23919/FMCAD.2018.8603009,Template-Based Verification of Heap-Manipulating Programs,,2018-03-20
10.1007/978-3-319-08867-9_47,Automating Separation Logic with Trees and Data,,2013-03-20
10.1007/978-3-319-92970-5_17,Graph-Based Shape Analysis Beyond Context-Freeness,,2019-03-20
10.1007/978-3-319-61470-0_5,Specifying Graph Languages with Type Graphs,,2019-03-20
10.1007/978-3-319-89884-1_16,Fragment Abstraction for Concurrent Shape Analysis,,2017-03-20
10.1007/978-3-319-52234-0_16,Counterexample Validation and Interpolation-Based Refinement for Forest Automata,,2019-03-20
10.1007/978-3-319-66706-5_4,Learning Shape Analysis,,2011-03-20
10.1007/978-3-662-46081-8_22,Automatic Inference of Heap Properties Exploiting Value Domains,,2019-03-20
10.1007/978-3-540-45209-6_97,Cost Optimality and Predictability of Parallel Programming with Skeletons,,2016-03-20
10.1007/978-3-540-39425-9_43,Algorithmic Skeletons for Metacomputing,,2013-03-20
10.1007/978-1-4471-0097-3_1,Foundations of Data-parallel Skeletons,,2017-03-20
10.1142/S0129626405002258,Deriving and Scheduling Communication Operations for Generic Skeleton Implementations,,2020-03-20
10.1007/978-3-540-25935-0_16,Domain-Specific Optimizations of Composed Parallel Components,,2015-03-20
10.1007/3-540-44743-1_24,Send-Recv Considered Harmful? Myths and Truths about Parallel Programming,,2017-03-20
10.1016/S0167-739X(02)00052-3,Message passing without send-receive,,2017-03-20
10.1109/32.842952,Toward Formally-Based Design of Message Passing Programs,,2015-03-20
10.1142/S0129626403001525,Cost Optimality And Predictability Of Parallel Programming With Skeletons,,2014-03-20
10.1109/SYNASC.2009.30,Bounded Parallelism in PowerList and ParList Theories,,2020-03-20
10.1142/S0129626402000963,Lifting Sequential Functions to Parallel Skeletons,,2014-03-20
10.1111/J.1540-6210.2006.00663.X,Collaboration Processes: Inside the Black Box,,2011-03-20
10.1007/978-1-4614-4699-6,Modern Compiler Design,,2012-03-20
10.1007/978-3-030-14812-6_38,The Complexity of Synthesis for 43 Boolean Petri Net Types,,
10.1007/978-3-030-64276-1_7,The Complexity of Boolean State Separation,,2014-03-20
10.1016/j.tcs.2014.02.044,Branching cells for asymmetric event structures,,2016-03-20
10.1007/978-3-030-64276-1_8,Occupancy Number Restricted Boolean Petri Net Synthesis: A Fixed-Parameter Algorithm,,2015-03-20
10.1007/978-3-540-40022-6_8,Case Study Logistics: Flexible Modeling of Business Processes Using Algebraic Higher-Order Nets,,2014-03-20
10.1007/978-3-540-74240-1_16,On the Computational Power of Genetic Gates with Interleaving Semantics: The Power of Inhibition and Degradation,,2017-03-20
10.23940/IJPE.18.09.P7.19972007,STAMP-based Hazard Analysis for Computer-Controlled Systems using Petri Nets,,2011-03-20
10.1007/978-3-319-13350-8_28,A Distributed Computing Model for Dataflow  Controlflow  and Workflow in Fractionated Cyber-Physical Systems,,2011-03-20
10.1007/978-3-540-73094-1_18,Synthesis of Elementary Net Systems with Context Arcs and Localities,,2019-03-20
10.1145/3209108.3209202,Concurrency and Probability: Removing Confusion  Compositionally,,2015-03-20
10.1007/978-3-540-75698-9_16,A behavioural congruence for web services,,2012-03-20
10.1109/ICPADS.2016.0073,Checking the Inconsistent Data in Concurrent Systems by Petri Nets with Data Operations,,2020-03-20
10.1007/978-3-540-73094-1_30,Workcraft: A Static Data Flow Structure Editing  Visualisation and Analysis Tool,,2014-03-20
10.1007/11767589_19,On the Step Explosion Problem,,2016-03-20
10.1007/11817949_12,Transition Systems of Elementary Net Systems with Localities,,2018-03-20
10.1007/11787006_36,Timed Petri Nets and Timed Automata: On the Discriminating Power of Zeno Sequences,,2015-03-20
10.1007/978-3-030-50029-0_20,Operational Representation of Dependencies in Context-Dependent Event Structures,,2014-03-20
10.1145/2810000,Testing Programs with Contextual Unfoldings,,2012-03-20
10.3233/FI-2009-199,An Algebraic Framework for Defining Behaviours of Concurrent Systems. Part 1: The Constructive Presentation,,2018-03-20
10.1007/3-540-44919-1_23,On Synchronicity and Concurrency in Petri Nets,,2013-03-20
10.23638/LMCS-14(3:25)2018,Event Structures for Petri nets with Persistence,,2019-03-20
10.1007/s10601-013-9145-3,Models and emerging trends of concurrent constraint programming,,2016-03-20
10.1016/j.entcs.2005.02.003,Relating SPO and DPO graph rewriting with Petri nets having read  inhibitor and reset arcs,,2016-03-20
10.1007/978-3-540-30203-2_15,Generating Test Cases for Code Generators by Unfolding Graph Transformation Systems,,2017-03-20
10.1016/j.entcs.2004.04.024,Event Structures for Interrupt Process Algebras,,2015-03-20
10.1109/ACSD.2015.12,Unfolding Based Minimal Test Suites for Testing Multithreaded Programs,,2014-03-20
10.1016/j.ic.2007.10.004,Timed Petri nets and timed automata: On the discriminating power of zeno sequences,,2012-03-20
10.14279/tuj.eceasst.26.368,From Petri Nets to Graph Transformation Systems,,2012-03-20
10.1007/978-3-540-40022-6_16,Comparing Petri Net and Activity Diagram Variants for Workflow Modelling - A Quest for Reactive Petri Nets,,2018-03-20
10.1007/3-540-48745-X,Application and Theory of Petri Nets 1999,,2011-03-20
10.4204/EPTCS.304.2,Tracking Down the Bad Guys: Reset and Set Make Feasibility for Flip-Flop Net Derivatives NP-complete,,2011-03-20
10.1007/978-3-540-31847-7_1,On the Concurrent Semantics of Algebraic Graph Grammars,,2011-03-20
10.1016/J.IC.2014.08.008,Catalytic and communicating Petri nets are Turing complete,,2018-03-20
10.1007/978-3-642-15375-4_38,Representations of Petri Net Interactions,,2012-03-20
10.1007/978-3-030-61739-4_7,Efficient Restrictions of Immediate Observation Petri Nets,,2015-03-20
10.1007/978-3-030-52482-1,Reversible Computation: 12th International Conference  RC 2020  Oslo  Norway  July 9-10  2020  Proceedings,,2019-03-20
10.1007/978-3-642-03092-5_3,Genetic Systems without Inhibition Rules,,2015-03-20
10.1109/ACSD.2014.20,Testing Multithreaded Programs with Contextual Unfoldings and Dynamic Symbolic Execution,,2018-03-20
10.1007/978-3-319-25527-9_8,Asynchronous Traces and Open Petri Nets,,2017-03-20
10.14279/tuj.eceasst.26.369.349,Manipulation of Graphs  Algebras and Pictures. Essays Dedicated to Hans-Jörg Kreowski on the Occasion of His 60th Birthday,,2012-03-20
10.1109/JAS.2017.7510766,Detecting data-flow errors based on Petri nets with data operations,,2016-03-20
10.1007/978-3-642-28332-1_17,Catalytic Petri Nets Are Turing Complete,,2012-03-20
10.1016/j.arcontrol.2004.05.002,On fluidification of Petri Nets: from discrete to hybrid and continuous models,,2018-03-20
10.1007/978-3-540-45208-9_21,Algebraic Theories for Contextual Pre-nets,,2015-03-20
10.1017/S0960129509990193,Mobile Petri nets,,2012-03-20
10.14279/tuj.eceasst.51.775,Abstract Interleaving Semantics for Reconfigurable Petri Nets,,2014-03-20
10.1007/s11047-015-9531-4,Modeling biological gradient formation: combining partial differential equations and Petri nets,,2020-03-20
10.1007/978-3-540-74442-9_31,Design and Test of Self-checking Asynchronous Control Circuit,,2011-03-20
10.1109/ICMTMA.2010.82,Comparison of the Expressiveness of Time Petri Nets and Timed Automata,,2019-03-20
10.1007/978-3-030-52482-1_2,Reversible Occurrence Nets and Causal Reversible Prime Event Structures,,2019-03-20
10.1016/j.entcs.2004.10.012,Petri Nets With Persistence,,2014-03-20
10.1109/ECBS.2005.53,Model checking embedded systems with PROMELA,,2020-03-20
10.1007/978-3-319-77313-1_20,Pomsets and Unfolding of Reset Petri Nets,,2015-03-20
10.14279/DEPOSITONCE-1475,Formal approach and applications of algebraic higher-order nets,,2016-03-20
10.1016/S1474-6670(17)36399-1,On Fluidification of Petri Nets: From Discrete to Hybrid and Continuous Models,,2018-03-20
10.1109/ACCESS.2020.2970470,Model Checking for Rare-Event in Control Logical Petri Nets Based on Importance Sampling,,2016-03-20
10.1017/S0960129504004189,Concurrent models for Linda with transactions,,2015-03-20
10.1109/ACSD.2006.31,Synchronous + Concurrent + Sequential = Earlier than + Not later than,,2014-03-20
10.23638/LMCS-15(4:17)2019,Concurrency and Probability: Removing Confusion  Compositionally,,2019-03-20
10.1016/j.tcs.2008.11.014,Executability of scenarios in Petri nets,,2011-03-20
10.1016/J.ENTCS.2006.10.049,ReSpecT Nets: Towards an Analysis Methodology for ReSpecT Specifications,,2013-03-20
10.1109/ASYNC.2008.18,Automated Verification of Asynchronous Circuits Using Circuit Petri Nets,,2015-03-20
10.1016/j.ic.2006.11.004,Unfolding semantics of graph transformation,,2011-03-20
10.1109/ICNSC.2018.8361326,Petri nets-based method for component-interaction related hazard identification in computer-controlled systems,,2012-03-20
10.1109/TCAD.2006.884416,Direct Mapping of Low-Latency Asynchronous Controllers From STGs,,2017-03-20
10.1016/j.tcs.2004.04.001,Domain and event structure semantics for Petri nets with read and inhibitor arcs,,2020-03-20
10.14778/3415478.3415565,Building high throughput permissioned blockchain fabrics,,2011-03-20
10.1145/3087801.3087807,Coordination Without Prior Agreement,,2020-03-20
10.1007/s00224-017-9779-4,A Closer Look at Fault Tolerance,,2018-03-20
10.1007/978-0-387-30162-4_468,Wait-Free Consensus,,2013-03-20
10.1109/TC.2007.1043,Asynchronous Agreement and Its Relation with Error-Correcting Codes,,2019-03-20
10.1145/2332432.2332484,A closer look at fault tolerance,,2015-03-20
10.1145/3401025.3404099,Blockchain consensus unraveled: virtues and limitations,,2018-03-20
10.1080/10916466.2011.603001,Original Mineralogy and Recognition of Upper Boundary of the Sarvak Formation Based on Geochemistry and Isotope Studies,,2014-03-20
10.1145/3366625.3369437,An In-Depth Look of BFT Consensus in Blockchain: Challenges and Opportunities,,2012-03-20
10.1145/2767386.2767401,Safety-Liveness Exclusion in Distributed Computing,,2012-03-20
10.14778/3380750.3380757,ResilientDB: Global Scale Resilient Blockchain Fabric,,2017-03-20
10.1007/978-3-642-38236-9_17,Computing with and without Arbitrary Large Numbers,,2015-03-20
10.1016/j.tcs.2017.05.011,P-RAM vs. RP-RAM,,2011-03-20
10.1016/j.ic.2014.01.017,Constant-time sorting,,2016-03-20
10.1109/SYNASC.2016.065,Partial Finitely Generated Bi-Ideals,,2018-03-20
10.1109/SYNASC.2013.57,Bounded Bi-ideals and Linear Recurrence,,2019-03-20
10.4995/THESIS/10251/31632,Optimizing recovery protocols for replicated database systems,,2016-03-20
10.1007/s11227-010-0431-1,An implementation of a replicated file server supporting the crash-recovery failure model,,2015-03-20
10.15388/INFORMATICA.2015.71,Specifying and Verifying External Behaviour of Fair Input/Output Automata by Using the Temporal Logic of Actions,,2013-03-20
10.1007/978-3-319-05119-2_14,A Formal Model for the Deferred Update Replication Technique,,2015-03-20
10.1109/ISSREW.2016.28,Certification of Medical Information Systems: Towards a Foundational Framework and Methodology,,2020-03-20
10.1016/j.entcs.2006.11.034,Handshake Games,,2012-03-20
10.1109/ACSD.2006.16,On process-algebraic verification of asynchronous circuits,,2011-03-20
10.1007/978-3-642-28869-2_8,A Compositional Specification Theory for Component Behaviours,,2020-03-20
10.1007/BF01211619,A mechanical proof of Segall's PIF algorithm,,2014-03-20
10.1145/1086228.1086277,SHIM: a deterministic model for heterogeneous embedded systems,,2016-03-20
10.1145/3379508,Inputs and Outputs in CSP,,2020-03-20
10.1007/BF01211869,Specifying distributed CICS in Z: Accessing local and remote resources,,2017-03-20
10.1007/BF01211298,The Use of SI-Algebra in the design of sequencer circuits,,2012-03-20
10.1109/ASYNC.2003.1199172,An analysis of determinacy using a trace-theoretic model of asynchronous circuits,,2015-03-20
10.1007/11423348_6,Models for Data-Flow Sequential Processes,,2017-03-20
10.1109/ACCESS.2018.2810807,PUTRACOM: A Concurrent Component Model With Exogenous Connectors,,2013-03-20
10.1109/FDL.2017.8303892,Rethinking of I/O-automata composition,,2013-03-20
10.1016/j.tcs.2014.07.018,An algebraic theory of interface automata,,2011-03-20
10.4204/EPTCS.316.8,Modeling an Asynchronous Circuit Dedicated to the Protection Against Physical Attacks,,2018-03-20
10.1016/j.tcs.2003.09.013,Metrics for labelled Markov processes,,2015-03-20
10.1007/978-3-540-39866-0_34,Combining Aspects of Reactive Systems,,2012-03-20
10.1109/CSD.2004.1309119,Verification and implementation of delay-insensitive processes in restrictive environments,,2013-03-20
10.1016/j.ipl.2003.12.007,Modelling and verification of delay-insensitive circuits using CCS and the Concurrency Workbench,,2020-03-20
10.1049/IP-CDT:20030419,Protocols for process interaction,,2015-03-20
10.1007/978-3-642-16277-0_1,Models of Reactive Systems - Communication  Concurrency  and Causality,,2011-03-20
10.1007/978-1-84882-258-0_17,State Explosion and Parameterised Verification,,2018-03-20
10.1007/BF01211073,A comparison of simulation techniques and algebraic techniques for verifying concurrent systems,,2020-03-20
10.1007/BF01214557,Retargeting a hardware compiler using protocol converters,,2011-03-20
10.1109/ASYNC.2007.19,Gate-level modelling and verification of asynchronous circuits using CSPM and FDR,,2017-03-20
10.1007/1-84628-271-3_2,Introduction to Formal Methods,,2017-03-20
10.1145/3129416.3129431,A new optional parallelism operator in CSP for wireless sensor networks,,2018-03-20
10.7916/D8988FWN,Specifying Confluent Processes,,2020-03-20
10.1109/ACSD.2005.9,Controllable delay-insensitive processes and their reflection  interaction and factorisation,,2014-03-20
10.1109/TVLSI.2006.878473,SHIM: a deterministic model for heterogeneous embedded systems,,2017-03-20
10.1109/MEMCOD.2005.1487889,Deterministic receptive processes are Kahn processes,,2015-03-20
10.1007/978-3-540-28644-8_8,Basic Theory of Reduction Congruence forTwo Timed Asynchronous pi-Calculi,,2020-03-20
10.1016/j.tcs.2010.01.028,An exact correspondence between a typed pi-calculus and polarised proof-nets,,2016-03-20
10.1007/978-3-319-05119-2_6,Types for Resources in ψ-calculi,,2014-03-20
10.1016/J.SCICO.2019.05.004,Asynchronous sessions with implicit functions and messages,,2015-03-20
10.1007/978-3-319-89884-1_29,On Polymorphic Sessions and Functions: A Tale of Two (Fully Abstract) Encodings,,2011-03-20
10.1109/LICS.2010.48,Strong Normalization for System F by HOAS on Top of FOAS,,2012-03-20
10.1145/2034773.2034830,An equivalence-preserving CPS translation via multi-language semantics,,2016-03-20
10.1016/j.tcs.2007.09.020,Full abstraction for polymorphic pi-calculus,,2015-03-20
10.1109/TASE.2018.00010,Asynchronous Sessions with Implicit Functions and Messages,,2020-03-20
10.3233/FI-2012-777,Strong Normalization in the π-calculus with Intersection and Union Types,,2018-03-20
10.1007/978-3-030-45231-5_22,A Curry-style Semantics of Interaction: From Untyped to Second-Order Lazy λ μ-Calculus,,2014-03-20
10.1016/j.entcs.2005.06.012,Sequence Types for the pi-calculus,,2019-03-20
10.1145/1286821.1286822,A uniform type structure for secure information flow,,2016-03-20
10.1016/j.entcs.2007.09.011,Modelling the Security of Smart Cards by Hard and Soft Types for Higher-Order Mobile Embedded Resources,,2017-03-20
10.1145/964001.964014,Channel dependent types for higher-order mobile processes,,2020-03-20
10.1109/LICS.2008.26,Typed Normal Form Bisimulation for Parametric Polymorphism,,2013-03-20
10.1007/978-3-319-08918-8_1,Process Types as a Descriptive Tool for Interaction - Control and the Pi-Calculus,,2018-03-20
10.1016/J.IC.2014.08.001,Linear logical relations and observational equivalences for session-based concurrency,,2012-03-20
10.14236/EWIC/VOCS2008.22,A unified theory of program logics: an approach based on the π-calculus,,2012-03-20
10.1016/j.entcs.2005.11.055,A Concurrent Model for Linear Logic,,2015-03-20
10.3233/FI-2018-1650,Reference Abstract Domains and Applications to String Analysis,,2014-03-20
10.1145/1352582.1352585,Inferring non-suspension conditions for logic programs with dynamic scheduling,,2012-03-20
10.1016/J.APRADISO.2005.11.018,Determination of the Pu240/Pu239 ratio by alpha spectrometry using the WinALPHA program.,,2017-03-20
10.1007/978-3-540-24605-3_29,Hypergraph Reductions and Satisfiability Problems,,2015-03-20
10.4230/LIPIcs.SWAT.2018.31,Planar 3-SAT with a Clause/Variable Cycle,,2016-03-20
10.1002/9781118835913.CH4,Bioconversion of Lignocellulosic Biomass for Bioethanol Production,,2016-03-20
10.1016/j.tcs.2005.02.004,Computing Unsatisfiable k-SAT Instances with Few Occurrences per Variable,,2012-03-20
10.1613/jair.3598,Tractable Triangles and Cross-Free Convexity in Discrete Optimisation,,2020-03-20
10.1007/s10479-008-0502-3,Optimization and probabilistic satisfiability on nested and co-nested formulas,,2016-03-20
10.1016/j.tcs.2016.03.016,Directed hypergraphs: Introduction and fundamental algorithms - A survey,,2014-03-20
10.1007/978-3-642-31612-8_7,Strong Backdoors to Nested Satisfiability,,2012-03-20
10.1007/11750321_26,A New Lower Bound of Critical Function for (k  s)-SAT,,2011-03-20
10.1007/s10472-005-9000-3,New tractable classes for default reasoning from conditional knowledge bases,,2017-03-20
10.1023/A:1012332915908,Easy Cases of Probabilistic Satisfiability,,2011-03-20
10.1007/978-1-4020-6585-9_17,Program Transformations: Some Lessons from the 1980s,,2016-03-20
10.1007/s001650200006,A Collection of Papers and Memoirs Celebrating the Contribution of Rod Burstall to Advances in Computer Science,,2018-03-20
10.1007/s10817-007-9092-z,On Keys and Functional Dependencies as First-Class Citizens in Description Logics,,2013-03-20
10.1007/978-3-540-75563-0_21,On Order Dependencies for the Semantic Web,,2011-03-20
10.1007/978-3-319-03680-9_36,CFDnc: A PTIME Description Logic with Functional Constraints and Disjointness,,2016-03-20
10.1007/11814771_52,On Keys and Functional Dependencies as First-Class Citizens in Description Logics,,2014-03-20
10.1007/978-3-540-70960-2_3,Relational Databases in RDF: Keys and Foreign Keys,,2019-03-20
10.1515/ssa-2016-0001,Current state of peatland soils as an effect of long-term drainage – preliminary results of peatland ecosystems investigation in the Grójecka Valley (central Poland),,2019-03-20
10.1201/B15433-57,Access Control in Database Systems,,2018-03-20
10.1201/9781315119458-3,Data Security and Privacy,,2016-03-20
10.1016/j.ic.2018.09.006,Model checking for fragments of the interval temporal logic HS at the low levels of the polynomial time hierarchy,,2017-03-20
10.1109/TIME.2016.32,Interval Temporal Logics Model Checking,,2014-03-20
10.1016/J.TCS.2018.04.011,Which fragments of the interval temporal logic HS are tractable in model checking?,,2014-03-20
10.29007/r3pf,Ultimately-periodic Interval Model Checking for Temporal Dataset Evaluation,,2019-03-20
10.1016/j.ic.2017.08.011,Model checking for fragments of Halpern and Shoham's interval temporal logic based on track representatives,,2016-03-20
10.1016/J.IC.2019.02.002,Decidability and complexity of the fragments of the modal logic of Allen's relations over the rationals,,2018-03-20
10.4230/LIPIcs.FSTTCS.2016.26,Interval vs. Point Temporal Logic Model Checking: an Expressiveness Comparison,,2015-03-20
10.4230/LIPIcs.FSTTCS.2019.33,Interval Temporal Logic for Visibly Pushdown Systems,,2014-03-20
10.3233/FAIA200156,An Approach to Fuzzy Modal Logic of Time Intervals,,2012-03-20
10.1016/j.ic.2017.08.009,Allen-like theory of time for tree-like structures,,2020-03-20
10.4230/LIPIcs.TIME.2019.18,Complexity Analysis of a Unifying Algorithm for Model Checking Interval Temporal Logic,,2011-03-20
10.1109/TIME.2015.12,Complexity of ITL Model Checking: Some Well-Behaved Fragments of the Interval Logic HS,,2013-03-20
10.4230/LIPIcs.ICALP.2017.120,Satisfiability and Model Checking for the Logic of Sub-Intervals under the Homogeneity Assumption,,2019-03-20
10.1109/FUZZ-IEEE.2016.7737690,Multi-Valued Preferential Halpern-Shoham logic for relations of Allen and preferences,,2017-03-20
10.1145/3281028,Interval vs. Point Temporal Logic Model Checking,,2014-03-20
10.1016/j.ic.2019.104498,Model checking interval temporal logics with regular expressions,,2014-03-20
10.1007/978-3-319-40229-1_27,Interval Temporal Logic Model Checking: The Border Between Good and Bad HS Fragments,,2020-03-20
10.4204/EPTCS.226.6,Model Checking the Logic of Allen's Relations Meets and Started-by is PNP-Complete,,2014-03-20
10.4230/LIPIcs.CSL.2015.193,A Model Checking Procedure for Interval Temporal Logics based on Track Representatives,,2020-03-20
10.1016/j.entcs.2016.03.015,Constraining Cycle Alternations in Model Checking for Interval Temporal Logic,,2013-03-20
10.4204/EPTCS.256.3,On the Complexity of Model Checking for Syntactically Maximal Fragments of the Interval Temporal Logic HS with Regular Expressions,,2019-03-20
10.1016/j.artint.2018.09.001,On coarser interval temporal logics,,2019-03-20
10.4230/LIPIcs.MFCS.2020.21,On a Temporal Logic of Prefixes and Infixes,,2017-03-20
10.1007/978-3-319-66197-1_7,An In-Depth Investigation of Interval Temporal Logic Model Checking with Regular Expressions,,2019-03-20
10.1109/TIME.2014.24,Checking Interval Properties of Computations,,2012-03-20
10.1007/BF02943270,A recovery technique for distributed communicating process systems,,2020-03-20
10.1109/RELDIS.2002.1180181,Availability models with age-dependent checkpointing,,2013-03-20
10.1109/HASE.2005.7,Bayesian perspective of optimal checkpoint placement,,2016-03-20
10.1007/978-3-642-11257-7_9,Stochastic Models for Checkpointing,,2015-03-20
10.1016/j.jss.2009.06.058,Comprehensive evaluation of aperiodic checkpointing and rejuvenation schemes in operational software system,,2013-03-20
10.1016/S0898-1221(03)90119-2,An efficient backup warning policy for a hard disk,,2018-03-20
10.1145/317795.317804,On the Availability of a Distributed Computer System with Failing Components,,2016-03-20
10.1016/j.peva.2008.11.003,Numerical computation algorithms for sequential checkpoint placement,,2017-03-20
10.1007/978-3-540-68129-8_10,Analysis of a Software System with Rejuvenation  Restoration and Checkpointing,,2020-03-20
10.1007/BF00264311,Availability of a distributed computer system with failures,,2016-03-20
10.4236/JSEA.2013.64A006,Aperiodic Checkpoint Placement Algorithms—Survey and Comparison,,2020-03-20
10.1109/TDSC.2006.22,Distribution-free checkpoint placement algorithms based on min-max principle,,2011-03-20
10.1007/BF00291054,Load sharing in distributed systems with failures,,2017-03-20
10.1007/BF00267867,A single server queue with mixed types of interruptions,,2020-03-20
10.5220/0004318602330240,Performability Modeling of Manual Resolution of Data Inconsistencies for Optimization of Data Synchronization Interval,,2019-03-20
10.1016/j.cie.2014.10.018,A retrial queue for modeling fault-tolerant systems with checkpointing and rollback recovery,,2013-03-20
10.1109/DSN.2004.1311943,Min-max checkpoint placement under incomplete failure information,,2014-03-20
10.1093/jigpal/11.3.319,An Analysis of Total Correctness Refinement Models for Partial Relation Semantics II,,2012-03-20
10.1007/3-540-45614-7_26,Refinement in Circus,,2014-03-20
10.1016/j.entcs.2006.10.019,Strongly Typed Rewriting For Coupled Software Transformation,,2016-03-20
10.1007/s001650050016,ZRC – A Refinement Calculus for Z,,2017-03-20
10.1007/s00165-008-0092-5,Trace-based derivation of a scalable lock-free stack algorithm,,2019-03-20
10.1007/978-3-540-39893-6_15,Incremental Derivation of Abstraction Relations for Data Refinement,,2012-03-20
10.1016/j.entcs.2006.10.023,Rule-Based Operational Semantics for an Imperative Language,,2020-03-20
10.1016/j.entcs.2012.11.008,Constraint-aware Schema Transformation,,2019-03-20
10.5220/0002394401960204,Refinement Propagation - Towards Automated Construction of Visual Specifications,,2015-03-20
10.1016/j.tcs.2018.10.008,Angelic processes for CSP via the UTP,,2011-03-20
10.1109/SEFM.2004.24,Heuristics for refinement relations,,2017-03-20
10.1109/TSE.2014.2361141,Embedding  Evolution  and Validation of Model-Driven Spreadsheets,,2012-03-20
10.1007/978-3-319-15940-9,Central European Functional Programming School,,2016-03-20
10.1007/3-540-45614-7_27,Forward Simulation for Data Refinement of Classes,,2017-03-20
10.1007/s00165-003-0006-5,A Refinement Strategy for Circus,,2012-03-20
10.1007/978-3-319-56841-6_4,Java in the Safety-Critical Domain,,2014-03-20
10.1007/BF01212407,A single complete rule for data refinement,,2020-03-20
10.1007/978-3-030-54997-8_21,An abstract semantics of speculative execution for reasoning about security vulnerabilities,,2020-03-20
10.1016/j.entcs.2008.02.016,Trace-based Derivation of a Lock-Free Queue Algorithm,,2011-03-20
10.1007/978-3-642-19811-3_14,Type-Safe Evolution of Spreadsheets,,2020-03-20
10.1109/VLHCC.2011.6070396,Embedding and evolution of spreadsheet models in spreadsheet systems,,2011-03-20
10.1017/S0956796814000045,Work it  wrap it  fix it  fold it,,2018-03-20
10.1007/BF01211474,On the lattice of specifications: Applications to a specification methodology,,2013-03-20
10.1007/11813040_20,Type-Safe Two-Level Data Transformation,,2018-03-20
10.1145/1480945.1480972,From spreadsheets to relational databases and back,,
10.1007/978-3-642-13321-3_19,Generic Point-free Lenses,,2017-03-20
10.1016/j.entcs.2008.04.090,Coupled Transformation of Schemas  Documents  Queries  and Constraints,,2019-03-20
10.1016/j.scico.2010.11.012,A tactic language for refinement of state-rich concurrent specifications,,2016-03-20
10.1007/978-3-319-15940-9_6,Spreadsheet Engineering,,2015-03-20
10.1007/BF01888217,Command algebras  recursion and program transformation,,2012-03-20
10.1016/S1571-0661(05)80489-X,Refinement of actions in Circus,,2013-03-20
10.1007/11955757_4,Interpreting Invariant Composition in the B Method Using the Spec# Ownership Relation: A Way to Explain and Relax B Restrictions,,2016-03-20
10.1007/978-3-642-11447-2_1,Relaxing Restrictions on Invariant Composition in the B Method by Ownership Control a laSpec#,,2017-03-20
10.31274/RTD-180813-16463,Modular subclass verification: safely creating correct subclasses without superclass code,,2014-03-20
10.1017/S1471068407003043,Calculating modules in contextual logic program refinement,,2012-03-20
10.5075/EPFL-THESIS-4210,Formal semantics for refinement verification of entreprise models,,2014-03-20
10.1007/978-3-030-31038-7_3,Whither Specifications as Programs,,2014-03-20
10.1145/1101821.1101824,Ownership confinement ensures representation independence for object-oriented programs,,2012-03-20
10.1007/BF01211215,Safety and progress of recursive procedures,,2016-03-20
10.1016/j.tcs.2010.03.016,Alternating states for dual nondeterminism in imperative programming,,2016-03-20
10.1007/b94115,Formal Methods and Software Engineering,,2017-03-20
10.1016/j.entcs.2008.06.010,ArcAngelC: a Refinement Tactic Language for Circus,,2013-03-20
10.1016/S0304-3975(00)00339-X,Soundness of data refinement for a higher-order imperative language,,2018-03-20
10.1016/S1574-6526(07)03016-7,Situation Calculus,,2011-03-20
10.1007/3-540-19129-1_4,Unification Revisited,,2013-03-20
10.1109/FiCloud.2017.38,Performance Evaluation of Framed Slotted ALOHA with Reservation Packets for M2M Networks,,2012-03-20
10.1016/J.COMNET.2019.02.021,Performance evaluation of framed slotted ALOHA with reservation packets and succesive interference cancelation for M2M networks,,2011-03-20
10.4204/EPTCS.3.17,Descriptional Complexity of Three-Nonterminal Scattered Context Grammars: An Improvement,,2013-03-20
10.1016/j.tcs.2011.04.042,Workspace theorems for regular-controlled grammars,,2014-03-20
10.1007/978-3-642-35795-4_58,An Integration of Several Different Data Flow Analysis Techniques,,2020-03-20
10.1007/11591191_7,Computational Issues in Exploiting Dependent And-Parallelism in Logic Programming: Leftness Detection in Dynamic Search Trees,,2018-03-20
10.1007/978-3-540-46642-0_49,A Parallel Monte Carlo Algorithm for Protein Accessible Surface Area Computation,,2017-03-20
10.1007/S00009-012-0235-Z,Posetted Trees and Baker-Campbell-Hausdorff Product,,2015-03-20
10.1016/j.tcs.2005.10.040,Sequential and parallel algorithms for the NCA problem on pure pointer machines,,2019-03-20
10.1017/S1471068406002985,PALS: Efficient Or-Parallel execution of Prolog on Beowulf clusters,,2017-03-20
10.1145/504083.504085,Parallel execution of prolog programs: a survey,,2018-03-20
10.1109/SEFM.2006.28,On Bisimilarities Induced by Relations on Actions,,2018-03-20
10.1016/S0304-3975(99)00304-7,Fast asynchronous systems in dense time,,2013-03-20
10.1007/3-540-45694-5_37,Decidability of Strong Bisimilarity for Timed BPP,,2016-03-20
10.1007/BFb0014324,A Study on the Specification and Verification of Performance Properties (Extended Abstract),,2014-03-20
10.1145/3278576.3278593,Modeling Patients' Online Medical Conversations: A Granger Causality Approach,,2020-03-20
10.1007/3-540-44685-0_18,A Faster-than Relation for Asynchronous Processes,,2019-03-20
10.1016/j.tcs.2006.02.020,Decidability of performance equivalence for basic parallel processes,,2017-03-20
10.1007/3-540-61550-4_155,Specification and Verification of Timed Lazy Systems,,2014-03-20
10.1007/s00236-002-0094-3,Comparing the worst-case efficiency of asynchronous systems with PAFAS,,2015-03-20
10.1016/S0304-3975(00)00375-3,On the semantics of durational actions,,2016-03-20
10.1016/j.tcs.2016.01.034,Undecidability of performance equivalence of Petri nets,,2018-03-20
10.1007/3-540-48778-6_11,Comparing the Efficiency of Asynchronous Systems,,2020-03-20
10.1051/ITA/1998324-600991,Towards parallelization of concurrent systems,,2015-03-20
10.1007/3-540-46432-8_3,Verifying Performance Equivalence for Timed Basic Parallel Processes,,2015-03-20
10.1007/PL00013313,‘Closed Interval Process Algebra’ versus ‘Interval Process Algebra’,,2014-03-20
10.1006/inco.1998.2726,On Performance Congruences for Process Algebras,,2012-03-20
10.1007/3-540-36135-9_3,Congruent Weak Conformance  a Partial Order among Processes,,2016-03-20
10.1007/978-3-642-15375-4_10,A Geometric Approach to the Problem of Unique Decomposition of Processes,,2014-03-20
10.1007/3-540-61440-0_118,Fast Asynchronous Systems in Dense Time,,2011-03-20
10.1007/978-3-540-85363-3_8,Fully Polynomial Time Approximation Schemes for Time-Cost Tradeoff Problems in Series-Parallel Project Networks,,2020-03-20
10.1007/978-3-642-32512-0_26,Hardness of Vertex Deletion and Project Scheduling,,2019-03-20
10.4086/toc.2013.v009a024,Hardness of Vertex Deletion and Project Scheduling,,2014-03-20
10.1016/j.orl.2009.03.002,Fully polynomial-time approximation schemes for time-cost tradeoff problems in series-parallel project networks,,2016-03-20
10.1016/j.cor.2011.08.011,An integer programming formulation for the project scheduling problem with irregular time-cost tradeoffs,,2019-03-20
10.1007/978-3-319-05443-8_29,The Discrete Time-Cost Tradeoff Problem with Irregular Starting Time Costs,,2015-03-20
10.1007/978-3-540-68111-3_112,Tightness Results for Malleable Task Scheduling Algorithms,,2020-03-20
10.1007/978-3-642-12450-1_16,Scheduling and Packing Malleable Tasks with Precedence Constraints of Bounded Width,,2015-03-20
10.1145/3232538,An Approximation Algorithm for Threshold Voltage Optimization,,2012-03-20
10.1007/s10878-012-9498-3,Scheduling and packing malleable and parallel tasks with precedence constraints of bounded width,,2011-03-20
10.1007/BF02243801,Dual and selfdual networks of queues with rejection blocking,,2017-03-20
10.1007/978-981-13-0857-4_14,Performance Analysis of Series Queue with Customer’s Blocking,,2020-03-20
10.1007/BF01408555,An application of program unification to priority queue vectorization,,2017-03-20
10.22360/springsim.2018.anss.017,Power consumption of future event list implementations in discrete event simulations,,2012-03-20
10.6092/UNIBO/AMSDOTTORATO/5594,Hardware/Software Design of Dynamic Real-Time Schedulers for Embedded Multiprocessor Systems,,2014-03-20
10.1587/TRANSFUN.E97.A.484,Reduction Operators Based on Behavioral Inheritance for Timed Petri Nets,,2014-03-20
10.1007/978-3-030-45231-5_3,Timed Negotiations,,2012-03-20
10.1109/SMC.2013.403,Automated Generalized Petri Net Reduction Using an Evolutionary Approach Applied to a Manufacturing System Model,,2016-03-20
10.1109/ICICISYS.2009.5357914,Extended GSPN modeling and reduction algorithms for rapid performance analysis of service composition system,,2013-03-20
10.1109/ACCESS.2018.2868924,A Package Reduction Approach To Modeling and Analysis of Cross-Organization Emergency Response Processes With Privacy Protected,,2011-03-20
10.1007/978-3-319-10398-3_7,Attractor Equivalence: An Observational Semantics for Reaction Networks,,2013-03-20
10.1016/j.infsof.2008.12.002,Reduction rules for YAWL workflows with cancellation regions and OR-joins,,2014-03-20
10.1109/ICIEEM.2011.6035595,A pattern based approach to workflow structure analysis,,2013-03-20
10.1007/978-3-319-52234-0_6,Reduction of Workflow Nets for Generalised Soundness Verification,,2014-03-20
10.1109/TSMCA.2012.2186440,Reduction and Refinement by Algebraic Operations for Petri Net Transformation,,2017-03-20
10.1108/14637150910931479,Business process verification - finally a reality!,,2017-03-20
10.1109/SCC.2009.18,A Public-View Approach to Timed Properties Verification for B2B Web Service Compositions,,2017-03-20
10.3182/20140514-3-FR-4046.00053,Model Checking on Fault Diagnosis Graph,,2019-03-20
10.1016/J.JCSS.2009.06.003,Reduction rules for reset/inhibitor nets,,2017-03-20
10.5772/5321,Timed Hierarchical Object-Oriented Petri Net,,2013-03-20
10.1109/TASE.2007.912716,Schedulability Analysis of Time-Constrained Cluster Tools With Bounded Time Variation by an Extended Petri Net,,2012-03-20
10.1109/TSMC.2019.2906335,Resource Conflict Checking and Resolution Controller Design for Cross-Organization Emergency Response Processes,,2016-03-20
10.1109/TII.2009.2017201,Computation of Performance Bounds for Real-Time Systems Using Time Petri Nets,,2012-03-20
10.4304/jcp.6.8.1662-1669,Analysis and Application of Petri Subnet Reduction,,2012-03-20
10.1109/IITSI.2010.35,Property Preservation of Time Petri Net Reduction,,2013-03-20
10.1016/J.TCS.2010.10.021,Dynamically consistent reduction of logical regulatory graphs,,2013-03-20
10.1016/j.ins.2008.10.033,Soundness-preserving reduction rules for reset workflow nets,,2020-03-20
10.1109/FSKD.2009.576,Design and Reduction of UML-PN Models of Power Plant's Fault Management System,,2011-03-20
10.1007/978-3-319-77313-1_23,Over-Approximative Petri Net Synthesis for Restricted Subclasses of Nets,,2016-03-20
10.3990/1.9789036540414,On the analysis of synchronous dataflow graphs: a system-theoretic perspective,,2019-03-20
10.1007/978-3-319-39086-4_6,Petri Net Synthesis for Restricted Classes of Nets,,2017-03-20
10.1007/978-3-030-38919-2_19,Parameterized Complexity of Synthesizing b-Bounded (m  n)-T-Systems,,2014-03-20
10.1016/j.ic.2019.104482,Presynthesis of bounded choice-free or fork-attribution nets,,2015-03-20
10.1002/rsa.20161,Level of nodes in increasing trees revisited,,2020-03-20
10.1214/EJP.V19-2822,On the non-Gaussian fluctuations of the giant cluster for percolation on random recursive trees,,2017-03-20
10.1145/1390681.1442799,Consistency of Random Forests and Other Averaging Classifiers,,2017-03-20
10.1007/S00591-006-0001-Z,Zufällige binäre Bäume: Von der average-case Analyse zur Verteilungsasymptotik,,2017-03-20
10.1007/s10959-017-0773-1,On Weighted Depths in Random Binary Search Trees,,2018-03-20
10.1016/J.SPL.2006.04.020,A note on the distance in random recursive trees,,2015-03-20
10.1088/1742-5468/ab081f,Random walks with preferential relocations and fading memory: a study through random recursive trees.,,2011-03-20
10.1109/ICMLC.2006.258522,General Solution Scheme to Spatial Complexity of Recursive Algorithm,,2014-03-20
10.1002/rsa.20674,On martingale tail sums for the path length in random trees,,2013-03-20
10.1017/S0963548321000043,Permutations With Equal Orders,,2016-03-20
10.1017/S0001867800001440,On the asymptotic behaviour of random recursive trees in random environments,,2014-03-20
10.3150/16-BEJ844,Pólya Urn Schemes with Infinitely Many Colors,,2013-03-20
10.24166/im.02.2019,On the discovery of the seed in uniform attachment trees,,2012-03-20
10.1016/J.JMAA.2005.05.004,Uniform recursive trees: Branching structure and simple random downward walk☆,,2017-03-20
10.1515/ABCSB-2017-0012,Effect of Fluridone on Some Physiological and Qualitative Features of Ripening Tomato Fruit,,2015-03-20
10.1002/RSA.V31:3,The structure and distances in Yule recursive trees,,2015-03-20
10.1002/rsa.20183,The structure and distances in Yule recursive trees,,2016-03-20
10.1080/15326349.2014.927318,On the Asymptotic Behavior of a Dynamic Version of the Neyman Contagious Point Process,,2019-03-20
10.1016/j.tcs.2006.10.033,The left-right-imbalance of binary search trees,,2020-03-20
10.1007/978-3-642-31638-8_1,On Message Complexity of Extrema Propagation Techniques,,2012-03-20
10.1002/RSA.V31:2,Level of nodes in increasing trees revisited,,2019-03-20
10.1239/aap/1261669589,On the expected maximum degree of Gabriel and Yao graphs,,2011-03-20
10.1002/rsa.20711,The cut-tree of large trees with small heights,,2017-03-20
10.12783/dtetr/amsm2017/14835,Algorithms for Determining the Cyclic Edge Connectivity of Cubic Graphs,,2020-03-20
10.1007/978-3-642-31638-8,Ad-hoc  Mobile  and Wireless Networks,,2015-03-20
10.25148/ETD.FI10120303,Characterizing Internet worm spatial-temporal infection structures,,2015-03-20
10.1145/3084288,Encoding Arguments,,2012-03-20
10.1017/S0001867800004924,Asymptotic normality for the number of records from general distributions,,2013-03-20
10.1017/S0963548308009486,The Hitting Time for the Height of a Random Recursive Tree,,2013-03-20
10.1239/aap/1308662486,Asymptotic normality for the number of records from general distributions,,2012-03-20
10.1109/TIFS.2012.2204981,On the Characteristics of the Worm Infection Family Tree,,2011-03-20
10.1007/978-3-540-74107-7_9,The Typed Logic of Partial Functions and the Vienna Development Method,,2015-03-20
10.1016/j.scico.2013.09.007,Revising basic theorem proving algorithms to cope with the logic of partial functions,,2019-03-20
10.5381/jot.2006.5.2.c8,Not a Number of Floating Point Problems,,2011-03-20
10.1007/BF01211555,Partial logics reconsidered: A conservative approach,,2018-03-20
10.1007/978-3-540-88194-0_16,A Practical Approach to Partiality - A Proof Based Approach,,2014-03-20
10.5445/IR/1000092717,Proving Well-Definedness of JML Specifications with KeY,,2011-03-20
10.1016/j.entcs.2005.10.002,Reasoning About Partial Functions in the Formal Development of Programs,,2015-03-20
10.1145/3326168,Analysis of Spatio-temporal Properties of Stochastic Systems Using TSTL,,2013-03-20
10.29007/65LT,Howard Barringer: the Man who Invented the Past,,2018-03-20
10.1007/978-3-540-89982-2_36,Partial Functions and Equality in Answer Set Programming,,2020-03-20
10.1016/j.jal.2011.03.001,Inversive meadows and divisive meadows,,2014-03-20
10.1109/SEFM.2005.26,Logical foundations of program assertions: what do practitioners want?,,2015-03-20
10.1023/A:1005702928286,Partial Functions in a Total Setting,,2011-03-20
10.1093/logcom/exm030,A Structural Proof of the Soundness of Rely/guarantee Rules,,2016-03-20
10.1613/jair.2383,Natural Events,,2017-03-20
10.1109/ICECCS.2008.36,Linking VDM and Z,,2020-03-20
10.1016/j.ipl.2008.02.005,The connection between two ways of reasoning about partial functions,,2020-03-20
10.3929/ETHZ-A-006750722,Term rewriting in logics of partial functions,,2019-03-20
10.1007/978-3-319-22969-0_1,Reasoning about Separation Using Abstraction and Reification,,2019-03-20
10.1007/978-3-540-71070-7_8,Efficient Well-Definedness Checking,,2017-03-20
10.1007/978-3-642-41071-0_3,Unifying Theories of Logic and Specification,,2016-03-20
10.1007/978-3-642-30885-7,Abstract State Machines  Alloy  B  VDM  and Z,,2013-03-20
10.1007/BF01214955,Modular structuring of VDM specifications in VVSL,,2017-03-20
10.1007/3-540-45614-7_25,Synthesizing Certified Code,,2017-03-20
10.1007/978-3-642-30885-7_18,A Semantic Analysis of Logics That Cope with Partial Terms,,2018-03-20
10.1007/BF00245294,Using typed lambda calculus to implement formal systems on a machine,,2020-03-20
10.1007/s00165-006-0016-1,Are the Logical Foundations of Verifying Compiler Prototypes Matching user Expectations?,,2012-03-20
10.1007/s11225-009-9175-4,Proof Systems for Reasoning about Computation Errors,,2013-03-20
10.1017/S1471068410000517,Functional answer set programming,,2019-03-20
10.1145/2187671.2187678,Behavioral interface specification languages,,2018-03-20
10.1109/TSE.2009.59,Engineering a Sound Assertion Semantics for the Verifying Compiler,,2012-03-20
10.1007/BF00292109,Partial-predicate logic in computer science,,2014-03-20
10.1007/BF01211049,A logical framework for evolving software systems,,2020-03-20
10.1007/978-94-017-0464-9_5,On Negation  Completeness and Consistency,,2015-03-20
10.1007/3-540-45648-1_13,On Using Conditional Definitions in Formal Theories,,2019-03-20
10.1093/jigpal/jzi032,Many-Valued Logic  Partiality  and Abstraction in Formal Specification Languages,,2015-03-20
10.1109/TSE.2010.45,Guest Editors' Introduction to the Special Section on Exception Handling: From Requirements to Software Maintenance,,2017-03-20
10.1007/s10817-012-9253-6,A Two-Valued Logic for Properties of Strict Functional Programs Allowing Partial Functions,,2012-03-20
10.1007/978-3-540-74107-7_7,The Logic of the RAISE Specification Language,,2013-03-20
10.1007/978-3-540-39656-7_11,How the Design of JML Accomodates Both Runtime Assertion Checking and Formal Verification,,2019-03-20
10.2991/eusflat-19.2019.45,Missing Values and Indeterminable Values in Fuzzy Relational Compositions,,2012-03-20
10.1016/B978-0-444-51624-4.50004-6,History of Interactive Theorem Proving,,2020-03-20
10.1016/j.scico.2004.05.015,How the design of JML accommodates both runtime assertion checking and formal verification,,2019-03-20
10.1007/BF01530787,Many-valued logic and mixed integer programming,,2012-03-20
10.1007/BF01178666,A typed logic of partial functions reconstructed classically,,2018-03-20
10.1016/j.sysconle.2015.04.007,An algebraic expression of finite horizon optimal control algorithm for stochastic logical dynamical systems,,2019-03-20
10.1007/BF01888232,Proof obligations for blocks and procedures,,2011-03-20
10.1016/J.IJAR.2019.07.004,Missing values and dragonfly operations in fuzzy relational compositions,,2013-03-20
10.1007/978-3-642-16901-4_5,Proof Obligation Generation and Discharging for Recursive Definitions in VDM,,2015-03-20
10.1023/A:1026554217992,Executing Formal Specifications with Concurrent Constraint Programming,,2018-03-20
10.1007/978-3-642-24559-6_42,Term Rewriting in Logics of Partial Functions,,2018-03-20
10.1093/logcom/exaa084,On the strongest three-valued paraconsistent logic contained in classical logic,,2017-03-20
10.1007/978-3-540-68237-0_7,Checking Well-Formedness of Pure-Method Specifications,,2012-03-20
10.1017/S0960129514000115,Partiality and recursion in interactive theorem provers - an overview,,2020-03-20
10.1109/KSE.2018.8573362,Compositions of Partial Fuzzy Relations Employing the Lower Estimation Approach,,2011-03-20
10.1007/978-3-642-39698-4_14,Ours Is to Reason Why,,2011-03-20
10.1017/S1471068413000069,Truth versus information in logic programming,,2016-03-20
10.4230/LIPIcs.TIME.2020.17,A Note on C² Interpreted over Finite Data-Words,,2015-03-20
10.1007/978-3-319-98651-7_2,A Logical Formalization of Time-Critical Processes with Resources,,2015-03-20
10.4230/LIPIcs.CSL.2016.38,One-Dimensional Logic over Words,,2014-03-20
10.1007/s10472-016-9532-8,Bounded variability of metric temporal logic,,2020-03-20
10.1016/S0022-0000(05)80054-6,Measures of Nondeterminism for Pushdown Automata,,2014-03-20
10.1142/9789812704979_0006,Iterative Arrays With Limited Nondeterministic Communication Cell,,2013-03-20
10.1007/978-3-322-92151-2_6,Umformungen von Automaten,,2015-03-20
10.1016/j.tcs.2009.06.002,Regulated nondeterminism in pushdown automata,,2016-03-20
10.1007/11779148_13,Context-Dependent Nondeterminism for Pushdown Automata,,2020-03-20
10.1016/0304-3975(92)00014-I,Nondeterministic Circuits  Space Complexity and Quasigroups,,2020-03-20
10.1007/3-540-59175-3_102,Pushdown Automata with Bounded Nondeterminism and Bounded Anbiguity,,2016-03-20
10.1137/S0097539798346676,On the Determinization of Weighted Finite Automata,,2015-03-20
10.1007/3-540-55808-X_34,On Finite Automata with Limited Nondeterminism,,2017-03-20
10.1016/0304-3975(81)90044-X,Concise Description of Finite Languages,,2013-03-20
10.1007/978-3-642-32589-2_56,Descriptional Complexity of Deterministic Regular Expressions,,2017-03-20
10.1007/BF01189852,On reducing the number of stack symbols in a PDA,,2013-03-20
10.1016/0890-5401(90)90053-K,On Measuring Nondeterminism in Regular Languages,,2019-03-20
10.1016/0890-5401(92)90014-7,On the Relation between Ambiguity and Nondeterminism in Finite Automata,,2019-03-20
10.1007/BF01189856,Concise representations of regular languages by degree and probabilistic finite automata,,2015-03-20
10.1007/3-540-57785-8_175,Economy of Description for Single-valued Transducers,,2012-03-20
10.1016/S0304-3975(96)00267-8,Pushdown Automata with Bounded Nondeterminism and Bounded Ambiguity,,2011-03-20
10.1016/S0304-0208(08)73080-9,Descriptional Complexity for Classes of Ianov-Schemes,,2012-03-20
10.1109/CCC.2000.856752,A separation of determinism  Las Vegas and nondeterminism for picture recognition,,2016-03-20
10.1142/s012905411940032x,Branching Measures and Nearly Acyclic NFAs,,2020-03-20
10.1007/3-540-54458-5_82,Degrees of Nondeterminism for Pushdown Automata,,2016-03-20
10.1007/978-3-642-31623-4_20,State Complexity and Limited Nondeterminism,,2015-03-20
10.25596/jalc-2002-533,Refining Nondeterminism below Linear-Time,,2014-03-20
10.1007/BFb0017135,Recognizable Sets with Multiplicities in the Tropical Semiring,,2016-03-20
10.1016/j.tcs.2007.01.015,Context-dependent nondeterminism for pushdown automata,,2017-03-20
10.1007/BFb0055077,On the Determinization of Weighted Finite Automata,,2013-03-20
10.1016/0304-3975(91)90381-B,On the Degree of Ambiguity of Finite Automata,,2012-03-20
10.1007/978-3-540-76336-9_10,Regulated Nondeterminism in Pushdown Automata,,2018-03-20
10.1016/j.ipl.2012.04.009,On multi-head automata with restricted nondeterminism,,2020-03-20
10.1007/BFb0016289,On the Degree of Ambiguity of Finite Automata,,2014-03-20
10.2478/v10129-010-0013-7,Threat to arable weeds in poland in the light of national and regional red lists,,
10.1016/j.tcs.2016.02.027,Closure properties and descriptional complexity of deterministic regular expressions,,2020-03-20
10.1006/inco.1997.2695,One-Unambiguous Regular Languages,,2011-03-20
10.1016/S0304-3975(02)00233-5,Some properties of recognizable -subsets,,2016-03-20
10.1137/0218083,Relating the Type of Ambiguity of Finite Automata to the Succinctness of Their Representation,,2017-03-20
10.1006/jcss.1997.1517,Transforming a Single-Valued Transducer Into a Mealy Machine,,2015-03-20
10.1007/3-540-45007-6_31,Minimizing Finite Automata Is Computationally Hard,,2019-03-20
10.1007/3-540-18625-5_40,Relating the Degree of Ambiguity of Finite Automata to the Succinctness of their Representation,,2016-03-20
10.1016/j.jcss.2003.11.007,On the power of nondeterminism and Las Vegas randomization for two-dimensional finite automata,,2014-03-20
10.1007/3-540-44977-9_14,State complexity of basic operations on nondeterministic finite automata,,2013-03-20
10.1007/978-3-642-24897-9_6,Equational Weighted Tree Transformations with Discounting,,2016-03-20
10.1007/978-3-642-40663-8,Algebraic Informatics,,2014-03-20
10.1007/978-3-319-89884-1_25,Higher-Order Program Verification via HFL Model Checking,,2018-03-20
10.1007/978-3-642-23283-1_12,WP Semantics and Behavioral Subtyping,,2012-03-20
10.1007/BF01211433,Generator induction in order sorted algebras,,2017-03-20
10.1007/BF00243207,A more expressive formulation of many sorted logic,,2013-03-20
10.1007/BF00128778,Taxonomic reasoning with many-sorted logics,,2020-03-20
10.1016/B978-0-12-802306-8.00006-9,Quantum case statements,,2014-03-20
10.1007/978-3-540-85984-0_48,Equivalence Knowledge Mass and Approximate Reasoning in $\mathcal{R}$---Logic $\mathbb{C}_\mathcal{R}$ (I),,2011-03-20
10.1109/ICIS.2009.99,Modeling Instability in a New Framework of Interval Valued Process Algebra,,2016-03-20
10.1007/11539506_31,Type II Topological Logic C1T and Approximate Reasoning,,2012-03-20
10.1007/978-3-642-22833-9_43,The Semantics of wlp and slp of Fuzzy Imperative Programming Languages,,2015-03-20
10.1109/CSIE.2009.991,Equivalence Knowledge Cumularspharolith and Multiple Approximate Reasoning in R - Logic CR,,2018-03-20
10.4028/www.scientific.net/AMM.333-335.1392,Similarity Knowledge Mass and Multiple Multidimensional Approximate Reasoning,,2013-03-20
10.1007/978-3-540-87603-8_26,Integrating Z into Large Projects Tools and Techniques,,2011-03-20
10.4204/EPTCS.209.2,Big Data Refinement,,2015-03-20
10.2991/ICCNCE.2013.67,Similarity Knowledge Mass and Multidimensional Approximate Reasoning,,2019-03-20
10.1007/S11460-007-0024-9,Topology  randomness and noise in process calculus,,2020-03-20
10.1109/FSKD.2007.377,Knowledge Mass and Multiple Approximate Reasoning in Type I Topological Logic C1 T,,2014-03-20
10.1109/FSKD.2008.409,Approximate Knowledge Mass and Extended Automation Reasoning System in Type II Topological Logic,,2020-03-20
10.1007/978-3-642-05089-3_30,Unifying Probability with Nondeterminism,,2014-03-20
10.1109/FSKD.2008.405,Pointwise Logic on Completely Distributive Lattices and Approximate Reasoning,,2017-03-20
10.1016/j.fss.2012.06.007,L-fuzzy strongest postcondition predicate transformers as L-idempotent linear or affine operators between semimodules of monotonic predicates,,2013-03-20
10.1007/978-3-319-31559-1_8,PSTeC: A Location-Time Driven Modelling Formalism for Probabilistic Real-Time Systems,,2012-03-20
10.1007/978-3-540-71441-5_12,Knowledge Mass and Automatic Reasoning System in Similarity Logic CQ,,2017-03-20
10.1109/TC.2011.147,Reliability of Mobile Processes with Noisy Channels,,2017-03-20
10.1007/s12543-009-0007-z,Similarity mass and approximate reasoning,,2015-03-20
10.4028/www.scientific.net/AMM.596.179,Rough Match Function Based on Topological Structure,,2011-03-20
10.1007/978-3-540-71441-5_73,Similarity Mass and Approximate Reasoning,,2016-03-20
10.1093/comjnl/bxn006,A Hierarchy of Behavioral Equivalences in the π-calculus with Noisy Channels,,2018-03-20
10.1109/FSKD.2007.376,Knowledge Mass and Automation Reasoning System in Type II Topological Logic CT II,,2020-03-20
10.1016/j.ins.2008.01.016,Domain semantics of possibility computations,,2011-03-20
10.1016/j.tcs.2012.03.002,Value-passing CCS with noisy channels,,2012-03-20
10.4028/www.scientific.net/AMM.599-601.1793,Topological Structure - Based Rough Sets and Rough Logic,,2019-03-20
10.1109/COGINF.2010.5599686,Deterministic  probabilistic  fuzzy and quantum automata: Two unifying formulations,,2015-03-20
10.1016/j.fss.2012.01.022,Semantics of non-deterministic possibility computation,,2020-03-20
10.1109/ISMVL.2002.1011094,Variable selection heuristics and optimum decision trees-an experimental study,,2015-03-20
10.2298/FUEE1103281S,Decision Diagrams - from A Mathematical Notion to Engineering Applications,,2019-03-20
10.1002/(SICI)1098-111X(199912)14:12<1231::AID-INT4>3.0.CO;2-6,An application of Yager's bag theory in multicriteria based decision making problems,,2016-03-20
10.1007/3-540-48309-8_54,The Constructive Method for Query Containment Checking,,2016-03-20
10.1145/1142351.1142363,The containment problem for <bi>Real</bi> conjunctive queries with inequalities,,2019-03-20
10.1007/BFb0054492,Query Containment Checking as a View Updating Problem,,2011-03-20
10.1007/978-3-319-15702-3_16,On Query Containment Problem for Conjunctive Queries Under Bag-Set Semantics,,2018-03-20
10.1007/BFb0057716,Containment of Conjunctive Queries with Built-in Predicates with Variables and Constants over any Ordered Domain,,2019-03-20
10.1007/BF01463949,Addendum to Null values in nested relational databases,,2016-03-20
10.1007/978-3-642-00722-4_10,Faster Scannerless GLR Parsing,,2017-03-20
10.1109/ICCSE.2009.5228318,VPGE - A fast practical GLR parser generator,,2011-03-20
10.11575/PRISM/31117,Communication History Patterns: Direct Implementations of Protocol Specifications,,2015-03-20
10.14311/1113,On Tree Pattern Matching by Pushdown Automata,,2014-03-20
10.1007/3-540-36579-6_17,Generalised Regular Parsers,,2012-03-20
10.5539/cis.v6n2p134,A Generic Tool for Teaching Compilers,,2012-03-20
10.1016/j.scico.2009.07.001,Recognition is not parsing - SPPF-style parsing from cubic recognisers,,2013-03-20
10.1007/s00607-010-0134-8,A predictive bottom-up parser,,2014-03-20
10.1016/j.entcs.2005.02.060,Recursion Engineering for Reduction Incorporated Parsers,,2016-03-20
10.1007/11505877_32,LR Parsing for Boolean Grammars,,
10.2298/CSIS101109004J,A generic parser for strings and trees,,2011-03-20
10.1145/1029894.1029918,Implementing protocols via declarative event patterns,,2013-03-20
10.1002/spe.493,Decorating tokens to facilitate recognition of ambiguous language constructs,,2011-03-20
10.1093/comjnl/bxh102,Generalized Bottom Up Parsers With Reduced Stack Activity,,2020-03-20
10.1016/J.SCICO.2019.01.008,Derivation representation using binary subtree sets,,2017-03-20
10.2298/CSIS111216023S,LL conflict resolution using the embedded left LR parser,,2016-03-20
10.1142/S0129054106004029,Generalized Lr Parsing Algorithm for Boolean Grammars,,2015-03-20
10.1360/JOS160174,Optimized GLR Parsing for Programming Languages,,2019-03-20
10.1016/J.ENTCS.2008.03.044,SPPF-Style Parsing From Earley Recognisers,,2019-03-20
10.1007/11538356_18,Improved GLR Parsing Algorithm,,2011-03-20
10.1002/spe.390,Schrödinger's token,,2014-03-20
10.1007/s00224-016-9683-3,Generalized LR Parsing Algorithm for Grammars with One-Sided Contexts,,2020-03-20
10.1016/j.scico.2006.04.011,Automatic recursion engineering of reduction incorporated parsers,,2017-03-20
10.1016/j.scico.2018.06.001,GLL syntax analysers for EBNF grammars,,2011-03-20
10.1007/s00236-007-0054-z,BRNGLR: a cubic Tomita-style GLR parsing algorithm,,2012-03-20
10.1145/969637.969640,Why bison is becoming extinct,,2014-03-20
10.1007/978-3-540-24723-4_7,Generalised Parsing: Some Costs,,2011-03-20
10.11575/PRISM/31115,An Implementation of Declarative Event Patterns,,2016-03-20
10.1109/ARES.2011.40,A Trustworthy Usage Control Enforcement Framework,,2015-03-20
10.1007/978-3-642-28641-4_17,Enforceable Security Policies Revisited,,2011-03-20
10.1007/978-3-319-08587-6_33,Visibly Linear Temporal Logic,,2012-03-20
10.1007/978-3-319-11164-3_15,Online Monitoring of Metric Temporal Logic,,2012-03-20
10.1007/978-3-642-04761-9_19,Specification Languages for Stutter-Invariant Regular Properties,,2012-03-20
10.23638/LMCS-15(2:13)2019,On the Expressiveness and Monitoring of Metric Temporal Logic,,2012-03-20
10.1007/BF00290733,An efficient incremental LR parser for grammars with epsilon productions,,2020-03-20
10.1007/978-3-642-00434-6_8,Generating Rewritable Abstract Syntax Trees,,2011-03-20
10.1080/10637199608915611,On the Parallel kth Extension of the Sieve of Eratosthenes,,2013-03-20
10.1017/S0956796808007004,The Genuine Sieve of Eratosthenes,,2018-03-20
10.1007/978-3-662-49529-2_15,The I/O Complexity of Computing Prime Tables,,2013-03-20
10.1112/S1461157015000194,Two Compact Incremental Prime Sieves,,2013-03-20
10.1007/978-3-540-92910-9_3,Algorithmic Tools on Cellular Automata,,2017-03-20
10.1142/9789813148208_0011,Programming Examples of Space-Filling Curves,,2012-03-20
10.1023/A:1024087118762,Parallel Grammars: A Phenomenology,,2012-03-20
10.1016/j.cag.2004.08.016,Recursive turtle programs and iterated affine transformations,,2013-03-20
10.1007/978-1-4419-8576-7_1,Two-Dimensional Graphics,,2016-03-20
10.1515/comp-2018-0005,The design of manual domain usability evaluation techniques,,2019-03-20
10.1007/BF01752401,Sur une propriété d'itération des langages algébriques déterministes,,2012-03-20
10.1215/00294527-2008-017,Intuitionistic Logic according to Dijkstra's Calculus of Equational Deduction,,2017-03-20
10.1007/978-3-319-23165-5_27,The Formal System of Dijkstra and Scholten,,2018-03-20
10.1016/S0168-0072(01)00059-8,On calculational proofs,,2017-03-20
10.1109/COLUMBIANCC.2015.7333398,Executable calculational specifications,,2020-03-20
10.1145/3029052,Abstract Program Slicing,,2013-03-20
10.18419/opus-9315,A framework for service-based data processing,,2016-03-20
10.1017/S0960129510000204,Weak bisimulations for the Giry monad,,2017-03-20
10.1007/978-3-642-04639-1_8,A Relation-Algebraic Approach to Liveness of Place/Transition Nets,,2020-03-20
10.1016/j.jlamp.2014.03.002,Algebraic properties of stochastic effectivity functions,,2019-03-20
10.1109/INCISCOS.2018.00058,Implementation of a System for the Administration  Configuration and Monitoring of Parking Areas,,2016-03-20
10.17877/DE290R-14946,Derandomizing probabilistic semantics through Eilenberg-Moore algebras for the Giry monad,,2014-03-20
10.1016/j.ipl.2004.02.009,Factoring stochastic relations,,2014-03-20
10.1109/KBEI.2015.7436151,Studying the deficiencies and problems of different architecture in developing distributed systems and analyze the existing solution,,2019-03-20
10.1016/j.ic.2006.09.001,Eilenberg-Moore algebras for stochastic relations,,2020-03-20
10.1007/978-3-319-22750-4_1,The Axiom of Choice and Some of Its Equivalents,,2015-03-20
10.17877/DE290R-5182,Characterizing the Eilenberg-Moore Algebras for a Monad of Stochastic Relations,,2016-03-20
10.1007/978-3-540-79228-4_35,Weak Bisimulations for the Giry Monad (Extended Abstract),,2012-03-20
10.1007/978-3-319-22750-4_4,Measures for Probabilistic Systems,,2011-03-20
10.1007/978-3-319-22750-4,Special Topics in Mathematics for Computer Scientists,,2018-03-20
10.17877/DE290R-8144,Zur kategoriellen Beschreibung von Schichtenarchitekturen,,2018-03-20
10.6092/UNIBO/AMSDOTTORATO/928,Management and routing algorithms for ad-hoc and sensor networks,,2014-03-20
10.1007/978-3-540-25840-7_13,G-Grid: A Class of Scalable and Self-Organizing Data Structures for Multi-dimensional Querying and Content Routing in P2P Networks,,2020-03-20
10.1145/1065870.1065875,Tolerance of localization imprecision in efficiently managing mobile sensor databases,,2013-03-20
10.1007/s10619-009-7045-8,Multi-dimensional data density estimation in P2P networks,,2019-03-20
10.1145/1042046.1042052,Decoupling partitioning and grouping: Overcoming shortcomings of spatial indexing with bucketing,,2016-03-20
10.1109/P2P.2006.48,W-Grid: a Cross-Layer Infrastructure for Multi-Dimensional Indexing  Querying and Routing in Wireless Ad-Hoc and Sensor Networks,,2016-03-20
10.1109/PERSER.2006.1652232,Routing and Localization Services in Self-Organizing Wireless Ad-Hoc and Sensor Networks Using Virtual Coordinates,,2018-03-20
10.1007/978-3-030-51372-6,Graph Transformation: 13th International Conference  ICGT 2020  Held as Part of STAF 2020  Bergen  Norway  June 25–26  2020  Proceedings,,2015-03-20
10.1007/978-3-030-23611-3_4,Extending Predictive Shift-Reduce Parsing to Contextual Hyperedge Replacement Grammars,,2013-03-20
10.15439/2014F144,Grammar-based model transformations,,2012-03-20
10.1007/978-3-030-51372-6_13,Graph Parsing as Graph Transformation,,2018-03-20
10.1007/978-3-030-13435-8_17,Generalized Predictive Shift-Reduce Parsing for Hyperedge Replacement Graph Grammars,,2012-03-20
10.1007/978-3-642-14455-4_9,Linking Algebraic Observational Equivalence and Bisimulation,,2011-03-20
10.3217/jucs-012-10-1413,Proving Properties for Behavioural Specifications with Term Observation,,2012-03-20
10.1109/ECBS.2007.60,Reasoning about Cryptographic Protocols in Observational Theories,,2018-03-20
10.1007/s11432-018-9847-0,Implementing termination analysis on quantum programming,,2017-03-20
10.1016/j.jcss.2013.04.002,Model checking quantum Markov chains,,2020-03-20
10.1145/3158123,Algorithmic analysis of termination problems for quantum programs,,2020-03-20
10.1016/J.SCICO.2013.03.016,Verification of Quantum Programs,,2018-03-20
10.1007/S11434-012-5147-6,Quantum programming: From theories to implementations,,2011-03-20
10.1007/978-3-030-01461-2_8,Q|SI〉: A Quantum Programming Environment,,2014-03-20
10.1016/B978-0-12-802306-8.00005-7,Analysis of quantum programs,,2020-03-20
10.1007/s00236-013-0185-3,Termination of nondeterministic quantum programs,,2015-03-20
10.1016/B978-0-12-802306-8.00003-3,Syntax and semantics of quantum programs,,2018-03-20
10.1017/CBO9781139193313,Semantic Techniques in Quantum Computation,,2016-03-20
10.1145/3009837.3009840,Invariants of quantum programs: characterisations and generation,,2014-03-20
10.1360/N112017-00095,$Q|SI\rangle$: A Quantum Programming Environment,,2013-03-20
10.1145/3373376.3378500,Towards Efficient Superconducting Quantum Processor Architecture Design,,2014-03-20
10.1007/s00165-018-0465-3,Toward automatic verification of quantum programs,,2014-03-20
10.1109/VTCSpring.2017.8108699,Towards Automatically Construct Quantum Circuits for Quantum Programs with Quantum Control,,2019-03-20
10.1007/978-3-642-32940-1_7,Reachability and Termination Analysis of Concurrent Quantum Programs,,2018-03-20
10.1007/978-3-030-32409-4_24,A Coalgebraic Semantics Framework for Quantum Systems,,2019-03-20
10.1016/j.artint.2009.11.009,Quantum computation  quantum theory and AI,,2016-03-20
10.1007/S13369-014-1560-2,Maintenance Scheduling Problem with Fuzzy Random Time Windows on a Single Machine,,2018-03-20
10.1016/j.ejor.2008.11.003,Two simple constant ratio approximation algorithms for minimizing the total weighted completion time on a single machine with a fixed non-availability interval,,2013-03-20
10.1016/J.IJPE.2007.01.013,Efficient branch-and-bound algorithm for minimizing the weighted sum of completion times on a single machine with one availability constraint,,2017-03-20
10.1109/ICCIE.2009.5223876,Approximation algorithms to minimize a special weighted flow-time criterion on a single machine with a fixed job and release dates,,2012-03-20
10.1155/2017/7532174,Single-Machine Scheduling with Learning Effects and Maintenance: A Methodological Note on Some Polynomial-Time Solvable Cases,,2011-03-20
10.1109/ICSSSM.2006.320690,MSPT2 Heuristic and Dynamic Programming Method for the Parallel Machine Scheduling Problem with scheduled Preventive Maintenance,,2017-03-20
10.1007/S10479-004-5032-Z,Preemptive Scheduling with Availability Constraints to Minimize Total Weighted Completion Times,,2014-03-20
10.1007/978-3-642-13036-6_18,Universal Sequencing on a Single Machine,,2018-03-20
10.1080/00207540802446795,Minimising total flow-time on two parallel machines with planned downtimes and resumable jobs,,2020-03-20
10.1142/S1793830915500214,Online and semi-online scheduling to minimize makespan on single machine with an availability constraint,,2019-03-20
10.1016/j.asoc.2014.06.020,Multi-agent based approach for single machine scheduling with sequence-dependent setup times and machine maintenance,,2011-03-20
10.1016/j.ejor.2006.10.005,Improved approximation for non-preemptive single machine flow-time scheduling with an availability constraint,,2019-03-20
10.1109/ICCIE.2009.5223971,Total weighted completion scheduling problem with availability constraints,,2017-03-20
10.1016/j.ejor.2003.08.026,An improved approximation algorithm for the single machine total completion time scheduling problem with availability constraints,,2020-03-20
10.1016/j.cor.2010.09.003,Minimizing total completion time on a single machine with a flexible maintenance activity,,2019-03-20
10.1109/ICTAI.2017.00089,A Fuzzy Genetic Algorithm for Single-Machine Scheduling and Flexible Maintenance Planning Integration under Human Resource Constraints,,2012-03-20
10.1007/S00170-005-0253-0,Scheduling of jobs and maintenance in a textile company,,2011-03-20
10.1109/CCDC.2017.7978692,Research on single machine scheduling problem with limited waiting and degenerate maintenance,,2020-03-20
10.1016/J.OMEGA.2014.11.002,Single machine total completion time scheduling problem with workload-dependent maintenance duration,,2013-03-20
10.1016/j.cor.2014.04.005,Patient scheduling with periodic deteriorating maintenance on single medical device,,2016-03-20
10.1016/J.EJOR.2008.03.043,Identical parallel-machine scheduling under availability constraints to minimize the sum of completion times,,2013-03-20
10.1016/j.cor.2005.05.034,Single-machine scheduling with periodic maintenance to minimize makespan,,2020-03-20
10.1016/J.APM.2012.07.028,Minimizing the total completion time on a single machine with the learning effect and multiple availability constraints,,2012-03-20
10.1016/j.cie.2015.11.015,Minimizing the total completion time on a parallel machine system with tool changes,,2017-03-20
10.1109/TAI.2003.1250229,Progressive stochastic search for solving constraint satisfaction problems,,2019-03-20
10.1016/J.IJPE.2010.02.009,Scheduling deteriorating jobs under disruption,,2014-03-20
10.1016/j.camwa.2011.09.016,Minimizing maximum earliness and number of tardy jobs in the single machine scheduling problem with availability constraint,,2017-03-20
10.1016/j.procs.2018.08.091,An effective heuristic for the single-machine scheduling problem with flexible maintenance under human resource constraints,,2012-03-20
10.1007/s10479-012-1059-8,Makespan minimization for parallel machines scheduling with multiple availability constraints,,2020-03-20
10.1016/j.orl.2006.08.005,Single machine scheduling under potential disruption,,2018-03-20
10.2991/ICMMCCE-15.2015.455,Single Machine Schedule Problem with a Fixed Unavailability Interval and Rejection,,2015-03-20
10.1016/j.ins.2013.07.003,Complexity and approximation of single machine scheduling with an operator non-availability period to minimize total completion time,,2019-03-20
10.1109/ICSSSM.2006.320689,Branch-and-Bound Method to solve the P/sub m/  h/sub j1/||/spl Sigma/C/sub i/ problem,,2016-03-20
10.1142/S0217595914500377,Single Machine Scheduling with an Availability Constraint and Rejection,,2013-03-20
10.1016/J.IJPE.2009.10.018,Scheduling problems with multiple maintenance activities and non-preemptive jobs on two identical parallel machines,,2013-03-20
10.1007/s00453-008-9248-1,Fully Polynomial Approximation Schemes for a Symmetric Quadratic Knapsack Problem and its Scheduling Applications,,2013-03-20
10.1155/2013/936814,A Dynamic Genetic Algorithm for Solving a Single Machine Scheduling Problem with Periodic Maintenance,,2011-03-20
10.1016/j.ins.2014.02.142,Single machine batch scheduling to minimize the sum of total flow time and batch delivery cost with an unavailability interval,,2014-03-20
10.1016/j.cie.2013.08.017,Computational performances of a simple interchange heuristic for a scheduling problem with an availability constraint,,2017-03-20
10.1109/CESA.2006.4281798,A Column Generation Method for the Parallel-Machine Scheduling Problem with availability constraint,,2020-03-20
10.1080/00207540701636348,Single machine scheduling with preventive maintenances,,2017-03-20
10.1016/j.cie.2011.12.013,Heuristics for scheduling problems with an unavailability constraint and position-dependent processing times,,2013-03-20
10.1057/jors.2009.157,Rescheduling unrelated parallel machines with total flow time and total disruption cost criteria,,2015-03-20
10.1109/CCDC.2016.7531348,Research on medical scheduling problem with patient limited waiting and Variable Maintenance Duration,,2013-03-20
10.1016/j.ejor.2007.02.051,Single machine unbounded parallel-batch scheduling with forbidden intervals,,2016-03-20
10.1007/978-3-319-39574-6_13,Scheduling with Fixed Compulsory Maintenance Periods,,2012-03-20
10.1080/01966324.2016.1203849,Scheduling Variable Maintenances and Jobs on Unrelated Parallel Machines to Minimize the Total Completion Time,,2013-03-20
10.1007/s13198-013-0183-4,A novel approach for production scheduling of a high pressure die casting machine subjected to selective maintenance and a sampling procedure for quality control,,2020-03-20
10.1007/s10951-019-00622-w,Single-machine scheduling with job-dependent machine deterioration,,2014-03-20
10.1002/NAV.21684,Approximation schemes for single-machine scheduling with a fixed maintenance activity to minimize the total amount of late work,,2017-03-20
10.1142/S0217595911003302,Single Machine Scheduling with Linear deteriorating Jobs under Predictive Disruption,,2012-03-20
10.1080/09720510.2006.10701195,Using integer programming to solve the machine scheduling problem with a flexible maintenance activity,,2013-03-20
10.1016/j.cie.2014.11.002,Single-machine scheduling with a variable maintenance activity,,
10.1080/21681015.2015.1136898,Total tardiness minimization in a parallel machine system with flexible periodic maintenance,,2014-03-20
10.1007/S10696-008-9043-Y,Job scheduling and management of wearing tools with stochastic tool lifetimes,,2019-03-20
10.1007/s10852-013-9235-7,The Two-stage Assembly Flow Shop Scheduling with an Availability Constraint: Worst Case Analysis,,2013-03-20
10.1007/978-3-642-31770-5_26,Minimizing Total Weighted Completion Time with Unexpected Machine Unavailability,,2016-03-20
10.1016/j.tcs.2009.03.012,Exponential inapproximability and FPTAS for scheduling with availability constraints,,2011-03-20
10.1007/s10951-014-0372-2,Rescheduling for machine disruption to minimize makespan and maximum lateness,,2014-03-20
10.1007/978-3-319-99849-7_11,Scheduling with Limited Processor Availability,,2018-03-20
10.1007/978-3-319-39574-6_14,Scheduling with Flexible Maintenance,,2015-03-20
10.1007/978-3-642-25766-7_90,A Single Machine Scheduling Problem with Time Slot Costs,,2020-03-20
10.1016/J.JMSY.2010.06.004,Solving a single-machine scheduling problem with maintenance  job deterioration and learning effect by simulated annealing,,2016-03-20
10.1007/s10878-015-9857-y,Supply chain scheduling problem in the hospital with periodic working time on a single machine,,2015-03-20
10.1080/00207543.2018.1424367,Investigating the value of integrated operations planning: A case-based approach from automotive industry,,2013-03-20
10.1080/00207543.2015.1108535,An improved exact algorithm for single-machine scheduling to minimise the number of tardy jobs with periodic maintenance,,2013-03-20
10.1002/NAV.10107,An FPTAS for scheduling a two-machine flowshop with one unavailability interval,,2014-03-20
10.1016/j.dam.2011.06.007,Approximation schemes for parallel machine scheduling with availability constraints,,2018-03-20
10.1080/00207543.2012.693637,Integrating run-based preventive maintenance into the capacitated lot sizing problem with reliability constraint,,2016-03-20
10.1016/j.knosys.2018.01.018,Variable neighborhood search with memory for a single-machine scheduling problem with periodic maintenance and sequence-dependent set-up times,,2019-03-20
10.1002/NAV.20083,Single Machine Scheduling with a Restricted Rate-Modifying Activity*,,2019-03-20
10.1016/J.IJPE.2017.12.025,Single machine scheduling with controllable processing times and an unavailability period to minimize the makespan,,2016-03-20
10.1080/03052150500270594,Optimization models for the machine scheduling problem with a single flexible maintenance activity,,2019-03-20
10.1504/IJISE.2012.044042,Integrated models in production planning and scheduling  maintenance and quality: a review,,2017-03-20
10.1016/j.cor.2016.11.008,Minimizing the makespan on a single machine with flexible maintenances and jobs' release dates,,2019-03-20
10.1016/J.IFACOL.2016.07.915,An accelerated MIP model for the single machine scheduling with preventive maintenance,,2016-03-20
10.1080/00207540701487833,Scheduling preventive maintenance on a single CNC machine,,2015-03-20
10.1504/IJOR.2018.10013120,A modified imperialist competitive algorithm for a two-agent single-machine scheduling under periodic maintenance consideration,,2012-03-20
10.1155/2014/568317,Minimizing the Number of Tardy Jobs on a Single Machine with an Availability Constraint,,2017-03-20
10.1016/j.cie.2009.04.014,A survey of scheduling with deterministic machine availability constraints,,2016-03-20
10.1007/S11766-011-2488-X,Single machine scheduling with semi-resumable machine availability constraints,,2011-03-20
10.1016/j.disopt.2020.100609,Single-machine scheduling with maintenance activities and rejection,,2016-03-20
10.1109/ICSMC.2005.1571386,Branch and bound and dynamic programming to minimize the total completion times on a single machine with availability constraints,,2015-03-20
10.1016/j.tcs.2014.10.047,Integrated scheduling of production and delivery on a single machine with availability constraint,,2020-03-20
10.1057/palgrave.jors.2602043,Single-machine scheduling with flexible and periodic maintenance,,2012-03-20
10.1080/00207543.2018.1496294,Minimising total completion time on single-machine scheduling with new integrated maintenance activities,,2014-03-20
10.5772/5214,Scheduling under Unavailability Constraints to Minimize Flow-time Criteria,,2018-03-20
10.1016/j.future.2016.05.042,Competitive analysis of fundamental scheduling algorithms on a fault-prone machine and the impact of resource augmentation,,2011-03-20
10.1016/j.cor.2006.04.010,Single-machine scheduling with an availability constraint to minimize the weighted sum of the completion times,,2014-03-20
10.1007/s10288-011-0180-x,The symmetric quadratic knapsack problem: approximation and scheduling applications,,2020-03-20
10.1016/j.ejor.2006.01.025,Approximability of single machine scheduling with fixed jobs to minimize total completion time,,2012-03-20
10.1016/j.cie.2018.06.017,A scatter simulated annealing algorithm for the bi-objective scheduling problem for the wet station of semiconductor manufacturing,,2014-03-20
10.1016/j.disopt.2012.11.002,Weighted completion time minimization on a single-machine with a fixed non-availability interval: Differential approximability,,2012-03-20
10.1007/978-981-10-8944-2_89,Hot-Rolled Batch Scheduling of Seamless Steel Tube with Flexible Machine Maintenance,,2018-03-20
10.1109/ICCIE.2009.5223882,Lower bounds for total weighted completion scheduling problem with availability constraints,,2017-03-20
10.1057/palgrave.jors.2601998,Minimizing total flow time in the single-machine scheduling problem with periodic maintenance,,2013-03-20
10.1016/J.IJPE.2013.07.013,On the exact bounds of SPT for scheduling on parallel machines with availability constraints,,2016-03-20
10.1007/s11590-006-0041-2,Parallel-machine scheduling under potential disruption,,2020-03-20
10.1016/J.OMEGA.2008.01.001,Minimizing number of tardy jobs on a single machine subject to periodic maintenance,,2014-03-20
10.1016/J.OMEGA.2016.07.006,Parallel-machine scheduling of deteriorating jobs with potential machine disruptions ☆,,2015-03-20
10.1016/j.camwa.2010.12.028,A heuristic approach for a scheduling problem with periodic maintenance and sequence-dependent setup times,,2013-03-20
10.1016/J.AMC.2013.05.004,Lagrangian relaxation and column generation-based lower bounds for the Pm  hj1‖∑wiCiPm  hj1‖∑wiCi scheduling problem,,2016-03-20
10.1080/01966324.2018.1519474,Parallel Machine Scheduling on Jobs and Partial Maintenance Activities due to job-Dependent Machine Deteriorations,,2017-03-20
10.1002/NAV.10045,Scheduling with tool changes to minimize total completion time: A study of heuristics and their performance,,2012-03-20
10.1137/110844210,Universal Sequencing on an Unreliable Machine,,2018-03-20
10.1007/s10951-013-0328-y,Minimizing total weighted completion time with an unexpected machine unavailable interval,,2017-03-20
10.1007/s11590-015-0881-8,Approximation algorithms for the single-machine scheduling with a period of maintenance,,2012-03-20
10.1016/j.ejor.2006.06.062,Worst-case analysis of the WSPT and MWSPT rules for single machine scheduling with one planned setup period,,2016-03-20
10.1016/J.APM.2010.11.017,A single machine scheduling problem with availability constraints and sequence-dependent setup costs,,2016-03-20
10.1109/IECON.2009.5415368,New shifting method for job shop scheduling subject to invariant constraints of resources availability,,2015-03-20
10.1016/j.ejor.2007.06.029,Scheduling of nonresumable jobs and flexible maintenance activities on a single machine to minimize makespan,,2013-03-20
10.1051/ro/2018055,A variable neighborhood search algorithm for solving the single machine scheduling problem with periodic maintenance,,2011-03-20
10.1016/j.mcm.2006.09.018,Machine scheduling performance with maintenance and failure,,2012-03-20
10.1002/NAV.20393,Scheduling with variable time slot costs,,2017-03-20
10.1016/j.cor.2005.08.014,Scheduling with tool changes to minimize total completion time under controllable machining conditions,,2018-03-20
10.1016/j.cor.2009.09.001,An anticipative scheduling approach with controllable processing times,,2012-03-20
10.1016/J.IJPE.2005.05.021,Disruption management for machine scheduling: The case of SPT schedules,,2014-03-20
10.1016/j.tcs.2006.04.014,Improved algorithms for two single machine scheduling problems,,2013-03-20
10.3934/JIMO.2016041,Parallel-machine scheduling with potential disruption and positional-dependent processing times,,2014-03-20
10.1007/S00170-006-0469-7,A note on single-machine scheduling with learning effect and an availability constraint,,2018-03-20
10.1007/s10951-009-0146-4,Fast approximation algorithms to minimize a special weighted flow-time criterion on a single machine with a non-availability interval and release dates,,2020-03-20
10.4230/LIPIcs.ISAAC.2016.55,Single machine scheduling with job-dependent machine deterioration,,2012-03-20
10.24200/SCI.2017.4296,Minimizing maximum earliness in single-machine scheduling with flexible maintenance time,,2016-03-20
10.1016/J.OMEGA.2018.08.001,Scheduling Two Agents on a Single Machine: A Parameterized Analysis of NP-hard Problems,,2018-03-20
10.1016/j.ejor.2017.09.015,Cost allocation in rescheduling with machine unavailable period,,2016-03-20
10.1016/j.cie.2007.08.005,Approximation algorithm for the weighted flow-time minimization on a single machine with a fixed non-availability interval,,2011-03-20
10.1016/j.cie.2008.09.042,Fully polynomial time approximation scheme for the weighted flow-time minimization on a single machine with a fixed non-availability interval,,2011-03-20
10.1057/jors.2015.19,A hybrid genetic algorithm for an identical parallel-machine problem with maintenance activity,,2020-03-20
10.1155/2014/304808,Single Machine Predictive Scheduling Using Inserted Idle Times,,2012-03-20
10.1007/S10951-018-0573-1,A note on minimizing total weighted completion time with an unexpected machine unavailable interval,,2018-03-20
10.1109/ICMSS.2010.5577517,Integrated Optimization Research on Preventive Maintenance Planning and Production Scheduling,,2014-03-20
10.1080/09511920701575088,Minimizing the weighted flow time on a single machine with the resumable availability constraint: worst case of the WSPT heuristic,,2020-03-20
10.1007/978-3-642-14553-7_10,Approximation Schemes for Scheduling with Availability Constraints,,2012-03-20
10.1007/978-3-642-21204-8_24,Single Machine Scheduling with an Operator Non-availability Period to Minimize Total Completion Time,,2014-03-20
10.1109/ICSSSM.2006.320676,Worst-case bound performance of the preemptive WSPT heuristic for the problem 1  h1|pre|ΣwiCi,,2014-03-20
10.1109/ICIEEM.2011.6035354,Preventive maintenance scheduling of FMS equipment based on improved ant colony algorithm,,2018-03-20
10.1007/s10589-019-00142-5,Heuristics for the single machine weighted sum of completion times scheduling problem with periodic maintenance,,2013-03-20
10.1016/J.APM.2009.04.014,Minimizing the makespan in a single machine scheduling problems with flexible and periodic maintenance,,2020-03-20
10.1007/S10479-015-2018-Y,Optimizing the half-product and related quadratic Boolean functions: approximation and scheduling applications,,2013-03-20
10.1109/ACCESS.2019.2937812,Minimizing the Total Weighted Completion Time of a Single Machine With Flexible Maintenance,,2012-03-20
10.1016/S0377-2217(03)00232-7,Scheduling with tool changes to minimize total completion time: Basic results and SPT performance,,2011-03-20
10.1016/j.ejor.2011.02.006,Parallel machines scheduling with machine maintenance for minsum criteria,,2015-03-20
10.1016/j.eswa.2010.02.075,A modified particle swarm optimization algorithm for a single-machine scheduling problem with periodic maintenance,,2012-03-20
10.1057/jors.2016.46,Integrated production and maintenance planning for parallel machine system considering cost of rejection,,2019-03-20
10.1007/s10951-012-0280-2,A multi-start tabu search method for a single-machine scheduling problem with periodic maintenance and sequence-dependent set-up times,,2016-03-20
10.1007/978-1-4939-2864-4_543,Universal Sequencing on an Unreliable Machine,,2015-03-20
10.1016/S0020-0255(01)00163-3,Relational depth-first-search with applications,,2013-03-20
10.1007/3-540-45013-0_12,A Generic Program for Minimal Subsets with Applications,,2018-03-20
10.1007/3-540-36280-0_18,Calculating a Relational Program for Transitive Reductions of Strongly Connected Graphs,,2012-03-20
10.1007/978-3-642-33314-9_8,Simple Rectangle-Based Functional Programs for Computing Reflexive-Transitive Closures,,2014-03-20
10.1016/j.entcs.2007.01.011,Implementing Relational Specifications in a Constraint Functional Logic Language,,2019-03-20
10.1007/b98117,Relational and Kleene-Algebraic Methods in Computer Science,,2018-03-20
10.1016/j.jlamp.2014.08.003,Combining relation algebra and data refinement to develop rectangle-based functional programs for reflexive-transitive closures,,2013-03-20
10.1007/978-1-4939-0369-6_5,Chapter 5 Rule-Based Grammatical Regulation,,2019-03-20
10.1007/BF00263767,Subrekursive Komplexität bei Gruppen,,2019-03-20
10.1007/s00224-003-1072-z,"Tree Series Transformations that Respect Copying
",,2011-03-20
10.1016/J.SCICO.2015.09.002,Parallel parsing made practical,,2012-03-20
10.1080/00207160701210141,Generalization of some properties of relations in the context of functional temporal×modal logic,,2011-03-20
10.1002/malq.201600011,Completeness of a functional system for surjective functions,,2017-03-20
10.1007/11874850_64,MAT Logic: A Temporal×Modal Logic with Non-deterministic Operators to Deal with Interactive Systems in Communication Technologies,,2014-03-20
10.1002/malq.200810038,Analyzing completeness of axiomatic functional systems for temporal × modal logics,,2016-03-20
10.1007/978-3-319-71504-9_2,The Analysis of Cloud Computing System as a Queueing System with Several Servers and a Single Buffer,,2012-03-20
10.1007/978-3-642-76309-0_10,Formal Description  Time and Performance Analysis. A Framework,,2020-03-20
10.1057/JORS.1995.171,Performability Analysis of Fork-join Queueing Systems,,2019-03-20
10.1007/978-0-387-35394-4_2,Open Estelle - An FDT for Open Distributed Systems,,2014-03-20
10.1145/131214.131277,Multiple feedback queue as a model of general purpose multiprocessor systems,,2012-03-20
10.1007/978-3-322-86541-0_31,Leistungsmodellierung der verteilten Verarbeitung,,2012-03-20
10.1109/EURCON.1988.11144,A performance analysis of protocols for multicast communication in broadband packet networks,,2013-03-20
10.1109/WECONF.2018.8604361,Analysis of Parallel Queueing Network with Mutual Expectations,,2012-03-20
10.1109/12.76416,A Decomposition Procedure for the Analysis of a Closed Fork/Join Queueing System,,2019-03-20
10.1023/A:1019137626073,A Markovian single server with upstream job and downstream demand arrival stream,,2011-03-20
10.1007/978-3-642-80117-4_20,On the Approximation of Higher Moments in Open and Closed Fork/Join Primitives with Limited Buffers,,2015-03-20
10.1080/07408179808966436,Performance analysis of assembly/disassembly systems with unreliable machines and random processing times,,2014-03-20
10.1080/00207729508929087,Some models for developmental systems Part XIV. Parallelism with applications to developmental systems and to queueing systems,,2011-03-20
10.1016/J.IJPE.2005.02.008,Time-bounds for production networks,,2011-03-20
10.1109/3477.662761,Performance based design of high-level language-directed computer architectures,,2018-03-20
10.1016/J.IJPE.2004.03.005,Fixed pre-assembly scheduling on multiple fabrication machines,,2017-03-20
10.1016/J.PARCO.2003.11.003,Analytical response time estimation in parallel relational database systems,,2012-03-20
10.1137/0151010,On the diffusion approximation to a fork and join queueing model,,2015-03-20
10.1007/978-3-642-51136-3_30,Effiziente Modellierung von ODP-Traderfederationen mittels P2AM,,2014-03-20
10.1007/s42979-019-0044-6,Introduction to the Special Issue on the French-Polish Collaboration in Mathematical Models of Computer Systems  Networks and Bioinformatics,,2011-03-20
10.1137/0150071,Analytical results for waiting time and system size distributions in two parallel queueing systems,,2013-03-20
10.1016/S0360-8352(00)00045-0,Heuristics for selecting machines and determining buffer capacities in assembly systems,,2016-03-20
10.1145/1190095.1190136,Approximate closed-form aggregation of a fork-join structure in generalised stochastic petri nets,,2014-03-20
10.1016/0166-5316(89)90013-8,Equivalence Relations in Queueing Models of Fork/Join Networks with Blocking,,2011-03-20
10.1145/2628913,Analysis of Fork/Join and Related Queueing Systems,,2011-03-20
10.5075/EPFL-THESIS-5242,A High-Throughput Byzantine Fault-Tolerant Protocol,,2016-03-20
10.1109/71.730531,Bound Performance Models of Heterogeneous Parallel Processing Systems,,2014-03-20
10.1109/WIAPP.2003.1210291,On the effect of large-scale deployment of parallel downloading,,2019-03-20
10.1007/BF01149176,A fork-join queueing model: Diffusion approximation  integral representations and asymptotics,,2013-03-20
10.1016/0377-2217(91)90071-3,Approximate analysis of a closed fork/join model,,2018-03-20
10.1145/74925.74962,Analysis of computation-communication issues in dynamic dataflow architectures,,2020-03-20
10.1109/CLUSTER.2012.11,Performance Analysis of Parallel Processing Systems with Horizontal Decomposition,,2018-03-20
10.1016/0167-8191(94)90058-2,Performance Analysis of Parallel Programs Based on Model Calculations,,2019-03-20
10.1007/978-3-540-68982-9_11,A Response Time Distribution Model for Zoned RAID,,2011-03-20
10.1007/978-3-642-78495-8_7,Modellierungs- und Bewertungskonzepte fuer ODP-Architekturen,,2019-03-20
10.1109/HICSS.1993.284067,Approximate analysis of the average delay in parallel program execution,,2018-03-20
10.1007/978-3-322-86771-1_12,Leistungsbewertung von Parallelrechnersystemen,,2013-03-20
10.25596/jalc-2009-187,An Efficient Derivation Method for DTOL Systems and a Measure of Derivation Complexity,,2016-03-20
10.25596/jalc-2005-061,Some New Aspects of Word-Length Controlled DT0L Systems,,2018-03-20
10.1613/jair.1.11375,Dynamic Controllability of Controllable Conditional Temporal Problems with Uncertainty,,2016-03-20
10.4230/LIPIcs.TIME.2017.23,Conditional Simple Temporal Networks with Uncertainty and Decisions,,2013-03-20
10.5220/0006553400410052,Constraint Networks Under Conditional Uncertainty,,2017-03-20
10.1007/978-3-030-05453-3_7,Conditional Uncertainty in Constraint Networks,,2020-03-20
10.5220/0006185701180131,Access Controlled Temporal Networks,,2019-03-20
10.24963/ijcai.2018/184,Simpler and Faster Algorithm for Checking the Dynamic Consistency of Conditional Simple Temporal Networks,,2013-03-20
10.1613/JAIR.1.11453,Conditional Simple Temporal Networks with Uncertainty and Resources,,2013-03-20
10.4230/LIPIcs.TIME.2017.9,Incorporating Decision Nodes into Conditional Simple Temporal Networks,,2019-03-20
10.1007/978-3-319-61252-2_8,Verifying Controllability of Time-Aware Business Processes,,2014-03-20
10.1007/978-3-319-65000-5_14,Weak  Strong and Dynamic Controllability of Access-Controlled Workflows Under Conditional Uncertainty,,2011-03-20
10.3233/IA-170112,Disjunctive temporal networks with uncertainty via SMT: Recent results and directions,,2012-03-20
10.1007/s42979-020-00242-8,Conditional Schedules for Processes with Temporal Constraints,,2015-03-20
10.4230/LIPIcs.TIME.2018.18,GSM+T: A Timed Artifact-Centric Process Model,,2015-03-20
10.1007/978-3-030-35653-8_11,Computing History-Dependent Schedules for Processes with Temporal Constraints,,2020-03-20
10.4230/LIPIcs.TIME.2018.9,Extending Conditional Simple Temporal Networks with Partially Shrinkable Uncertainty,,2015-03-20
10.1016/J.TCS.2018.09.023,Conditional simple temporal networks with uncertainty and decisions,,2013-03-20
10.14273/UNISA-980,Scalable computational science,,2019-03-20
10.1007/978-1-84882-985-5_27,Motion Planning for Highly Constrained Spaces,,2014-03-20
10.1007/978-3-319-71237-6_13,Verified Root-Balanced Trees,,2014-03-20
10.1109/IPDPSW.2017.87,Work Partitioning on Parallel and Distributed Agent-Based Simulation,,2016-03-20
10.2478/s11532-006-0049-6,Studies of dehydration kinetics of Li2SO4·H2O by the master plots method,,2015-03-20
10.1007/978-3-319-11662-4_2,Cellular Tree Classifiers,,2011-03-20
10.1109/SISAP.2008.9,Similarity searching: Towards bulk-loading peer-to-peer networks,,2013-03-20
10.1007/978-3-642-28942-2_62,SpaGRID: A Spatial Grid Framework for High Dimensional Medical Databases,,2018-03-20
10.1109/ROBOT.2002.1013429,Efficient nearest neighbor searching for motion planning,,2015-03-20
10.4018/978-1-4666-8465-2.CH010,SPAM: An Effective and Efficient Spatial Algorithm for Mining Grid Data,,2020-03-20
10.2312/SM.20041411,Compression  segmentation  and modeling of filamentary volumetric data,,2017-03-20
10.1016/j.simpat.2018.09.002,Distributed MASON: A scalable distributed multi-agent simulation environment,,2013-03-20
10.1109/TRO.2006.886840,Improving Motion-Planning Algorithms by Efficient Nearest-Neighbor Searching,,2012-03-20
10.1007/11575801_26,Metadata Management in a Multiversion Data Warehouse,,2019-03-20
10.1287/ijoc.2017.0783,Efficient storage of Pareto points in biobjective mixed integer programming,,2018-03-20
10.1007/978-3-642-54423-1_64,Quad-K-d Trees,,2013-03-20
10.1017/CBO9780511546877,Planning algorithms,,2020-03-20
10.1007/978-3-642-11467-0_12,On Reversibility and Determinism in P Systems,,2017-03-20
10.1007/978-3-642-13523-1_6,Reversibility and Determinism in Sequential Multiset Rewriting,,2011-03-20
10.1007/s11047-011-9267-8,Sequential and maximally parallel multiset rewriting: reversibility and determinism,,2019-03-20
10.1016/j.ins.2014.05.043,Emergence of universal global behavior from reversible local transitions in asynchronous systems,,2016-03-20
10.1006/jcss.1998.1610,Stack Cooperation in Multistack Pushdown Automata,,2013-03-20
10.1142/S0218001499000318,Characterizing the Ability of Parallel Array Generators on Reversible Partitioned Cellular Automata,,2017-03-20
10.1142/9789812810908_0023,Generation and Parsing of Morphism Languages by Uniquely Parallel Parsable Grammars,,2017-03-20
10.1016/S0031-3203(98)00070-3,Uniquely parsable array grammars for generating and parsing connected patterns,,2012-03-20
10.1023/A:1009922905438,Uniquely Parsable Unification Grammars and Their Parser Implemented in Prolog,,2017-03-20
10.1007/978-3-319-89960-2,Tools and Algorithms for the Construction and Analysis of Systems,,2020-03-20
10.1007/978-3-642-15769-1_11,Automatic Abstraction for Intervals Using Boolean Formulae,,2018-03-20
10.1007/978-3-540-73580-9_10,Relaxation of Qualitative Constraint Networks,,2014-03-20
10.3166/RIA.20.31-62,Abstraction de réseaux de contraintes,,2014-03-20
10.1145/3299869.3320233,Coconut Palm: Static and Streaming Data Series Exploration Now in your Palm,,2014-03-20
10.14778/2732951.2732958,Storage Management in AsterixDB,,2013-03-20
10.1109/SRDS.2014.43,ACaZoo: A Distributed Key-Value Store Based on Replicated LSM-Trees,,2015-03-20
10.1145/3035918.3056103,Spanner: Becoming a SQL System,,2012-03-20
10.1145/3212477.3220266,Algorithms Behind Modern Storage Systems,,2018-03-20
10.1177/1094342019847264,Implementing efficient data compression and encryption in a persistent key-value store for HPC,,2018-03-20
10.1109/TPDS.2018.2864209,LSM-Tree Managed Storage for Large-Scale Key-Value Store,,2016-03-20
10.1145/2882903.2912569,Design Tradeoffs of Data Access Methods,,2019-03-20
10.5220/0005924003600367,KVFS: An HDFS Library over NoSQL Databases,,2018-03-20
10.14279/depositonce-6179,Security trade-offs in Cloud storage systems,,2016-03-20
10.18452/16660,Snapshots in large-scale distributed file systems,,2012-03-20
10.1002/cpe.3528,A high‐performance distributed file system for large‐scale concurrent HD video streams,,2015-03-20
10.1007/s11390-018-1813-8,Indexing Techniques of Distributed Ordered Tables: A Survey and Analysis,,2015-03-20
10.14778/3329772.3329773,k/2-hop: Fast Mining of Convoy Patterns With Effective Pruning,,2015-03-20
10.1109/HPCC/SmartCity/DSS.2019.00287,Exploring Cascaded Write Amplification in LSM-Tree Based Key-Value Stores with Solid-State Disks,,2020-03-20
10.1109/SC.Companion.2012.372,A Case for Scaling HPC Metadata Performance through De-specialization,,2011-03-20
10.1145/3276980,Optimal Bloom Filters and Adaptive Merging for LSM-Trees,,2016-03-20
10.5392/JKCA.2013.13.09.028,A Flash Memory B+-Tree for Efficient Range Searches,,2011-03-20
10.14778/3358701.3358707,Optimal Column Layout for Hybrid Workloads,,2018-03-20
10.1145/3318464.3383133,Key-Value Storage Engines,,2012-03-20
10.1145/3274895.3274961,DISTIL: a distributed in-memory data processing system for location-based services,,2012-03-20
10.18420/btw2019-06,Waves of Misery After Index Creation,,2019-03-20
10.1007/b100357,Network and Parallel Computing,,2018-03-20
10.1109/COMPSAC.2013.40,pLSM: A Highly Efficient LSM-Tree Index Supporting Real-Time Big Data Analysis,,2019-03-20
10.14778/3384345.3384356,Enabling low tail latency on multicore key-value stores,,2012-03-20
10.1145/1651263.1651270,Leveraging a scalable row store to build a distributed text index,,2019-03-20
10.1145/3302424.3303967,URSA: Hybrid Block Storage for Cloud-Scale Virtual Disks,,2018-03-20
10.1109/IISWC.2014.6983048,Towards realistic benchmarking for cloud file systems: Early experiences,,2019-03-20
10.13016/ET1E-WJQP,ALGORITHMS AND DATA STRUCTURES FOR INDEXING  QUERYING  AND ANALYZING LARGE COLLECTIONS OF SEQUENCING DATA IN THE PRESENCE OR ABSENCE OF A REFERENCE,,2013-03-20
10.1145/2741948.2741973,Scaling concurrent log-structured data stores,,2018-03-20
10.1145/3035918.3054777,Data Structure Engineering For Byte-Addressable Non-Volatile Memory,,2018-03-20
10.1007/s10766-016-0472-z,dCompaction: Delayed Compaction for the LSM-Tree,,2015-03-20
10.1109/FAS-W.2019.00049,An I/O Isolation Scheme for Key-Value Store on Multiple Solid-State Drives,,2016-03-20
10.1145/2786758,TRIFL: A Generic Trajectory Index for Flash Storage,,2013-03-20
10.1109/SMC.2016.7844471,Optimization of a multiversion index on SSDs to improve system performance,,2012-03-20
10.1109/TKDE.2018.2825349,Efficient Evaluation of Multi-Column Selection Predicates in Main-Memory,,2016-03-20
10.14778/3352063.3352143,Couchbase Analytics: NoETL for Scalable NoSQL Data Analysis,,
10.14778/1454159.1454236,Towards efficient main-memory use for optimum tree index update,,2014-03-20
10.1109/CloudCom.2013.16,Managing Service Performance in the Cassandra Distributed Storage System,,2014-03-20
10.1093/bioinformatics/btw531,CGDM: collaborative genomic data model for molecular profiling data using NoSQL,,2013-03-20
10.1007/978-3-319-25255-1_69,A Fast Data Ingestion and Indexing Scheme for Real-Time Log Analytics,,2011-03-20
10.1145/3119897,Application Crash Consistency and Performance with CCFS,,2014-03-20
10.1109/ASP-DAC47756.2020.9045144,Parallel-Log-Single-Compaction-Tree: Flash-Friendly Two-Level Key-Value Management in KVSSDs,,2018-03-20
10.14778/3415478.3415547,Helios: Hyperscale Indexing for the Cloud & Edge,,2018-03-20
10.1145/3401071.3401659,RadixSpline: a single-pass learned index,,2011-03-20
10.1109/PCCC.2010.5682311,Loosely time-synchronized snapshots in object-based file systems,,2015-03-20
10.1145/1871437.1871460,Online update of b-trees,,2018-03-20
10.1145/2038916.2038925,YCSB++: benchmarking and performance debugging advanced features in scalable table stores,,2019-03-20
10.1145/2396761.2398437,A practical concurrent index for solid-state drives,,2011-03-20
10.1145/2038916.2038917,An efficient multi-tier tablet server storage architecture,,2014-03-20
10.14778/2536222.2536226,Making Updates Disk-I/O Friendly Using SSDs,,2013-03-20
10.1007/s10707-016-0255-0,Mining spatiotemporal co-occurrence patterns in non-relational databases,,2020-03-20
10.1007/s40595-014-0027-4,Zing Database: high-performance key-value store for large-scale storage service,,2018-03-20
10.1007/978-3-642-39467-6_9,Append Storage in Multi-Version Databases on Flash,,2011-03-20
10.1145/3127479.3127486,LSM-Tree Managed Storage for Large-Scale Key-Value Store,,2019-03-20
10.1145/3032969,Writes Wrought Right  and Other Adventures in File System Optimization,,
10.1145/2664243.2664244,Lightweight authentication of freshness in outsourced key-value stores,,2016-03-20
10.1145/3358201,Enabling Sequential-write-constrained B+-tree Index Scheme to Upgrade Shingled Magnetic Recording Storage Performance,,2011-03-20
10.1145/3183713.3183723,Splaying Log-Structured Merge-Trees,,2012-03-20
10.1007/s13222-012-0099-1,Handling Big Data in Astronomy and Astrophysics: Rich Structured Queries on Replicated Cloud Data with XtreemFS,,2020-03-20
10.5220/0007834700410052,Distributed and Scalable Platform for Collaborative Analysis of Massive Time Series Data Sets,,2015-03-20
10.1109/CLOUD.2015.41,Policy-Driven Configuration Management for NoSQL,,2011-03-20
10.1007/978-3-319-63564-4_17,Precise Data Access on Distributed Log-Structured Merge-Tree,,2014-03-20
10.1587/TRANSINF.2015EDP7009,Distributed and Scalable Directory Service in a Parallel File System,,2012-03-20
10.1145/3380905,SILK+ Preventing Latency Spikes in Log-Structured Merge Key-Value Stores Running Heterogeneous Workloads,,2019-03-20
10.14778/3389133.3389135,The PGM-index,,2016-03-20
10.1109/CLOUD.2017.22,Leveraging Column Family to Improve Multidimensional Query Performance in HBase,,2012-03-20
10.1109/IIKI.2016.29,Optimization of Merge Policy in AsterixDB Big Data Management System,,2017-03-20
10.1145/3318464.3389731,Rosetta: A Robust Space-Time Optimized Range Filter for Key-Value Stores,,2013-03-20
10.1109/HPCC/SmartCity/DSS.2019.00146,NVLevel: A High Performance Key-Value Store for Non-Volatile Memory,,2017-03-20
10.1145/3309697.3331490,TeksDB: Weaving Data Structures for a High-Performance Key-Value Store,,2011-03-20
10.1145/3299869.3319896,FishStore: Faster Ingestion with Subset Hashing,,2012-03-20
10.1109/MSST.2016.7897082,Sorted deduplication: How to process thousands of backup streams,,2017-03-20
10.1109/TPDS.2018.2887380,Managing Rich Metadata in High-Performance Computing Systems Using a Graph Model,,2015-03-20
10.1007/s11704-018-7198-6,Fault-tolerant precise data access on distributed log-structured merge-tree,,2015-03-20
10.1587/TRANSINF.2016EDP7104,A Configuration Management Study to Fast Massive Writing for Distributed NoSQL System,,2020-03-20
10.1145/3297858.3304022,LightStore: Software-defined Network-attached Key-value Drives,,2014-03-20
10.1145/2339123.2339129,Dynamic Indexability and the Optimality of B-Trees,,2016-03-20
10.1145/3375660,Succinct Range Filters,,2015-03-20
10.1109/ICDE.2018.00168,RTSI: An Index Structure for Multi-Modal Real-Time Search on Live Audio Streaming Services,,2016-03-20
10.1007/s00778-019-00561-0,Morton filters: fast  compressed sparse cuckoo filters,,2012-03-20
10.1145/2213836.2213862,bLSM: a general purpose log structured merge tree,,2018-03-20
10.1145/2396761.2398594,A positional access method for relational databases,,2014-03-20
10.1145/3394486.3403361,Interleaved Sequence RNNs for Fraud Detection,,2011-03-20
10.1145/3126908.3126928,LocoFS: a loosely-coupled metadata service for distributed file systems,,2014-03-20
10.1109/CLOUD.2018.00070,Embedding Index Maintenance in Store Routines to Accelerate Secondary Index Building in HBase,,2019-03-20
10.1145/3337821.3337855,Near-Data Processing-Enabled and Time-Aware Compaction Optimization for LSM-tree-based Key-Value Stores,,2019-03-20
10.1145/3358955.3364509,Write Amplification Versus Read Perspiration,,2013-03-20
10.1007/978-3-319-91458-9_42,Incremental Materialized View Maintenance on Distributed Log-Structured Merge-Tree,,2016-03-20
10.14778/3231751.3231762,ForkBase: An Efficient Storage Engine for Blockchain and Forkable Applications,,2016-03-20
10.1145/2723372.2737788,Optimizing Optimistic Concurrency Control for Tree-Structured  Log-Structured Databases,,2012-03-20
10.14778/2311906.2311915,Minuet: A Scalable Distributed Multiversion B-Tree,,2017-03-20
10.1145/3265723.3265737,SyncGC: A Synchronized Garbage Collection Technique for Reducing Tail Latency in Cassandra,,2015-03-20
10.14778/1453856.1453961,Online maintenance of very large random samples on flash storage,,2013-03-20
10.1109/HiPC.2019.00039,IsoKV: An Isolation Scheme for Key-Value Stores by Exploiting Internal Parallelism in SSD,,2020-03-20
10.4018/978-1-5225-8446-9.CH002,JSON Data Management in RDBMS,,2012-03-20
10.1145/2723372.2746480,FOEDUS: OLTP Engine for a Thousand Cores and NVRAM,,2015-03-20
10.1109/ICDE.2019.00080,GEM^2-Tree: A Gas-Efficient Structure for Authenticated Range Queries in Blockchain,,2014-03-20
10.1145/3323165.3323210,Small Refinements to the DAM Can Have Big Consequences for Data-Structure Design,,2016-03-20
10.1109/MSST.2010.5496991,Design issues for a shingled write disk system,,2014-03-20
10.1109/CLUSTER.2015.14,Workload-Aware Resource Reservation for Multi-tenant NoSQL,,2018-03-20
10.1145/3265723.3265739,High-Performance Stateful Stream Processing on Solid-State Drives,,2017-03-20
10.14778/3415478.3415535,TiDB: A Raft-based HTAP Database,,2015-03-20
10.14778/3115404.3115405,Scalable Asynchronous Gradient Descent Optimization for Out-of-Core Models,,2015-03-20
10.1109/TKDE.2015.2419660,PB+-Tree: PCM-Aware B+-Tree,,2016-03-20
10.14778/3137765.3137778,PaxosStore: High-availability Storage Made Practical in WeChat,,2011-03-20
10.1109/TKDE.2014.5,\(\mathsf{B}^{p}\) - \(\mathsf{Tree}\) : A Predictive \(\mathsf{B}^{+}\) - \(\mathsf{Tree}\) for Reducing Writes on Phase Change Memory,,2019-03-20
10.1109/TrustCom.2016.0330,StageFS: A Parallel File System Optimizing Metadata Performance for SSD Based Clusters,,2012-03-20
10.1145/3282373.3282402,Efficient Data and Indexing Structure for Blockchains in Enterprise Systems,,2017-03-20
10.1145/3076113.3076123,An analysis of LSM caching in NVRAM,,2014-03-20
10.14778/3213880.3213884,Morton Filters: Faster  Space-Efficient Cuckoo Filters via Biasing  Compression  and Decoupled Logical Sparsity,,2012-03-20
10.1145/3419635.3419649,A Novel Scalable Distributed Database System,,2011-03-20
10.1145/2757667.2757680,SMRDB: key-value data store for shingled magnetic recording disks,,2013-03-20
10.1145/3143361.3143391,Hermes: Providing Tight Control over High-Performance SDN Switches,,2016-03-20
10.1145/3371316.3371335,Succinct Range Filters,,2011-03-20
10.1007/s10586-018-1916-6,Word recommendation for English composition using big corpus data processing,,2016-03-20
10.1145/3267809.3267829,SifrDB: A Unified Solution for Write-Optimized Key-Value Stores in Large Datacenter,,2018-03-20
10.1016/j.micpro.2020.103217,Cascaded Write Amplification of LSM-tree-based Key-Value Stores underlying Solid-State Disks,,2012-03-20
10.1145/3151759.3151779,Multi-version indexing and modern hardware technologies: a survey of present indexing approaches,,2015-03-20
10.2200/S00891ED1V01Y201812DTM055,Non-Volatile Memory Database Management Systems,,2016-03-20
10.1007/978-3-662-58820-8_21,Lightweight Blockchain Logging for Data-Intensive Applications,,2011-03-20
10.1109/ACCESS.2020.3017651,RangeKV: An Efficient Key-Value Store Based on Hybrid DRAM-NVM-SSD Storage Structure,,2013-03-20
10.5441/002/edbt.2018.65,L-Store: A Real-time OLTP and OLAP System,,2018-03-20
10.1109/MSST.2015.7208288,Atlas: Baidu's key-value storage system for cloud data,,2019-03-20
10.1109/ISPDC.2015.33,Rethinking HBase: Design and Implementation of an Elastic Key-Value Store over Log-Structured Local Volumes,,2018-03-20
10.1109/AQTR.2014.6857846,WaterfallTree — External indexing data structure,,2013-03-20
10.3390/sym10120698,An Intelligent Approach for Handling Complexity by Migrating from Conventional Databases to Big Data,,2015-03-20
10.1145/3373376.3378504,Hailstorm: Disaggregated Compute and Storage for Distributed LSM-based Databases,,2015-03-20
10.1101/2019.12.24.888297,VariantStore: A Large-Scale Genomic Variant Search Index,,2019-03-20
10.1109/SC.2014.25,IndexFS: Scaling File System Metadata Performance with Stateless Caching and Bulk Insertion,,2015-03-20
10.1109/ICPADS51040.2020.00011,LTG-LSM: The Optimal Structure in LSM-tree Combined with Reading Hotness,,2016-03-20
10.1109/IHMSC.2018.10178,Understanding Write Character of Write-Optimization File System,,2012-03-20
10.1184/R1/6721394.V1,Scale and Concurrency of Massive File System Directories,,2017-03-20
10.3929/ETHZ-A-005747645,Performance tradeoffs in write-optimized databases,,2020-03-20
10.1007/s11227-018-2277-x,Emergent models  frameworks  and hardware technologies for Big data analytics,,2017-03-20
10.1145/3365839,PBS: An Efficient Erasure-Coded Block Storage System Based on Speculative Partial Writes,,2012-03-20
10.1145/2592798.2592804,An efficient design and implementation of LSM-tree based key-value store on open-channel SSD,,2016-03-20
10.1145/3126908.3126943,PapyrusKV: a high-performance parallel key-value store for distributed NVM architectures,,2014-03-20
10.1007/978-3-319-66917-5_22,Rethinking DRAM Caching for LSMs in an NVRAM Environment,,2020-03-20
10.1002/spe.2875,Improving LSM‐trie performance by parallel search,,2020-03-20
10.1109/IPDPS47924.2020.00104,FlashKey:A High-Performance Flash Friendly Key-Value Store,,2019-03-20
10.1007/978-3-319-63962-8_257-1,Wildfire: HTAP for Big Data,,2018-03-20
10.14778/2735471.2735477,Pregelix: Big(ger) Graph Analytics on a Dataflow Engine,,2017-03-20
10.1145/1376616.1376693,Efficient bulk insertion into a distributed ordered table,,2012-03-20
10.1109/CLOUD.2018.00090,Efficient Key-Value Stores with Ranged Log-Structured Merge Trees,,2016-03-20
10.1007/978-3-319-10933-6_11,A Demand-Driven Bulk Loading Scheme for Large-Scale Social Graphs,,2013-03-20
10.1109/CLUSTER.2015.100,Towards Building a Lightweight Key-Value Store on Parallel File System,,2016-03-20
10.1109/FOCS46700.2020.00071,Lazy Search Trees,,2018-03-20
10.1007/S00521-020-05336-1,Efficient locality-sensitive hashing over high-dimensional streaming data,,2015-03-20
10.5441/002/edbt.2019.02,Umzi: Unified Multi-Zone Indexing for Large-Scale HTAP,,2018-03-20
10.1109/COMPSAC.2009.100,Efficient Management of Consistent Backups in a Distributed File System,,2018-03-20
10.1007/s11280-016-0430-0,Top-k temporal keyword search over social media data,,2020-03-20
10.1007/978-3-642-33500-6_5,Relax and Let the Database Do the Partitioning Online,,2017-03-20
10.1007/978-3-319-32049-6_15,An I/O-Efficient Buffer Batch Replacement Policy for Update-Intensive Graph Databases,,2014-03-20
10.1145/3299869.3319903,The Log-Structured Merge-Bush & the Wacky Continuum,,2013-03-20
10.3929/ETHZ-A-007579172,Indexing and search on complex data warehouses and rapidly-changing data,,2019-03-20
10.1145/2076623.2076629,FB-tree: a B+-tree for flash-based SSDs,,2018-03-20
10.1109/TPDS.2019.2918219,SEALDB: An Efficient LSM-tree Based KV Store on SMR Drives with Sets and Dynamic Bands,,2015-03-20
10.1145/3267809.3275456,RangeQC: A Framework for Caching Range Predicate Query Results,,2015-03-20
10.1109/SRDSW49218.2019.00009,A Case for Dynamically Programmable Storage Background Tasks,,2015-03-20
10.1109/ICDE.2015.7113298,LLAMA: Efficient graph analytics using Large Multiversioned Arrays,,2017-03-20
10.1109/ICDE.2017.121,On Log-Structured Merge for Solid-State Drives,,2011-03-20
10.1145/3404397.3404472,DIESEL: A Dataset-Based Distributed Storage and Caching System for Large-Scale Deep Learning Training,,2013-03-20
10.1145/3318158,Solar: Towards a Shared-Everything Database on Distributed Log-Structured Storage,,2012-03-20
10.14778/2733085.2733096,AsterixDB: A Scalable  Open Source BDMS,,2011-03-20
10.1007/s11704-015-4560-9,Adaptive and scalable load balancing for metadata server cluster in cloud-scale file systems,,2015-03-20
10.1109/TCAD.2020.2982623,Temperature-Aware Persistent Data Management for LSM-Tree on 3-D NAND Flash Memory,,2015-03-20
10.1145/2592798.2592823,From application requests to virtual IOPs: provisioned key-value storage with Libra,,2016-03-20
10.1145/1559795.1559825,Dynamic indexability and lower bounds for dynamic one-dimensional range query indexes,,2014-03-20
10.1007/978-981-10-6520-0_15,MultiPath MultiGet: An Optimized Multiget Method Leveraging SSD Internal Parallelism,,2011-03-20
10.1137/1.9781611973075.12,On the cell probe complexity of dynamic membership,,2018-03-20
10.1007/S00778-009-0164-Z,Online maintenance of very large random samples on flash storage,,2018-03-20
10.1109/BigData.Congress.2013.51,Benchmarking Apache Accumulo BigData Distributed Table Store Using Its Continuous Test Suite,,2020-03-20
10.1145/3322205.3311079,TeksDB: Weaving Data Structures for a High-Performance Key-Value Store,,2012-03-20
10.23919/DATE.2018.8342070,KVSSD: Close integration of LSM trees and flash translation layer for write-efficient KV store,,2012-03-20
10.1007/s13222-018-0301-1,Data Management on Non-Volatile Memory: A Perspective,,2020-03-20
10.1145/3012071.3012104,RDF-4X: a scalable solution for RDF quads store in the cloud,,2017-03-20
10.1145/2523616.2523625,Memory-efficient groupby-aggregate using compressed buffer trees,,2015-03-20
10.1093/gigascience/giy052,Optimized distributed systems achieve significant performance improvement on sorted merging of massive VCF files,,2020-03-20
10.14778/2732286.2732290,Lightweight Indexing of Observational Data in Log-Structured Storage,,2012-03-20
10.1109/ICDCS.2018.00147,Replica-Group Leadership Change as a Performance Enhancing Mechanism in NoSQL Data Stores,,2018-03-20
10.1109/HPCC/SmartCity/DSS.2019.00123,Improving Read Performance of LSM-Tree Based KV Stores via Dual Grained Caches,,2011-03-20
10.1007/978-3-662-58820-8,Financial Cryptography and Data Security: FC 2018 International Workshops  BITCOIN  VOTING  and WTSC  Nieuwpoort  Curaçao  March 2  2018  Revised Selected Papers,,2011-03-20
10.3929/ETHZ-B-000187431,Tell: An Elastic Database System for Mixed Workloads,,2015-03-20
10.3745/KTSDE.2016.5.4.171,An Update-Efficient  Disk-Based Inverted Index Structure for Keyword Search on Data Streams,,2012-03-20
10.1145/1989323.1989438,Apache hadoop goes realtime at Facebook,,2014-03-20
10.1145/1629575.1629590,Modular data storage with Anvil,,2020-03-20
10.1109/IPDPSW.2017.92,The Consistency Analysis of Secondary Index on Distributed Ordered Tables,,2015-03-20
10.3390/app9183801,Constructing a Lightweight Key-Value Store Based on the Windows Native Features,,2018-03-20
10.1007/978-3-642-12098-5_22,Update Migration: An Efficient B+ Tree for Flash Storage,,2019-03-20
10.1145/3319369,Mitigating Synchronous I/O Overhead in File Systems on Open-Channel SSDs,,2015-03-20
10.25236/icidel.2017.082,The Design and Implementation on Distributed System,,2019-03-20
10.14778/3025111.3025117,The TileDB Array Data Storage Manager,,2019-03-20
10.1145/3399666.3399934,nKV: near-data processing with KV-stores on native computational storage,,2015-03-20
10.1145/3400903.3400927,STILT: Unifying Spatial  Temporal and Textual Search using a Generalized Multi-dimensional Index,,2014-03-20
10.1109/eScience.2018.00037,Building NDStore Through Hierarchical Storage Management and Microservice Processing,,2017-03-20
10.1145/3064176.3064193,FloDB: Unlocking Memory in Persistent Key-Value Stores,,2011-03-20
10.1145/2688500.2688547,The lock-free k-LSM relaxed priority queue,,2019-03-20
10.1145/3162615,A Low-cost Disk Solution Enabling LSM-tree to Achieve High Performance for Mixed Read/Write Workloads,,2019-03-20
10.1145/3211890.3211899,Inkpack: A Secure  Data-Exposure Resistant Storage System,,2019-03-20
10.1109/MASCOTS.2019.00048,iLSM-SSD: An Intelligent LSM-Tree Based Key-Value SSD for Data Analytics,,2013-03-20
10.1109/BigData47090.2019.9006240,Experimental Evaluation of Bounded-Depth LSM Merge Policies,,2014-03-20
10.1101/217372,Mantis: A Fast  Small  and Exact Large-Scale Sequence-Search Index,,2017-03-20
10.1007/978-3-030-05051-1_7,A Priority and Fairness Mixed Compaction Scheduling Mechanism for LSM-tree Based KV-Stores,,2014-03-20
10.1007/978-3-642-02982-0_14,Indexing Moving Objects Using Short-Lived Throwaway Indexes,,2018-03-20
10.1137/1.9781611975482.155,Optimal Ball Recycling,,2012-03-20
10.14778/3397230.3397236,An LSM-based tuple compaction framework for Apache AsterixDB,,2017-03-20
10.1145/3423495,Copy-on-Abundant-Write for Nimble File System Clones,,2017-03-20
10.1109/ICDCS47774.2020.00113,Kill Two Birds with One Stone: Auto-tuning RocksDB for High Bandwidth and Low Latency,,2015-03-20
10.1007/978-3-030-54595-6,Data Management Technologies and Applications: 8th International Conference  DATA 2019  Prague  Czech Republic  July 26–28  2019  Revised Selected Papers,,2020-03-20
10.14778/3007263.3007319,Operational Analytics Data Management Systems,,2012-03-20
10.1145/3337821.3337836,On Integration of Appends and Merges in Log-Structured Merge Trees,,2017-03-20
10.1109/ACCESS.2018.2831259,FlameDB: A Key-Value Store With Grouped Level Structure and Heterogeneous Bloom Filter,,2012-03-20
10.1109/MDM.2019.00-66,Toward Efficient Processing of Spatio-Temporal Workloads in a Distributed In-Memory System,,2016-03-20
10.1109/ACCESS.2020.2985407,TLSM: Tiered Log-Structured Merge-Tree Utilizing Non-Volatile Memory,,2011-03-20
10.1109/TKDE.2017.2651803,Advanced Block Nested Loop Join for Extending SSD Lifetime,,2018-03-20
10.1109/tkde.2007.250586,Online Random Shuffling of Large Database Tables,,2016-03-20
10.1145/3151759.3151814,Write-optimized indexing with partitioned b-trees,,2016-03-20
10.1109/SC.2018.00006,Scaling Embedded In-Situ Indexing with DeltaFS,,2015-03-20
10.1145/3158661,A Survey on NoSQL Stores,,2014-03-20
10.1109/TC.2015.2417539,Rotated Logging Storage Architectures for Data Centers: Models and Optimizations,,2016-03-20
10.14778/3137628.3137659,Fast Scans on Key-Value Stores,,2019-03-20
10.1007/s41019-016-0026-9,An I/O-Efficient Buffer Batch Replacement Policy for Update-Intensive Graph Databases,,2014-03-20
10.1145/2405178.2405183,Managing service performance in NoSQL distributed storage systems,,2018-03-20
10.14778/3137765.3137795,DITIR: Distributed Index for High Throughput Trajectory Insertion and Real-time Temporal Range Query,,2011-03-20
10.1145/2699484,Online Updates on Data Warehouses via Judicious Use of Solid-State Storage,,2020-03-20
10.1145/3318464.3384399,Breaking Down Memory Walls in LSM-based Storage Systems,,2019-03-20
10.21236/ada603410,GraphChi: Large-Scale Graph Computation on Just a PC,,2012-03-20
10.1145/2786006.2786007,LSM-Based Storage and Indexing: An Old Idea with Timely Benefits,,2013-03-20
10.14778/3352063.3352141,Cloud native database systems at Alibaba: Opportunities and Challenges,,2015-03-20
10.1109/ICCT46805.2019.8947217,An Optimization of Key-Value Store Based on Segmented LSM-Tree,,2011-03-20
10.2298/CSIS160830014J,A flash-aware buffering scheme with the on-the-fly redo for efficient data management in flash storage,,2014-03-20
10.1109/ACCESS.2020.3031322,Level Aware Data Placement Technique for Hybrid NAND Flash Storage of Log-Structured Merge-Tree Based Key-Value Store System,,2011-03-20
10.3389/fncir.2019.00005,DVID: Distributed Versioned Image-Oriented Dataservice,,2014-03-20
10.1145/3183713.3183761,Lightweight Cardinality Estimation in LSM-based Systems,,2012-03-20
10.1145/3373376.3378515,FlatStore: An Efficient Log-Structured Key-Value Storage Engine for Persistent Memory,,2011-03-20
10.1109/ACCESS.2020.3017135,Video Big Data Analytics in the Cloud: A Reference Architecture  Survey  Opportunities  and Open Research Issues,,2014-03-20
10.1109/eScience.2017.39,Improving Small File I/O Performance for Massive Digital Archives,,2012-03-20
10.1109/BigData.2014.7004441,A relational database schema on the transactional key-value store scalaris,,2011-03-20
10.1145/2247596.2247598,"Inside ""Big Data management"": ogres  onions  or parfaits?",,2017-03-20
10.1109/NAS.2011.32,Efficient  Modular Metadata Management with Loris,,2015-03-20
10.1145/2932194.2932199,An index scheme for fast data stream to distributed append-only store,,2016-03-20
10.1109/CCGrid.2016.55,KVLight: A Lightweight Key-Value Store for Distributed Access in Cloud,,2019-03-20
10.1109/BigData47090.2019.9006189,A robust  efficient  and balanced parallel algorithm for finding connected components,,2020-03-20
10.1101/343970,GLnexus: joint variant calling for large cohort sequencing,,2013-03-20
10.1145/3126545,FlashKV: Accelerating KV Performance with Open-Channel SSDs,,2011-03-20
10.1145/3315507.3330197,Fluid data structures,,2015-03-20
10.1145/3267809.3267846,Mutant: Balancing Storage Cost and Latency in LSM-Tree Data Stores,,2011-03-20
10.14778/3007263.3007269,Cubrick: Indexing Millions of Records per Second for Interactive Analytics,,2013-03-20
10.14778/3415478.3415553,F1 lightning,,2015-03-20
10.1002/9781119376996.CH8,Data Storage and Management for Big Multimedia,,2020-03-20
10.1145/3019612.3019697,Decaying inverted quadtree: index structure for supporting spatio-temporal-keyword query processing of microblog data,,2019-03-20
10.1007/s00778-019-00555-y,LSM-based storage techniques: a survey,,2019-03-20
10.1145/2812428.2812429,Database technologies in the world of big data,,2011-03-20
10.1145/2806777.2806844,ShardFS vs. IndexFS: replication vs. caching strategies for distributed metadata management in cloud storage systems,,2012-03-20
10.1145/2597917.2597921,Chameleon: a data organization transformation scheme for big data systems,,2019-03-20
10.1145/3318464.3380598,Timely Reporting of Heavy Hitters using External Memory,,2012-03-20
10.1145/2882903.2915222,Reducing the Storage Overhead of Main-Memory OLTP Databases with Hybrid Indexes,,2013-03-20
10.1109/ipdps.2018.00053,GPU LSM: A Dynamic Dictionary Data Structure for the GPU,,2012-03-20
10.1109/TC.2020.2987569,A Case for Application-Managed Flash,,2020-03-20
10.14778/3415478.3415546,MyRocks: LSM-Tree Database Storage Engine Serving Facebook's Social Graph,,2012-03-20
10.1109/BigDataService49289.2020.00036,Data Structure for Packet De-Duplication in Distributed Environments,,2016-03-20
10.1007/s10707-011-0122-y,MOVIES: indexing moving objects by shooting index images,,2011-03-20
10.1145/3132747.3132770,Strata: A Cross Media File System,,2011-03-20
10.1145/3063955.3063977,NIOSIT: efficient data access for log-structured merge-tree style storage systems,,2011-03-20
10.1145/2798729,BetrFS: Write-Optimization in a Kernel File System,,2014-03-20
10.1109/SC.2016.48,Týr: Blob Storage Meets Built-In Transactions,,2019-03-20
10.1109/ICDE.2015.7113277,PABIRS: A data access middleware for distributed file systems,,2020-03-20
10.1109/TC.2015.2435779,ForestDB: A Fast Key-Value Storage System for Variable-Length String Keys,,2018-03-20
10.1109/PDCAT.2017.00074,Optimization of LevelDB by Separating Key and Value,,2016-03-20
10.1145/3341301.3359628,KVell: the design and implementation of a fast persistent key-value store,,2016-03-20
10.1109/TPDS.2019.2891599,BiloKey : A Scalable Bi-Index Locality-Aware In-Memory Key-Value Store,,2012-03-20
10.1109/ICDE.2016.7498332,A column store engine for real-time streaming analytics,,2018-03-20
10.1145/2348283.2348318,Index maintenance for time-travel text search,,2018-03-20
10.1007/978-3-030-23502-4_24,CPR: Client-Side Processing of Range Predicates,,2016-03-20
10.1109/HPCC/SmartCity/DSS.2019.00389,RadixKV: A Memory Efficient and High Performance Key-Value Store,,2013-03-20
10.1145/3341301.3359636,Fast and secure global payments with Stellar,,2013-03-20
10.1109/ISPASS48437.2020.00035,Evaluating Intel 3D-Xpoint NVDIMM Persistent Memory in the Context of a Key-Value Store,,2013-03-20
10.14778/2536206.2536215,LLAMA: A Cache/Storage Subsystem for Modern Hardware,,2014-03-20
10.1109/SocialCom.2013.7,Scaling deep social feeds at Pinterest,,2017-03-20
10.1145/2857274.2884038,Immutability Changes Everything,,2019-03-20
10.4108/ICST.COLLABORATECOM.2014.257304,HConfig: Resource adaptive fast bulk loading in HBase,,2014-03-20
10.1109/ICBDA.2019.8713219,Query Optimization of Massive Social Network Data Based on HBase,,2016-03-20
10.5441/002/edbt.2016.42,Designing Access Methods: The RUM Conjecture,,2012-03-20
10.24251/HICSS.2017.206,The RADStack: Open Source Lambda Architecture for Interactive Analytics,,2017-03-20
10.1145/3035918.3064054,Monkey: Optimal Navigable Key-Value Store,,2011-03-20
10.1109/MSST.2010.5496992,dedupv1: Improving deduplication throughput using solid state drives (SSD),,2017-03-20
10.1109/ICDE.2009.226,Tree Indexing on Flash Disks,,2016-03-20
10.1145/2811222.2811235,Big Data Design,,2016-03-20
10.1137/1.9781611974782.99,Cross-Referenced Dictionaries and the Limits of Write Optimization,,2019-03-20
10.1016/j.ins.2012.12.018,An efficient B+-tree design for main-memory database systems with strong access locality,,2016-03-20
10.1145/3415581,Streaming Data Reorganization at Scale with DeltaFS Indexed Massive Directories,,2013-03-20
10.1145/2588555.2595631,Druid: a real-time analytical data store,,2016-03-20
10.1145/3359334,The trade-offs between write and read,,2020-03-20
10.1109/ACCESS.2020.3016680,CaseDB: Lightweight Key-Value Store for Edge Computing Environment,,2017-03-20
10.14778/3025111.3025124,Estimating Quantiles from the Union of Historical and Streaming Data,,2018-03-20
10.1109/IPDPS.2017.39,MetaKV: A Key-Value Store for Metadata Management of Distributed Burst Buffers,,2014-03-20
10.1016/j.cels.2018.05.021,Mantis: A Fast  Small  and Exact Large-Scale Sequence-Search Index.,,2019-03-20
10.1016/j.is.2017.01.002,Upscaledb: Efficient integer-key compression in a key-value store using SIMD instructions,,2013-03-20
10.1145/2834976.2834984,DeltaFS: exascale file systems scale better without dedicated servers,,2015-03-20
10.1145/3162614,OrcFS: Orchestrated File System for Flash Storage,,2017-03-20
10.1145/3139922,Building Efficient Key-Value Stores via a Lightweight Compaction Tree,,2011-03-20
10.1109/COMPSAC.2019.00046,HeteroTSDB: An Extensible Time Series Database for Automatically Tiering on Heterogeneous Key-Value Stores,,2011-03-20
10.1145/1989323.1989414,MaSM: efficient online updates in data warehouses,,2017-03-20
10.3390/electronics9111913,InK: In-Kernel Key-Value Storage with Persistent Memory,,2013-03-20
10.1109/ACCESS.2019.2943876,EdgeDB: An Efficient Time-Series Database for Edge Computing,,2014-03-20
10.14778/3402707.3402732,Optimistic concurrency control by melding trees,,2013-03-20
10.1109/NAS.2016.7549425,Workload Shifting: Contention-Insular Disk Arrays for Big Data Systems,,2014-03-20
10.1145/2882903.2882910,SHARE Interface in Flash Storage for Relational and NoSQL Databases,,2014-03-20
10.14778/3275366.3275373,FineLine: log-structured transactional storage and recovery,,2018-03-20
10.14778/2757807.2757810,Compaction Management in Distributed Key-Value Datastores,,2012-03-20
10.1145/3132747.3132765,PebblesDB: Building Key-Value Stores using Fragmented Log-Structured Merge Trees,,2011-03-20
10.1145/3342357,ChronicleDB: A High-Performance Event Store,,2011-03-20
10.1007/s10619-018-7252-2,PLI$$^+$$+: efficient clustering of cloud databases,,2012-03-20
10.5392/JKCA.2016.16.08.706,An Efficient Flash Memory B-Tree Supporting Very Cheap Node Updates,,2015-03-20
10.1145/3423211.3425672,JellyFish: A Fast Skip List with MVCC,,2016-03-20
10.1145/3149393.3149398,Software-defined storage for fast trajectory queries using a deltaFS indexed massive directory,,2014-03-20
10.1145/3342195.3387535,A fault-tolerance shim for serverless computing,,2016-03-20
10.1007/978-3-319-63962-8_168-1,Structures for Large Data Sets,,2015-03-20
10.1145/3282825.3282830,Improving Parallel Performance of Temporally Relevant Top-K Spatial Keyword Search,,2020-03-20
10.14778/3372716.3372717,DPTree: Differential Indexing for Persistent Memory,,2019-03-20
10.1109/IPDPS.2014.85,Pipelined Compaction for the LSM-Tree,,2011-03-20
10.14778/3303753.3303759,Efficient Data Ingestion and Query Processing for LSM-Based Storage Systems,,2012-03-20
10.1145/3419111.3421289,ByteSeries: an in-memory time series database for large-scale monitoring systems,,2013-03-20
10.1007/s10617-014-9139-4,LSB-Tree: a log-structured B-Tree index structure for NAND flash SSDs,,2011-03-20
10.14778/2777598.2777600,A Scalable Search Engine for Mass Storage Smart Objects,,2019-03-20
10.1007/978-981-15-8135-9,Advanced Computer Architecture: 13th Conference  ACA 2020  Kunming  China  August 13–15  2020  Proceedings,,2013-03-20
10.17863/CAM.33349,Kafka  Samza and the Unix Philosophy of Distributed Data,,2014-03-20
10.1109/tkde.2015.2419660,PB<sup><bold>+</bold></sup>-Tree: PCM-Aware B<sup><bold>+</bold></sup>-Tree,,2012-03-20
10.1109/ICDE.2019.00195,DirectLoad: A Fast Web-Scale Index System Across Large Regional Centers,,2016-03-20
10.1109/HPCA.2017.15,KAML: A Flexible  High-Performance Key-Value SSD,,2016-03-20
10.1007/s11704-019-8234-x,Partition pruning for range query on distributed log-structured merge-tree,,2011-03-20
10.1109/TPDS.2018.2842183,A Flattened Metadata Service for Distributed File Systems,,2014-03-20
10.1002/nem.2099,FastFabric: Scaling hyperledger fabric to 20 000 transactions per second,,2016-03-20
10.1109/ICDE.2016.7498260,Self-Adaptive Linear Hashing for solid state drives,,2014-03-20
10.14778/1920841.1920990,Tree indexing on solid state drives,,2019-03-20
10.1145/3125497,Redundancy Does Not Imply Fault Tolerance,,2019-03-20
10.1007/978-981-15-8135-9_13,NV-BSP: A Burst I/O Storage Pool Based on NVMe SSDs,,2013-03-20
10.1109/TETC.2017.2787341,LibreKV: A Persistent in-Memory Key-Value Store,,2012-03-20
10.1145/2513591.2513640,Read optimisations for append storage on flash,,2018-03-20
10.14778/1453856.1453914,Rose: compressed  log-structured replication,,2018-03-20
10.1109/ICDE.2011.5767830,Partitioning techniques for fine-grained indexing,,2018-03-20
10.1145/3149457.3149468,Efficient dentry lookup with backward finding mechanism,,2012-03-20
10.1145/3211922.3211927,Cost/Performance in Modern Data Stores: How Data Caching Systems Succeed,,2014-03-20
10.1145/1807167.1807227,Positional update handling in column stores,,2018-03-20
10.1109/ICSESS.2018.8663897,Deduplication Triggered Compaction for LSM-Tree Based Key-Value Store,,2019-03-20
10.1109/BADGERS.2015.011,Tracking Network Events with Write Optimized Data Structures,,2017-03-20
10.1145/3357223.3365443,C-LSM: Cooperative Log Structured Merge Trees,,2011-03-20
10.15407/USIM.2016.03.029,Some Frameworks for Analytics Big Data,,2015-03-20
10.1007/s10586-020-03161-8,Design and implementation of an I/O isolation scheme for key-value store on multiple solid-state drives,,2012-03-20
10.1109/ICWS.2017.125,Light Weight Key-Value Store for Efficient Services on Local Distributed Mobile Devices,,2019-03-20
10.1109/BigData47090.2019.9006519,WiSer: A Highly Available HTAP DBMS for IoT Applications,,2014-03-20
10.1145/3299869.3300097,LSM-Trees and B-Trees: The Best of Both Worlds,,2015-03-20
10.14778/3229863.3236227,FASTER: An Embedded Concurrent Key-Value Store for State Management,,2019-03-20
10.1007/978-3-030-02925-8_16,Efficient Auto-Increment Keys Generation for Distributed Log-Structured Storage Systems,,2013-03-20
10.5441/002/edbt.2014.76,Diff-Index: Differentiated Index in Distributed Log-Structured Data Stores,,2018-03-20
10.1145/3331076.3331118,Indexing large updatable datasets in multi-version database management systems,,2020-03-20
10.1109/SNPD.2015.7176209,BFC: High-performance distributed big-file cloud storage based on key-value store,,2019-03-20
10.1088/1742-6596/1544/1/012079,Raft consensus mechanism and the applications,,2013-03-20
10.1145/2723372.2749441,Let's Talk About Storage & Recovery Methods for Non-Volatile Memory Database Systems,,2019-03-20
10.1145/2043556.2043571,Windows Azure Storage: a highly available cloud storage service with strong consistency,,2015-03-20
10.1145/3299869.3319860,FITing-Tree: A Data-aware Index Structure,,2017-03-20
10.1145/2501620.2501623,BTRFS: The Linux B-Tree Filesystem,,2015-03-20
10.1145/3318464.3386136,Timon: A Timestamped Event Database for Efficient Telemetry Data Processing and Analytics,,2018-03-20
10.1109/CLOUD.2018.00035,CAPI-Flash Accelerated Persistent Read Cache for Apache Cassandra,,2018-03-20
10.1109/ICDE.2013.6544849,LSII: An indexing structure for exact real-time search on microblogs,,2015-03-20
10.14778/3372716.3372719,On Performance Stability in LSM-based Storage Systems,,2011-03-20
10.1109/TPDS.2013.305,Efficient Range-Based Storage Management for Scalable Datastores,,2011-03-20
10.1109/TKDE.2013.2297930,Disk-Based Management of Interaction Graphs,,2012-03-20
10.1109/NVMSA.2016.7547184,Efficient lifetime management of SSD-based RAIDs using dedup-assisted partial stripe writes,,2019-03-20
10.3745/KIPSTD.2008.15-D.6.755,Log-Structured B-Tree for NAND Flash Memory,,2011-03-20
10.1007/978-981-10-6520-0_1,Optimizing MongoDB Using Multi-streamed SSD,,2018-03-20
10.14569/IJACSA.2019.0100784,NetMob: A Mobile Application Development Framework with Enhanced Large Objects Access for Mobile Cloud Storage Service,,2020-03-20
10.1145/3423211.3425676,BoLT: Barrier-optimized LSM-Tree,,2011-03-20
10.1007/978-3-030-54595-6_4,Scalable Architecture  Storage and Visualization Approaches for Time Series Analysis Systems,,2015-03-20
10.1145/3241061,Efficient Directory Mutations in a Full-Path-Indexed File System,,2015-03-20
10.1002/cpe.3882,A multi‐channel architecture for metadata management in cloud storage systems by binding CPU‐cores to disks,,2016-03-20
10.1145/3386362,The Case for Custom Storage Backends in Distributed Storage Systems,,2015-03-20
10.1109/TVCG.2014.2346418,Advection-Based Sparse Data Management for Visualizing Unsteady Flow,,2013-03-20
10.1145/2109196.2109197,A survey of B-tree logging and recovery techniques,,2013-03-20
10.1145/3376122,Xor Filters,,2020-03-20
10.1145/3340531.3417465,RotaryDS: Fast Storage for Massive Data Streams via a Rotation Storage Model,,2012-03-20
10.1145/3342195.3387523,EvenDB: optimizing key-value storage for spatial locality,,2014-03-20
10.1109/TCAD.2020.2987781,Integrating LSM Trees With Multichip Flash Translation Layer for Write-Efficient KVSSDs,,2013-03-20
10.4018/978-1-4666-4699-5.CH012,GeoBase: Indexing NetCDF Files for Large-Scale Data Analysis,,
10.1109/ICDCS.2017.70,LSbM-tree: Re-Enabling Buffer Caching in Data Management for Mixed Reads and Writes,,2011-03-20
10.1145/3299869.3314041,X-Engine: An Optimized Storage Engine for Large-scale E-commerce Transaction Processing,,2012-03-20
10.1109/ICDE.2017.61,A Comparative Study of Log-Structured Merge-Tree-Based Spatial Indexes for Big Data,,2016-03-20
10.1145/3022211.3022214,YoctoDB: A Partitioned Immutable Embedded Database,,2012-03-20
10.23919/ICACT.2017.7890198,LevelDB-Raw: Eliminating file system overhead for optimizing performance of LevelDB engine,,2018-03-20
10.1007/978-3-319-55753-3_6,An Efficient Bulk Loading Approach of Secondary Index in Distributed Log-Structured Data Stores,,2019-03-20
10.1007/s10619-012-7119-x,MILo-DB: a personal  secure and portable database machine,,2012-03-20
10.1007/s00778-015-0417-y,Bitwise dimensional co-clustering for analytical workloads,,2013-03-20
10.1109/ACCESS.2018.2873579,DStore: A Holistic Key-Value Store Exploring Near-Data Processing and On-Demand Scheduling for Compaction Optimization,,2014-03-20
10.1145/2818950.2818970,Architecture Exploration for Data Intensive Applications,,2020-03-20
10.1145/3186728.3164142,Concurrent Log-Structured Memory for Many-Core Key-Value Stores,,2019-03-20
10.1016/j.is.2017.09.003,Supporting secure keyword search in the personal cloud,,2019-03-20
10.1007/978-3-030-05677-3_6,KT-Store: A Key-Order and Write-Order Hybrid Key-Value Store with High Write and Range-Query Performance,,2019-03-20
10.1145/3183713.3196900,A Comparative Study of Secondary Indexing Techniques in LSM-based NoSQL Databases,,2020-03-20
10.4018/978-1-4666-3934-8.CH016,XtreemFS – a File System for the Cloud,,2020-03-20
10.1109/ICNISC.2016.066,A Secondary Index for Improving Reading Performance in the Inline Deduplication System,,2020-03-20
10.1007/978-3-642-33500-6,Enabling Real-Time Business Intelligence,,2019-03-20
10.1007/s00778-007-0048-z,Maintaining very large random samples using the geometric file,,2016-03-20
10.1109/CLUSTER.2016.50,GraphMeta: A Graph-Based Engine for Managing Large-Scale HPC Rich Metadata,,2014-03-20
10.1007/s00778-009-0165-y,The RDF-3X engine for scalable management of RDF data,,2015-03-20
10.1109/ICUFN.2019.8806187,CLeveldb: Coalesced Leveldb for Small Data,,2012-03-20
10.1101/2020.04.01.019984,Fast protein database as a service with kAAmer,,2012-03-20
10.1109/TPDS.2019.2950248,A Novel Multi-Stage Forest-Based Key-Value Store for Holistic Performance Improvement,,2011-03-20
10.1109/TCAD.2018.2855179,An Efficient LSM-Tree-Based SQLite-Like Database Engine for Mobile Devices,,2014-03-20
10.1109/TKDE.2015.2453154,PCMLogging: Optimizing Transaction Logging and Recovery Performance with PCM,,2016-03-20
10.1145/3035918.3056102,LittleTable: A Time-Series Database and Its Uses,,2017-03-20
10.1109/ICDE.2014.6816744,Outsourcing multi-version key-value stores with verifiable data freshness,,2015-03-20
10.1007/s00778-015-0410-5,Exploiting SSDs in operational multiversion databases,,2020-03-20
10.1145/2882903.2915219,GeckoFTL: Scalable Flash Translation Techniques For Very Large Flash Devices,,2018-03-20
10.1109/MIC.2016.45,CDStore: Toward Reliable  Secure  and Cost-Efficient Cloud Storage via Convergent Dispersal,,2012-03-20
10.1145/3318464.3389716,Rethinking Logging  Checkpoints  and Recovery for High-Performance Storage Engines,,2014-03-20
10.1145/2844112,Immutability changes everything,,2013-03-20
10.1145/3035918.3035963,A General-Purpose Counting Filter: Making Every Bit Count,,2013-03-20
10.2200/S00896ED1V01Y201901DTM058,Transaction Processing on Modern Hardware,,2011-03-20
10.1145/3340287,Enabling Efficient Updates in KV Storage via Hashing,,2016-03-20
10.14778/3151106.3151108,SlimDB: A Space-Efficient Key-Value Storage Engine For Semi-Sorted Data,,2017-03-20
10.1109/MSST.2015.7208286,Realistic request arrival generation in storage benchmarks,,2013-03-20
10.1145/3183713.3196931,SuRF: Practical Range Query Filtering with Fast Succinct Tries,,2019-03-20
10.14778/1920841.1920877,x-RDF-3X,,2017-03-20
10.1007/978-3-319-70833-1_62,Obstacle Avoidance Framework Based on Reach Sets,,2019-03-20
10.2991/ijndc.2016.4.3.3,Distributed and High Performance Big-File Cloud Storage Based On Key-Value Store,,2016-03-20
10.1109/CCIS.2012.6664268,Distributed storage of network measurement data on HBase,,2019-03-20
10.1109/TKDE.2007.13,Online Random Shuffling of Large Database Tables,,2020-03-20
10.1007/s10586-018-2814-7,Optimizing of metadata management in large-scale file systems,,2014-03-20
10.1561/1900000036,Massively Parallel Databases and MapReduce Systems,,2020-03-20
10.1145/3318464.3389757,Lethe: A Tunable Delete-Aware LSM Engine,,2011-03-20
10.1007/978-3-319-03599-4_6,A New Plug-in System Supporting Very Large Digital Library,,2017-03-20
10.1145/3349341.3349469,Design and Implementation of SCM and SSD based Hybrid Key-Value Store,,2020-03-20
10.1109/ASP-DAC47756.2020.9045617,Towards Read-Intensive Key-Value Stores with Tidal Structure Based on LSM-Tree,,2016-03-20
10.22028/D291-26542,Indexing methods for web archives,,2011-03-20
10.1007/978-3-030-04503-6_7,Efficient Top K Temporal Spatial Keyword Search,,2019-03-20
10.1109/SRDS.2017.26,Incremental Elasticity for NoSQL Data Stores,,2020-03-20
10.1007/s11390-017-1704-4,dCompaction: Speeding up Compaction of the LSM-Tree via Delayed Compaction,,2011-03-20
10.1007/s13222-020-00356-6,Designing an Event Store for a Modern Three-layer Storage Hierarchy,,2013-03-20
10.14778/1920841.1920922,UPI: A Primary Index for Uncertain Databases,,2013-03-20
10.1109/TPDS.2016.2609912,Building an Efficient Put-Intensive Key-Value Store with Skip-Tree,,2015-03-20
10.1093/comjnl/bxr004,Efficient Updates for OLAP Range Queries on Flash Memory,,2020-03-20
10.1007/s13222-015-0201-6,Die Arbeitsgruppe Datenbanksysteme an der Philipps-Universität Marburg,,2015-03-20
10.1109/BIGCOM.2018.00040,The Read Amplification Analysis of NoSQL Database on Top of OSDs: A Case Study of HBase,,2011-03-20
10.1145/3183713.3196927,Dostoevsky: Better Space-Time Trade-Offs for LSM-Tree Based Key-Value Stores via Adaptive Removal of Superfluous Merging,,2020-03-20
10.1016/j.jpdc.2018.07.021,FluteDB: An efficient and scalable in-memory time series database for sensor-cloud,,2020-03-20
10.1109/TKDE.2017.2757016,MV-FTL: An FTL That Provides Page-Level Multi-Version Management,,2018-03-20
10.1145/3033273,WiscKey: Separating Keys from Values in SSD-conscious Storage,,2017-03-20
10.14778/3352063.3352134,S3: A Scalable In-memory Skip-List Index for Key-Value Store,,2015-03-20
10.1109/ICEEI.2015.7352511,MemcacheDB persistent implementation using LevelDB,,2015-03-20
10.1145/3387902.3392621,HiLSM: an LSM-based key-value store for hybrid NVM-SSD storage systems,,2013-03-20
10.14778/2336664.2336673,LogBase: A Scalable Log-structured Database System in the Cloud,,2015-03-20
10.1007/s00778-019-00573-w,Coconut: sortable summarizations for scalable indexes over static and streaming data series,,2014-03-20
10.1145/2723372.2742798,Purity: Building Fast  Highly-Available Enterprise Flash Storage from Commodity Components,,2012-03-20
10.1145/3428266,Scalable and serializable networked multi-actor programming,,2020-03-20
10.1145/1365815.1365816,Bigtable: A Distributed Storage System for Structured Data,,2015-03-20
10.1145/2541940.2541959,SDF: software-defined flash for web-scale internet storage systems,,2015-03-20
10.1145/2367589.2367594,MyCassandra: a cloud storage supporting both read heavy and write heavy workloads,,2011-03-20
10.1145/2485732.2485754,Examining extended and scientific metadata for scalable index designs,,2019-03-20
10.1587/TRANSINF.2015EDP7470,RFS: An LSM-Tree-Based File System for Enhanced Microdata Performance,,2015-03-20
10.1007/978-3-319-11167-4_27,SepStore: Data Storage Accelerator for Distributed File Systems by Separating Small Files from Large Files,,2012-03-20
10.1109/ICPADS.2016.0079,Improving Write Performance of LSMT-Based Key-Value Store,,2016-03-20
10.1109/ICDE48307.2020.00034,UniKV: Toward High-Performance and Scalable KV Storage in Mixed Workloads via Unified Indexing,,2017-03-20
10.1109/PCCC.2018.8710776,Crail-KV: A High-Performance Distributed Key-Value Store Leveraging Native KV-SSDs over NVMe-oF,,2015-03-20
10.1109/ICDE.2019.00079,Packed Memory Arrays - Rewired,,2013-03-20
10.1007/978-3-030-37231-6_27,Authenticated LSM Trees with Minimal Trust,,2020-03-20
10.1007/978-3-030-29611-7_4,Reducing Rename Overhead in Full-Path-Indexed File System,,2017-03-20
10.1109/ICCCBDA.2018.8386572,WOKV: A write-optimized key-value store,,2020-03-20
10.1109/CCGrid.2015.150,Deferred Lightweight Indexing for Log-Structured Key-Value Stores,,2017-03-20
10.1007/978-3-030-19093-4_1,Nova: Diffused Database Processing Using Clouds of Components [Vision Paper],,2018-03-20
10.14778/3229863.3229873,Accordion: Better Memory Organization for LSM Key-Value Stores,,2020-03-20
10.1145/3183713.3196898,FASTER: A Concurrent Key-Value Store with In-Place Updates,,2011-03-20
10.1109/MSST.2010.5496973,Exporting kernel page caching for efficient user-level I/O,,2014-03-20
10.1145/2663165.2663319,Stage-aware anomaly detection through tracking log points,,2014-03-20
10.1109/SNAPI.2010.14,BabuDB: Fast and Efficient File System Metadata Storage,,2019-03-20
10.14778/3184470.3184472,Coconut: A Scalable Bottom-Up Approach for Building Data Series Indexes,,2011-03-20
10.1016/J.JPDC.2019.04.011,Collaborative Compaction Optimization System using Near-Data Processing for LSM-tree-based Key-Value Stores,,2018-03-20
10.1145/2790755.2790770,Towards Archiving-as-a-Service: A Distributed Index for the Cost-effective Access to Replicated Multi-Version Data,,2014-03-20
10.1101/2021.02.05.429839,An Incrementally Updatable and Scalable System for Large-Scale Sequence Search using LSM Trees,,2017-03-20
10.5441/002/edbt.2020.20,MV-PBT: Multi-Version Index for Large Datasets and HTAP Workloads,,2020-03-20
10.1007/s00224-007-9034-5,Risk Assessment for One-Counter Threads,,2013-03-20
10.1017/CBO9780511546464.003,Thread algebra and risk assessment services,,2015-03-20
10.1007/s00165-011-0178-3,Thread algebra for poly-threading,,2019-03-20
10.1007/s00224-010-9272-9,Straight-line Instruction Sequence Completeness for Total Calculation on Cancellation Meadows,,2017-03-20
10.1007/s00224-011-9376-x,On the Contribution of Backward Jumps to Instruction Sequence Expressiveness,,2020-03-20
10.1007/11780342_46,An Introduction to Program and Thread Algebra,,2016-03-20
10.1007/s10817-004-6246-0,Reachability Analysis over Term Rewriting Systems,,2020-03-20
10.1007/978-3-540-73147-4_3,Narrowing  Abstraction and Constraints for Proving Properties of Reduction Relations,,2011-03-20
10.1007/s10817-010-9215-9,Proving Termination by Dependency Pairs and Inductive Theorem Proving,,2016-03-20
10.1007/978-3-319-27436-2_20,Correctness of Context-Moving Transformations for Term Rewriting Systems,,2017-03-20
10.1016/S1574-6526(07)03001-5,Knowledge Representation and Classical Logic,,2016-03-20
10.1016/j.tcs.2011.04.028,Proving weak properties of rewriting,,2012-03-20
10.1145/1140335.1140351,Computing constructor forms with non terminating rewrite programs,,2017-03-20
10.1016/j.entcs.2005.01.006,Strategic Issues  Problems and Challenges in Inductive Theorem Proving,,2017-03-20
10.1016/B978-0-444-51624-4.50006-X,Equational Logic and Rewriting,,2012-03-20
10.4230/LIPIcs.FSCD.2016.33,Ground Confluence Prover based on Rewriting Induction,,2017-03-20
10.1007/978-3-319-66167-4,Frontiers of Combining Systems,,2011-03-20
10.1145/3354166.3354178,Inductive Theorem Proving in Non-terminating Rewriting Systems and Its Application to Program Transformation,,2017-03-20
10.25911/5d666b238d5ba,Disproving in First-Order Logic with Definitions  Arithmetic and Finite Domains,,2017-03-20
10.1007/978-3-319-66167-4_18,Interpolation  Amalgamation and Combination (The Non-disjoint Signatures Case),,2018-03-20
10.4230/LIPIcs.FSCD.2018.26,Narrowing Trees for Syntactically Deterministic Conditional Term Rewriting Systems,,2013-03-20
10.1007/978-3-540-25979-4_19,Inductive Theorems for Higher-Order Rewriting,,2013-03-20
10.1007/978-3-319-66167-4_8,Complexity Analysis for Term Rewriting by Integer Transition Systems,,2020-03-20
10.4230/LIPIcs.FSCD.2017.7,Improving Rewriting Induction Approach for Proving Ground Confluence,,2018-03-20
10.1007/11805618_20,RAPT: A Program Transformation System Based on Term Rewriting,,2012-03-20
10.1007/3-540-45719-4_9,Removing Redundant Arguments of Functions,,2015-03-20
10.2136/SSSASPECPUB10.C2,Controls and Consequences of Sulfate Reduction Rates in Recent Marine Sediments,,2019-03-20
10.25596/jalc-2002-419,3-Party Message Complexity is Better than 2-Party Ones for Proving Lower Bounds on the Size of Minimal Nondeterministic Finite Automata,,2019-03-20
10.1016/j.ins.2009.11.017,On path dependent loss and switch crosstalk reduction in optical networks,,2011-03-20
10.1515/revic-2013-0003,Coordination chemistry of polyoxo-carbocyclic compounds containing one or more neighboring oxo-groups,,2013-03-20
10.6688/JISE.2002.18.3.3,Locating Free Positions in LR (k) Grammars,,2013-03-20
10.4230/OASIcs.SLATE.2016.3,Comparing the Performance of Different NLP Toolkits in Formal and Social Media Text,,2013-03-20
10.1109/SEAA.2009.14,A Generative Approach to the Construction of Application-Specific XML Processing Components,,2015-03-20
10.1145/2480362.2480682,LLLR parsing,,2016-03-20
10.1016/j.entcs.2010.08.032,TOOL PAPER: ScalaBison Recursive Ascent-Descent Parser Generator,,2020-03-20
10.4230/OASIcs.SLATE.2016.5,LLLR Parsing: a Combination of LL and LR Parsing,,2012-03-20
10.1016/j.cl.2017.06.002,On different LL and LR parsers used in LLLR parsing,,2018-03-20
10.1145/3371425.3371471,Experimental research on the key of marine data transmission systems,,2011-03-20
10.1007/s10009-017-0480-3,Modeling and analyzing real-time wireless sensor and actuator networks using actors and model checking,,2013-03-20
10.4230/DARTS.5.2.4,Multiverse Debugging: Non-Deterministic Debugging for Non-Deterministic Programs (Artifact),,2019-03-20
10.1109/COMPSAC.2019.10201,Towards a Framework for Safe and Secure Adaptive Collaborative Systems,,2016-03-20
10.4230/LIPIcs.ECOOP.2019.27,Multiverse Debugging: Non-Deterministic Debugging for Non-Deterministic Programs (Brave New Idea Paper),,2012-03-20
10.5121/IJESA.2016.6201,Developing Scheduler Test Cases to Verify Scheduler Implementations In Time-Triggered Embedded Systems,,2020-03-20
10.1109/FSKD.2016.7603454,Design and implementation of an improved cloud storage system,,2011-03-20
10.1007/3-540-48523-6_48,Solos in Concert,,2013-03-20
10.1016/S0304-3975(99)80003-6,Non-Interleaving Semantics for Mobile Processes,,2016-03-20
10.4304/jcp.7.12.2931-2938,A New-type Pi Calculus with Buffers and Its Bisimulation,,2013-03-20
10.4230/LIPIcs.CALCO.2015.86,An Intensionally Fully-abstract Sheaf Model for pi,,2013-03-20
10.1093/BIB/5.3.259,Modelling the dynamics of biosystems,,2011-03-20
10.1016/j.tcs.2018.04.007,Predictors for flat membrane systems,,2014-03-20
10.1007/978-3-030-21485-2_19,Event Structure Semantics for Multiparty Sessions,,2011-03-20
10.1016/j.entcs.2007.11.002,A Chart Semantics for the Pi-Calculus,,2014-03-20
10.1016/j.ic.2003.12.003,Models for name-passing processes: interleaving and causal,,2017-03-20
10.1007/978-3-642-28729-9_15,Event Structure Semantics of Parallel Extrusion in the Pi-Calculus,,2017-03-20
10.1016/J.ENTCS.2006.04.019,Typed Event Structures and the p-Calculus,,2012-03-20
10.1007/s00236-014-0207-9,Revisiting causality  coalgebraically,,2014-03-20
10.23638/LMCS-13(4:9)2017,An intensionally fully-abstract sheaf model for π (expanded version),,2012-03-20
10.1016/j.entcs.2006.04.019,Typed Event Structures and the pi-Calculus: Extended Abstract,,2019-03-20
10.1007/978-3-540-74407-8_22,Compositional Event Structure Semantics for the Internal pi -Calculus,,2012-03-20
10.1007/978-3-540-76637-7_10,Scalable Simulation of Cellular Signaling Networks,,2015-03-20
10.1016/j.entcs.2004.01.040,Formal Molecular Biology Done in CCS-R,,2011-03-20
10.4304/jcp.7.12.2962-2970,Energy-efficient Task Scheduling Model based on MapReduce for Cloud Computing using Genetic Algorithm,,2019-03-20
10.1016/j.tcs.2010.01.024,Typed event structures and the linear pi-calculus,,2017-03-20
10.1007/978-3-540-28644-8_19,Reversible Communicating Systems,,2016-03-20
10.1016/S0304-3975(99)00039-0,Game-Theoretic Analysis of Call-by-Value Computation,,2013-03-20
10.1017/S096012951700010X,Proof-relevant π-calculus: a constructive account of concurrency and causality,,2017-03-20
10.1109/CSAE.2012.6272758,A new approach to proving local cause bisimulation axiomatically,,2014-03-20
10.1007/978-3-642-15375-4_33,Reversing Higher-Order Pi,,2011-03-20
10.1007/978-3-540-39866-0_30,Causality and Replication in Concurrent Processes,,2015-03-20
10.3233/JCS-2003-11202,Secure composition of untrusted code: box π  wrappers  and causality types,,2013-03-20
10.1007/978-3-642-02444-3_18,A Process-Model for Linear Programs,,2014-03-20
10.1016/j.jlamp.2015.07.003,A coalgebraic semantics for causality in Petri nets,,2015-03-20
10.1109/CSFW.2000.856943,Secure composition of untrusted code: wrappers and causality types,,2016-03-20
10.4204/EPTCS.185.4,Proof-relevant pi-calculus,,2012-03-20
10.1017/S0960129514000644,Synchrony versus causality in distributed systems,,2017-03-20
10.2168/LMCS-10(4:2)2014,An intensionally fully-abstract sheaf model for $\pi$ (expanded version),,2017-03-20
10.1007/978-3-319-99498-7_2,From Reversible Semantics to Reversible Debugging,,2018-03-20
10.1007/978-3-319-25150-9_14,Rigid Families for CCS and the π-calculus,,2020-03-20
10.1109/TASE.2012.32,An Improved Full Abstraction Approach to Analyzing Locality Semantics,,2016-03-20
10.1007/978-3-540-77312-2_10,Causality in Membrane Systems,,2017-03-20
10.1016/j.tcs.2016.02.019,Reversibility in the higher-order π-calculus,,2016-03-20
10.1109/LICS.2000.855781,Models for name-passing processes: interleaving and causal,,2019-03-20
10.1017/S0960129503004055,Solos In Concert,,2014-03-20
10.1007/978-3-319-53733-7_3,A Stable Non-interleaving Early Operational Semantics for the Pi-Calculus,,2020-03-20
10.1016/j.jlamp.2020.100622,The Cπ-calculus: A model for confidential name passing,,2018-03-20
10.1007/978-3-319-26850-7_26,Tracking Causal Dependencies in Web Services Orchestrations Defined in ORC,,2017-03-20
10.1109/LICS.2013.45,A Compositional Semantics for the Reversible p-Calculus,,2016-03-20
10.1016/S0304-3975(00)00310-8,Minimality and separation results on asynchronous mobile processes - representability theorems by concurrent combinators,,2017-03-20
10.4204/EPTCS.64.7,Synchrony vs Causality in the Asynchronous Pi-Calculus,,2020-03-20
10.1007/978-3-642-30767-6_17,A Fully Abstract View for Local Cause Semantics,,2020-03-20
10.1017/S0960129512000953,CaSPiS: a calculus of sessions  pipelines and services,,2015-03-20
10.4204/EPTCS.276.8,A Parametric Framework for Reversible Pi-Calculi,,2017-03-20
10.1524/ract.2007.95.7.381,Solubility kinetics of a synthetic uranium(VI) oxide at different pH and controlled O2 partial pressure and evaluation of substantial interface properties,,2017-03-20
10.1007/11548706_71,Application of (Max  +)-Algebra to the Optimal Buffer Size in Poisson Driven Deterministic Queues in Series with Blocking,,2011-03-20
10.7603/S40601-013-0005-1,Operational Analysis Revisited: Error Measure Limits of Assumptions,,2017-03-20
10.1109/TAC.2011.2105290,Stationary Waiting Times in m-Node Tandem Queues With Production Blocking,,2015-03-20
10.1137/1.9781611973006.4,The Subset Partial Order: Computing and Combinatorics,,2018-03-20
10.1016/j.jpdc.2013.07.004,Finding extremal sets on the GPU,,2011-03-20
10.1145/2893184,Practical Algorithms for Finding Extremal Sets,,2018-03-20
10.1016/j.ipl.2009.07.001,Computing the subset partial order for dense families of sets,,2017-03-20
10.1137/1.9781611972818.3,Fast Algorithms for Finding Extremal Sets,,2014-03-20
10.1016/j.ipl.2012.03.005,On the size of the subset partial order,,2011-03-20
10.1007/s00453-012-9729-0,On the Complexity of Strongly Connected Components in Directed Hypergraphs,,2014-03-20
10.1016/j.artint.2017.07.005,Minimal sets on propositional formulae. Problems and reductions,,2014-03-20
10.1109/ICWS.2014.58,Modeling Accountable Cloud Services,,2019-03-20
10.3990/1.9789036531955,On changing models in model-based testing,,2020-03-20
10.1016/j.csi.2007.11.008,An action refinement operator for E-LOTOS with true concurrency,,2016-03-20
10.1016/j.csi.2004.11.004,Towards weak sequencing for E-LOTOS,,2012-03-20
10.4018/IJWSR.2015070103,Modeling Accountable Cloud Services Based on Dynamic Logic for Accountability,,2016-03-20
10.1016/J.TCS.2020.10.001,Computing branching distances with quantitative games,,2020-03-20
10.1007/s00500-017-2519-5,Compositionality for quantitative specifications,,2015-03-20
10.1145/2934466.2934473,Long-term average cost in featured transition systems,,2013-03-20
10.1145/3209108.3209203,Sequential Relational Decomposition,,2015-03-20
10.1007/978-3-319-15317-9_19,Compositionality for Quantitative Specifications,,2013-03-20
10.1007/978-3-319-51963-0_5,A Linear-Time-Branching-Time Spectrum of Behavioral Specification Theories,,2013-03-20
10.1007/978-3-030-61362-4_14,Behavioral Specification Theories: an Algebraic Taxonomy,,2016-03-20
10.1109/FORMALISE.2015.11,Measuring Behaviour Interactions between Product-Line Features,,2019-03-20
10.1016/j.jlamp.2019.100499,A linear-time-branching-time spectrum for behavioral specification theories,,2014-03-20
10.1007/978-3-642-33125-1_4,Efficient May Happen in Parallel Analysis for Async-Finish Parallelism,,2012-03-20
10.1109/TSMC.2014.2311757,Ordinary Differential Equation-Based Deadlock Detection,,2016-03-20
10.1145/2668119,Compiler Optimization for Reducing Leakage Power in Multithread BSP Programs,,2014-03-20
10.1109/PDCAT.2012.59,Can We Make It Faster? Efficient May-Happen-in-Parallel Analysis Revisited,,2013-03-20
10.1007/978-3-540-68555-5_4,Static Nonconcurrency Analysis of OpenMP Programs,,2019-03-20
10.1145/3126496,Tightening Contention Delays While Scheduling Parallel Applications on Multi-core Architectures,,2014-03-20
10.1145/2103656.2103681,Analysis of recursively parallel programs,,2013-03-20
10.1016/j.ins.2008.06.020,A rigorous approach towards test case generation,,2013-03-20
10.1145/1390841.1390849,Towards a better collaboration of static and dynamic analyses for testing concurrent programs,,2011-03-20
10.1145/1065944.1065958,Scaling model checking of dataraces using dynamic information,,2015-03-20
10.1109/AINA.2003.1192915,Token-based sequential consistency in asynchronous distributed systems,,2019-03-20
10.1145/2632792,Quantifying eventual consistency with PBS,,2011-03-20
10.1007/978-3-662-60421-2_2,Methodische und technische Grundlagen,,2018-03-20
10.1145/1693453.1693459,Featherweight X10: a core calculus for async-finish parallelism,,2015-03-20
10.1109/AINA.2005.64,A simple protocol offering both atomic consistent read operations and sequentially consistent read operations,,2017-03-20
10.1007/11535294_6,Allowing Atomic Objects to Coexist with Sequentially Consistent Objects,,2011-03-20
10.1145/564870.564896,Sequential consistency as lazy linearizability,,2020-03-20
10.1145/115953.115976,Detecting data races on weak memory systems,,2019-03-20
10.1145/2518188,Analysis of Recursively Parallel Programs,,2011-03-20
10.1145/1321631.1321678,Testing concurrent programs using value schedules,,2018-03-20
10.1007/978-3-540-85261-2_7,Concurrency Analysis for Shared Memory Programs with Textually Unaligned Barriers,,2015-03-20
10.1016/j.ic.2005.07.004,Using heuristic search for finding deadlocks in concurrent systems,,2018-03-20
10.1109/HPCA.2018.00029,High-Performance GPU Transactional Memory via Eager Conflict Detection,,2017-03-20
10.7873/DATE.2014.300,May-happen-in-parallel analysis based on segment graphs for safe ESL models,,2020-03-20
10.1145/777412.777457,The complexity of verifying memory coherence,,2015-03-20
10.1007/978-3-319-08753-5,Out-of-order Parallel Discrete Event Simulation for Electronic System-level Design,,2013-03-20
10.1109/ICDCS.2004.1281621,A distributed implementation of sequential consistency with multi-object operations,,2018-03-20
10.1007/3-540-36087-5_100,Sequential Consistency as Lazy Linearizability,,2015-03-20
10.1109/TFUZZ.2010.2089633,Performance Analysis of Service Composition Based on Fuzzy Differential Equations,,2017-03-20
10.1007/978-3-540-30114-1_15,Threading Software Watermarks,,2016-03-20
10.1109/ICPP.2015.98,Region-Based May-Happen-in-Parallel Analysis for C Programs,,2011-03-20
10.1109/ISSRE.2002.1173279,Blocking-based simultaneous reachability analysis of asynchronous message-passing programs,,2019-03-20
10.1007/s00778-013-0330-1,Quantifying eventual consistency with PBS,,2014-03-20
10.1007/978-3-642-38123-2,Distributed Algorithms for Message-Passing Systems,,2015-03-20
10.1109/ISSRE.2010.40,A 2-Phase Method for Validation of Matching Pair Property with Case Studies of Operating Systems,,2012-03-20
10.5381/jot.2010.9.2.a2,Automatic Test Data Synthesis using UML Sequence Diagrams,,2013-03-20
10.1109/TPDS.2005.86,The complexity of verifying memory coherence and consistency,,2020-03-20
10.1145/3332466.3374541,On the fly MHP analysis,,2014-03-20
10.1145/1229428.1229471,May-happen-in-parallel analysis of X10 programs,,2019-03-20
10.1007/3-540-36103-0_29,Detecting Deadlock in Ada Rendezvous Flow Structure Based on Process Algebra,,2018-03-20
10.1145/2370816.2370900,Making it practical and effective: Fast and precise May-Happen-in-Parallel analysis,,2018-03-20
10.1109/ICDCS.2013.45,On the k-Atomicity-Verification Problem,,2020-03-20
10.1109/ICDCS.2004.1281622,Epidemic algorithms for reliable content-based publish-subscribe: an evaluation,,2014-03-20
10.1145/940071.940073,Understanding process and the quest for deeper questions in software engineering research,,2020-03-20
10.1007/BF01189855,Complexity analysis of propositional concurrent programs using domino tiling,,2017-03-20
10.3929/ETHZ-A-004756402,Detecting synchronization defects in multi-threaded object-oriented programs,,2011-03-20
10.1007/978-3-8348-2381-6,Specification and Analytical Evaluation of Heterogeneous Dynamic Quorum-Based Data Replication Schemes,,2016-03-20
10.31274/ETD-180810-167,Proving safety properties of software,,2015-03-20
10.1147/sj.411.0140,FLAVERS: A finite state verification technique for software systems,,2020-03-20
10.17877/DE290R-7209,WCET analysis and optimization for multi-core real-time systems,,2016-03-20
10.1007/978-3-540-69330-7_11,Efficient Computation of May-Happen-in-Parallel Information for Concurrent Java Programs,,2015-03-20
10.1016/S0950-5849(02)00106-4,Concurrent Ada dead statements detection,,2019-03-20
10.1145/2824255,May-Happen-in-Parallel Analysis for Actor-Based Concurrency,,2014-03-20
10.1145/2892208.2897144,Improved MHP Analysis,,2014-03-20
10.1007/BF00873407,Contextual local analysis in the design of distributed systems,,2012-03-20
10.1016/j.jpdc.2007.01.006,Scaling model checking of dataraces using dynamic information,,2012-03-20
10.1109/TASE.2013.2285574,A Polynomial Algorithm to Performance Analysis of Concurrent Systems Via Petri Nets and Ordinary Differential Equations,,2017-03-20
10.1145/1993806.1993834,Analyzing consistency properties for fun and profit,,2017-03-20
10.1109/ACCESS.2018.2885705,Automatic Inference of Task Parallelism in Task-Graph-Based Actor Models,,2014-03-20
10.1016/j.scico.2016.01.007,Parallelism analysis: Precise WCET values for complex multi-core systems,,2020-03-20
10.1007/978-981-10-0451-3_44,On Accepting Hexagonal Array Splicing System with Respect to Directions,,2018-03-20
10.1007/978-3-319-26145-4_16,Accepting H Iso-Array System,,2013-03-20
10.1007/978-3-662-45049-9_51,Accepting H-Array Splicing Systems,,2018-03-20
10.1007/978-3-662-45049-9_58,Accepting String Graph Splicing System,,2015-03-20
10.5220/0007715900270035,How Complex is to Solve a Hard Problem with Accepting Splicing Systems,,2019-03-20
10.1515/rjr-2016-0015,Hereditary angioedema - an otolaryngologist’s perspective,,2013-03-20
10.1109/TASE.2016.19,Value-Passing CCS for Trees: A Theory for Concurrent Systems,,2013-03-20
10.1007/s11704-018-7069-1,A fully abstract semantics for value-passing CCS for trees,,2016-03-20
10.1016/j.jlamp.2019.02.006,A stable non-interleaving early operational semantics for the pi-calculus,,2020-03-20
10.1016/S0304-3975(03)00129-4,A format for semantic equivalence comparison,,2017-03-20
10.1007/978-3-540-68679-8_47,Twenty Years on: Reflections on the CEDISYS Project. Combining True Concurrency with Process Algebra,,2019-03-20
10.1007/978-3-319-58631-1_5,Enumerative Results on the Schröder Pattern Poset,,2015-03-20
10.1007/978-3-319-15579-1_39,Recurrence Relations  Succession Rules  and the Positivity Problem,,2014-03-20
10.21512/COMTECH.V10I1.4716,Maximality on Construction of Ternary Cross Bifix Free Code,,2018-03-20
10.1016/j.tcs.2015.08.032,Cross-bifix-free sets in two dimensions,,2013-03-20
10.1109/TIT.2017.2742506,Variable-Length Non-Overlapping Codes,,2019-03-20
10.1016/J.JCSS.2016.09.006,Recurrence relations  succession rules and the positivity problem,,2016-03-20
10.1515/puma-2015-0003,A generating function for bit strings with no Grand Dyck pattern matching,,2017-03-20
10.1109/TIT.2015.2456634,Non-Overlapping Codes,,2017-03-20
10.1007/s12095-017-0251-8,A 2D non-overlapping code over a q-ary alphabet,,2014-03-20
10.3233/FI-2017-1595,Pattern Avoiding Languages and Recurrence Relations Interpretation,,2015-03-20
10.1051/ita/2016008,Cross-bifix-free sets generation via Motzkin paths,,2017-03-20
10.1007/978-3-540-24756-2_22,Integrating Temporal Logics,,2013-03-20
10.1007/11576280_26,A Static Communication Elimination Algorithm for Distributed System Verification,,2015-03-20
10.1145/349360.351142,Completeness in formal specification language design for process-control systems,,2012-03-20
10.1007/3-540-48092-7_15,Correct Real-Time Software for Programmable Logic Controllers,,2018-03-20
10.1007/s003780000006,Computer-aided development of a real-time program,,2012-03-20
10.1007/11753728_9,Conjugacy and Equivalence of Weighted Automata and Functional Transducers,,2016-03-20
10.1007/978-3-319-04921-2_12,Channel Synthesis Revisited,,2016-03-20
10.1016/S0304-3975(02)00014-2,Reduction de la non-linearite des morphismes d'arbres Recognizable tree-languages and non-linear morphisms,,2017-03-20
10.4230/LIPIcs.ICALP.2020.18,A Simple Dynamization of Trapezoidal Point Location in Planar Subdivisions,,2014-03-20
10.1145/775152.775230,On labeling schemes for the semantic web,,2017-03-20
10.1007/978-3-642-04355-0_7,New Bounds for the Controller Problem,,2020-03-20
10.1137/S0895480100315808,A Tight Lower Bound for Online Monotonic List Labeling,,2019-03-20
10.1137/1.9781611973402.72,Near-optimal labeling schemes for nearest common ancestors,,2015-03-20
10.1007/s00224-004-1118-x,"A Simple Optimal Solution for the Temporal Precedence Problem
 on Pure Pointer Machines",,2015-03-20
10.1007/978-3-642-24583-1_30,On Suffix Extensions in Suffix Trees,,2014-03-20
10.1007/11573036_13,One-Dimensional Finger Searching in RAM Model Revisited,,2016-03-20
10.1007/978-0-387-09766-4_494,Race Detectors for Cilk and Cilk++ Programs,,2014-03-20
10.1137/S0097539703437211,Compact Labeling Scheme for Ancestor Queries,,2016-03-20
10.1145/1582716.1582799,Brief announcement: new bounds for the controller problem,,2012-03-20
10.1007/978-3-540-24599-5_25,On the Complexity of Dependent And-Parallelism in Logic Programming,,2018-03-20
10.1145/2975167.2985691,High-performance data structures for de novo assembly of genomes: cache oblivious generic programming,,2014-03-20
10.1145/1142351.1142355,An adaptive packed-memory array,,2015-03-20
10.1137/110836377,Managing Unbounded-Length Keys in Comparison-Driven Data Structures with Applications to Online Indexing,,2019-03-20
10.1007/978-3-540-30192-9_20,L-Tree: A Dynamic Labeling Structure for Ordered XML Data,,2018-03-20
10.1016/j.websem.2003.11.001,Optimizing taxonomic semantic web queries using labeling schemes,,2019-03-20
10.1145/1951365.1951384,On enhancing scalability for distributed RDF/S stores,,2019-03-20
10.1007/BF01840386,Dynamic fractional cascading,,2018-03-20
10.1109/ICBDA.2017.8078843,Heterogeneous data security fusion system based on binary tree,,2018-03-20
10.1137/15M1030030,Mondshein Sequences (a.k.a. (2  1)-Orders),,2013-03-20
10.1007/3-540-45749-6_17,Two Simplified Algorithms for Maintaining Order in a List,,2017-03-20
10.1115/1.4038511,Automated Flexible Forming Strategy for Geometries With Multiple Features in Double-Sided Incremental Forming,,2016-03-20
10.1007/3-540-45749-6_16,Scanning and Traversing: Maintaining Data for Traversals in a Memory Hierarchy,,2012-03-20
10.1007/s00453-002-0935-z,"Optimal Solutions for the Temporal Precedence Problem 
",,2012-03-20
10.1016/J.TCS.2012.07.018,On suffix extensions in suffix trees,,2012-03-20
10.1007/s00446-010-0119-z,New bounds for the controller problem,,2013-03-20
10.1137/S0895480103433409,Labeling schemes for small distances in trees,,2011-03-20
10.1145/1007912.1007933,On-the-fly maintenance of series-parallel relationships in fork-join multithreaded programs,,2014-03-20
10.1201/9781584888239-C5,Topics in data structures,,2014-03-20
10.1016/j.tcs.2020.06.027,Fully persistent B-trees,,2018-03-20
10.1137/1.9781611973099.51,Fully persistent B-trees,,2018-03-20
10.1145/1292609.1292616,An adaptive packed-memory array,,2013-03-20
10.1016/J.IPL.2019.01.008,Simple computation of st-edge- and st-numberings from ear decompositions,,2015-03-20
10.1002/STVR.V18:1,Modular formal verification of specifications of concurrent systems,,2020-03-20
10.1109/BigData47090.2019.9005994,A Methodology for Real-Time Data Verification exploiting Deep Learning and Model Checking,,2017-03-20
10.1109/BigData47090.2019.9006094,A Model Checking based Proposal for Mobile Colluding Attack Detection,,2016-03-20
10.5220/0004068903360339,Modelling and Analysing Social Networks through Formal Methods and Heuristic Searches,,2019-03-20
10.1109/BIBM.2013.6732473,Infer gene regulatory networks from time series data with formal methods,,2011-03-20
10.1007/978-3-030-44038-1_87,Predicting Probability of Default Under IFRS 9 Through Data Mining Techniques,,2014-03-20
10.1007/978-3-030-44038-1_81,Towards the Use of Generative Adversarial Neural Networks to Attack Online Resources,,2011-03-20
10.1016/j.ymeth.2014.06.005,De novo reconstruction of gene regulatory networks from time series data  an approach based on formal methods.,,2019-03-20
10.1007/978-3-030-12835-7_11,2-Vagabonds: Non-exhaustive Verification Algorithm,,2012-03-20
10.1145/2560563,GreASE: A Tool for Efficient “Nonequivalence” Checking,,2018-03-20
10.1109/WETICE.2013.28,Application of Equivalence Checking in a Loan Origination Process in Banking Industry,,2015-03-20
10.1109/SERVICES.2014.25,Powerful Equivalence Checking in the Bank Supply Process,,2020-03-20
10.1109/COMPSAC.2011.22,Ant Colony Optimization for Deadlock Detection in Concurrent Systems,,2018-03-20
10.1109/IJCNN48605.2020.9207430,Hourly Global Solar Radiation Reconstruction Applying Machine Learning,,2012-03-20
10.1109/TSE.2003.1205179,Heuristic Search + Local Model Checking in Selective mu-Calculus,,2013-03-20
10.1109/WETICE.2014.39,An Eclipse-Based Editor to Support LOTOS Newcomers,,2020-03-20
10.1016/j.entcs.2004.06.010,Model Checking Multithreaded Programs by Means of Reduced Models,,2017-03-20
10.1007/s11416-019-00346-7,Deep learning for image-based mobile malware detection,,2019-03-20
10.1016/j.entcs.2007.05.031,Formal Verification of Concurrent Systems via Directed Model Checking,,2020-03-20
10.1109/BigData47090.2019.9006227,User Authentication through Keystroke Dynamics by means of Model Checking: A Proposal,,2015-03-20
10.1002/stvr.371,Modular formal verification of specifications of concurrent systems,,2012-03-20
10.5220/0009380608250834,Accidental Sensitive Data Leaks Prevention via Formal Verification,,2017-03-20
10.1109/SERVICES.2013.79,Efficient Formal Verification in Banking Processes,,2019-03-20
10.1007/s10270-014-0416-2,Heuristic search for equivalence checking,,2013-03-20
10.1007/978-3-662-46681-0_24,Linearly Ordered Attribute Grammar Scheduling Using SAT-Solving,,2017-03-20
10.1145/3062341.3062346,Miniphases: compilation using modular and efficient tree transformations,,2017-03-20
10.1145/2543728.2543735,Lazy stateless incremental evaluation machinery for attribute grammars,,2011-03-20
10.1109/32.991318,A Classification of Noncircular Attribute Grammars Based on the Look-Ahead Behavior,,2017-03-20
10.1016/j.scico.2016.03.005,Embedding attribute grammars and their extensions using functional zippers,,2018-03-20
10.1007/BF00267865,A comparison of storage optimizations in automatically-generated attribute evaluators,,2015-03-20
10.1007/BF02943990,Three improvements on an incremental algorithm for automatic semantic analysis,,2016-03-20
10.1007/3-540-36557-5_14,Consistency Checking of Financial Derivatives Transactions,,2017-03-20
10.3233/978-1-61499-690-3-217,Improving Automatic Speech Recognition for Mobile Learning of Mathematics Through Incremental Parsing,,2019-03-20
10.1145/3064899.3064906,A Lazy Language Needs a Lazy Type System: Introducing Polymorphic Contexts,,2013-03-20
10.1007/BF00282619,Lifetime analysis for attributes,,2018-03-20
10.1016/j.entcs.2011.06.004,Visitor-based Attribute Grammars with Side Effect,,2018-03-20
10.1145/1868294.1868302,Iterative type inference with attribute grammars,,
10.1016/S0096-0551(01)00021-2,An attribute-grammar framework for specifying the accessibility in Java programs,,2014-03-20
10.1007/978-3-540-76550-9_5,Die 70er Jahre,,2012-03-20
10.1007/BF02451550,Attribute and unification grammar: A review and analysis of formalisms,,2012-03-20
10.1145/1929501.1929526,Strictification of circular programs,,
10.1145/1244381.1244399,Tools and libraries to model and manipulate circular programs,,2014-03-20
10.1016/S1571-0661(05)82627-1,Circular Reference Attributed Grammars - Their Evaluation and Applications,,2020-03-20
10.1007/978-3-540-45242-3_42,An Approach of Model Transformation Based on Attribute Grammars,,2011-03-20
10.1007/BF00265558,Computation sequences: A way to characterize classes of attribute grammars,,2017-03-20
10.1109/ASWEC.2009.46,Formal Semantics Based Translator Generation and Tool Development in Practice,,2014-03-20
10.1145/3136014.3136024,A formalisation of parameterised reference attribute grammars,,2016-03-20
10.1007/BF01178581,The calculus of context relations,,2016-03-20
10.1016/j.scico.2016.07.004,Multiple intermediate structure deforestation by shortcut fusion,,2015-03-20
10.1145/2442516.2442535,Parallel schedule synthesis for attribute grammars,,2017-03-20
10.1109/ICPR.2002.1047810,Applying compiler techniques to diagram recognition,,2011-03-20
10.5075/EPFL-THESIS-7979,Design and implementation of an optimizing type-centric compiler for a high-level language,,2016-03-20
10.1007/BF02948394,On parallel evaluation of ordered attribute grammars,,2017-03-20
10.1145/1596550.1596586,Attribute grammars fly first-class: how to do aspect oriented programming in Haskell,,2020-03-20
10.1145/3426425.3426943,Strategic tree rewriting in attribute grammars,,2011-03-20
10.1145/982158.982161,Natural semantics as a static program analysis framework,,2020-03-20
10.1007/978-3-319-09156-3_42,A Visual DSL for the Certification of Open Source Software,,2012-03-20
10.1007/BF00277390,Attribute storage optimization by stacks,,2016-03-20
10.1007/978-3-319-02654-1_15,A Language Independent Task Engine for Incremental Name and Type Analysis,,2016-03-20
10.1007/978-3-642-18023-1_4,An Introductory Tutorial on JastAdd Attribute Grammars,,2016-03-20
10.1145/3136014.3136032,Concurrent circular reference attribute grammars,,2011-03-20
10.1145/1988783.1988788,Stepwise evaluation of attribute grammars,,2014-03-20
10.1007/BF01786970,k-visit attribute grammars,,2017-03-20
10.1007/978-3-642-27694-1_14,The Kennedy-Warren Algorithm Revisited: Ordering Attribute Grammars,,2013-03-20
10.1145/2998407.2998412,A domain specific language for optimal pumping systems,,2018-03-20
10.1007/978-3-642-20835-5_8,Attribute Grammars and Analysis,,2020-03-20
10.1007/s11263-011-0497-0,Explaining Activities as Consistent Groups of Events,,2017-03-20
10.1145/2678015.2682543,Linearly Ordered Attribute Grammars: with Automatic Augmenting Dependency Selection,,2018-03-20
10.1145/2620678.2620687,Circularity and Lambda Abstraction: From Bird to Pettorossi and back,,2015-03-20
10.1016/j.scico.2012.03.001,Jaccie: A Java-based compiler-compiler for generating  visualizing and debugging compiler components,,2016-03-20
10.1007/978-3-540-85373-2_4,The Structure of the Essential Haskell Compiler  or Coping with Compiler Complexity,,2018-03-20
10.1007/978-3-642-24276-2_7,Dependently Typed Attribute Grammars,,2019-03-20
10.1016/j.scico.2005.06.005,Circular reference attributed grammars - their evaluation and applications,,2012-03-20
10.1145/73141.74832,An LR substring parser for noncorrecting syntax error recovery,,2012-03-20
10.1002/spe.4380180105,A programmer‐friendly LL(1) parser generator,,2013-03-20
10.1002/spe.4380130406,An analysis of microcomputer implementation of pascal,,2014-03-20
10.1007/BF00999442,Hierarchic syntax error repair for LR grammars,,2013-03-20
10.1016/S0096-0551(97)00016-7,LR Techniques for Handling Syntax Errors,,2011-03-20
10.1145/349214.349219,Generation of LR parsers by partial evaluation,,2019-03-20
10.1007/3-540-53669-8_82,Optimizing Directly Executable LR Parsers,,2019-03-20
10.1145/3916.4019,Noncorrecting syntax error recovery,,2017-03-20
10.1016/S0020-0255(02)00272-4,Improvement of the LR parsing table and its application to grammatical error correction,,2011-03-20
10.1002/spe.4380150302,The cost of a generated parser,,2013-03-20
10.1145/69575.357232,A Syntax-Error-Handling Technique and Its Experimental Analysis,,2014-03-20
10.1145/2993.357243,Global Data Flow Analysis Problems Arising in Locally Least-Cost Error Recovery,,2016-03-20
10.1007/3-540-53669-8_70,Recursive Ascent-Descent Parsers,,2013-03-20
10.1145/304399.304401,Software process validation: quantitatively measuring the correspondence of a process to a model,,2011-03-20
10.1145/948596.948603,Practical experiences with automatic repair of syntactical errors or syntactical error repair in the DAS compiler,,2017-03-20
10.1002/spe.4380250606,Comparison of syntactic error handling in LR parsers,,2014-03-20
10.1007/3-540-10885-8_38,Problems in Compiling Ada,,2019-03-20
10.1145/213978.213980,An evaluation of an automatically generated compiler,,2017-03-20
10.1002/spe.4380200602,Even faster lr parsing,,2017-03-20
10.1007/3-540-53669-8_77,A Tool Box for Compiler Construction,,2019-03-20
10.1016/0096-0551(93)90027-X,Recursive Ascent-Descent Parsing,,2012-03-20
10.1007/3-540-51364-7_6,Generators for High-Speed Front-Ends,,2015-03-20
10.1007/978-3-642-73451-9_20,Überlegungen zu einer Hardware-Architektur zur schnellen Analyse von Programmiersprachen,,2014-03-20
10.1016/0096-0551(94)90006-X,A Practical Minimum Distance Method for Syntax Error Handling,,2019-03-20
10.1007/3-540-18088-5_21,Panic Mode without Panic,,2012-03-20
10.1201/B16812-77,Compilers and Interpreters,,2016-03-20
10.1002/spe.4380191102,The parser generating system PGS,,2013-03-20
10.1007/s00224-004-1151-9,The Complexity of Linear and Stratified Context Matching Problems,,2017-03-20
10.1007/11814771_3,Representing and Reasoning with Operational Semantics,,2020-03-20
10.1023/A:1018952121991,Higher order generalization and its application in program verification,,2017-03-20
10.1017/S0960129505004883,Matching with multiplication and exponentiation (extended abstract),,2011-03-20
10.21236/ada408501,Agentware: Automated Synthesis of Software Agents,,2020-03-20
10.1587/TRANSINF.E93.D.963,Program Transformation Templates for Tupling Based on Term Rewriting,,2018-03-20
10.2197/IPSJDC.2.620,Program Transformation by Templates: A Rewriting Framework,,2012-03-20
10.1145/2847538.2847542,Finally  safely-extensible and efficient language-integrated query,,2016-03-20
10.1051/0004-6361:20031730,Survey of long-term variability of stars. I. Reliability of magnitudes in old star catalogues,,2016-03-20
10.4230/LIPIcs.FSCD.2016.26,Functions-as-Constructors Higher-Order Unification,,2011-03-20
10.1016/j.ipl.2003.12.008,Deterministic second-order patterns,,2017-03-20
10.1145/3290335,Bindings as bounded natural functors,,2013-03-20
10.1007/3-540-39185-1_4,Using Theory Morphisms for Implementing Formal Methods Tools,,2019-03-20
10.7146/BRICS.V13I12.21917,Higher-Order Beta Matching with Solutions in Long Beta-Eta Normal Form,,2012-03-20
10.1145/2543728.2543740,Combinators for impure yet hygienic code generation,,2017-03-20
10.1007/BF01744293,Infinite trees in normal form and recursive equations having a unique solution,,2019-03-20
10.1007/11916277_5,Matching Modulo Superdevelopments Application to Second-Order Matching,,2020-03-20
10.1145/2804302.2804309,Embedding a full linear Lambda calculus in Haskell,,2011-03-20
10.1145/1069774.1069780,Program transformation by templates based on term rewriting,,2013-03-20
10.1002/SCJ.V38:4,Efficient schema matching algorithm based on pre-checking,,2015-03-20
10.1007/S10990-013-9097-8,Polynomial-time inverse computation for accumulative functions with multiple data traversals,,2016-03-20
10.1002/scj.10273,Efficient schema matching algorithm based on pre-checking,,2015-03-20
10.4204/EPTCS.285.2,Eff Directly in OCaml,,2016-03-20
10.1007/s10817-019-09522-2,A Formalized General Theory of Syntax with Bindings: Extended Version,,2018-03-20
10.1007/978-3-540-30109-7_14,Generalization Algorithms for Second-Order Terms,,2013-03-20
10.1515/TLR-2018-2013,Ellipsis resolution in Persian complex predicates,,2018-03-20
10.6092/issn.1972-5787/4650,Abella: A System for Reasoning about Relational Specifications,,2020-03-20
10.2197/ipsjjip.23.716,Design and Implementation of a Java Bytecode Manipulation Library for Clojure,,2011-03-20
10.1007/BF01887212,Term rewriting and beyond — theorem proving in Isabelle,,2012-03-20
10.1017/S0956796818000096,Applicative bidirectional programming: Mixing lenses and semantic bidirectionalization,,2017-03-20
10.1007/978-3-540-32254-2_10,Decidable Variants of Higher-Order Unification,,2020-03-20
10.2197/IPSJDC.1.496,A Rewrite System with Incomplete Regular Expression Type for Transformation of XML Documents,,2017-03-20
10.3929/ETHZ-A-006781813,The HOL-OCL Book,,2020-03-20
10.1145/941566.941568,Term rewriting with traversal functions,,2019-03-20
10.1016/j.scico.2015.08.007,Combinators for impure yet hygienic code generation,,2015-03-20
10.1007/3-540-45685-6_2,Higher Order Unification 30 Years Later,,2015-03-20
10.1016/J.JSC.2004.12.011,A survey of strategies in rule-based program transformation systems,,2012-03-20
10.1145/1637837.1637839,Automatically computing functional instantiations,,2013-03-20
10.4230/LIPIcs.RTA.2011.107,Natural Inductive Theorems for Higher-Order Rewriting,,2017-03-20
10.1023/A:1022676712939,Higher-Order and Modal Logic as a Framework for Explanation-Based Generalization,,2015-03-20
10.1145/1656242.1656248,Proof search specifications of bisimulation and modal logics for the π-calculus,,2011-03-20
10.1109/ICSM.2004.1357839,Quality-driven object-oriented re-engineering framework,,2013-03-20
10.1007/b10011,Inductive Logic Programming,,2013-03-20
10.1007/BF00248324,The foundation of a generic theorem prover,,2013-03-20
10.1007/978-3-540-32033-3_18,Higher-Order Matching in the Linear Lambda Calculus in the Absence of Constants Is NP-Complete,,2013-03-20
10.1007/s10990-008-9038-0,Adapting functional programs to higher order logic,,2017-03-20
10.1007/3-540-45685-6_19,Sequent Schema for Derived Rules,,2020-03-20
10.1007/BF01744577,An axiomatic approach to the Korenjak-Hopcroft algorithms,,2016-03-20
10.1007/BF00993253,Higher-order and modal logic as a framework for explanation-based generalization,,2013-03-20
10.1016/B978-0-444-51624-4.50005-8,Automation of Higher-Order Logic,,2016-03-20
10.1007/978-3-540-32275-7_29,Second-Order Matching via Explicit Substitutions,,2011-03-20
10.1016/j.future.2017.07.024,Finding parallel functional pearls: Automatic parallel recursion scheme detection in Haskell functions via anti-unification,,2018-03-20
10.1145/1088454.1088456,A computational approach to reflective meta-reasoning about languages with bindings,,2016-03-20
10.1007/BF00885767,Reduction and unification in lambda calculi with a general notion of subtype,,2012-03-20
10.2197/IPSJDC.4.44,Automatic Construction of Program Transformation Templates,,2012-03-20
10.1007/BF03037096,Synthesis of rewrite programs by higher-order and semantic unification,,2015-03-20
10.1145/3374208,Symbolic Disintegration with a Variety of Base Measures,,2019-03-20
10.1016/j.jsc.2003.09.002,Tractable and intractable second-order matching problems,,2014-03-20
10.1007/BF00871692,Automated program understanding by concept recognition,,2018-03-20
10.1007/s10817-018-9483-3,Mechanized Metatheory Revisited,,2018-03-20
10.1007/978-3-540-25938-1_12,Deterministic Higher-Order Patterns for Program Transformation,,2011-03-20
10.18725/OPARU-1682,Formalisierung schematischer Algorithmen,,2017-03-20
10.1145/2103746.2103752,Polynomial-time inverse computation for accumulative functions with multiple data traversals,,2012-03-20
10.1093/jigpal/11.1.51,Higher Order beta Matching is Undecidable,,2012-03-20
10.4230/LIPIcs.FSTTCS.2016.27,Model Checking Population Protocols,,2013-03-20
10.1145/3373718.3394732,When Reachability Meets Grzegorczyk,,2020-03-20
10.4230/LIPIcs.CONCUR.2019.31,Expressive Power of Broadcast Consensus Protocols,,2019-03-20
10.4204/EPTCS.300.7,Immediate Observation in Mediated Population Protocols,,2020-03-20
10.1007/978-3-030-21571-2_20,Parameterized Analysis of Immediate Observation Petri Nets,,2020-03-20
10.1007/978-3-319-43994-5_4,Robustness of Expressivity in Chemical Reaction Networks,,2014-03-20
10.4230/LIPIcs.FSTTCS.2019.47,Distance Between Mutually Reachable Petri Net Configurations,,2014-03-20
10.23638/LMCS-15(3:6)2019,Controlling a population,,2020-03-20
10.1007/s11047-017-9648-8,Democratic  existential  and consensus-based output conventions in stable computation by chemical reaction networks,,2016-03-20
10.1145/3209108.3209110,Black Ninjas in the Dark: Formal Analysis of Population Protocols,,2019-03-20
10.1145/3436980.3436984,The ABCs of petri net reachability relaxations,,2020-03-20
10.1007/978-3-319-43994-5,DNA Computing and Molecular Programming,,2014-03-20
10.1145/3087801.3087816,Towards Efficient Verification of Population Protocols,,2011-03-20
10.4230/LIPIcs.CONCUR.2018.31,Verification of Immediate Observation Population Protocols,,2019-03-20
10.4230/LIPIcs.STACS.2018.16,Large Flocks of Small Birds: on the Minimal Size of Population Protocols,,2013-03-20
10.4230/LIPIcs.STACS.2020.40,Succinct Population Protocols for Presburger Arithmetic,,2012-03-20
10.1145/3385634.3385638,Model checking randomized distributed algorithms,,2019-03-20
10.1007/978-3-030-61470-6_16,Verifying AbC Specifications via Emulation,,2011-03-20
10.4230/LIPIcs.CONCUR.2020.46,Deciding the existence of cut-off in parameterized rendez-vous networks,,2015-03-20
10.4230/LIPIcs.CONCUR.2017.12,Controlling a Population,,2016-03-20
10.1007/s00446-017-0302-6,Parameterized model checking of rendezvous systems,,2015-03-20
10.1007/s11047-018-9687-9,Computational complexity of atomic chemical reaction networks,,2017-03-20
10.4230/LIPIcs.CONCUR.2018.33,Automatic Analysis of Expected Termination Time for Population Protocols,,2013-03-20
10.1007/978-3-319-58747-9_2,Advances in Parameterized Verification of Population Protocols,,2015-03-20
10.1145/3373718.3394741,The Complexity of Reachability in Affine Vector Addition Systems with States,,2013-03-20
10.1007/978-3-030-53291-8_20,Checking Qualitative Liveness Properties of Replicated Systems with Stochastic Scheduling,,2015-03-20
10.1007/978-3-642-12107-4_16,Natural and Flexible Error Recovery for Generated Parsers,,2019-03-20
10.3929/ETHZ-A-010863881,Envision: Reinventing the Integrated Development Environment,,2013-03-20
10.6028/nbs.tn.797,Static Language Analysis,,2019-03-20
10.1007/BF00286490,Left context precedence grammars,,2015-03-20
10.1007/BF00991071,An error-correcting syntactic decoder for computer networks,,2013-03-20
10.14279/DEPOSITONCE-9332,Deterministic pushdown automata as specifications for discrete event supervisory control in Isabelle,,2013-03-20
10.1017/S0956796812000366,Syntactic soundness proof of a type-and-capability system with hidden state,,2019-03-20
10.1109/CIST.2016.7804954,Automated fault localizing and correction in dynamically analyzed programs,,2012-03-20
10.1007/BF00264317,The ELL(1) parser generator and the error recovery mechanism,,2012-03-20
10.1007/978-3-642-39718-9_19,Finitary Fairness in Action Systems,,2020-03-20
10.1016/S0020-0190(03)00380-6,It was fun,,2013-03-20
10.1007/BF00289508,A model for data structures and its applications. (Part II),,2012-03-20
10.1007/BF01381718,Derivation of efficient parallel programs: An example from genetic sequence analysis,,2018-03-20
10.1109/SNPD.2007.406,OR-ATP: An Operation Refinement Approach As a Process of Automatic Theorem Proving,,2015-03-20
10.1016/j.ins.2010.06.024,Formal behavior modeling and effective automatic refinement,,2014-03-20
10.1007/s00165-012-0239-2,External and internal choice with event groups in Event-B,,2013-03-20
10.1016/j.scico.2017.05.010,Derivation of algorithmic control structures in Event-B refinement,,2020-03-20
10.1109/ICEIE.2010.5559891,Derivation of Z functional input/output refinement proof rules,,2015-03-20
10.1007/BF01210999,Data refinement  call by value and higher order programs,,2020-03-20
10.1007/11828563_15,Omega Algebra  Demonic Refinement Algebra and Commands,,2017-03-20
10.1109/GTSE.2015.14,The Unending Quest for Valid  Useful Software Engineering Theories,,2013-03-20
10.1016/j.entcs.2011.11.017,Proving Reachability in B using Substitution Refinement,,2013-03-20
10.1007/978-0-387-21798-7_13,Abstraction dependencies,,2012-03-20
10.1007/11783596_20,The Linear Algebra of UTP,,2019-03-20
10.1109/snpd.2007.253,OR-ATP: An Operation Refinement Approach As a Process of Automatic Theorem Proving,,2019-03-20
10.1109/IPDPS.2002.1016623,Formal Specification and Design of Mobile Systems,,2014-03-20
10.1145/570886.570888,Data abstraction and information hiding,,2016-03-20
10.1145/248052.248065,Characterization of message ordering specifications and protocols,,2017-03-20
10.26507/REI.V8N15.233,LA LÓGICA EN LAS CIENCIAS COMPUTACIONALES,,2011-03-20
10.1007/978-3-319-11629-7_6,Complexity of Checking Strong Satisfiability of Reactive System Specifications,,2015-03-20
10.1007/BF00263765,Axioms for total correctness,,2011-03-20
10.1109/LICS.2004.50,Transition invariants,,2015-03-20
10.1109/APSEC.2009.70,Extracting Environmental Constraints to Make Reactive System Specifications Realizable,,2018-03-20
10.1145/1250734.1250771,Proving thread termination,,2014-03-20
10.1109/LICS.2004.1319598,Transition invariants,,2020-03-20
10.1016/S0304-3975(00)00313-3,Constructive design of a hierarchy of semantics of a transition system by abstract interpretation,,2016-03-20
10.1155/2020/6791891,Improved Efficiency of Object Code Verification Using Statically Abstracted Object Code,,2015-03-20
10.37099/mtu.dc.etdr/122,Maia and Mandos: Tools for Integrity Protection on Arbitrary Files,,2019-03-20
10.1109/TC.2012.134,A Kleene Algebra of Tagged System Actors for Reasoning about Heterogeneous Embedded Systems,,2015-03-20
10.3724/SP.J.1087.2011.01425,Proof of program correctness based on Kripke structure: Proof of program correctness based on Kripke structure,,2012-03-20
10.1145/3208102,Weakest Precondition Reasoning for Expected Runtimes of Randomized Algorithms,,2014-03-20
10.1145/2103656.2103687,An abstract interpretation framework for termination,,2011-03-20
10.1145/1190216.1190249,Variance analyses from invariance analyses,,2012-03-20
10.1145/1014007.1014023,A theory of totally correct logic program transformations,,2017-03-20
10.3217/jucs-012-09-1405,Computer Science  Logic  Informatics Education,,2011-03-20
10.22028/D291-25890,Temporal verification with transition invariants,,2012-03-20
10.1007/978-3-642-13010-6_4,Using the Spec# Language  Methodology  and Tools to Write Bug-Free Programs,,2017-03-20
10.1007/s10990-008-9024-6,Totally correct logic program transformations via well-founded annotations,,2017-03-20
10.1587/TRANSINF.E96.D.2187,Complexity of Strong Satisfiability Problems for Reactive System Specifications,,2013-03-20
10.2478/s11532-009-0132-x,Determination of ultra-trace amounts of inorganic selenium species in natural water by ion chromatography-inductively coupled plasma-mass spectrometry coupled with nano-Al2O3 solid phase extraction,,2020-03-20
10.1007/978-3-030-50026-9_24,On the Transformation of LL(k)-linear Grammars to LL(1)-linear,,2016-03-20
10.1002/SPE.V39:3,A text pattern-matching tool based on Parsing Expression Grammars,,2011-03-20
10.1201/9780203869352-8,Attribute grammar for 3D city models,,2015-03-20
10.1145/3237009.3237023,Utilizing object reference graphs and garbage collection roots to detect memory leaks in offline memory monitoring,,2019-03-20
10.1007/s00236-007-0045-0,Recursive descent parsing for Boolean grammars,,2019-03-20
10.1017/S0956796812000329,When Maybe is not good enough,,2020-03-20
10.1007/BF02252913,Anwendung von Graphenalgorithmen auf allgemeinere Problemklassen,,2015-03-20
10.1007/BF02943116,Reduction of unnecessary dotted rules in the earley-algorithm,,2020-03-20
10.1007/978-3-642-28332-1_10,Defining Contexts in Context-Free Grammars,,2017-03-20
10.1016/J.ISPRSJPRS.2010.10.001,Learning grammar rules of building parts from precise models and noisy observations,,2018-03-20
10.1016/j.scico.2016.04.003,Structuring the GLL parsing algorithm for performance,,2018-03-20
10.1007/S11004-006-9074-4,Simulating Sedimentary Successions Using Syntactic Pattern Recognition Techniques,,2011-03-20
10.1007/BF02239477,Generation  recognition and parsing of context-free languages by means of recursive graphs,,2013-03-20
10.3384/ECP12076809,Modelica Code Generation with Polymorphic Arrays and Records Used in Wind Turbine Modeling,,2011-03-20
10.1111/tgis.12200,Statistical Relational Learning of Grammar Rules for 3D Building Reconstruction,,2015-03-20
10.1007/BF01744303,On comparingLL(k) andLR(k) grammars,,2015-03-20
10.1061/(ASCE)SU.1943-5428.0000232,Semantically Enhanced 3D Building Model Reconstruction from Terrestrial Laser-Scanning Data,,2018-03-20
10.1145/3264637.3264646,Towards certified virtual machine-based regular expression parsing,,2015-03-20
10.15439/2017F162,Parsing with Earley Virtual Machines,,2013-03-20
10.5194/ISPRS-ANNALS-III-3-311-2016,Incremental Refinement of FAÇADE Models with Attribute Grammar from 3d Point Clouds,,2012-03-20
10.1007/978-3-662-53132-7_1,Context-Free Ambiguity Detection Using Multi-stack Pushdown Automata,,2013-03-20
10.1117/12.970011,Spatial Database Organization for Multi-attribute Sensor Data Representation,,2012-03-20
10.2478/msp-2019-0073,Growth  spectral  optical  dielectric and third order nonlinear studies on 2-amino 4-methylpyridinium salicylate single crystals,,2015-03-20
10.1016/S1571-0661(04)80756-4,Automath and Pure Type Systems,,2011-03-20
10.1007/978-3-642-33409-2_21,Fuzzy Graph Language Recognizability,,
10.1007/3-540-48483-3_7,An Algebra of Graph Derivations Using Finite (co-) Limit Double Theories,,2014-03-20
10.1007/978-3-642-59126-6_3,Context-Free Graph Grammars,,2018-03-20
10.1007/978-3-642-24897-9_8,Graph Automata: The Algebraic Properties of Abelian Relational Graphoids,,2016-03-20
10.1007/978-3-540-75414-5_13,The Syntactic Complexity of Eulerian Graphs,,2011-03-20
10.1016/S0167-6423(96)00036-6,The I²C-Bus in Discrete-Time Process Algebra,,2015-03-20
10.1016/S0304-3975(97)00183-7,Explicit Substitution On the Edge of Strong Normalization,,2014-03-20
10.1007/978-0-387-35264-0_3,Deriving a systolic regular language recognizer,,2017-03-20
10.3233/FI-1997-291203,Discrete Time Process Algebra: Absolute Time  Relative Time and Parametric Time,,2011-03-20
10.1017/S0960129501003486,Hypergraph Construction and its Application to the Static Analysis of Concurrent Systems,,2011-03-20
10.1007/BFb0026992,When Do Datatypes Commute?,,2018-03-20
10.14232/actacyb.23.1.2017.8,Varieties of Graphoids and Birkoff's Theorem for Graphs,,2011-03-20
10.1007/3-540-63141-0_8,Bounded Stacks  Bags and Queues,,2016-03-20
10.1007/978-3-319-03898-8,Parameterized and Exact Computation,,2017-03-20
10.1007/s10462-013-9412-0,Fuzzy graphs: algebraic structure and syntactic recognition,,2017-03-20
10.1007/3-540-63139-9_30,Life-Cycle Inheritance: A Petri-Net-Based Approach,,2018-03-20
10.1007/978-3-642-41013-0_50,Automata on Directed Graphs for the Recognition of Assembly Lines,,2017-03-20
10.1016/j.fss.2013.04.015,Syntactic recognizability of graphs with fuzzy attributes,,2014-03-20
10.1007/978-3-319-03898-8_12,Subgraphs Satisfying MSO Properties on z-Topologically Orderable Digraphs,,2013-03-20
10.1007/978-3-662-52921-8_13,Causality in Bounded Petri Nets is MSO Definable,,2020-03-20
10.3233/IFS-151911,Mamdani fuzzy networks with feedforward rule bases for complex systems modelling,,2013-03-20
10.1007/978-3-319-25150-9_22,MSO Logic and the Partial Order Semantics of Place/Transition-Nets,,2014-03-20
10.1007/s10849-018-9270-x,The Expressivity of Autosegmental Grammars,,2018-03-20
10.1017/S0960129512000096,The monoidal structure of Turing machines,,
10.3115/v1/W15-2312,A Concatenation Operation to Derive Autosegmental Graphs,,2012-03-20
10.1007/978-3-642-28332-1_38,Canonizable Partial Order Generators,,2019-03-20
10.1007/978-3-319-21145-9_8,Reachability in Graph Transformation Systems and Slice Languages,,2013-03-20
10.4304/jsw.3.9.44-51,An Open Approach for the Applied Pi Calculus,,2014-03-20
10.1109/ISBIM.2008.260,Probabilistic Applied Pi Calculus and Zero Knowledge,,2012-03-20
10.1016/j.ic.2010.06.001,Deriving structural labelled transitions for mobile ambients,,2019-03-20
10.1080/00207160903243148,Applying a testing approach to the Calculus of Fair Ambients,,2016-03-20
10.1007/s11432-012-4663-y,How faithfully can π be interpreted in SA?,,2016-03-20
10.1007/978-3-540-85361-9_36,Deriving Structural Labelled Transitions for Mobile Ambients,,2017-03-20
10.1109/FSKD.2008.262,Dormancy and Spatial Logic of Mobile Ambients,,
10.1016/j.tcs.2009.11.011,On the expressiveness of interaction,,2016-03-20
10.1016/j.ins.2010.07.008,A pure labeled transition semantics for the applied pi calculus,,2018-03-20
10.4304/jcp.4.6.469-476,Axiomatic Systems for the Bisimilarity on Finite Fair Ambient Processes,,2019-03-20
10.1051/ita/2019005,Parameterizing higher-order processes on names and processes,,2019-03-20
10.1016/j.tcs.2015.07.043,Theory of interaction,,2012-03-20
10.1016/j.ic.2007.07.001,Magic numbers in the state hierarchy of finite automata,,2015-03-20
10.1007/BF01699458,On efficient deterministic simulation of turing machine computations below logaspace,,2020-03-20
10.1007/BF02088003,Sublogarithmic-space turing machines  nonuniform space complexity  and closure properties,,2012-03-20
10.1002/rsa.20637,A combinatorial characterization of smooth LTCs and applications,,2016-03-20
10.1007/978-3-319-60252-3_24,The Quotient Operation on Input-Driven Pushdown Automata,,2013-03-20
10.1007/3-540-45711-9_20,Upper Bounds for Restricted Splicing,,2018-03-20
10.1007/BF01237236,On characterizations of recursively enumerable languages,,2012-03-20
10.1142/s0129054119400367,State Complexity of the Quotient Operation on Input-Driven Pushdown Automata,,2015-03-20
10.1007/BF00264252,The axiomatic semantics of programs based on Hoare's logic,,2019-03-20
10.1016/J.IC.2019.05.004,Deciding probabilistic simulation between probabilistic pushdown automata and finite-state systems,,2012-03-20
10.4230/LIPIcs.FSTTCS.2012.448,Bisimilarity of Probabilistic Pushdown Automata,,2012-03-20
10.23638/LMCS-14(4:13)2018,Game Characterization of Probabilistic Bisimilarity  and Applications to Pushdown Automata,,2011-03-20
10.1007/BF02242705,Mapping dynamic programming onto modular linear systolic arrays,,2019-03-20
10.7907/8FRW-ZF17.,Applying formal methods to distributed algorithms using local-global relations,,2019-03-20
10.2478/squa-2014-0004,Palynology and Archaeology of Late Vistulian and Early Holocene Sites in Lubuskie Lake District  Western Poland,,2011-03-20
10.1007/s10703-013-0201-9,A modal characterization of alternating approximate bisimilarity,,2016-03-20
10.1007/978-3-642-38592-6_15,Transducer-Based Algorithmic Verification of Retransmission Protocols over Noisy Channels,,2017-03-20
10.1007/978-3-642-41202-8_20,Asymptotic Bounds for Quantitative Verification of Perturbed Probabilistic Systems,,2012-03-20
10.1016/j.tcs.2012.03.026,Approximating Markov processes through filtration,,2013-03-20
10.1007/s11432-012-4660-1,Behavioural equivalences of a probabilistic pi-calculus,,2020-03-20
10.1007/BF01379184,Verifying atomic data types,,2011-03-20
10.1007/BF03037423,Modularization and abstraction in logic programming,,2015-03-20
10.1023/A:1023885412683,Modification of the IOTA Method for Non-Hierarchical Types,,2017-03-20
10.1007/978-1-84882-914-5_12,The Logic Programming Paradigm,,2020-03-20
10.1239/JAP/1222441835,Average-case analysis of cousins in m-ary tries,,2019-03-20
10.1007/S11009-008-9087-1,Imbalance in Random Digital Trees,,2016-03-20
10.1137/140977989,The Wiener Index of Random Digital Trees,,2018-03-20
10.1007/978-3-319-91839-6_4,Different Kinds of Decision Trees,,2019-03-20
10.1007/978-3-642-30341-8_3,Comparison of Greedy Algorithms for Decision Tree Optimization,,2019-03-20
10.1007/s10878-005-4106-4,Testing Systems of Identical Components,,2017-03-20
10.1007/978-3-319-01866-9_13,Relationships Among Various Parameters for Decision Tree Optimization,,2019-03-20
10.1007/978-3-642-24425-4_26,Constructing an Optimal Decision Tree for FAST Corner Point Detection,,2014-03-20
10.1080/03081079.2013.798902,Optimization and analysis of decision trees and rules: dynamic programming approach,,2016-03-20
10.1016/j.procs.2014.08.132,Total Path Length and Number of Terminal Nodes for Decision Trees,,2014-03-20
10.1515/jwld-2017-0080,Selection of a semivariogram model in the study of spatial distribution of soil moisture,,2019-03-20
10.1007/978-3-319-10407-2_25,Control Theory with Information Structures,,2020-03-20
10.1016/j.tcs.2011.08.029,Quasi-rocking real-time pushdown automata,,2019-03-20
10.1007/978-3-540-39890-5_21,NCE Graph Grammars and Clique-Width,,2016-03-20
10.1016/j.apal.2003.11.002,Algorithmic uses of the Feferman-Vaught Theorem,,2020-03-20
10.1109/AMS.2007.79,Performance Modelling of Finite Capacity Queues with Complete Buffer Partitioning Scheme for Bursty Traffic,,2014-03-20
10.1016/j.amc.2004.04.115,Maximum entropy analysis to the N policy M/G/1 queueing system with server breakdowns and general startup times,,2013-03-20
10.1007/BF01178507,MRE hierarchical decomposition of general queueing network models,,2019-03-20
10.1142/S021926590600165X,Performance Modelling of Traffic Congestion in Wireless Networks,,2016-03-20
10.1109/CIT.2004.1357285,A ME-based approximation model for the performance evaluation of congestion control mechanism using queue thresholds,,2019-03-20
10.1007/978-3-540-30197-4_31,Performance Analysis of Congestion Control Mechanism Using Queue Thresholds Under Bursty Traffic,,2012-03-20
10.1007/11753810_62,An Information Theoretic Approach for Systems with Parallel Distributions: Case Studying Internet Traffic,,2016-03-20
10.1080/00207160701694161,Entropy maximization and NT vacation M/G/1 model with a startup and unreliable server: comparative analysis on the first two moments of system size,,2020-03-20
10.1016/j.simpat.2006.11.013,Performance analysis of networks of queues under active queue management scheme,,2011-03-20
10.1007/978-3-540-36212-8_7,A Universal Maximum Entropy Solution for Complex Queueing Systems and Networks,,2018-03-20
10.1023/A:1023603308841,Analysis of GSM/GPRS Cell with Multiple Data Service Classes,,2014-03-20
10.1007/978-3-642-02742-0_37,Performance Modelling and Traffic Characterisation of Optical Networks,,2013-03-20
10.1007/s001860400395,Comparative analysis for the N policy M/G/1 queueing system with a removable and unreliable server,,2011-03-20
10.1016/J.APM.2008.05.007,A maximum entropy approach for the (p N)-policy M/G/1 queue with a removable and unreliable server,,2014-03-20
10.1109/ICC.2004.1312933,Blocking probability analysis in future wireless networks,,2018-03-20
10.1109/ICPADS.2005.93,Analysis of Discrete-Time Queues with Space and Service Priorities for Arbitrary Arrival Processes,,2015-03-20
10.1109/SAINT.2011.91,A Unified ME Algorithm for Arbitrary Open QNMs with Mixed Blocking Mechanisms,,2011-03-20
10.1007/s10776-006-0054-x,Analysis of Traffic Distribution and Blocking Probability in Future Wireless Networks,,2016-03-20
10.1016/j.amc.2006.05.174,Maximum entropy solutions for batch arrival queue with an un-reliable server and delaying vacations,,2020-03-20
10.1109/ICPADS.2006.25,Analysis of queueing networks with blocking under active queue management scheme,,2012-03-20
10.1504/IJMOR.2011.040029,Queueing model with state-dependent bulk arrival and second optional service,,2016-03-20
10.1016/S0307-904X(02)00056-2,Maximum entropy analysis to the N policy M/G/1 queueing system with a removable server,,2016-03-20
10.1504/IJMOR.2012.044474,MX/G/1 queuing model with state dependent arrival and Second Optional Vacation,,2013-03-20
10.1016/j.comcom.2010.04.009,Dynamic OBS offset allocation in WDM networks,,2014-03-20
10.1186/2251-712X-9-21,Analysis of unreliable bulk queue with statedependent arrivals,,2014-03-20
10.1109/ICCCN.2007.4317996,Analysis of Discrete Time Queueing Networks under Buffer Threshold Scheme,,2011-03-20
10.1109/ICCNMC.2003.1243056,Performance models in GSM and GPRS networks,,2011-03-20
10.1520/JTE20130270,Maximum Entropy Analysis to theNPolicy M/G/1 Queue with Working Breakdowns,,2012-03-20
10.1016/j.simpat.2008.09.006,Performance analysis of a threshold-based discrete-time queue using maximum entropy,,2020-03-20
10.3934/NACO.2011.1.781,A unified ME algorithm for arbitrary open QNMs with mixed blocking mechanisms,,2019-03-20
10.1007/978-3-540-30582-8_15,RED Based Congestion Control Mechanism for Internet Traffic at Routers,,2012-03-20
10.1016/J.CAM.2007.10.001,Maximum entropy approach for batch-arrival queue under N policy with an un-reliable server and single vacation,,2011-03-20
10.1504/IJSOI.2011.045561,First two moment entropy maximisation approach for M/G/1 queues with second optional service and server breakdowns,,2016-03-20
10.1016/j.comcom.2014.03.003,Dynamic buffer sizing for wireless devices via maximum entropy,,2019-03-20
10.1109/MASCOT.2003.1240653,Modelling differentiated services in UMTS networks,,2015-03-20
10.3233/FI-2012-663,On the Computational Complexity of Matrix Semigroup Problems,,2013-03-20
10.1016/j.tcs.2007.10.025,On undecidability bounds for matrix decision problems,,2016-03-20
10.1007/978-3-319-67089-8_10,Reachability Problem for Polynomial Iteration Is PSPACE-complete,,2013-03-20
10.4204/EPTCS.151.21,Synchronizing weighted automata,,2012-03-20
10.4230/LIPIcs.ICALP.2019.39,On reachability problems for low dimensional matrix semigroups,,2011-03-20
10.4230/LIPIcs.STACS.2015.649,Undecidability in Binary Tag Systems and the Post Correspondence Problem for Five Pairs of Words,,2015-03-20
10.1016/j.tcs.2010.06.005,The continuous Skolem-Pisot problem,,2018-03-20
10.1007/0-387-25036-0_5,The Local Ratio Technique and Its Application to Scheduling and Resource Allocation Problems,,2013-03-20
10.1109/CHICC.2014.6897074,An evolutionary game optimization to vertex cover of dynamic networks,,2015-03-20
10.1093/ACPROF:OSO/9780198566076.001.0001,Invitation to Fixed-Parameter Algorithms,,2012-03-20
10.1007/978-3-642-14355-7_17,On the Approximability of the Vertex Cover and Related Problems,,2019-03-20
10.1002/NET.V50:1,Linear time algorithms for approximating the facility terminal cover problem,,2016-03-20
10.1007/978-3-540-85097-7_19,Algorithms and Implementation for Interconnection Graph Problem,,2014-03-20
10.5860/choice.46-3829,Biological Modeling and Simulation: A Survey of Practical Models  Algorithms  and Numerical Methods,,2014-03-20
10.1145/2151171.2151179,How to trim a MST: A 2-Approximation algorithm for minimum cost-tree cover,,2018-03-20
10.1016/j.tcs.2004.12.034,On approximating minimum vertex cover for graphs with perfect matching,,2017-03-20
10.1007/978-3-540-72845-0_22,Vertex Cover Approximations on Random Graphs,,2014-03-20
10.1007/11523468_84,A Better Approximation Ratio for the Vertex Cover Problem,,2012-03-20
10.1007/s00453-012-9629-3,Greedy Δ-Approximation Algorithm for Covering with Arbitrary Constraints and Submodular Cost,,2016-03-20
10.3929/ETHZ-A-004832472,On the Design and Operation of High-Performance Optical Networks,,2016-03-20
10.2298/YJOR0901003P,An overview on polynomial approximation of NP-hard problems,,2016-03-20
10.1145/1435375.1435382,On hard instances of approximate vertex cover,,2019-03-20
10.1016/j.procs.2012.04.080,A Simple NOVCA: Near Optimal Vertex Cover Algorithm,,2020-03-20
10.1145/1435375.1435381,Distributed weighted vertex cover via maximal matchings,,2018-03-20
10.4230/LIPIcs.APPROX-RANDOM.2018.20,Mildly Exponential Time Approximation Algorithms for Vertex Cover  Balanced Separator and Uniform Sparsest Cut,,2019-03-20
10.1109/ICPCI.2012.6486444,New heuristic algorithm for unweighted minimum vertex cover,,2013-03-20
10.1002/9780470400531.EORMS1097,Approximation Algorithms for Stochastic Optimization Problems in Operations Management,,2016-03-20
10.1504/IJSNET.2007.013195,On extracting consistent graphs in wireless sensor networks,,2018-03-20
10.3990/1.9789036526609,Exact algorithms for the Steiner Tree Problem,,2019-03-20
10.1007/3-540-45465-9_86,Improved Inapproximability Results for Vertex Cover on k -Uniform Hypergraphs,,2016-03-20
10.1109/ICASSP.2019.8683696,Digitally Annealed Solution for the Vertex Cover Problem with Application in Cyber Security,,2011-03-20
10.1007/11764298_21,Kernels for the Vertex Cover Problem on the Preferred Attachment Model,,2017-03-20
10.1587/TRANSFUN.E96.A.1331,Computing-Based Performance Analysis of Approximation Algorithms for the Minimum Weight Vertex Cover Problem of Graphs,,2019-03-20
10.3929/ETHZ-A-007161496,Reoptimization of NP-hard Problems,,2012-03-20
10.1093/ietisy/e89-d.8.2380,A (2 - clog N/N)-Approximation Algorithm for the Stable Marriage Problem,,2013-03-20
10.1007/978-3-540-92248-3_22,Improved Upper Bounds for Partial Vertex Cover,,2014-03-20
10.1145/1041680.1041683,Local ratio: A unified framework for approximation algorithms. In Memoriam: Shimon Even 1935-2004,,2012-03-20
10.1093/bioinformatics/btq025,Correcting population stratification in genetic association studies using a phylogenetic approach,,2019-03-20
10.1016/j.jcss.2004.03.006,Approximating the dense set-cover problem,,2015-03-20
10.1109/TCYB.2018.2789930,Game-Based Memetic Algorithm to the Vertex Cover of Networks,,2015-03-20
10.1002/net.20172,Linear time algorithms for approximating the facility terminal cover problem,,2013-03-20
10.1007/978-3-642-02927-1_53,Greedy D{\ensuremath{\Delta}}-Approximation Algorithm for Covering with Arbitrary Constraints and Submodular Cost,,2017-03-20
10.1109/chicc.2014.6897074,An evolutionary game optimization to vertex cover of dynamic networks,,2020-03-20
10.1007/978-3-030-39219-2_23,On the Minimum Satisfiability Problem,,2018-03-20
10.1007/978-3-540-27798-9_16,Approximated Vertex Cover for Graphs with Perfect Matchings,,2015-03-20
10.1007/3-540-45071-8_35,Randomized Approximation of the Stable Marriage Problem,,2018-03-20
10.1016/j.tcs.2009.01.035,PTAS for connected vertex cover in unit disk graphs,,2018-03-20
10.1007/978-3-540-85097-7_24,Polynomial Time Approximation Scheme for Connected Vertex Cover in Unit Disk Graph,,
10.1007/11786986_38,How to Trim an MST: A 2-Approximation Algorithm for Minimum Cost Tree Cover,,2018-03-20
10.1016/j.dam.2017.07.004,Algorithms  kernels and lower bounds for the Flood-It game parameterized by the vertex cover number,,2011-03-20
10.1023/B:ANOR.0000039523.95673.33,An Ant Colony Optimization Algorithm for the Minimum Weight Vertex Cover Problem,,2016-03-20
10.1007/978-1-4757-3563-5_5,Placement of Wavelength Converters,,2020-03-20
10.1007/s00224-005-1140-7,Approximating MIN 2-SAT and MIN 3-SAT,,2015-03-20
10.1016/j.ejor.2004.03.021,Polynomial approximation algorithms with performance guarantees: An introduction-by-example,,2015-03-20
10.1007/978-3-642-45278-9_6,On the Approximability of Splitting-SAT in 2-CNF Horn Formulas,,2019-03-20
10.1007/s10107-005-0673-5,Hedging Uncertainty: Approximation Algorithms for Stochastic Optimization Problems,,2012-03-20
10.1093/ietisy/e89-d.8.2405,Approximated Vertex Cover for Graphs with Perfect Matchings,,2012-03-20
10.1142/S0217595906000905,A Hybrid Heuristic for the Minimum Weight Vertex Cover Problem,,2020-03-20
10.1016/j.tcs.2004.02.045,Randomized approximation of the stable marriage problem,,2015-03-20
10.1007/978-3-319-89441-6_2,On Approximability of Connected Path Vertex Cover,,2015-03-20
10.1109/ICDM.2017.148,Crowdsourced Correlation Clustering with Relative Distance Comparisons,,2011-03-20
10.1016/j.dam.2011.10.027,Strong and weak edges of a graph and linkages with the vertex cover problem,,2020-03-20
10.1007/3-540-36136-7_41,Approximating MIN k-SAT,,2016-03-20
10.1016/J.TCS.2016.07.009,Vertex cover in conflict graphs,,2013-03-20
10.1007/978-3-540-39658-1_26,Improved Approximation of the Stable Marriage Problem,,2016-03-20
10.1541/IEEJEISS.124.1494,An Efficient Algorithm for Minimum Vertex Cover Problem,,2012-03-20
10.1145/1132516.1132533,Private approximation of search problems,,2020-03-20
10.1201/9781351236423-12,Distributed Approximation Algorithms via LP-Duality and Randomization,,2011-03-20
10.4230/LIPIcs.APPROX-RANDOM.2019.28,Approximation Algorithms for Partially Colorable Graphs,,2016-03-20
10.1007/11602613_90,A (2-c*(1/sqrt(N)))-Approximation Algorithm for the Stable Marriage Problem,,2016-03-20
10.1007/978-3-319-14472-6_21,Self-stabilizing Algorithms for Connected Vertex Cover and Clique Decomposition Problems,,2017-03-20
10.1007/978-3-540-25960-2_8,Hedging Uncertainty: Approximation Algorithms for Stochastic Optimization Problems,,2015-03-20
10.1007/s00453-013-9828-6,The Maximum Clique Problem in Multiple Interval Graphs,,2014-03-20
10.1109/ISCAS.2012.6272111,Performance comparison of approximation algorithms for the minimum weight vertex cover problem,,2016-03-20
10.1007/978-3-319-26626-8_29,Vertex Cover in Conflict Graphs: Complexity and a Near Optimal Approximation,,2020-03-20
10.1007/978-1-4419-7997-1_60,Partition in high dimensional spaces,,2019-03-20
10.1109/TSMCB.2012.2218805,Towards a Snowdrift Game Optimization to Vertex Cover of Networks,,2012-03-20
10.1007/978-3-540-93980-1_16,Reoptimization of Weighted Graph and Covering Problems,,2011-03-20
10.1016/j.ipl.2004.01.011,A 2-approximation NC algorithm for connected vertex cover and tree cover,,2018-03-20
10.4230/LIPIcs.ESA.2020.23,An algorithmic weakening of the Erdős-Hajnal conjecture,,2018-03-20
10.1017/S0963548309990186,Randomized Greedy Algorithms for Independent Sets and Matchings in Regular Graphs: Exact Results and Finite Girth Corrections,,2019-03-20
10.1007/978-3-540-28629-5_18,On Approximation Hardness of the Minimum 2SAT-DELETION Problem,,2013-03-20
10.11499/SICEP.2004.0_80_3,An Hopfield network learning for minimum vertex cover problem,,2017-03-20
10.23638/DMTCS-22-1-1,Vertex order with optimal number of adjacent predecessors,,2012-03-20
10.1007/978-3-642-13962-8_20,Approximability and Hardness in Multi-objective Optimization,,2015-03-20
10.1145/1273340.1273346,Improved approximation results for the stable marriage problem,,2011-03-20
10.1016/j.comgeo.2011.03.002,Minimum vertex cover in rectangle graphs,,2020-03-20
10.1145/564585.564598,Algorithms column: the vertex cover problem,,2012-03-20
10.1007/11427186_47,Vertex Cover Approximations: Experiments and Observations,,2013-03-20
10.1541/IEEJEISS.124.2155,A Modified Hopfield Neural Network for the Minimum Vertex Cover Problem,,2018-03-20
10.1007/11533719_71,A Tight Analysis of the Maximal Matching Heuristic,,2012-03-20
10.1007/978-3-030-44038-1_24,Efficient Method for Link Protection Under Multiple Constraints Using ZDD,,2015-03-20
10.1007/s10898-013-0116-4,Minimum vertex cover in ball graphs through local search,,2016-03-20
10.1177/0278364918780999,Complexity Results and Fast Methods for Optimal Tabletop Rearrangement with Overhand Grasps,,2017-03-20
10.1007/0-387-23830-1_3,Probabilistic Verification and Non-Approximability,,2019-03-20
10.1145/1597036.1597045,A better approximation ratio for the vertex cover problem,,2014-03-20
10.1007/978-3-540-27810-8_30,A (2-c(log N/N))-Approximation Algorithm for the Stable Marriage Problem,,2018-03-20
10.37236/34,Ramsey Theory Applications,,2013-03-20
10.1007/978-3-642-15775-2_22,Minimum Vertex Cover in Rectangle Graphs,,2017-03-20
10.4230/OASIcs.SOSA.2019.15,A Note on Max k-Vertex Cover: Faster FPT-AS  Smaller Approximate Kernel and Improved Approximation,,2019-03-20
10.1137/070710275,Divide-and-Conquer Approximation Algorithm for Vertex Cover,,2013-03-20
10.1007/11533719_85,Distributed Weighted Vertex Cover via Maximal Matchings,,2012-03-20
10.17265/1934-7332/2014.02.004,A Heuristic Approach to Fast NOVCA (Near Optimal Vertex Cover Algorithm),,2015-03-20
10.1007/s10878-017-0127-z,Approximation for vertex cover in $$\beta $$β-conflict graphs,,2013-03-20
10.1201/9781420010749.ch13,Distributed Approximation Algorithms via LP-Duality and Randomization,,2017-03-20
10.1016/j.ins.2012.06.011,Minimum weight covering problems in stochastic environments,,2011-03-20
10.1016/S0196-6774(03)00005-1,On efficient fixed-parameter algorithms for weighted vertex cover,,2015-03-20
10.1109/BigDataCongress.2015.75,Efficient Algorithms for Social Network Coverage and Reach,,2014-03-20
10.1007/s00453-007-9101-y,"A (
$2-c\frac{1}{\sqrt{N}}$
)-Approximation Algorithm for the Stable Marriage Problem",,2014-03-20
10.1145/1190095.1190099,Sojourn times in (discrete) time shared systems and their continuous time limits,,2014-03-20
10.1007/s11134-008-9092-7,Sojourn times in (discrete) time shared systems and their continuous time limits,,2020-03-20
10.1145/3344514,Monadic Datalog  Tree Validity  and Limited Access Containment,,2019-03-20
10.1515/OPAR-2018-0023,The Garrison of the Roman Fort at Porolissum (Dacia). The Analysis of the Tile-Stamps,,2020-03-20
10.1007/s00224-017-9771-z,Reasoning about integrity constraints for tree-structured data,,2011-03-20
10.3390/REL10030167,Is Gabola a Decolonial Church or Another Trajectory of Freedom of Religion in Post-Colonial South Africa? Rethinking Ethical Issues in Religious Praxis,,2012-03-20
10.4102/ve.v41i1.2126,Regime enablers and captured religious mandate in Zimbabwe,,2019-03-20
10.1515/arh-2004-0010,Discrete Relaxation Spectrum and K-BKZ Constitutive Equation for PVC  NBR and Their Blends,,2017-03-20
10.4102/VE.V40I1.1864,Conundrum of religious mafia and legislation in South Africa: When does religion become a national threat? Reference to the Seven Angels Ministry,,2017-03-20
10.1007/3-540-46011-X_25,Context-Free Valence Grammars - Revisited,,2013-03-20
10.1109/MWSCAS.2003.1562308,Biomolecular computing paradigms,,2011-03-20
10.25596/jalc-2004-399,Valence Languages Generated by Equality Sets,,2012-03-20
10.1007/s11047-007-9057-5,Doubler and linearizer: an approach toward a unified theory for molecular computing based on DNA complementarity,,2020-03-20
10.5829/IDOSI.WASJ.2013.21.AM.21133,Sticker systems over permutation groups,,2016-03-20
10.1007/11753681_18,Linearizer and Doubler : Two Mappings to Unify Molecular Computing Models Based on DNA Complementarity,,2019-03-20
10.11113/MJFAS.V8N3.136,Sticker Systems Over Monoids,,2019-03-20
10.1109/UKSIM.2011.52,A New Flowchart and Programming Technique Using Bond Graph for Mechatronic Systems,,2020-03-20
10.1142/S012905410700542X,A Tree-Height Hierarchy of Context-Free Languages,,2018-03-20
10.1016/S0096-3003(02)00218-7,A note on the recursive decoupling method for solving tridiagonal linear systems,,2012-03-20
10.1109/FPT.2007.4439271,Recursive Variable Expansion: A Loop Transformation for Reconfigurable Systems,,2011-03-20
10.1109/TVLSI.2007.912038,Area-Efficient Arithmetic Expression Evaluation Using Deeply Pipelined Floating-Point Cores,,2013-03-20
10.1007/978-3-319-91268-4_3,Elementary Net Synthesis Remains NP-Complete Even for Extremely Simple Inputs,,2020-03-20
10.3233/FI-2013-879,Two-Way Finite Automata: Old and Recent Results,,2011-03-20
10.1007/978-3-319-67089-8_13,Parameterized Graph Connectivity and Polynomial-Time Sub-Linear-Space Short Reductions - (Preliminary Report),,2014-03-20
10.1007/978-3-319-04657-0_26,Collapsing Exact Arithmetic Hierarchies,,2015-03-20
10.1109/TAC.2019.2912484,Critical Observability for Automata and Petri Nets,,2016-03-20
10.1145/507457.507465,SIGACT news complexity theory column 35,,2013-03-20
10.1007/978-3-319-08846-4_3,Investigations on Automata and Languages over a Unary Alphabet,,2018-03-20
10.1007/978-3-540-28629-5_23,The Complexity of Membership Problems for Circuits over Sets of Integers,,2014-03-20
10.1007/s00224-009-9172-z,Planar and Grid Graph Reachability Problems,,2017-03-20
10.1007/978-3-319-26850-7_9,Homonym Population Protocols,,2017-03-20
10.1007/978-3-319-03545-1_11,A Formal Proof of Borodin-Trakhtenbrot's Gap Theorem,,2016-03-20
10.1093/jigpal/jzn031,Approximate formulae for a logic that capture classes of computational complexity,,2020-03-20
10.1016/j.tcs.2019.12.037,Orbit Expandability of Automaton Semigroups and Groups,,2015-03-20
10.1007/s00236-020-00373-8,Complement for two-way alternating automata,,2020-03-20
10.4230/LIPIcs.STACS.2016.24,Catalytic Space: Non-determinism and Hierarchy,,2013-03-20
10.1017/CBO9781107338579.009,Turing and the development of computational complexity,,2012-03-20
10.1007/11505877_23,Complementing Two-Way Finite Automata,,2019-03-20
10.23638/LMCS-14(4:5)2018,The Complexity of Bisimulation and Simulation on Finite Systems,,2012-03-20
10.1016/J.IC.2007.01.008,Complementing two-way finite automata,,2014-03-20
10.1007/3-540-45841-7_42,The Membership Problem for Regular Expressions with Intersection Is Complete in LOGCFL,,2016-03-20
10.1007/978-3-662-53132-7_16,Alternating Demon Space Is Closed Under Complement and Other Simulations for Sublogarithmic Space,,2015-03-20
10.1016/j.tcs.2011.08.022,A note on algebras of languages,,2018-03-20
10.1007/978-3-319-32162-2_1,P\mathop{ =}\limits^{?}NP,,2011-03-20
10.4230/LIPIcs.MFCS.2017.62,The 2CNF Boolean Formula Satisfiability Problem and the Linear Space Hypothesis,,2011-03-20
10.1007/978-3-319-05446-9_1,Complexity Theory Basics: NP and NL,,2013-03-20
10.1007/978-3-319-19225-3_10,On the Computational Complexity of Problems Related to Distinguishability Sets,,2014-03-20
10.1007/978-3-642-31653-1,Developments in Language Theory,,2020-03-20
10.1007/978-3-319-21500-6_22,Minimal Reversible Deterministic Finite Automata,,2011-03-20
10.1007/978-3-642-29485-3_3,Experimental Descriptive Complexity,,2014-03-20
10.1007/BF01374526,Structure and importance of logspace-MOD class,,2018-03-20
10.1016/j.jcss.2008.11.001,The complexity of satisfiability problems: Refining Schaefer's theorem,,2012-03-20
10.1007/BF01301970,Alternating time versus deterministic time: A separation,,2018-03-20
10.1016/J.JCSS.2019.06.004,What one has to know when attacking P vs. NP,,2015-03-20
10.1007/978-3-642-39310-5_19,A Characterisation of NL/poly via Nondeterministic Finite Automata,,2012-03-20
10.1007/3-540-45687-2_52,Towards a Cardinality Theorem for Finite Automata,,2015-03-20
10.1016/j.jda.2015.05.011,Interval graph representation with given interval and intersection lengths,,2014-03-20
10.1016/j.jcss.2013.11.004,Infinite vs. finite size-bounded randomized computations,,2015-03-20
10.1007/978-1-4419-5906-5_1142,Complexity Theory,,2013-03-20
10.1007/978-3-319-21500-6_29,On the Complexity of k-Piecewise Testability and the Depth of Automata,,2016-03-20
10.1109/CAC48633.2019.8996382,Collaborative Path Planning for Multiple Unmanned Aerial Vehicles to Avoid Sudden Threats,,2019-03-20
10.1007/978-3-030-30806-3_11,On the Termination Problem for Counter Machines with Incrementing Errors,,2011-03-20
10.4230/LIPIcs.ICALP.2020.122,Dynamic complexity of Reachability: How many changes can we handle?,,2015-03-20
10.1007/978-3-319-91908-9_2,Some Estimated Likelihoods for Computational Complexity,,2018-03-20
10.4204/EPTCS.320.5,Cons-free Programs and Complexity Classes between LOGSPACE and PTIME,,2014-03-20
10.1007/b11926,Fundamentals of Computation Theory,,2019-03-20
10.14279/DEPOSITONCE-617,On structural similarities of finite automata and Turing machine enumerability classes,,2014-03-20
10.4230/DFU.Vol7.15301.1,Polymorphisms  and How to Use Them,,2013-03-20
10.1007/s00037-009-0277-1,Space Hierarchy Results for Randomized and other Semantic Models,,2017-03-20
10.1007/BF02127803,Logic  semigroups and automata on words,,2011-03-20
10.1109/PDCAT46702.2019.00078,Reachability in Multithreaded Programs Is Polynomial in the Number of Threads,,2020-03-20
10.1051/ita:2006033,Note on the complexity of Las Vegas automata problems,,2013-03-20
10.1016/j.ic.2005.05.005,Context-free languages can be accepted with absolutely no space overhead,,2012-03-20
10.1016/j.tcs.2006.01.005,NL-printable sets and nondeterministic Kolmogorov complexity,,2011-03-20
10.1145/1060590.1060609,Beyond NP: the work and legacy of Larry Stockmeyer,,2019-03-20
10.3217/jucs-008-07-0722,Heyting Algebras and Formal Languages,,2013-03-20
10.4230/LIPIcs.FSTTCS.2014.597,Polynomial Min/Max-weighted Reachability is in Unambiguous Log-space,,2018-03-20
10.1145/2956229,Small Depth Proof Systems,,2013-03-20
10.2178/JSL/1122038917,Weak cardinality theorems,,2017-03-20
10.1137/S009753970241096X,On the Hardness of Graph Isomorphism,,2014-03-20
10.1051/ita/2018006,The complexity of weakly recognizing morphisms,,2015-03-20
10.4230/LIPIcs.STACS.2008.1363,Space Hierarchy Results for Randomized Models,,2016-03-20
10.1007/S00012-011-0126-3,The equational complexity of Lyndon’s algebra,,2019-03-20
10.1007/BF01202280,A note on balanced immunity,,2015-03-20
10.4204/EPTCS.128.20,AND and/or OR: Uniform Polynomial-Size Circuits,,2018-03-20
10.1142/S0129054116400050,Minimal and Hyper-Minimal Biautomata,,2018-03-20
10.4230/LIPIcs.MFCS.2016.10,Trading Determinism for Time in Space Bounded Computations,,2015-03-20
10.1145/1165555.1165565,SIGACT news complexity theory column 52,,2020-03-20
10.1007/978-3-540-30550-7_9,Input Reversals and Iterated Pushdown Automata: A New Characterization of Khabbaz Geometric Hierarchy of Languages,,2013-03-20
10.1007/978-3-319-96154-5_21,Inductive Counting and the Reachability Problem for Petri Nets,,2011-03-20
10.1007/978-3-540-45208-9_8,Lower Bounds on the Size of Quantum Automata Accepting Unary Languages,,2012-03-20
10.1007/11786986_40,On the Bipartite Unique Perfect Matching Problem,,2020-03-20
10.1109/CCC.2006.22,Grid graph reachability problems,,2018-03-20
10.1007/978-3-642-35261-4_54,Interval Graph Representation with Given Interval and Intersection Lengths,,2015-03-20
10.1016/j.ic.2017.02.001,Alternating space is closed under complement and other simulations for sublogarithmic space,,2011-03-20
10.1007/978-3-319-24953-7_28,Hierarchical Information Patterns and Distributed Strategy Synthesis,,2013-03-20
10.1007/978-3-319-98654-8_17,Recognizability for Automata,,2013-03-20
10.1017/bsl.2015.25,THE CONSTRAINT SATISFACTION PROBLEM AND UNIVERSAL ALGEBRA,,2012-03-20
10.1007/978-3-662-54458-7_10,Optimal Reachability in Divergent Weighted Timed Games,,2020-03-20
10.4230/LIPIcs.STACS.2012.254,Improved Bounds for Bipartite Matching on Surfaces,,2017-03-20
10.1007/978-3-030-14812-6_41,Supportive Oracles for Parameterized Polynomial-Time Sub-Linear-Space Computations in Relation to L  NL  and P,,2017-03-20
10.4204/EPTCS.90.1,Two-Way Finite Automata: Old and Recent Results,,2019-03-20
10.1145/3191832,Ontology-Mediated Queries: Combined Complexity and Succinctness of Rewritings via Circuit Complexity,,2017-03-20
10.1201/9781584888239-c22,Complexity Classes,,2017-03-20
10.18419/OPUS-3431,Das Wortproblem für Omega-Terme über Zweivariablenlogik,,2015-03-20
10.4230/LIPIcs.FSTTCS.2019.16,Unambiguous Catalytic Computation,,2011-03-20
10.1016/j.tcs.2017.01.017,On Boolean combinations forming piecewise testable languages,,2011-03-20
10.1109/BICTA.2010.5645200,Symport/antiport P systems with look-ahead mode,,2018-03-20
10.1007/BF01271368,The alternation hierarchy for sublogarithmic space is infinite,,2014-03-20
10.1007/978-3-319-98654-8_9,Decidability of Right One-Way Jumping Finite Automata,,2018-03-20
10.1145/3087801.3087836,Clocked Population Protocols,,2020-03-20
10.1142/S0129054104002327,On The Minimal Polynomial Of A Matrix,,2015-03-20
10.1007/11590156_19,The Directed Planar Reachability Problem,,2016-03-20
10.23638/LMCS-14(3:6)2018,Unification and Logarithmic Space,,2020-03-20
10.1051/ita/2011001,Translation from classical two-way automata to pebble two-way automata,,2011-03-20
10.1007/978-3-319-03545-1,Certified Programs and Proofs,,2013-03-20
10.1109/LICS.2004.5,A second-order theory for NL,,2017-03-20
10.1016/j.ic.2017.01.009,Further remarks on DNA overlap assembly,,2015-03-20
10.1007/978-1-4612-1872-2_7,The complexity of obtaining solutions for problems in NP,,2019-03-20
10.1145/3070902,Min/Max-Poly Weighting Schemes and the NL versus UL Problem,,2016-03-20
10.1145/2676724.2693178,The Speedup Theorem in a Primitive Recursive Framework,,2020-03-20
10.1007/978-3-319-98654-8_33,Computational Complexity of Decision Problems on Self-verifying Finite Automata,,2012-03-20
10.1016/j.tcs.2006.03.003,Characterizations of context-sensitive languages and other language classes in terms of symport/antiport P systems,,2017-03-20
10.1109/CCC.2007.9,Directed Planar Reachability is in Unambiguous Log-Space,,2014-03-20
10.1007/978-3-540-30124-0_29,Logical Characterizations of PSPACE,,2016-03-20
10.1007/s00224-017-9784-7,Catalytic Space: Non-determinism and Hierarchy,,2017-03-20
10.4204/EPTCS.226.19,The Almost Equivalence by Asymptotic Probabilities for Regular Languages and Its Computational Complexities,,2014-03-20
10.1016/S0076-5392(05)80054-2,Chapter 3 - Complexity: What  Why  and How,,2015-03-20
10.1007/978-3-319-90530-3_12,Complement for Two-Way Alternating Automata,,2020-03-20
10.1007/BF01268143,A note on logspace optimization,,2012-03-20
10.1007/978-3-540-69407-6_35,Many Facets of Complexity in Logic,,2015-03-20
10.1016/S1571-0661(04)80838-7,NL-printable sets and Nondeterministic Kolmogorov Complexity,,2015-03-20
10.1142/S0129054118400063,Minimal Reversible Deterministic Finite Automata,,2016-03-20
10.1007/3-540-45007-6_26,Computation with Absolutely No Space Overhead,,2017-03-20
10.1016/S0304-3975(02)00404-8,The complexity of the characteristic and the minimal polynomial,,2018-03-20
10.1109/lics.2004.1319634,A second-order theory for NL,,2020-03-20
10.1109/LICS.2008.20,Correctness of Multiplicative Additive Proof Structures is NL-Complete,,2018-03-20
10.1007/11549345_8,The Complexity of Satisfiability Problems: Refining Schaefer's Theorem,,2018-03-20
10.25596/jalc-2008-249,Church-Rosser Groups and Growing Context-Sensitive Groups,,2015-03-20
10.1016/S0020-0190(01)00296-4,For completeness  sublogarithmic space is no space,,2011-03-20
10.1142/s0129054120410063,Decidability of Right One-Way Jumping Finite Automata,,2015-03-20
10.1080/17445760701640266,Computing with cells: membrane systems – some complexity issues,,2012-03-20
10.1007/s00224-007-9049-y,Incremental Branching Programs,,
10.1016/j.ic.2017.09.003,On the computational complexity of problems related to distinguishability sets,,2015-03-20
10.1007/s00224-009-9188-4,The Isomorphism Problem for Planar 3-Connected Graphs Is in Unambiguous Logspace,,2019-03-20
10.1007/978-3-642-31623-4_16,Descriptional Complexity of Pushdown Store Languages,,2014-03-20
10.1007/978-3-642-31653-1_18,From Equivalence to Almost-Equivalence  and Beyond - Minimizing Automata with Errors - (Extended Abstract),,2015-03-20
10.1145/972639.972646,Existential second-order logic over graphs: Charting the tractability frontier,,2020-03-20
10.1007/978-3-540-45077-1_37,Weak Cardinality Theorems for First-Order Logic,,2011-03-20
10.1088/1741-2552/abaa9b,Optimizing a dual-frequency and phase modulation method for SSVEP-based BCIs.,,2013-03-20
10.1016/J.IC.2010.11.013,Descriptional and computational complexity of finite automata - A survey,,2020-03-20
10.3233/FI-2012-621,Unambiguous Functions in Logarithmic Space,,2014-03-20
10.1007/3-540-32743-6_8,Von der Turingmaschine zum Quantencomputer — ein Gang durch die Geschichte der Komplexitätstheorie,,2014-03-20
10.1109/CCC.2009.10,Infinite vs. Finite Space-Bounded Randomized Computations,,2018-03-20
10.1007/978-3-642-00982-2_3,Descriptional and Computational Complexity of Finite Automata,,2013-03-20
10.1016/j.tcs.2006.08.017,The complexity of membership problems for circuits over sets of integers,,2016-03-20
10.1145/1140612.1140614,The book review column,,2015-03-20
10.1093/logcom/exq008,Expressing versus Proving: Relating Forms of Complexity in Logic,,2019-03-20
10.1142/S0129054113400327,From Equivalence to Almost-Equivalence  and beyond: Minimizing Automata with Errors,,2018-03-20
10.1007/978-3-319-03780-6_28,Uniform-Circuit and Logarithmic-Space Approximations of Refined Combinatorial Optimization Problems,,2018-03-20
10.1007/3-540-57785-8_169,On the Acceptance Power of Regular Languages,,2020-03-20
10.1142/s0129054120500239,Membership Problem for Two-Dimensional General Row Jumping Finite Automata,,2020-03-20
10.1145/2677161.2677165,Constraint satisfaction problem and universal algebra,,2012-03-20
10.1007/978-3-662-07003-1_10,Fixed Point Logics and Complexity Classes,,2020-03-20
10.1007/978-3-540-39886-8_7,On Context-Sensitive Grammars,,2012-03-20
10.1007/978-3-662-55751-8_2,What One Has to Know When Attacking P vs. NP (Extended Abstract),,2011-03-20
10.1109/LICS.2005.29,Model-checking hierarchical structures,,2011-03-20
10.1007/11549345_17,Linearly Bounded Infinite Graphs,,2020-03-20
10.25596/jalc-2012-225,Descriptional Complexity of Pushdown Store Languages,,2017-03-20
10.1016/S0304-3975(02)00402-4,Space hierarchy theorem revised,,2013-03-20
10.1007/978-3-030-59671-2_1,What is Spatial Complexity,,2020-03-20
10.1007/978-3-319-09698-8_26,Minimal and Hyper-Minimal Biautomata - (Extended Abstract),,2020-03-20
10.1016/j.aam.2017.05.008,On the Complexity of the Word Problem of Automaton Semigroups and Automaton Groups,,2016-03-20
10.1007/s00224-017-9833-2,Homonym Population Protocols,,2019-03-20
10.1016/j.tcs.2017.11.004,Separability by Piecewise Testable Languages is PTime-Complete,,2012-03-20
10.1145/1490270.1490274,Directed Planar Reachability is in Unambiguous Log-Space,,2011-03-20
10.1007/11753728_20,Incremental Branching Programs,,2012-03-20
10.1007/BF02127798,Sorting  linear time and the satisfiability problem,,2012-03-20
10.1007/s00236-017-0306-5,Hierarchical information and the synthesis of distributed strategies,,2011-03-20
10.3233/FI-2014-1095,Uniformity is Weaker than Semi-Uniformity for Some Membrane Systems,,2017-03-20
10.4204/EPTCS.3.12,Translation from Classical Two-Way Automata to Pebble Two-Way Automata,,2011-03-20
10.1016/j.automatica.2018.03.077,Complexity of Deciding Detectability in Discrete Event Systems,,2016-03-20
10.1016/j.tcs.2015.08.041,Positive and negative proofs for circuits and branching programs,,2018-03-20
10.1016/j.tcs.2015.08.028,On the sizes of DPDAs  PDAs  LBAs,,2016-03-20
10.1016/j.ic.2010.11.027,Observations on complete sets between linear time and polynomial time,,2016-03-20
10.1007/3-540-45655-4_6,On the Minimal Polynomial of a Matrix,,2012-03-20
10.23638/DMTCS-21-3-4,Decision Problems for Subclasses of Rational Relations over Finite and Infinite Words,,2019-03-20
10.1007/978-3-319-05446-9_3,Space Complexity of the Directed Reachability Problem over Surface-Embedded Graphs,,2014-03-20
10.1016/j.ic.2003.10.002,Bounded MSC communication,,2014-03-20
10.1016/j.jcss.2011.05.006,Model-checking hierarchical structures,,2011-03-20
10.1016/S0304-3975(02)00326-2,Alternating and empty alternating auxiliary stack automata,,2017-03-20
10.1016/j.tcs.2012.04.044,An alternating hierarchy for finite automata,,2015-03-20
10.1016/j.marpolbul.2016.11.001,3D modeling of phytoplankton seasonal variation and nutrient budget in a southern Mediterranean Lagoon.,,2016-03-20
10.1145/1555746.1555750,Extending the loop language with higher-order procedural variables,,2016-03-20
10.1016/j.jlap.2004.05.001,A structural approach to operational semantics,,2015-03-20
10.1007/BF00289247,Scheduling according to job priority with prevention of deadlock and permanent blocking,,2014-03-20
10.1155/2019/6185806,Multiobjective Based Resource Allocation and Scheduling for Postdisaster Management Using IoT,,2011-03-20
10.1515/agriceng-2016-0061,Application of Artificial Neural Networks in Modelling The Contact Area of Grain Seeds,,2016-03-20
10.1515/biolog-2015-0125,Anatomical adaptations of the desert species Stipa lagascae against drought stress,,2013-03-20
10.1007/978-1-4757-3510-9,Classic Operating Systems,,2011-03-20
10.1515/PBJ-2015-0034,An Annotated And Illustrated Catalogue Of Polypores (Agaricomycetes) Of The Białowieża Forest (NE Poland),,2013-03-20
10.1007/978-1-4613-9323-8_14,A Systematic Design and Explanation of the Atrubin Multiplier,,2019-03-20
10.1016/0743-7315(85)90034-6,Some results concerning linear iterative (systolic) arrays,,2013-03-20
10.1007/3-540-50647-0_112,Basic research for cellular processing,,2015-03-20
10.1109/TC.1987.5009453,Dictionary Machines on Cube-Class Networks,,2019-03-20
10.1007/978-3-319-11520-7_4,Iterative Arrays with Set Storage,,2012-03-20
10.1016/0167-739X(92)90004-U,On the power of global-bus in mesh-connected architectures,,2020-03-20
10.1007/BF01187090,On the capabilities of systolic systems,,2012-03-20
10.1007/3-540-19488-6_111,Efficient Simulations of Simple Models of Parallel Computation by Time-Bounded ATM's and Space-Bounded TM's,,2011-03-20
10.1109/CMPEUR.1989.93458,Broadcast-bus elimination without any loss of time efficiency in iterative (cellular or systolic) arrays,,2020-03-20
10.1016/S0167-9260(97)00003-5,A real-time systolic integer multiplier,,2015-03-20
10.1007/BF01182773,The derivation of on-line algorithms  with an application to finding palindromes,,2015-03-20
10.1145/113379.113412,On the capabilities of systolic systems (extended abstract),,2020-03-20
10.1109/TC.1986.5009430,Designing Systolic Algorithms Using Sequential Machines,,2020-03-20
10.1007/BF01768472,Real-time recognition of substring repetition and reversal,,2016-03-20
10.1109/TC.1987.5009449,Parallel Parsing on a One-Way Array of Finite-State Machines,,2016-03-20
10.1007/3-540-48321-7_13,Iterative Arrays with a Wee Bit Alternation,,2014-03-20
10.1109/SFCS.1976.25,Recognizing certain repetitions and reversals within strings,,2011-03-20
10.1016/0304-3975(89)90116-3,Efficient Simulations of Simple Models of Parallel Computation by Time-Bounded ATMs and Space-Bounded TMs,,2013-03-20
10.1007/BFb0016239,Systolic Arrays: Characterizations and Complexity,,2020-03-20
10.1109/SFCS.1984.715900,Designing Systolic Algorithms Using Sequential Machines,,2017-03-20
10.1145/800105.803414,New real-time simulations of multihead tape units,,2014-03-20
10.1007/3-540-45307-5_2,Mesh Algorithms for Multiplication and Division,,2020-03-20
10.1109/TASSP.1987.1165233,VLSI algorithms for solving recurrence equations and applications,,2011-03-20
10.1145/130069.130144,Iterative tree automata  alternating Turing machines  and uniform Boolean circuits: relationships and characterization,,2017-03-20
10.1016/0022-0000(78)90042-9,Palindrome Recognition in Real Time by a Multitape Turing Machine,,2016-03-20
10.1016/0304-3975(88)90163-6,Two-Dimensional Iterative Arrays: Characterizations and Applications,,2015-03-20
10.1145/800135.804417,Fast parallel processing array algorithms for some graph problems(Preliminary Version),,2018-03-20
10.1016/0022-0000(89)90011-1,On Iterative and Cellular Tree Arrays,,2018-03-20
10.1016/S0167-9260(97)00017-5,Mirroring: a technique for pipelining semi-systolic and systolic arrays,,2020-03-20
10.1109/SFCS.1983.32,Lower bounds on the time of probabilistic on-line simulations,,2012-03-20
10.1016/0304-3975(85)90091-X,Topological Transformations as a Tool in the Design of Systolic Networks,,2019-03-20
10.1109/SFCS.1981.34,Optimizing synchronous systems,,2020-03-20
10.1109/IV.2001.942118,Geometry compression based on mantissa chunking of vertices,,2011-03-20
10.1109/TIT.2006.881728,Source Coding for Quasiarithmetic Penalties,,2019-03-20
10.1007/BF00264602,Precedence relations in grammar forms,,2014-03-20
10.1145/3056662.3056702,Modularization of formal specifications or efficient synthesis of reactive systems,,2013-03-20
10.1063/1.5033715,Efficiency of the strong satisfiability checking procedure for reactive system specifications,,2012-03-20
10.1007/978-3-030-01090-4_27,Maximum Realizability for Linear Temporal Logic Specifications,,2019-03-20
10.1145/3316615.3316634,Towards Efficient Implementation of Realizability Checking for Reactive System Specifications,,2011-03-20
10.1007/s00236-019-00348-4,Reactive synthesis with maximum realizability of linear temporal logic specifications,,2016-03-20
10.2991/ICMMCT-17.2017.140,Combining Unification and Rewriting in Proofs for Modal Logics with First-order Undefinable Frames,,2016-03-20
10.1145/3056662.3056701,Web server access trend analysis based on the Poisson distribution,,2015-03-20
10.1109/IROS40897.2019.8968261,Optimal temporal logic planning with cascading soft constraints,,2017-03-20
10.1109/IROS45743.2020.9341412,What to Do When You Can’t Do It All: Temporal Logic Planning with Soft Temporal Logic Constraints,,2011-03-20
10.1145/3384544.3384572,Towards Interpretation of Abstract Instructions Using Declarative Constraints in Temporal Logic,,2020-03-20
10.1002/cpe.2930,Specifying subtypes in Safety Critical Java programs,,2013-03-20
10.1007/3-540-44947-7_23,A Behavioural Notion of Subtyping for Object-Oriented Programming in SPARK95,,2016-03-20
10.1007/11804192_16,Beyond Assertions: Advanced Specification and Verification with JML and ESC/Java2,,2016-03-20
10.1007/978-3-319-46969-0,Transactions on Modularity and Composition I,,2016-03-20
10.1145/2451436.2451458,On exceptions  events and observer chains,,2012-03-20
10.1007/3-540-44947-7,Reliable Software Technologies — Ada-Europe 2003,,2011-03-20
10.1109/ICSE.2004.1317488,Responsibilities and rewards: specifying design patterns,,2014-03-20
10.1145/3133907,Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining,,2020-03-20
10.31274/RTD-180813-9872,A Runtime Assertion Checker for the Java Modeling Language (JML),,2019-03-20
10.1016/j.tcs.2005.06.020,Slicing techniques for verification re-use,,2013-03-20
10.1145/2889443.2889447,Reasoning tradeoffs in languages with enhanced modularity features,,2015-03-20
10.1007/978-3-319-49812-6,Deductive Software Verification – The KeY Book,,2019-03-20
10.1145/1850771.1850793,The design of SafeJML  a specification language for SCJ with support for WCET specification,,2012-03-20
10.1023/A:1008766409590,Specification-Based Browsing of Software Component Libraries,,2017-03-20
10.1145/2724525.2724569,Modular reasoning in the presence of event subtyping,,2016-03-20
10.1145/2766446,Behavioral Subtyping  Specification Inheritance  and Modular Reasoning,,2015-03-20
10.1007/978-3-319-98047-8_2,A Methodology for Invariants  Framing  and Subtyping in JML,,2015-03-20
10.1109/TSE.2014.2339829,On the Effectiveness of Contracts as Test Oracles in the Detection and Diagnosis of Functional Faults in Concurrent Object-Oriented Software,,2015-03-20
10.1007/978-3-540-39958-2_6,Inheritance of Temporal Logic Properties,,2013-03-20
10.1007/11901433_2,JML's Rich  Inherited Specifications for Behavioral Subtypes,,2011-03-20
10.1023/A:1024764232069,Behavioral Subtyping Relations for Active Objects,,2017-03-20
10.1145/1127878.1127884,Preliminary design of JML: a behavioral interface specification language for java,,2016-03-20
10.1145/2048147.2048177,Towards client-aware interface specifications,,2015-03-20
10.1016/j.scico.2004.05.017,Specification and (property) inheritance in CSP-OZ,,2013-03-20
10.1007/978-3-540-30101-1_16,Preserving Properties Under Change,,2014-03-20
10.1145/3125374.3125383,Aspect-Oriented Programming Reloaded,,
10.1145/2043910.2043917,Specifying subtypes in SCJ programs,,2015-03-20
10.1145/3236024.3236075,Large-scale study of substitutability in the presence of effects,,2020-03-20
10.1109/ESEM.2011.9,On the Effectiveness of Contracts as Test Oracles in the Detection and Diagnosis of Race Conditions and Deadlocks in Concurrent Object-Oriented Software,,2011-03-20
10.31274/RTD-180813-16445,A design discipline and language features for modular reasoning in aspect-oriented programs,,2012-03-20
10.1007/978-3-319-46969-0_5,Modular Reasoning in the Presence of Event Subtyping,,2016-03-20
10.1007/978-3-540-78163-9_1,Abstract Interpretation of Non-monotone Bi-inductive Semantic Definitions,,2016-03-20
10.1109/SEFM.2007.42,The Role of Abstract Interpretation in Formal Methods,,2016-03-20
10.1515/pjph-2017-0015,Popularity and knowledge concerning complications of body modifications among young adults,,2014-03-20
10.1145/1289927.1289932,Proving the absence of run-time errors in safety-critical avionics code,,2011-03-20
10.1561/2500000002,Static Analysis and Verification of Aerospace Software by Abstract Interpretation,,2011-03-20
10.1515/pomr-2016-0018,Analysis of Possible Application of High-Temperature Nuclear Reactors to Contemporary Large-Output Steam Power Plants on Ships,,2011-03-20
10.1515/PBJ-2017-0007,Element Composition of Trachelomonas Envelopes (Euglenophyta),,2017-03-20
10.1145/2603088.2603165,Abstract interpretation: past  present and future,,2020-03-20
10.1515/pomr-2017-0126,Research on Big Data Attribute Selection Method in Submarine Optical Fiber Network Fault Diagnosis Database,,2020-03-20
10.2478/rjdnmd-2013-0023,Regarding the Classification  Prediction and Prevention of Diabetes,,2012-03-20
10.1016/j.artint.2011.03.002,On rules with existential variables: Walking the decidability line,,2018-03-20
10.1007/s10844-012-0216-5,A sound and complete chase procedure for constrained tuple-generating dependencies,,2017-03-20
10.3382/ps.2011-02083,The effect of age on the growth rate of tissues and organs and the percentage content of edible and nonedible carcass components in Pekin ducks.,,2017-03-20
10.1007/s10844-010-0146-z,A relational database integrity framework for access control policies,,2018-03-20
10.5220/0002629004820487,A/D Case: A New Heart for FD3,,2016-03-20
10.1007/11827405_89,Modeling and Inferring on Role-Based Access Control Policies Using Data Dependencies,,2013-03-20
10.24963/ijcai.2019/5,Probabilistic Strategy Logic,,2016-03-20
10.1007/978-3-540-92687-0_7,ATL with Strategy Contexts and Bounded Memory,,2016-03-20
10.1007/11590156_44,On the Controller Synthesis for Finite-State Markov Decision Processes,,2011-03-20
10.1007/978-3-319-96145-3_17,Reactive Control Improvisation,,2011-03-20
10.24963/ijcai.2019/220,Reasoning about Quality and Fuzziness of Strategic Behaviours,,2017-03-20
10.1007/978-3-030-59152-6_29,Probabilistic Hyperproperties with Nondeterminism,,2020-03-20
10.4230/LIPIcs.MFCS.2017.84,Temporal Logics for Multi-Agent Systems (Invited Talk),,2016-03-20
10.4204/EPTCS.117.8,uchi Games on Infinite Arenas with a Finite Attractor,,2011-03-20
10.4230/LIPIcs.FSTTCS.2010.120,ATL with Strategy Contexts: Expressiveness and Model Checking,,
10.1145/2734117,An Extension of ATL with Strategy Interaction,,2020-03-20
10.1016/j.ic.2009.07.004,Strategy logic,,2012-03-20
10.1007/978-3-030-59152-6_27,Probabilistic Hyperproperties of Markov Decision Processes,,2016-03-20
10.1609/AAAI.V33I01.33016179,Probabilistic Alternating-Time µ-Calculus,,2019-03-20
10.1016/j.ejc.2009.01.004,Everywhere alpha-repetitive sequences and Sturmian words,,2020-03-20
10.1142/S0129054112400473,Algorithmic Combinatorics on Partial Words,,2017-03-20
10.1007/978-3-642-32589-2_21,Abelian Pattern Avoidance in Partial Words,,2014-03-20
10.1051/ita/2014014,Abelian pattern avoidance in partial words,,2015-03-20
10.1007/978-3-319-25258-2_14,Signature-Free Asynchronous Byzantine Systems: From Multivalued to Binary Consensus with t < n/3  O(n2) Messages  and Constant Time,,2017-03-20
10.2200/S00918ED1V01Y201904DCT016,Network Topology and Fault-Tolerant Consensus,,2020-03-20
10.4230/LIPIcs.OPODIS.2020.9,ACE: Abstract Consensus Encapsulation for Liveness Boosting of State Machine Replication,,2015-03-20
10.1109/PRDC47002.2019.00051,A New Insight into Local Coin-Based Randomized Consensus,,2011-03-20
10.1007/978-3-319-92402-1_2,A Pleasant Stroll Through the Land of Distributed Machines  Computation  and Universality,,2017-03-20
10.1007/978-3-319-48314-6_7,Recent Results on Fault-Tolerant Consensus in Message-Passing Networks,,2020-03-20
10.1007/s00373-007-0713-4,Jigsaw Puzzles  Edge Matching  and Polyomino Packing: Connections and Complexity,,2012-03-20
10.1007/s10878-019-00423-z,A lower bound for online rectangle packing,,2019-03-20
10.1007/s10878-012-9457-z,Online algorithms for 1-space bounded multi dimensional bin packing and hypercube packing,,2020-03-20
10.1007/978-3-642-12450-1_22,Competitive Multi-dimensional Dynamic Bin Packing via L-Shape Bin Packing,,2020-03-20
10.1007/978-3-319-21398-9,Computing and Combinatorics,,2019-03-20
10.1145/2000807.2000818,A new upper bound 2.5545 on 2D Online Bin Packing,,2016-03-20
10.1007/s00224-019-09915-1,Lower Bounds for Several Online Variants of Bin Packing,,2018-03-20
10.1007/978-3-642-38768-5_53,Packing Cubes into a Cube Is NP-Hard in the Strong Sense,,2013-03-20
10.22028/D291-27240,A Tale of Two Packing Problems: Improved Algorithms and Tighter Bounds for Online Bin Packing and the Geometric Knapsack Problem,,2014-03-20
10.1007/978-3-319-30695-7_23,An Efficient Data Structure for Dynamic Two-Dimensional Reconfiguration,,2020-03-20
10.1016/j.tcs.2010.04.021,Two-dimensional online bin packing with rotation,,2013-03-20
10.1007/978-3-642-10631-6_34,1-Bounded Space Algorithms for 2-Dimensional Bin Packing,,2012-03-20
10.1007/s00224-007-9039-0,Online Removable Square Packing,,2016-03-20
10.1016/j.sysarc.2017.02.004,An efficient data structure for dynamic two-dimensional reconfiguration,,2016-03-20
10.1007/s00453-016-0114-2,Online Square-into-Square Packing,,2015-03-20
10.1016/j.neucom.2015.11.035,Online algorithms for 2D bin packing with advice,,2019-03-20
10.1016/j.ipl.2012.06.016,On-line algorithms for 2-space bounded 2-dimensional bin packing,,2013-03-20
10.1142/S0129054110007611,One-Space Bounded Algorithms for Two-Dimensional Bin Packing,,2015-03-20
10.1007/978-3-319-21398-9_21,Packing Cubes into a Cube in (D>3)-Dimensions,,2015-03-20
10.1007/978-3-319-89441-6_9,Lower bounds for several online variants of bin packing,,2017-03-20
10.1007/s10100-009-0109-z,A note on online hypercube packing,,2019-03-20
10.1145/2789149.2789167,SIGACT News Online Algorithms Column 26: Bin packing in multiple dimensions,,2015-03-20
10.1007/978-3-642-17514-5_21,Improved Online Algorithms for 1-Space Bounded 2-Dimensional Bin Packing,,2014-03-20
10.1109/PDCAT.2013.35,A Parallel Algorithm for 2D Square Packing,,2015-03-20
10.1007/s10878-013-9701-1,Packing cubes into a cube is NP-complete in the strong sense,,2011-03-20
10.1016/j.jda.2010.07.002,Dynamic multi-dimensional bin packing,,2020-03-20
10.1016/j.tcs.2014.02.045,Online algorithms for 1-space bounded 2-dimensional bin packing and square packing,,2014-03-20
10.1007/11970125_18,Improved Online Hypercube Packing,,2011-03-20
10.1016/j.simpat.2020.102169,Model checking and machine learning techniques for HummingBad mobile malware detection and mitigation,,2012-03-20
10.1016/j.jisa.2019.102423,Visualizing the outcome of dynamic analysis of Android malware with VizMal,,2020-03-20
10.1109/WETICE.2018.00054,Safety Critical Systems Formal Verification Using Execution Traces,,2016-03-20
10.1109/WETICE.2016.67,Hey Malware  I Can Find You!,,2018-03-20
10.1016/j.scico.2013.11.022,CD-Form: A clone detector based on formal methods,,2020-03-20
10.1007/978-3-319-28934-2_10,k-Bisimulation: A Bisimulation for Measuring the Dissimilarity Between Processes,,2014-03-20
10.1145/2897667.2897673,Download malware? no  thanks: how formal methods can block update attacks,,2012-03-20
10.1016/j.cmpb.2019.105134,An ensemble learning approach for brain cancer detection exploiting radiomic features,,2014-03-20
10.1007/978-3-030-44038-1_90,Representing Knowledge on the European Small Claims Procedure,,2013-03-20
10.1007/978-3-030-32258-8_57,Model Checking to Detect the Hummingbad Malware,,2016-03-20
10.1007/978-3-030-44038-1_91,Quality Control in the Process of Data Extraction,,2012-03-20
10.1007/978-3-030-44038-1_88,Analysis of Data for SCAN Project,,2013-03-20
10.1108/imds-11-2019-0593,BPM perspectives to support ICSs: Exploiting the integration of formal verifications into investment service provision processes,,2017-03-20
10.1109/FormaliSE.2016.012,Download Malware? No  Thanks. How Formal Methods Can Block Update Attacks,,2020-03-20
10.1016/j.jisa.2020.102527,Anomaly detection in substation networks,,2011-03-20
10.1007/978-3-030-44038-1_89,Data Management in the European Project SCAN,,2011-03-20
10.1109/METROAEROSPACE.2016.7573276,Probabilistic model checking applied to autonomous spacecraft reconfiguration,,2019-03-20
10.1016/j.procs.2019.09.297,Model Checking for Data Anomaly Detection,,2015-03-20
10.1007/978-3-540-25930-5_7,Giving Life to Agent Interactions,,2013-03-20
10.1016/j.ic.2017.01.007,A branching distributed temporal logic for reasoning about entanglement-free quantum state transformations,,2018-03-20
10.1007/978-3-662-44145-9_1,Quantum State Transformations and Branching Distributed Temporal Logic - (Invited Paper),,2014-03-20
10.1016/j.entcs.2004.05.020,Metareasoning about Security Protocols using Distributed Temporal Logic,,2017-03-20
10.1109/TIME.2008.21,A Labeled Tableaux System for the Distributed Temporal Logic DTL,,2012-03-20
10.1016/j.entcs.2007.08.006,Generating Scenarios by Multi-Object Checking,,2012-03-20
10.1109/POLICY.2006.34,Specifying data sharing agreements,,2013-03-20
10.3217/jucs-009-02-0106,Checking Object System Designs Incrementally,,2015-03-20
10.1007/978-3-540-74835-9_25,Obligations and Their Interaction with Programs,,2011-03-20
10.1002/cpe.903,An order‐based algorithm for implementing multiparty synchronization,,2020-03-20
10.1007/11555827_7,On Obligations,,2017-03-20
10.1109/CMPSAC.2003.1245334,Conceptual modeling of mobile object systems: language constructs for distinguishing between mobile and stationary subsystems,,2016-03-20
10.1007/3-540-45314-8_4,Compositional Checking of Communication among Observers,,2019-03-20
10.1504/IJITST.2007.014834,A logic-based verification framework for authentication protocols,,2012-03-20
10.1093/logcom/exp022,Labelled Tableaux for Distributed Temporal Logic,,2011-03-20
10.1016/j.tcs.2011.04.006,Distributed temporal logic for the analysis of security protocol models,,2017-03-20
10.1007/3-540-45341-5_17,Increasing Reusability in Information Systems Development by Applying Generic Methods,,2018-03-20
10.1093/jigpal/jzi048,Relating Strand Spaces and Distributed Temporal Logic for Security Protocol Analysis,,2017-03-20
10.1007/11961635_2,A Data Sharing Agreement Framework,,2011-03-20
10.1016/j.entcs.2007.08.010,Towards the Integration of Visual and Formal Models for GUI Testing,,2020-03-20
10.1007/978-3-662-44145-9,Logic  Language  Information  and Computation,,2016-03-20
10.1016/j.fss.2015.08.009,Topological systems as a framework for institutions,,2013-03-20
10.4304/JSW.4.1.34-41,Real Time Process Algebra with Urgency Executing Policy,,2013-03-20
10.1007/s11390-005-0514-2,Action Refinement for Real-Time Concurrent Processes with Urgency,,2020-03-20
10.1109/CISE.2009.5362871,Stochastic Extension for Real Time Process Algebra with Urgency Executing Policy,,2020-03-20
10.1109/MTV.2004.13,Formal specification of an asynchronous processor via action refinement,,2018-03-20
10.1007/978-3-540-39893-6_14,Adding Action Refinement to Stochastic True Concurrency Models,,2016-03-20
10.1007/BF02973446,Event-based operational semantics and a consistency result for real-time concurrent processes with action refinement,,2011-03-20
10.1109/SEFM.2004.47,Towards action refinement for concurrent systems with causal ambiguity,,2013-03-20
10.1109/SEFM.2005.32,Operational semantics for real-time processes with action refinement,,2018-03-20
10.1016/j.entcs.2005.09.002,Action Refinement for Real-Time Concurrent Processes with Urgency,,2015-03-20
10.1016/j.scico.2015.05.005,Interval-based data refinement: A uniform approach to true concurrency in discrete and real-time systems,,2013-03-20
10.1007/978-3-540-73814-5_17,A Non-interleaving Denotational Semantics of Value Passing CCS with Action Refinement,,2013-03-20
10.18452/13857,Explicit state space verification,,2011-03-20
10.1007/11538394_15,Transforming BPEL to Petri Nets,,2017-03-20
10.18452/2448,Verteilte Geschäftsprozesse modellieren und analysieren,,2020-03-20
10.1007/3-540-36577-X_35,Using Petri Net Invariants in State Space Construction,,2020-03-20
10.1007/978-3-319-07734-5_9,A Programming Language for Spatial Distribution of Net Systems,,2017-03-20
10.1007/978-3-319-07734-5,Application and Theory of Petri Nets and Concurrency,,2012-03-20
10.1007/978-3-540-27793-4_15,New Canonical Representative Marking Algorithms for Place/Transition-Nets,,2015-03-20
10.3217/jucs-007-04-0307,Computational Complexity of the Place/Transition-Net Symmetry Reduction Method,,2017-03-20
10.1007/978-3-662-60651-3,Transactions on Petri Nets and Other Models of Concurrency XIV,,2012-03-20
10.1145/2695664.2695803,Symmetry reduced state classes for time petri nets,,2013-03-20
10.1007/s10009-005-0201-1,Automated generation of a progress measure for the sweep-line method,,2018-03-20
10.1109/MED.2015.7158801,Discrete and fluid Petri nets: Dealing with individuals  populations and fluidization,,2012-03-20
10.1109/TSE.2004.15,BDD-based safety-analysis of concurrent software with pointer data structures using graph automorphism symmetry reduction,,2019-03-20
10.1007/978-3-662-58381-4_9,MCC'2017 - The Seventh Model Checking Contest,,2017-03-20
10.1016/j.scico.2016.08.008,Symmetry reduction for time Petri net state classes,,2015-03-20
10.1109/ACC.2009.5160020,Efficient state-based analysis by introducing bags in Petri nets color domains,,2016-03-20
10.1007/11575467_5,Symbolic Execution with Separation Logic,,2011-03-20
10.1109/MIXDES.2015.7208473,Formal methods — Support or scientific decoration in software development?,,2020-03-20
10.1007/978-3-642-29072-5_5,Computing a Hierarchical Static Order for Decision Diagram-Based Representation from P/T Nets,,2017-03-20
10.1109/TSMC.2018.2854158,On Hierarchical Construction of the State Space of an Automated Manufacturing System Modeled With Petri Nets,,2015-03-20
10.1007/978-3-662-58381-4,Transactions on Petri Nets and Other Models of Concurrency XIII,,2020-03-20
10.1007/BF02341920,Aperiodic task scheduling for Hard-Real-Time systems,,2018-03-20
10.1109/ICYCS.2008.231,A Subsystem Division Method by Clustering,,2016-03-20
10.1016/j.artint.2006.08.002,Planning as satisfiability: parallel plans and algorithms for plan search,,2012-03-20
10.1007/978-3-642-11319-2_13,Checking Bounded Reachability in Asynchronous Systems by Symbolic Event Tracing,,2014-03-20
10.1109/ICYCS.2008.232,A Class of Petri Nets for Modular and Hierarchical System Modeling,,2020-03-20
10.1109/ACSD.2013.16,Factored Planning: From Automata to Petri Nets,,2016-03-20
10.1016/j.tcs.2011.12.060,Modeling dependencies and simultaneity in membrane system computations,,2014-03-20
10.1007/BF02679464,Monadic second-order definable text languages,,2015-03-20
10.1016/j.tcs.2009.04.019,Existential MSO over two successors is strictly weaker than over linear orders,,2011-03-20
10.7561/SACS.2014.1.47,Instruction Sequence Based Non-uniform Complexity Classes,,2011-03-20
10.1007/978-3-642-29320-7_2,Proposition Algebra and Short-Circuit Logic,,2018-03-20
10.7561/SACS.2017.2.111,Axioms for Behavioural Congruence of Single-Pass Instruction Sequences,,2017-03-20
10.7561/SACS.2019.2.113,Program algebra for Turing-machine programs,,2019-03-20
10.7561/SACS.2016.2.125,A Hoare-Like Logic of Asserted Single-Pass Instruction Sequences,,2013-03-20
10.7561/SACS.2015.2.211,Probabilistic Thread Algebra,,2015-03-20
10.3233/FI-2012-753,On the Behaviours Produced by Instruction Sequences under Execution,,2015-03-20
10.7561/SACS.2016.1.1,On Instruction Sets for Boolean Registers in Program Algebra,,2020-03-20
10.3233/FI-2015-1219,On Algorithmic Equivalence of Instruction Sequences for Computing Bit String Functions,,2015-03-20
10.7561/SACS.2018.1.39,Instruction sequence expressions for the Karatsuba multiplication algorithm,,2013-03-20
10.1007/978-3-319-15545-6_6,Division by Zero in Common Meadows,,2011-03-20
10.1145/997140.997147,Lexical analysis tool,,2020-03-20
10.1145/3209108.3209164,Rational Synthesis Under Imperfect Information,,2020-03-20
10.1007/978-3-319-30000-9,Language and Automata Theory and Applications,,2015-03-20
10.4230/LIPIcs.ICALP.2016.121,The Complexity of Rational Synthesis,,2015-03-20
10.1109/TCAD.2020.3012641,Assume–Guarantee Distributed Synthesis,,2011-03-20
10.4204/EPTCS.308.4,Dynamic Conflict Resolution Using Justification Based Reasoning,,2013-03-20
10.1609/AAAI.V34I03.5704,LTLf Synthesis with Fairness and Stability Assumptions,,2020-03-20
10.4230/LIPIcs.ICALP.2017.123,Admissiblity in Concurrent Games,,2017-03-20
10.4230/LIPIcs.STACS.2018.34,Dependences in Strategy Logic,,2017-03-20
10.4204/EPTCS.277.2,Constrained existence problem for weak subgame perfect equilibria with omega-regular Boolean objectives,,2013-03-20
10.1007/978-3-319-30000-9_1,Non-Zero Sum Games for Reactive Synthesis,,2016-03-20
10.24963/ijcai.2020/232,Synthesizing strategies under expected and exceptional environment behaviors,,2013-03-20
10.1007/s10472-016-9508-8,Synthesis with rational environments,,2013-03-20
10.1016/J.IFACOL.2018.06.275,On the Relation between Reactive Synthesis and Supervisory Control of Input/Output Behaviours,,2011-03-20
10.24963/ijcai.2020/17,Assume-Guarantee Synthesis for Prompt Linear Temporal Logic,,2020-03-20
10.4204/EPTCS.277.3,Parameterized Games and Parameterized Automata,,2018-03-20
10.4230/LIPICS,Admissibility in Games with Imperfect Information,,2015-03-20
10.1007/s10626-019-00299-5,On the relation between reactive synthesis and supervisory control of non-terminating processes,,2013-03-20
10.4230/LIPIcs.CONCUR.2015.100,Assume-Admissible Synthesis,,2014-03-20
10.1007/978-3-662-54458-7_9,On the existence of weak subgame perfect equilibria,,2014-03-20
10.1007/S10626-017-0239-8,Dynamic hierarchical reactive controller synthesis,,2017-03-20
10.1016/j.ic.2020.104553,On the existence of weak subgame perfect equilibria,,2015-03-20
10.4204/EPTCS.229.4,What You Really Need To Know About Your Neighbor,,2012-03-20
10.1007/s00224-019-09926-y,Dependences in Strategy Logic,,2016-03-20
10.4230/LIPIcs.CONCUR.2019.13,The Complexity of Subgame Perfect Equilibria in Quantitative Reachability Games (full version),,2020-03-20
10.4230/LIPIcs.CSL.2018.10,Beyond admissibility: Dominance between chains of strategies,,2012-03-20
10.1007/3-540-51803-7_21,An Expressive Logic for a Process Algebra with Silent Actions,,2017-03-20
10.1016/S0096-0551(98)00009-5,Branching-Time Logic Programming: The Language Cactus and its Applications,,2012-03-20
10.1109/MC.1983.1654196,Logic and Natural Language,,2018-03-20
10.1007/s10817-016-9361-9,Completeness and Decidability Results for CTL in Constructive Type Theory,,2015-03-20
10.1007/BF01384135,Test case verification by model checking,,2011-03-20
10.1007/978-3-642-04027-6_38,On the Complexity of Branching-Time Logics,,2012-03-20
10.1145/567067.567081,"""Sometimes"" and ""not never"" revisited: on branching versus linear time (preliminary report)",,2017-03-20
10.1145/2451598.2451604,Modular context-sensitive and aspect-oriented processes with dynamic condition response graphs,,2019-03-20
10.7146/BRICS.V3I49.20051,Objects  Types and Modal Logics,,2018-03-20
10.1007/S001700050051,A Case Study in Design and Verification of Manufacturing System Control Software with Hierarchical Petri Nets,,2015-03-20
10.1145/174644.174651,A really temporal logic,,2019-03-20
10.1145/41840.41855,Interleaving set temporal logic,,2014-03-20
10.1201/B19569-25,Formal Property Verification,,2019-03-20
10.1109/WINCOM.2017.8238182,Systematic verification of embedded components with re-usable properties,,2017-03-20
10.1142/S021798491550089X,Security analysis of multi-party quantum private comparison protocol by model checking,,2018-03-20
10.1145/168466.171515,Hyperdocuments as automata: trace-based browsing property verification,,2020-03-20
10.1007/s11334-009-0091-6,Tool-supported enhancement of diagnosis in model-driven verification,,2013-03-20
10.1007/BFb0057014,An Object-Oriented Logic Language for Modular System Specification,,2018-03-20
10.1007/978-1-4615-4016-8_3,Mathematical Models of Real-Time Scheduling,,2014-03-20
10.1007/BFb0032056,Compositionality Through an Operational Semantics of Contexts,,2015-03-20
10.1007/978-3-540-39910-0_14,Bounded Fairness,,2018-03-20
10.1007/3-540-15648-8_7,Automata  Tableaux and Temporal Logics (Extended Abstract),,2016-03-20
10.15439/2017F548,Rough Sets for Trees of Executions,,2016-03-20
10.1007/3-540-45319-9_1,Branching vs. Linear Time: Final Showdown,,2018-03-20
10.1109/32.489073,Compositional Validation of Time-Critical Systems Using Communicating Time Petri Nets,,2020-03-20
10.1016/0304-3975(90)90140-D,SnS Can be Modally Characterized,,2018-03-20
10.1016/j.entcs.2009.09.060,Interprocedural Pointer Analysis in Goanna,,2015-03-20
10.1007/s11390-007-9004-z,Bounded Model Checking of CTL,,2017-03-20
10.1007/BFb0013022,Branching time temporal logic,,2019-03-20
10.1007/3-540-52148-8_23,What are the Limits of Model Checking Methods for the Verification of Real Life Protocols?,,2016-03-20
10.1007/BF02945312,Automatic and hierarchical verification for concurrent systems,,2019-03-20
10.1109/MITP.2012.45,Using Model Checking to Evaluate Live Migrations,,2012-03-20
10.1016/j.tcs.2011.12.016,Encapsulating deontic and branching time specifications,,2013-03-20
10.1016/B978-0-444-89208-9.50007-7,Specification and Verification of Hardware Systems using the Temporal Logic Language TRIO,,2011-03-20
10.1007/3-540-45315-6_21,Model Checking CTL+ and FCTL is Hard,,2020-03-20
10.1007/BFb0039076,Partial Order Logics for Elementary Net Systems: State- and Event-approaches,,2012-03-20
10.1007/978-3-642-35308-6_18,Constructive Completeness for Modal Logic with Transitive Closure,,2016-03-20
10.1109/DSD.2001.952267,"Evaluation of temporal formulas based on ""checking by spheres""",,2012-03-20
10.1016/0022-0000(86)90026-7,Automata-Theoretic Techniques for Modal Logics of Programs,,2013-03-20
10.1145/5397.5399,Automatic verification of finite-state concurrent systems using temporal logic specifications,,2013-03-20
10.1109/PCCC.1996.493666,Design  verification  and validation of self-checking software components,,2012-03-20
10.1007/BFb0020933,Verifying Clocked Transition Systems,,2019-03-20
10.1007/978-981-10-3611-8,Bio-inspired Computing – Theories and Applications,,2020-03-20
10.1007/978-1-4614-7518-7_5,From Artifacts to Activities,,2019-03-20
10.1016/J.TCS.2016.06.019,Model checking open systems with alternating projection temporal logic,,2011-03-20
10.1142/S0129054108006236,A Logical Characterization of Robustness  Mutants and Species in Colonies of Agents,,2019-03-20
10.1109/LICS.1990.113774,On the limits of efficient temporal decidability,,2012-03-20
10.1371/journal.pone.0212260,Flat plate solar collector performance using alumina nanofluids: Experimental characterization and efficiency tests,,2016-03-20
10.5282/UBM/EPUB.14881,State-of-the-art on evolution and reactivity,,2011-03-20
10.1016/0167-6423(83)90017-5,Using Branching Time Temporal Logic to Synthesize Synchronization Skeletons,,2018-03-20
10.20943/01201603.4553,Surgical Robots: Behaviors Specification and reasoning,,2015-03-20
10.1007/978-0-387-73003-5_287,Embedded Systems,,2015-03-20
10.7494/csci.2014.15.1.61,Model checking processes specified in join-calculus algebra,,2018-03-20
10.1016/B978-0-934613-04-0.50016-8,The Logic of Distributed Protocols,,2018-03-20
10.17646/KOME.2014.15,Remarks on the Logic of Irreversible Actions,,2017-03-20
10.1016/j.datak.2008.10.003,Towards the automated verification of semi-structured documents,,2017-03-20
10.1109/INDIN.2011.6034876,Toward verification of material handling systems,,2020-03-20
10.1007/S10773-016-2969-Z,The Modeling Library of Eavesdropping Methods in Quantum Cryptography Protocols by Model Checking,,2012-03-20
10.1504/IJBPIM.2006.012633,Pi calculus-based bitransformation of state-driven model and flow-driven model,,2011-03-20
10.21236/ada344316,Modal logics for continuous dynamics,,2019-03-20
10.1007/978-3-662-03809-3,Introduction to Formal Hardware Verification,,2011-03-20
10.1051/ita/1992260201151,TTL: A formalism to describe local and global properties of distributed systems,,2017-03-20
10.3390/app10227975,Call Graph and Model Checking for Fine-Grained Android Malicious Behaviour Detection,,
10.1109/32.99197,Temporal Logic-Based Deadlock Analysis For Ada,,2014-03-20
10.18725/OPARU-1719,Zur automatischen Verifikation von UML-2-Aktivitätsdiagrammen,,2018-03-20
10.1109/EMWRT.1991.144074,Real-time system validation by model checking in TRIO,,2019-03-20
10.1145/177492.177725,Model checking and modular verification,,2018-03-20
10.5381/jot.2014.13.6.a1,On using pre and postconditions to tackle the aspect scheduling problem by rewriting systems: a design-level approach,,2012-03-20
10.1080/11663081.2000.10510998,Temporal Logics with Reference Pointers and Computation Tree Logics,,2017-03-20
10.1007/s00766-010-0101-0,RELAX: a language to address uncertainty in self-adaptive systems requirement,,2014-03-20
10.1007/BFb0035645,Cactus: A Branching-Time Logic Programming Language,,2018-03-20
10.1016/0304-3975(93)90155-M,The Expressive Power of Implicit Specifications,,2016-03-20
10.1109/EMWRT.1989.43437,TRIO  a logic formalism for the specification of real-time systems,,2018-03-20
10.1007/978-3-030-21485-2_13,From the Archives of the Formal Methods and Tools Lab - Axiomatising and Contextualising ACTL,,2019-03-20
10.1109/ACCESS.2019.2942762,LTL Model Checking Based on Binary Classification of Machine Learning,,2016-03-20
10.1007/978-1-4612-1830-2,On Concurrent Programming,,2018-03-20
10.1109/LICS.2009.12,Trace Semantics is Fully Abstract,,2014-03-20
10.1007/3-540-17660-8_60,Characterizing Kripke Structures in Temporal Logic,,2012-03-20
10.1007/978-3-540-69850-0_12,Design and Synthesis of Synchronization Skeletons Using Branching Time Temporal Logic,,2017-03-20
10.1007/3-540-56496-9_4,Efficient Local Correctness Checking,,2017-03-20
10.1007/3-540-56922-7_9,A Decision Algorithm for Full Propositional Temporal Logic,,2020-03-20
10.1016/S1474-6670(17)59741-4,A Language and a Calculus for Distributed Computer Control Systems Description and Analysis,,2016-03-20
10.1016/0304-3975(95)00035-U,A Hierarchy of Temporal Logics with Past,,2016-03-20
10.1093/jigpal/jzw042,Static analysis: a brief survey,,2013-03-20
10.1109/UCC.2014.41,Performance Estimation for Business Workflows on Public Cloud Offerings Using Probabilistic Model Checker,,2013-03-20
10.1007/s10472-017-9546-x,To be fair  use bundles,,2019-03-20
10.1007/978-3-642-15234-4_22,Model Checking the Ant Colony Optimisation,,2012-03-20
10.1007/3-540-61474-5_74,Selective Quantitative Analysis and Interval Model Checking: Verifying Different Facets of a System,,2017-03-20
10.1016/S0019-9958(86)80001-8,Probabilistic Propositional Temporal Logics,,2011-03-20
10.1007/BF01407838,Formal timing analysis of distributed systems,,2011-03-20
10.1109/ECOWS.2006.22,Formal Modelling and Verification of an Asynchronous Extension of SOAP,,2018-03-20
10.1109/EMWRT.1991.144087,Embedding time granularity in logical specifications of real-time systems,,2020-03-20
10.1109/ASE.2009.43,Cache-Based Model Checking of Networked Applications: From Linear to Branching Time,,2019-03-20
10.1145/349194.349197,Temporal logics for real-time system specification,,2017-03-20
10.1007/BF00265555,Fairness and related properties in transition systems — a temporal logic to deal with fairness,,2011-03-20
10.1007/978-3-642-04143-3_3,Verification of Epistemic Properties in Probabilistic Multi-Agent Systems,,2020-03-20
10.1007/978-0-387-35608-2_36,Model Checking Birth and Death,,2018-03-20
10.1016/0020-7373(91)90021-X,A Formalization of Absolute and Relative Dates Based on the Point Calculus,,2015-03-20
10.4304/jcp.7.3.597-607,A Tableau Based Automated Theorem Prover Using High Performance Computing,,2013-03-20
10.1109/TASE.2012.35,Symbolic Model Checking for Propositional Projection Temporal Logic,,2019-03-20
10.1109/IPDPS.2006.1639581,Verification of software via integration of design and implementation,,2018-03-20
10.1016/j.artint.2016.01.008,Parameterised verification for multi-agent systems,,2012-03-20
10.1109/IECON.2013.6700423,Model checking specifications of smart cards,,2018-03-20
10.1007/978-3-319-06859-6_6,Model Checking GSM-Based Multi-Agent Systems,,2020-03-20
10.1145/3167088,Completeness and decidability of converse PDL in the constructive type theory of Coq,,2014-03-20
10.1109/TC.1986.1676711,Automatic Verification of Sequential Circuits Using Temporal Logic,,2015-03-20
10.1007/11750321_58,Improved SAT Based Bounded Model Checking,,2013-03-20
10.1145/800057.808711,Automata theoretic techniques for modal logics of programs: (Extended abstract),,2016-03-20
10.1007/3-540-16078-7_62,Temporal Reasoning Under Generalized Fairness Constraints,,2014-03-20
10.1007/s10992-015-9369-3,Axiomatization of a Branching Time Logic with Indistinguishability Relations,,2017-03-20
10.1145/567067.567080,Automatic verification of finite state concurrent system using temporal logic specifications: a practical approach,,2018-03-20
10.2991/CITCS.2012.97,Characterizing Petri Nets with the Temporal Logic CTL,,2018-03-20
10.1007/978-94-009-7893-5_6,Verification of Sequential Programs: Temporal Axiomatization,,2015-03-20
10.1016/S0019-9958(82)91022-1,Reasoning with Time and Chance,,2015-03-20
10.1109/TIME.1996.555699,Nonmonotonic reasoning on a constructive time structure,,2019-03-20
10.1109/DATE.2010.5457129,GoldMine: Automatic assertion generation using data mining and static analysis,,2017-03-20
10.1007/978-3-540-75596-8_4,Branching vs. Linear Time: Semantical Perspective,,2011-03-20
10.1016/0950-5849(92)90145-F,Formal description techniques and automated protocol synthesis,,2013-03-20
10.3233/978-1-61499-472-5-128,Time - A Multidimensional Concept,,2019-03-20
10.1016/B978-0-08-030253-9.50020-2,EXTENDED NATURAL LANGUAGE DATA BASE INTERACTIONS,,2016-03-20
10.1109/REAL.1990.128761,Specifying and verifying a real-time priority queue with modal algebra,,2017-03-20
10.1109/CONIELECOMP.2007.68,Constraint Verification for Concurrent System Management Workflows Sharing Resources,,2012-03-20
10.1007/3-540-55092-5_15,Temporal Logic Applied to Reliability Modelling of Fault-Tolerant Systems,,2015-03-20
10.1109/LICS.1990.113764,Real-time logics: complexity and expressiveness,,2015-03-20
10.1016/J.ENTCS.2007.07.007,Exogenous Probabilistic Computation Tree Logic,,2012-03-20
10.1145/563997.563992,Modelling Erroneous Operator Behaviours for an Air-Traffic Control Task,,2011-03-20
10.1007/s10472-019-09632-y,Digital forensics and investigations meet artificial intelligence,,2017-03-20
10.1007/978-1-4471-4129-7,Mathematical Logic for Computer Science,,2013-03-20
10.1109/CSFW.1990.128180,A logic for reasoning about security,,2015-03-20
10.1007/3-540-57785-8_130,A Hierarchy of Temporal Logics with Past (Extended Abstract),,2019-03-20
10.1145/267954.267955,Hyperdocuments as automata: verification of trace-based browsing properties by model checking,,2011-03-20
10.22028/D291-26649,A machine-checked constructive metatheory of computation tree logic,,2014-03-20
10.1109/TIME.2011.19,Synthesising Classic and Interval Temporal Logic,,2016-03-20
10.1007/978-981-10-3611-8_2,Model Checking Computational Tree Logic Using Sticker Automata,,2016-03-20
10.1145/357233.357237,Synthesis of Communicating Processes from Temporal Logic Specifications,,2020-03-20
10.1007/978-3-319-08915-7,Models@run.time,,2019-03-20
10.1016/j.artint.2008.03.005,Maintenance goals of agents in a dynamic environment: Formulation and policy construction,,2011-03-20
10.1007/978-3-642-14052-5_26,A Framework for Formal Verification of Compiler Optimizations,,2011-03-20
10.1007/978-3-642-02658-4_13,Linear Functional Fixed-points,,2013-03-20
10.3990/1.9789036548441,Efficient learning and analysis of system behavior,,2020-03-20
10.1145/582153.582187,Modular verification of concurrent programs,,2017-03-20
10.1007/978-3-319-08783-2_8,Normal Form Expressions of Propositional Projection Temporal Logic,,2018-03-20
10.1109/ICCI-CC.2014.6921486,Optimized symbolic model checking for component-based systems,,2016-03-20
10.1093/jigpal/7.6.779,An Expectation-Transformer Model for Probabilistic Temporal Logic,,2013-03-20
10.1152/AJPENDO.1983.244.2.E122,Zinc  iron  and copper absorption in the streptozotocin-diabetic rat.,,2020-03-20
10.1016/0304-3975(90)90038-J,Proof Systems for Satisfiability in Hennessy-Milner Logic with Recursion,,2015-03-20
10.1016/S1474-6670(17)49466-3,Specification and Implementation of an FMS Coordination System Based on High-Level Petri Net,,2013-03-20
10.1006/jsco.1996.0065,Deriving Liveness Goals from Temporal Logic Specifications,,2017-03-20
10.1016/S1571-0661(05)82588-5,Model Theoretic Syntax  Parsing: An Application to Temporal Logic,,2011-03-20
10.1109/MCSE.2014.31,Formal Verification of a Gravity-Induced Loss-of-Consciousness Monitoring System for Aircraft,,2013-03-20
10.1093/jigpal/jzs048,Tableau-based decision procedure for the multiagent epistemic logic with all coalitional operators for common and distributed knowledge,,2016-03-20
10.1007/3-540-12896-4_363,Deciding Branching Time Logic: A Triple Exponential Decision Procedure for CTL*,,2013-03-20
10.1007/978-3-319-10575-8_2,Temporal Logic and Fair Discrete Systems,,2013-03-20
10.22028/D291-26295,Incremental decision procedures for modal logics with nominals and eventualities,,2012-03-20
10.1145/2811261,Optimal Tableau Method for Constructive Satisfiability Testing and Model Synthesis in the Alternating-Time Temporal Logic ATL+,,2014-03-20
10.1007/978-3-642-25992-0_39,Efficient SAT-Based Verification of Asynchronous System,,2014-03-20
10.1145/326619.326625,Specification and verification of learning,,2015-03-20
10.1007/11541868_3,Shallow Lazy Proofs,,2017-03-20
10.1007/BF00365335,Dealing with different time granularities in formal specifications of real-time systems,,2020-03-20
10.1109/snpd.2007.242,SAT-based Bounded Model Checking for SE-LTL,,2012-03-20
10.4230/LIPIcs.CSL.2018.23,Quantifying Bounds in Strategy Logic,,2018-03-20
10.1007/978-1-4471-0335-6,Mathematical Logic for Computer Science,,2016-03-20
10.1145/133233.129397,A model parametric real-time logic,,2014-03-20
10.1145/4904.4999,“Sometimes” and “not never” revisited: on branching versus linear time temporal logic,,2018-03-20
10.1145/248621.248623,Algebraic approaches to nondeterminism—an overview,,2018-03-20
10.1145/325694.325699,Temporal abstract interpretation,,2020-03-20
10.1007/978-3-662-45231-8_5,Contracts in CML,,2014-03-20
10.1023/A:1020887910943,Model Checking Techniqes for the Analysis of Reactive Systems,,2014-03-20
10.1109/TASE.2013.2276763,Automated Formal Verification of Routing in Material Handling Systems,,2020-03-20
10.1007/978-1-4471-4129-7_14,Temporal Logic: A Deductive System,,2011-03-20
10.1007/978-3-642-32347-8_20,Using Locales to Define a Rely-Guarantee Temporal Logic,,2016-03-20
10.1007/3-540-51237-3_7,A Synthesis of Two Approaches for Verifying Finite State Concurrent Systems,,2019-03-20
10.1007/978-1-4612-0931-7,The Temporal Logic of Reactive and Concurrent Systems,,2020-03-20
10.29007/5sl4,A One-Pass Tableau-Based Workflow Verification Framework,,2020-03-20
10.1109/TIME.1997.600795,BCTL: a branching clock temporal logic,,2016-03-20
10.1093/logcom/13.2.195,A Decision Procedure and Complete Axiomatization of Finite Interval Temporal Logic with Projection,,2015-03-20
10.1016/J.IC.005.07.006,BTL 2 and the expressive power of ECTL,,2019-03-20
10.3182/20090610-3-IT-4004.00010,Direct Model Checking of {PLC} Programs in {IL},,2017-03-20
10.1007/978-3-642-88049-0_14,Is Time a Real Time? An Overview of Time Ontology in Informatics,,2014-03-20
10.1109/ETFA.2009.5347044,Formal verification of UML-modeled machine controls,,2019-03-20
10.1145/2629686,Temporal Specifications with Accumulative Values,,2019-03-20
10.1109/TR.2015.2452931,Formal Verification With Confidence Intervals to Establish Quality of Service Properties of Software Systems,,2014-03-20
10.1016/J.COLA.2019.02.004,AutoReq: Expressing and verifying requirements for control systems,,2013-03-20
10.1023/A:1019999621456,Linear  Branching Time and Joint Closure Semantics for Temporal Logic,,2011-03-20
10.1016/j.jal.2014.03.002,A propositional linear time logic with time flow isomorphic to ω2,,2015-03-20
10.1007/978-3-319-08587-6_21,Optimal Tableaux-Based Decision Procedure for Testing Satisfiability in the Alternating-Time Temporal Logic ATL+,,2016-03-20
10.1007/978-3-319-08587-6_3,And-Or Tableaux for Fixpoint Logics with Converse: LTL  CTL  PDL and CPDL,,2016-03-20
10.1109/ICECCS.2013.21,Reusing Search Tree for Incremental SAT Solving of Temporal Induction,,2014-03-20
10.1109/CASE.1995.465306,An integrated environment for communication software design,,2012-03-20
10.4204/EPTCS.226.20,A New Rule for LTL Tableaux,,2015-03-20
10.1007/978-3-662-01110-2_8,Specification of Distributed Systems Using Modal Logics,,2016-03-20
10.1016/j.entcs.2005.10.004,Verification of AMBA Using a Combination of Model Checking and Theorem Proving,,2011-03-20
10.1016/b978-044450813-3/50026-6,Model Checking,,2013-03-20
10.1007/s10817-013-9294-5,A Goal-Directed Decision Procedure for Hybrid PDL,,2018-03-20
10.1109/SNPD.2007.481,Stochastic Network Fluid Modeling with Probabilistic Wavelet System,,2011-03-20
10.1007/s10849-009-9093-x,Branching-Time Logics Repeatedly Referring to States,,2014-03-20
10.1007/978-1-4615-3956-8_1,Fixed Priority Scheduling Theory for Hard Real-Time Systems,,2018-03-20
10.1007/BFb0026295,A temporal Logic Approach to Specify and to Prove Properties of Finite State Concurrent Systems,,2019-03-20
10.1007/3-540-69778-0_17,A Tableau Method for Interval Temporal Logic with Projection,,2017-03-20
10.1109/TIME.2014.22,Fairness with EXPTIME Bundled CTL Tableau,,2015-03-20
10.1007/978-3-319-11653-2_5,Streaming Model Transformations By Complex Event Processing,,2019-03-20
10.1007/s11390-006-0944-5,Direct Model Checking Matrix Algorithm,,2011-03-20
10.1023/A:1008615614281,Another Look at LTL Model Checking,,2014-03-20
10.1093/logcom/ext005,An axiomatization of ECTL,,2013-03-20
10.1155/2017/7941845,Model Checking Temporal Logic Formulas Using Sticker Automata,,2012-03-20
10.1007/3-540-52559-9_76,Compositional Theories Based on an Operational Semantics of Contexts,,2014-03-20
10.1109/PerCom.2012.6199846,Formal specification and runtime detection of temporal properties for asynchronous context,,2011-03-20
10.1007/3-540-58043-3_19,Verification Tools for Finite-State Concurrent Systems,,2015-03-20
10.1145/146937.146940,A logic for reasoning about security,,2017-03-20
10.1145/318593.318622,Checking that finite state concurrent programs satisfy their linear specification,,2012-03-20
10.2478/quageo-2013-0015,Dwelling or Living in a Block of Flats. Towards the Polish Geography of Home,,2019-03-20
10.1016/S0951-8320(03)00059-0,Systematic evaluation of fault trees using real-time model checker UPPAAL,,2015-03-20
10.1007/3-540-52559-9_72,Verifying the Correctness of AADL Modules Using Model Checking,,2016-03-20
10.1007/s10009-018-0483-8,Spatio-temporal model checking of vehicular movement in public transport systems,,2020-03-20
10.1109/SFCS.1983.12,Decision procedures for time and chance,,2019-03-20
10.1145/2529993,A resolution calculus for the branching-time temporal logic CTL,,2016-03-20
10.1016/S0019-9958(82)91258-X,Propositional Dynamic Logic of Looping and Converse Is Elementarily Decidable,,2012-03-20
10.1109/LICS.2011.33,Temporal Specifications with Accumulative Values,,2014-03-20
10.1016/j.tcs.2006.01.034,Characterizing CTL-like logics on finite trees,,2019-03-20
10.1007/3-540-60915-6_3,Automated Temporal Reasoning about Reactive Systems,,2015-03-20
10.1109/32.265634,Proving Properties of Real-Time Systems Through Logical Specifications and Petri Net Models,,2018-03-20
10.1006/inco.2001.2970,An Infinite Hierarchy of Temporal Logics over Branching Time,,2011-03-20
10.1145/1859823.1859824,Engineering high confidence medical device software,,2011-03-20
10.1007/978-3-540-39910-0_9,Counterexamples Revisited: Principles  Algorithms  Applications,,2013-03-20
10.3115/981311.981319,A Modal Temporal Logic for Reasoning about Change,,2020-03-20
10.1007/BF02432150,A decision procedure for combinations of propositional temporal logic and other specialized theories,,2012-03-20
10.14257/IJHIT.2013.6.6.18,Verification of Embedded Real-Time Systems Using Symbolic Model Checking: A Case Study,,2014-03-20
10.9746/VE.SICETR1965.43.679,Intraoperative Analysis of Surgeon's Motions and Construction of Timed Automata Based Model of Laparoscopic Surgery for Human-adaptive Surgical Robot System,,2014-03-20
10.1007/978-3-030-32409-4_4,Automatic Verification for Node-Based Visual Script Notation Using Model Checking,,2016-03-20
10.1017/S0269888900004896,A review of temporal logics,,2016-03-20
10.4230/LIPIcs.TIME.2020.14,One-Pass Context-Based Tableaux Systems for CTL and ECTL,,2019-03-20
10.1007/3-540-52753-2_49,A Concurrent Branching Time Temporal Logic,,2018-03-20
10.1109/ICCI.1992.227708,Linear local and global model checking algorithms for a kernal temporal logic language,,2012-03-20
10.1007/3-540-48778-6_2,Quantitative Program Logic and Performance in Probabilistic Distributed Algorithms,,2018-03-20
10.1016/j.ic.2005.07.006,BTL2 and the expressive power of ECTL+,,2019-03-20
10.1007/11591191_31,Model Checking Abstract State Machines with Answer Set Programming,,2016-03-20
10.1109/tse.2019.2945329,Specification Patterns for Robotic Missions,,2018-03-20
10.1007/3-540-58043-3_22,Temporal Verification of Simulation and Refinement,,2012-03-20
10.1016/0890-5401(89)90046-1,Automata on Infinite Objects and Their Applications to Logic and Programming,,2014-03-20
10.21236/ada225189,Model Checking for Linear Temporal Logic: An Efficient Implementation,,2020-03-20
10.1007/3-540-50403-6_49,Analysis of Estelle Specifications,,2017-03-20
10.1016/S0304-3975(99)00008-0,Verification of Reactive Systems Using Temporal Logic with Clocks,,2019-03-20
10.1007/S11633-007-0413-9,Formal reduction of interfaces to large-scale process control systems,,2018-03-20
10.1007/3-540-58179-0_72,Another Look at LTL Model Checking,,2018-03-20
10.1016/j.entcs.2007.08.030,A Compositional Automata-based Approach for Model Checking Multi-Agent Systems,,2012-03-20
10.1145/12130.12159,Reasoning about fair concurrent programs,,2020-03-20
10.2168/LMCS-8(1:4)2012,A type reduction theory for systems with replicated components,,2012-03-20
10.1109/ICAC.2007.31,Policy Verification and Validation Framework Based on Model Checking Approach,,2019-03-20
10.1007/s002360050177,Verification of clocked and hybrid systems,,2012-03-20
10.1007/11526988_4,Evolution and Reactivity for the Web,,2015-03-20
10.1109/DEST.2008.4635187,Notes on abstract algebra and logic: Towards their application to cell biology and security,,2018-03-20
10.1007/3-540-45694-5_4,Expressive Power of Temporal Logics,,2020-03-20
10.1023/A:1004904401346,Synchronization of Logics,,2020-03-20
10.1109/ISSRE.1996.558838,Method for designing and placing check sets based on control flow analysis of programs,,2014-03-20
10.1007/s00165-008-0075-6,Deductive verification of alternating systems,,2020-03-20
10.1007/3-540-44577-3_10,Abstract Interpretation Based Formal Methods and Future Challenges,,2017-03-20
10.1007/11533092_1,A Logic for Knowledge  Correctness  and Real Time,,2018-03-20
10.1145/1592761.1592781,Model checking,,2016-03-20
10.14498/VSGTU365,Технология проектирования надежных управляющих алгоритмов реального времени для космических аппаратов,,2018-03-20
10.1016/B978-0-08-034083-8.50031-4,A LANGUAGE AND A CALCULUS FOR DISTRIBUTED COMPUTER CONTROL SYSTEMS DESCRIPTION AND ANALYSIS,,2012-03-20
10.1007/978-3-642-16901-4_45,Alternating Interval Based Temporal Logics,,2020-03-20
10.1109/HICSS.1994.323417,Dynamic hypertext synthesis for information retrieval,,2011-03-20
10.1007/978-1-4471-4129-7_13,Temporal Logic: Formulas  Models  Tableaux,,2019-03-20
10.1145/2072274.2072278,Model checking dataflow for malicious input,,2014-03-20
10.1007/3-540-65193-4_18,Verification of Clocked and Hybrid Systems,,2014-03-20
10.1093/comjnl/45.4.453,An Extended Temporal Logic for CSCW,,2015-03-20
10.1007/978-3-540-39910-0_22,A Hierarchical Completeness Proof for Propositional Temporal Logic,,2020-03-20
10.31274/etd-20200902-116,A situation-driven framework for relearning of activities of daily living in smart home environments,,2020-03-20
10.1109/TASE.2011.45,Focus Game for Projection Temporal Logic,,2015-03-20
10.1007/978-1-4757-3785-1_1,Motivation and Background,,2019-03-20
10.1109/CLOUD.2011.48,Performance Modeling of Concurrent Live Migration Operations in Cloud Computing Systems Using PRISM Probabilistic Model Checker,,2011-03-20
10.3217/jucs-013-05-0639,Model Checking: Software and Beyond,,2019-03-20
10.1109/LICS.1998.705674,Linear vs. branching time: a complexity-theoretic perspective,,2015-03-20
10.1016/0304-3975(90)90096-Z,Interleaving Set Temporal Logic,,2016-03-20
10.1016/0167-6423(93)90025-K,Embedding Time Granularity in a Logical Specification Language for Synchronous Real-Time Systems,,2016-03-20
10.1007/BFb0023740,The Algebraic Feedback Product of Automata,,2015-03-20
10.1007/BFb0055612,Sometimes and Not Never Re-revisited: On Branching Versus Linear Time,,2020-03-20
10.1007/BF02943343,A Natural Deduction System of Temporal Logic,,2011-03-20
10.1016/0304-3975(88)90098-9,Characterizing Finite Kripke Structures in Propositional Temporal Logic,,2014-03-20
10.1007/978-3-642-31915-0_7,MAS: Qualitative and Quantitative Reasoning,,2011-03-20
10.1145/800057.808661,Deciding branching time logic,,2020-03-20
10.1007/BFb0027419,Proving Correctness of Labled Transition Systems by Semantic Tableaux,,2015-03-20
10.1109/TIME.2013.14,A Labeled Deduction System for the Logic UB,,2017-03-20
10.1007/BFb0031988,Logics and Models of Real Time: A Survey,,2014-03-20
10.1006/inco.1993.1025,Real-Time Logics: Complexity and Expressiveness,,2015-03-20
10.1109/CCDC.2019.8832913,The Research on the Strategy of Power Grid Fault Treatment with Multi Information Integration via Expand Linear Temporal Logic,,2013-03-20
10.1007/11560647_29,Quantitative Temporal Logic Mechanized in HOL,,2016-03-20
10.1023/A:1008713601998,Selective Quantitative Analysis and Interval Model Checking: Verifying Different Facets of a System,,2013-03-20
10.1016/j.is.2012.07.003,Compliance by design for artifact-centric business processes,,2012-03-20
10.1016/S1571-0661(05)80393-7,Local Distributed Model Checking of RegCTL,,2013-03-20
10.1145/1721695.1721702,Model checking of software for microcontrollers,,2013-03-20
10.1016/j.entcs.2010.04.009,Tableau Tool for Testing Satisfiability in LTL: Implementation and Experimental Analysis,,2018-03-20
10.1016/S0004-3702(99)00039-9,Enhancing Model Checking in Verification by AI Techniques,,2019-03-20
10.1007/3-540-56610-4_91,A Propositional Dense Time Logic (Based on Nested Sequences),,2011-03-20
10.1109/TIME.2011.16,An Experimental Comparison of Theorem Provers for CTL,,2016-03-20
10.1007/BFb0012834,Propositional Temporal Interval Logic is PSPACE Complete,,2011-03-20
10.1007/BFb0013024,The anchored version of the temporal framework,,2016-03-20
10.1093/comjnl/35.5.431,Logic as a Formal Method,,2015-03-20
10.1007/BF02826607,t-GIS and environmental dynamic models,,2014-03-20
10.1007/978-3-7908-1840-6_8,Rough set methods for the synthesis and analysis of concurrent processes,,2020-03-20
10.1007/978-1-4612-4222-2,Temporal Verification of Reactive Systems,,2012-03-20
10.1016/S1570-2464(07)80020-6,Automata-theoretic techniques for temporal reasoning,,2015-03-20
10.1016/S0304-3975(01)00049-4,Quantitative program logic and expected time bounds in probabilistic distributed algorithms,,2017-03-20
10.1093/logcom/exm006,Using Temporal Logic to Analyse Temporal Logic: A Hierarchical Approach Based on Intervals,,2018-03-20
10.1006/JSCO.1996.0072,Dealing with Multiple Granularity of Time in Temporal Logic Programming,,2013-03-20
10.14236/EWIC/RW1996.10,Proof rules for probabilistic loops,,2014-03-20
10.1109/GCCE50665.2020.9291945,A Node-Style Visual Programming Environment for the nuXmv Model Checker,,2012-03-20
10.1007/BFb0026106,Proof System for Hennessy-Milner Logic with Recursion,,2014-03-20
10.1145/800057.808660,Probabilistic temporal logics for finite and bounded models,,2012-03-20
10.1016/S0019-9958(86)80038-9,A Logic for the Description of Non-deterministic Programs and Their Properties,,2020-03-20
10.1007/BFb0015727,Linear and Branching Structures in the Semantics and Logics of Reactive Systems,,2015-03-20
10.1023/A:1024643624349,Branching within Time: An Expressively Complete and Elementarily Decidable Temporal Logic for Time Granularity,,2015-03-20
10.1007/978-1-4615-5643-5_6,Logics for Specifying Concurrent Information Systems,,2011-03-20
10.3217/jucs-010-11-1498,FBT: A Tool for Applying Interval Logic Specifications to On-the-fly Model Checking,,2016-03-20
10.1016/0167-739X(92)90035-A,Implementation of a synchronous communication in a loosely coupled system: A correctness proof,,2015-03-20
10.1109/WSCAR.2014.6916809,Test case generation for automotive applications,,2013-03-20
10.1016/j.tcs.2008.06.006,Arity hierarchy for temporal logics,,2014-03-20
10.1007/11925040_8,Designing Safe  Reliable Systems Using Scade,,2015-03-20
10.1016/S1571-0661(04)80580-2,Combining Monitors for Runtime System Verification,,2016-03-20
10.1007/978-3-319-07995-0_44,A Survey on Static Analysis and Model Checking,,2015-03-20
10.1057/9781137002419.0006,A Users Manual,,2017-03-20
10.1016/0304-3975(94)90269-0,CTL* and ECTL* as Fragments of the Modal mu-Calculus,,2015-03-20
10.1007/BF00121125,Formal hardware verification methods: A survey,,2014-03-20
10.1145/800070.802190,Decision procedures and expressiveness in the temporal logic of branching time,,2011-03-20
10.1007/BFb0023727,Quantitative Temporal Reasoning,,2020-03-20
10.1016/b978-0-444-88074-1.50021-4,Temporal and Modal Logic,,2013-03-20
10.1142/S021819401100513X,Model Checking for Verification of Mandatory Access Control Models and Properties,,2012-03-20
10.1016/j.comnet.2004.03.005,Analysing interactive voice services,,2015-03-20
10.1007/978-3-540-75560-9_5,One-Pass Tableaux for Computation Tree Logic,,2016-03-20
10.1109/ETFA.2011.6059043,An approach to the verification of material handling systems,,2018-03-20
10.1016/0167-6423(94)00019-0,Model Checking Using Net Unfoldings,,2011-03-20
10.1145/1541880.1541881,Online reorganization of databases,,2013-03-20
10.1007/978-3-319-72125-5_20,Deadlock Analysis of Service-Oriented Systems with Recursion and Concurrency,,2013-03-20
10.1007/978-3-540-89287-8_7,Time Recursive Petri Nets,,2017-03-20
10.3182/20090603-3-RU-2001.0486,Modelling and Analysis of Time Constrained and Flexible manufacturing processes,,2017-03-20
10.1007/978-3-319-23063-4_4,Specification and Verification of Complex Business Processes - A High-Level Petri Net-Based Approach,,2015-03-20
10.1007/978-3-030-51831-8_17,Dynamic Recursive Petri Nets,,2014-03-20
10.1007/978-3-642-01364-5_2,Modelling and Analysis of Time-Constrained Flexible Workflows with Time Recursive ECATNets,,2016-03-20
10.4304/JSW.8.3.587-602,Synchronized Petri Net: A Formal Specification Model for Multi Agent Systems,,2017-03-20
10.1007/978-3-319-75396-6_11,Overview of Reconfigurable Petri Nets,,2013-03-20
10.1007/978-3-642-28115-0_10,On the Modeling of Healthcare Workflows Using Recursive ECATNets,,2019-03-20
10.4018/jats.2013040101,Hierarchical Multi-Agent Plans Using Model-Based Petri Net,,2012-03-20
10.1007/s11761-013-0146-2,On expanding protocol conformance checking to exception handling,,2011-03-20
10.1007/978-3-319-19578-0_45,A High Level Net for Modeling and Analysis Reconfigurable Discrete Event Control Systems,,2014-03-20
10.1016/j.neucom.2014.04.063,Partially centralized approach for dynamic hierarchical-plans merging,,2016-03-20
10.1007/978-3-319-33903-0_12,High Level Petri Net Modelling and Analysis of Flexible Web Services Composition,,2015-03-20
10.4230/LIPIcs.FSTTCS.2017.16,Forward Analysis for WSTS  Part III: Karp-Miller Trees,,2012-03-20
10.3217/jucs-018-17-2383,Behavior Alignment and Control Flow Verification of Process and Service Choreographies,,2015-03-20
10.3233/MGS-170264,Dynamic verification of hierarchical multi-agent plans,,2018-03-20
10.1016/j.ins.2016.12.044,Formal verification of complex business processes based on high-level Petri nets,,2014-03-20
10.1007/978-3-319-45994-3_1,The Ideal Theory for WSTS,,2016-03-20
10.1007/978-3-030-21571-2_23,Coverability and Termination in Recursive Petri Nets,,2011-03-20
10.1007/978-3-642-02424-5_6,Decidability Results for Restricted Models of Petri Nets with Name Creation and Replication,,2012-03-20
10.1007/978-3-642-39088-3_1,Modelling and Analysis of Flexible Healthcare Processes Based on Algebraic and Recursive Petri Nets,,2015-03-20
10.1007/s00165-015-0341-3,A reduced maximality labeled transition system generation for recursive Petri nets,,2017-03-20
10.3233/FI-2010-368,Decidability Problems in Petri Nets with Names and Replication,,2011-03-20
10.1145/1416729.1416775,Modelling collaborative workflows using recursive ECATNets,,2014-03-20
10.1007/BF02252955,On the complexity of computation in the presence of link failures: the case of a ring,,2013-03-20
10.1007/s004460050016,Optimal asynchronous agreement and leader election algorithm for complete networks with Byzantine faulty links,,2017-03-20
10.2478/geosc-2014-0002,Viticulture in the Context of Historical Landscape Structure in the Small Carpathian Region – Model Area of Rača,,2018-03-20
10.1145/1993806.1993866,Fast and compact self stabilizing verification  computation  and fault detection of an MST,,2013-03-20
10.1007/978-3-540-92221-6_32,Leader Election in Extremely Unreliable Rings and Complete Networks,,2019-03-20
10.1002/0470072644,Design and analysis of distributed algorithms,,2014-03-20
10.1007/s00453-006-1232-z,Mobile Search for a Black Hole in an Anonymous Ring,,2015-03-20
10.1007/s00446-015-0242-y,Fast and compact self-stabilizing verification  computation  and fault detection of an MST,,2016-03-20
10.1007/s004460050017,Design and analysis of dynamic leader election protocols in broadcast networks,,2019-03-20
10.1145/1835698.1835742,Efficient threshold detection in a distributed environment: extended abstract,,2017-03-20
10.1109/TKDE.2010.134,Efficient Techniques for Online Record Linkage,,2016-03-20
10.1007/978-3-8350-9633-2_6,How Do Firms Address Multiple Taxonomy Issues,,2011-03-20
10.1007/978-3-642-28115-0_27,Three Challenges for Process Model Reuse,,2014-03-20
10.1007/978-3-642-23938-0_1,Some Properties of Complex Tree Integration Criteria,,2015-03-20
10.1080/01969722.2011.595341,A METHOD FOR COMPLEX HIERARCHICAL DATA INTEGRATION,,2018-03-20
10.1007/11590019_65,Towards an Integrated BPM Schema: Control Flow Heterogeneity of PNML and BPEL4WS,,2013-03-20
10.5755/J01.EM.17.2.2209,FASTER AND BETTER DECISIONS IN CHANGING ENVIRONMENTS USING A HYBRID APPROACH OF DATA WAREHOUSE INTEGRATION,,2015-03-20
10.1007/11837862_7,Business Process Design by View Integration,,2013-03-20
10.4230/LIPIcs.MFCS.2019.76,Aperiodic Weighted Automata and Weighted First-Order Logic,,2017-03-20
10.4204/EPTCS.226.11,Weighted Linear Dynamic Logic,,2020-03-20
10.1007/978-3-319-68034-7_6,On Weighted Configuration Logics,,2014-03-20
10.14232/actacyb.22.2.2015.13,Weighted First-Order Logics over Semirings,,2017-03-20
10.1007/978-3-319-48989-6_35,Discounted Duration Calculus,,2019-03-20
10.1017/S096012951800018X,Recognizable languages of arrows and cospans,,2020-03-20
10.14279/TUJ.ECEASST.41.643.654,Treewidth  Pathwidth and Cospan Decompositions,,2012-03-20
10.1007/978-3-642-03564-7_12,On the Complexity of the Syntax of Tree Languages,,2011-03-20
10.1007/978-3-642-22321-1_11,Syntactic Complexity of Ideal and Closed Languages,,2016-03-20
10.1142/S0129054113500184,Minimization of Planar Directed Acyclic Graph Algebras,,2019-03-20
10.14279/tuj.eceasst.41.643,Treewidth  Pathwidth and Cospan Decompositions,,2014-03-20
10.1016/j.jvlc.2012.10.002,Treewidth  pathwidth and cospan decompositions with applications to graph-accepting tree automata,,2016-03-20
10.1007/978-3-642-15240-5_15,A Logic on Subobjects and Recognizability,,2017-03-20
10.1142/S0129054113400340,Inside the Class of regex Languages,,2018-03-20
10.1515/psr-2016-0074,Toward a Greenish Nuclear Fuel Cycle: Ionic Liquids as Solvents for Spent Nuclear Fuel Reprocessing and Other Decontamination Processes for Contaminated Metal Waste,,2020-03-20
10.1109/NLPKE.2003.1275958,Automatic Japanese transliteration with a formalism for presyntactic analysis,,2020-03-20
10.1007/978-3-319-09698-8_13,Characterising REGEX Languages by Regular Languages Equipped with Factor-Referencing,,2016-03-20
10.1007/978-3-642-00982-2_24,On Extended Regular Expressions,,2013-03-20
10.1080/00207160410001715311,A Markov chain model for dynamic binary search tree behaviour,,2013-03-20
10.1007/978-3-319-13350-8_25,One-Sided Random Context Grammars: A Survey,,2011-03-20
10.1016/j.tcs.2013.11.009,One-sided random context grammars with a limited number of right random context rules,,2017-03-20
10.1016/j.tcs.2016.12.010,Regulated variants of limited context restarting automata,,2012-03-20
10.1007/978-3-642-31644-9_11,One-Sided Random Context Grammars with Leftmost Derivations,,2019-03-20
10.1080/00207160.2011.642300,One-sided forbidding grammars and selective substitution grammars,,2018-03-20
10.3233/FI-2013-811,Left Random Context ET0L Grammars,,2019-03-20
10.1080/00207160.2012.723703,Generalized one-sided forbidding grammars,,2015-03-20
10.1007/978-3-642-31644-9,Languages Alive,,2020-03-20
10.1007/978-3-642-59435-9_13,Distribution of Irreducible Polynomials over F2,,2015-03-20
10.1145/2608628.2608671,Sparse interpolation over finite fields via low-order roots of unity,,2014-03-20
10.4230/LIPIcs.MFCS.2016.6,Integer Factoring Using Small Algebraic Dependencies,,2019-03-20
10.1007/978-3-319-09147-1_43,Distributed Prime Sieve in Heterogeneous Computer Clusters,,2016-03-20
10.1007/978-3-319-02297-0_5,Faster Sparse Interpolation of Straight-Line Programs,,2020-03-20
10.1109/ISPDC.2005.5,A Distributed Prime Sieving Algorithm based on Scheduling by Multiple Edge Reversal,,2014-03-20
10.1007/978-3-642-59435-9_8,Twin Irreducible Polynomials over Finite Fields,,2016-03-20
10.1109/IPDPSW.2019.00107,A Distributed Wheel Sieve Algorithm,,2017-03-20
10.14738/tmlai.82.8054,Primality test and primes enumeration using odd numbers indexation,,2013-03-20
10.1016/j.jsc.2015.11.005,Faster sparse multivariate polynomial interpolation of straight-line programs,,2016-03-20
10.1145/2957759,Tabulating Pseudoprimes and Tabulating Liars,,2020-03-20
10.1090/S0025-5718-2013-02787-1,Empirical verification of the even Goldbach conjecture and computation of prime gaps up to 4⋅1018,,2017-03-20
10.1090/S0025-5718-03-01501-1,Prime sieves using binary quadratic forms,,2015-03-20
10.1007/BF00129843,Automatic generation of nested  fork-join parallelism,,2015-03-20
10.1145/989393.989398,Automatic storage optimization,,2014-03-20
10.1590/S1984-296120180073,Changes in hematological and biochemical parameters of tambaqui (Colossoma macropomum ) parasitized by metazoan species.,,2011-03-20
10.1007/978-3-540-69850-0_13,Specification and Verification of Conurrent Systems in Cesar,,2017-03-20
10.1007/BF01661169,Compiling path expressions into VLSI circuits,,2020-03-20
10.1109/DEPCOS-RELCOMEX.2006.13,Compatibility of Software Components - Modeling and Verification,,2018-03-20
10.1007/s001650050058,Overtaking in Asynchronous Periodic Systems,,2016-03-20
10.1007/BF00277389,Representing CCS programs by finite predicate/transition nets,,2012-03-20
10.1145/127056.127095,Another proposal for a concurrency control level in concurrent object-oriented languages,,2019-03-20
10.1080/00207543.2014.948575,Multi-objective meta-heuristics to solve three-stage assembly flow shop scheduling problem with machine availability constraints,,2020-03-20
10.1016/j.cie.2017.11.020,A proactive approach to solve integrated production scheduling and maintenance planning problem in flow shops,,2014-03-20
10.1016/j.cor.2005.11.019,An approximation scheme for two-machine flowshop scheduling with setup times and an availability constraint,,2015-03-20
10.21553/REV-JEC.51,Single-machine Scheduling with Splitable Jobs and Availability Constraints,,2017-03-20
10.1504/IJSOM.2014.060455,JIT-scheduling in unrelated parallel-machine environment with aging effect and multi-maintenance activities,,2014-03-20
10.1080/03155986.2003.11732673,New Results On Sequencing With Rate Modification,,2018-03-20
10.1080/00207543.2012.676683,A branch and bound algorithm for single-machine production scheduling integrated with preventive maintenance planning,,2012-03-20
10.1080/02522667.2009.10699934,Minimizing maximum tardiness in single FMS machine scheduling with tool changes,,2017-03-20
10.1007/978-3-540-75444-2_27,Online Algorithms for Single Machine Schedulers to Support Advance Reservations from Grid Jobs,,2014-03-20
10.1007/springerreference_6126,Scheduling and Sequencing,,2019-03-20
10.1109/IcConSCS.2013.6632041,Effective algorithms for scheduling problems under non-availability constraints (Invited paper),,2012-03-20
10.1016/j.cor.2014.02.006,Integrated production scheduling and maintenance policy for robustness in a single machine,,2019-03-20
10.1007/s00291-020-00586-w,Exact and heuristic algorithms for scheduling jobs with time windows on unrelated parallel machines,,2016-03-20
10.1080/21681015.2015.1031196,Minimizing the sum of absolute deviations under a common due date for a single-machine scheduling problem with availability constraints,,2014-03-20
10.1080/00207543.2011.627388,Batch versus cyclic scheduling of flexible flow shops by mixed-integer programming,,2013-03-20
10.1016/S0377-2217(00)00322-2,Single-machine scheduling with maintenance and repair rate-modifying activities,,2013-03-20
10.1016/J.OMEGA.2010.01.003,Minimizing the makespan on single-machine scheduling with aging effect and variable maintenance activities,,2020-03-20
10.1016/j.cie.2010.12.017,Unrelated parallel-machine scheduling with deteriorating maintenance activities,,2017-03-20
10.1016/S0377-2217(99)00066-1,Machine scheduling with a rate-modifying activity,,2015-03-20
10.1016/J.RCIM.2019.01.005,Merits of using chromosome representations and shadow chromosomes in genetic algorithms for solving scheduling problems,,2019-03-20
10.1016/S0925-5273(00)00024-4,Performance guarantee of two simple priority rules for production scheduling,,2014-03-20
10.1007/978-1-4614-1123-9_3,Single-Machine Scheduling Problems Simultaneous with Deteriorating and Learning Effects Under a Deteriorating Maintenance Consideration,,2013-03-20
10.1016/J.JMSY.2019.01.006,Scheduling uniform manufacturing resources via the Internet: A review,,2020-03-20
10.1080/00207543.2017.1346317,Single-machine scheduling and common due date assignment with potential machine disruption,,2013-03-20
10.3138/infor.48.3.171,Single-machine Scheduling Problems with Aging/Deteriorating Effect under an Optional Maintenance Activity Consideration,,2011-03-20
10.1016/j.cie.2018.07.006,Including preventive maintenance activities in an unrelated parallel machine environment with dependent setup times,,2019-03-20
10.1016/S0167-6377(01)00079-7,Two-machine open shop scheduling with an availability constraint,,2018-03-20
10.1007/978-3-540-74466-5_23,A Framework for Scheduling with Online Availability,,2019-03-20
10.1109/ACCESS.2020.2977234,An Exact Method and Ant Colony Optimization for Single Machine Scheduling Problem With Time Window Periodic Maintenance,,2016-03-20
10.1016/j.cor.2008.10.007,Scheduling a maintenance activity and due-window assignment on a single machine,,2012-03-20
10.1109/HPCC.2008.69,Looking-Ahead Algorithms for Single Machine Schedulers to Support Advance Reservation of Grid Jobs,,2015-03-20
10.1016/j.cie.2017.07.013,Multi-agent single-machine scheduling and unrestricted due date assignment with a fixed machine unavailability interval,,2017-03-20
10.1016/j.ejor.2012.11.052,The impact of process deterioration on production and maintenance policies,,2015-03-20
10.1007/S11465-018-0499-5,Smart manufacturing systems for Industry 4.0: Conceptual framework  scenarios  and future perspectives,,2020-03-20
10.1016/J.PROCIR.2012.07.012,Operational Planning of Maintenance Measures by Means of Event-driven Simulation,,2012-03-20
10.1080/21681015.2017.1295404,Scheduling deteriorating jobs with machine availability constraints to minimize the total completion time,,2015-03-20
10.1109/TC.2007.70738,An Availability-Aware Task Scheduling Strategy for Heterogeneous Systems,,2016-03-20
10.1016/j.ejor.2007.11.008,Skilled workforce scheduling in Service Centres,,2020-03-20
10.1007/s001860200267,Non-preemptive two-machine open shop scheduling with non-availability constraints,,2018-03-20
10.1520/SSMS20160001,An Agent Based Distributed Shop Floor Control System for a Job Shop Environment,,2017-03-20
10.1057/palgrave.jors.2601421,A dynamic programming algorithm for scheduling jobs in a two-machine open shop with an availability constraint,,2012-03-20
10.1016/j.ejor.2008.10.038,Scheduling interfering job sets on parallel machines,,2013-03-20
10.1137/1.9781611973068.74,Improved approximation algorithms for scheduling with fixed jobs,,2013-03-20
10.1007/s10951-017-0541-1,Fault tolerant scheduling of tasks of two sizes under resource augmentation,,2016-03-20
10.1109/ACCESS.2019.2898905,Scheduling Jobs on a Single Machine With Dirt Cleaning Consideration to Minimize Total Completion Time,,2018-03-20
10.1080/09720502.2018.1467585,Parallel machines scheduling based on the impact of deteriorating maintenance,,
10.1016/S0167-8191(00)00035-1,Scheduling preemptable tasks on parallel processors with limited availability,,2020-03-20
10.1016/S0166-218X(00)00266-3,Scheduling with unexpected machine breakdowns,,2011-03-20
10.1016/j.eswa.2015.08.012,Scheduling to minimize the makespan in large-piece one-of-a-kind production with machine availability constraints,,2017-03-20
10.1016/j.cor.2005.01.004,A polynomial-time approximation scheme for the two-machine flow shop scheduling problem with an availability constraint,,2013-03-20
10.11606/D.3.2013.TDE-11072014-121631,Problema de programação de uma operação de empacotamento não-guilhotinado em ambiente de máquina única  minimizando custos de matéria-prima e desvio de datas: formulação e solução heurística.,,2019-03-20
10.1016/J.OMEGA.2017.05.004,Two machine scheduling subject to arbitrary machine availability constraint,,2017-03-20
10.5772/intechopen.89694,Approximation for Scheduling on Parallel Machines with Fixed Jobs or Unavailability Periods,,2012-03-20
10.1007/S10951-017-0551-Z,Parallel machine makespan minimization subject to machine availability and total completion time constraints,,2011-03-20
10.1111/ITOR.12589,Absolute bounds of list algorithms for parallel machines scheduling with unavailability periods,,2019-03-20
10.1007/978-3-642-29952-0_28,Online Makespan Scheduling of Linear Deteriorating Jobs on Parallel Machines,,2011-03-20
10.1016/j.camwa.2008.11.008,Scheduling a maintenance activity to minimize total weighted completion-time,,2017-03-20
10.1007/s10951-016-0475-z,High-multiplicity scheduling on one machine with forbidden start and completion times,,2017-03-20
10.1155/2014/547573,Best Possible Approximation Algorithms for Single Machine Scheduling with Increasing Linear Maintenance Durations,,2011-03-20
10.1007/S00170-014-6342-1,Minimization of makespan for the single batch-processing machine scheduling problem with considering aging effect and multi-maintenance activities,,2013-03-20
10.1080/00207721.2014.900137,Two-machine flow shop scheduling integrated with preventive maintenance planning,,2020-03-20
10.1007/s10878-007-9102-4,Approximation algorithms for the makespan minimization with positive tails on a single machine with a fixed non-availability interval,,2012-03-20
10.1016/j.cie.2016.03.024,Minimizing tardiness and maintenance costs in flow shop scheduling by a lower-bound-based GA,,2015-03-20
10.1145/2229163.2229171,Tight approximation algorithms for scheduling with fixed jobs and nonavailability,,2017-03-20
10.1016/j.ejor.2006.11.027,Parallel machine scheduling with machine availability and eligibility constraints,,2011-03-20
10.1016/S0377-2217(02)00760-9,Scheduling multiprocessor tasks on parallel processors with limited availability,,2016-03-20
10.1016/S0020-0190(01)00181-8,Heuristics for two-machine no-wait flowshop scheduling with an availability constraint,,2013-03-20
10.1109/COMMANTEL.2013.6482427,An MILP-based makespan minimization model for single-machine scheduling problem with splitable jobs and availability constraints,,2017-03-20
10.1007/s10288-008-0084-6,Operator non-availability periods,,
10.1007/978-3-319-28448-4_1,Competitive Analysis of Task Scheduling Algorithms on a Fault-Prone Machine and the Impact of Resource Augmentation,,2011-03-20
10.1109/CoDIT.2014.6996908,An iterative lower bound algorithm for the single-machine scheduling problem under a non-availability constraint for maximum delivery time minimization,,2016-03-20
10.1016/j.cie.2012.04.020,A minimum-cost network flow approach to preemptive parallel-machine scheduling,,2019-03-20
10.1007/s10951-011-0248-7,Scheduling flexible maintenance activities subject to job-dependent machine deterioration,,2019-03-20
10.1080/00207543.2013.849825,Variable very large neighbourhood algorithms for truck sequencing at transshipment terminals,,2016-03-20
10.1007/978-3-642-39206-1_63,Dual Techniques for Scheduling on a Machine with Varying Speed,,2014-03-20
10.1016/J.IJPE.2014.12.001,A heuristic for scheduling jobs on two identical parallel machines with a machine availability constraint,,2015-03-20
10.1007/s10951-010-0182-0,Scheduling jobs under increasing linear machine maintenance time,,2012-03-20
10.1016/j.disopt.2010.04.003,Scheduling on same-speed processors with at most one downtime on each machine,,2016-03-20
10.1007/S00170-006-0810-1,Optimal parallel machines scheduling with machine availability and eligibility constraints,,2019-03-20
10.15439/2016F447,Minimizing total completion time in flowshop with availability constraint on the first machine,,2018-03-20
10.1016/j.ress.2015.09.017,Optimizing production and imperfect preventive maintenance planning's integration in failure-prone manufacturing systems,,2017-03-20
10.1007/978-3-642-22577-2_42,Self-Configurable Scheduling Algorithm for Heterogeneous Computing Systems,,2011-03-20
10.1111/j.1475-3995.2006.00533.x,Optimality of Jackson's permutations with respect to limited machine availability,,2014-03-20
10.1007/978-1-4614-3600-3_12,Planning Production on an Unreliable Machine for Multiple Items Subject to Stochastic Demand,,2015-03-20
10.1109/IPDPS.2017.105,Fault-Tolerant Online Packet Scheduling on Parallel Channels,,2016-03-20
10.1016/j.disopt.2014.10.001,Scheduling on uniform processors with at most one downtime on each machine,,2020-03-20
10.1109/ACCESS.2019.2899926,Off-Line Time Aware Scheduling of Bag-of-Tasks on Heterogeneous Distributed System,,2013-03-20
10.3923/ITJ.2008.580.589,Minimizing Maximum Tardiness in Single Computer Numerical Control Machine Scheduling with Tool Changes,,2019-03-20
10.1051/RO:2002008,Scheduling jobs in open shops with limited machine availability,,2019-03-20
10.1007/s10951-015-0416-2,A two-stage coupled algorithm for an integrated maintenance planning and flowshop scheduling problem with deteriorating machines,,2018-03-20
10.1007/978-3-319-00795-3_63,Multiprocessor Scheduling with Availability Constraints,,2017-03-20
10.1016/j.cie.2008.06.003,Heuristic algorithms for two-machine flowshop with availability constraints,,2019-03-20
10.1057/jors.2009.2,Fifty years of scheduling: a survey of milestones,,2015-03-20
10.4028/www.scientific.net/AMM.760.181,Bidirectional Load Planning Procedure for Job-Shops with Availability Time-Windows for Specific Machines,,2013-03-20
10.3934/JIMO.2012.8.271,Approximation schemes for scheduling a maintenance and linear deteriorating jobs,,2016-03-20
10.1016/j.ipl.2008.03.018,Online scheduling on semi-related machines,,2017-03-20
10.1016/j.cor.2008.12.018,Scheduling permutation flowshops with initial availability constraint: Analysis of solutions and constructive heuristics,,2014-03-20
10.18502/KEG.V3I7.3070,Scheduling in Cloud Computing Environment,,2012-03-20
10.1080/02522667.2009.10699933,Scheduling jobs with service level requirements on parallel machines under availability and eligibility constraints,,2019-03-20
10.1016/j.cie.2020.106942,Energy-aware operations management for flow shops under TOU electricity tariff,,2018-03-20
10.12783/dtcse/mso2018/20500,Scheduling with Proportional Linear Deteriorating and a Maintenance Activity,,2015-03-20
10.1016/j.cor.2005.05.003,Heuristics for two-machine flowshop scheduling with setup times and an availability constraint,,2011-03-20
10.2516/OGST/2013109,Integration of an Informatics System in a High Throughput Experimentation. Description of a Global Framework Illustrated Through Several Examples,,2014-03-20
10.1016/j.ipl.2004.03.004,An improved approximation algorithm for two-machine flow shop scheduling with an availability constraint,,2017-03-20
10.1007/s10951-012-0269-x,Single machine scheduling with small operator-non-availability periods,,2017-03-20
10.1002/NAV.10118,Two-machine flow shop no-wait scheduling with a nonavailability interval,,2018-03-20
10.1057/jors.2009.5,Scheduling a deteriorating maintenance activity on a single machine,,2014-03-20
10.1007/s10479-012-1132-3,Solving an integrated job-shop problem with human resource constraints,,
10.1007/s12652-020-02162-0,Resolution for bounded-splitting jobs scheduling problem on a single machine in available time-windows,,2012-03-20
10.1007/978-3-540-48413-4_27,Scheduling with Unexpected Machine Breakdowns,,2018-03-20
10.1016/S0305-0483(01)00048-2,Heuristic algorithms for the two-machine flowshop with limited machine availability ☆,,2017-03-20
10.1016/j.cor.2007.10.013,Approximation results for flow shop scheduling problems with machine availability constraints,,2011-03-20
10.2139/ssrn.1586322,Variable Very Large Neighborhood Algorithms for Truck Sequencing at Transshipment Terminals,,2016-03-20
10.1007/S13272-011-0031-7,Balancing controller workload within a sectorless ATM concept,,2019-03-20
10.19026/rjaset.11.2134,An Effective Meta-Heuristic Algorithm for Solving Multi-Criteria Job-Shop Scheduling Problem with Maintenance Activities,,2014-03-20
10.1142/S0217595911003119,Online and Semi-Online Scheduling on capacitated Two-Parallel Machines,,2015-03-20
10.1002/NAV.20122,Polynomial‐time approximation schemes for two‐machine open shop scheduling with nonavailability constraints,,2019-03-20
10.1080/0951192X.2015.1130247,A hybrid genetic algorithm for non-permutation flow shop scheduling problems with unavailability constraints,,2015-03-20
10.1142/S0217595912500194,Single-Machine Scheduling with Proportionally deteriorating Jobs subject to Availability Constraints,,2011-03-20
10.1016/j.ejor.2014.07.044,Evaluation of the expected makespan of a set of non-resumable jobs on parallel machines with stochastic failures,,2016-03-20
10.4028/www.scientific.net/JERA.39.170,Joint Scheduling of Jobs and Variable Maintenance Activities in the Flowshop Sequencing Problems: Review  Classification and Opportunities,,2011-03-20
10.1007/s00236-020-00370-x,Watson–Crick quantum finite automata,,2019-03-20
10.1007/978-3-319-25703-7,Understanding Control Flow,,2011-03-20
10.1002/cpe.3263,High‐performance N‐thread software solutions for mutual exclusion,,2014-03-20
10.1109/ITAIC.2014.7065010,Formalization of mutual exclusion algorithms in N-labeled calculus,,2015-03-20
10.1007/s00165-016-0364-4,Correctness and concurrent complexity of the Black-White Bakery Algorithm,,2016-03-20
10.1016/j.scico.2015.01.001,Mutual exclusion by four shared bits with not more than quadratic complexity,,2015-03-20
10.1016/j.cor.2010.07.009,Tree-decomposition based heuristics for the two-dimensional bin packing problem with conflicts,,2016-03-20
10.1109/TASE.2017.2654423,Safety-Level Aware Bin-Packing Heuristic for Automatic Assignment of Power Plants Control Functions,,2016-03-20
10.1109/CLEI.2013.6670612,Approaches for the 2D 0-1 knapsack problem with conflict graphs,,2015-03-20
10.2298/PIM1307095S,A NEW NONLINEAR MODEL FOR THE TWO-DIMENSIONAL RECTANGLE PACKING PROBLEM,,2015-03-20
10.1016/j.cie.2017.01.015,Two-dimensional Disjunctively Constrained Knapsack Problem: Heuristic and exact approaches,,2013-03-20
10.1051/ro/2016049,Probabilistic Tabu search with multiple neighborhoods for the Disjunctively Constrained Knapsack Problem,,2018-03-20
10.7155/jgaa.00186,The Knapsack Problem with Conflict Graphs,,2016-03-20
10.1016/J.IFACOL.2015.06.132,Safety-Level Aware Bin-Packing Approach for Control Functions Assignment,,2013-03-20
10.1007/s10100-012-0282-3,A hybrid algorithm for constrained order packing,,2017-03-20
10.2298/YJOR1101093S,Solving the two-dimensional packing problem with m-M calculus,,2015-03-20
10.1080/00207543.2014.916826,A two-dimensional bin-packing problem with conflict penalties,,2015-03-20
10.1007/s10732-018-9372-2,A study on exponential-size neighborhoods for the bin packing problem with conflicts,,2020-03-20
10.1587/TRANSINF.E94.D.182,Adaptive Algorithms for Planar Convex Hull Problems,,2011-03-20
10.1007/978-3-642-14553-7_30,Adaptive Algorithms for Planar Convex Hull Problems,,2012-03-20
10.1145/1435375.1435389,Multipartite priority queues,,2011-03-20
10.1016/j.ipl.2015.05.003,Counting inversions adaptively,,2015-03-20
10.1007/978-3-642-45278-9_1,Weak Heaps and Friends: Recent Developments,,2012-03-20
10.1145/505241.505244,On a model of indexability and its bounds for range queries,,2019-03-20
10.1109/ICACT.2013.6710496,A multi level Grid File structure for mobile databases in GSM network,,2018-03-20
10.1016/j.tcs.2020.02.029,Deque automata  languages  and planar graph representations,,2011-03-20
10.1007/978-3-319-98654-8_20,Deque languages  automata and planar graphs,,2020-03-20
10.1016/j.tcs.2012.02.038,On the structure of linear apex NLC graph grammars,,2020-03-20
10.1007/11955757_32,Plug-and-Play Nondeterminacy,,2016-03-20
10.4108/icst.bict.2014.258046,Computational Power of Chemical Kinetics in Living Cells,,2018-03-20
10.1007/978-3-642-39718-9_4,Mobile Membranes: Computability and Complexity,,2017-03-20
10.1007/978-3-642-30870-3_63,On the Computability Power of Membrane Systems with Controlled Mobility,,2012-03-20
10.1109/TKDE.2003.1209012,External Sorting: Run Formation Revisited,,2012-03-20
10.1007/s00778-016-0426-5,External sorting on flash storage: reducing cell wearing and increasing efficiency by avoiding intermediate writes,,2014-03-20
10.1023/A:1008752528575,Workfile Disk Management for Concurrent Mergesorts in a Multiprocessor Database System,,2018-03-20
10.1016/j.parco.2003.05.003,Parallel bulk-loading of spatial data,,2013-03-20
10.1007/s10586-018-2860-1,Toward a new approach for sorting extremely large data files in the big data era,,2015-03-20
10.1007/s00450-011-0186-9,New algorithms for join and grouping operations,,2018-03-20
10.1007/978-3-662-48971-0_59,Run Generation Revisited: What Goes Up May or May Not Come Down,,2017-03-20
10.1007/978-3-642-38610-7_56,Modified Merge Sort Algorithm for Large Scale Data Sets,,2016-03-20
10.1109/IACS.2015.7103206,A multi-pass algorithm for sorting extremely large data files,,2017-03-20
10.1109/IPDPSW.2014.168,SupMR: Circumventing Disk and Memory Bandwidth Bottlenecks for Scale-up MapReduce,,2015-03-20
10.1201/9781584888239-C3,Sorting and order statistics,,2018-03-20
10.1109/ICDE.2010.5447894,Optimized query evaluation using cooperative sorts,,2014-03-20
10.1155/2018/8679579,Fully Flexible Parallel Merge Sort for Multicore Architectures,,2012-03-20
10.1007/978-3-319-46254-7_27,Novel Recursive Fast Sort Algorithm,,2011-03-20
10.1145/1132960.1132964,Implementing sorting in database systems,,2020-03-20
10.1007/BF03325109,Run Placement Policies for Concurrent Mergesorts Using Parallel Prefetching,,2017-03-20
10.1007/s00778-011-0251-9,Sort-sharing-aware query processing,,2011-03-20
10.1093/comjnl/bxr051,External Sorting on Flash Memory Via Natural Page Run Generation,,2011-03-20
10.3390/sym9090176,Parallelization of Modified Merge Sort Algorithm,,2012-03-20
10.1016/j.is.2006.04.002,Mining association rules in very large clustered domains,,2018-03-20
10.1007/s00224-002-1031-0,A Simple and Efficient Parallel Disk Mergesort,,2014-03-20
10.4213/DM155,Моделирование схем из функциональных элементов на универсальной машине Тьюринга@@@Modeling circuits consisting of functional elements on a universal Turing machine,,2011-03-20
10.1016/j.ipl.2006.06.008,The complexity of depth-3 circuits computing symmetric Boolean functions,,2016-03-20
10.1016/j.artint.2005.01.006,The complexity of contract negotiation,,2015-03-20
10.1103/RevModPhys.74.347,Information and computation: Classical and quantum aspects,,2017-03-20
10.1007/s10458-013-9224-2,Computational complexity and approximability of social welfare optimization in multiagent resource allocation,,2018-03-20
10.1515/1569392031905557,Simulation of circuits of functional elements by the universal Turing machine,,2020-03-20
10.1017/cbo9780511780448.014,Circuit Complexity,,2014-03-20
10.1016/S0304-3975(03)00054-9,On the simulation of quantum turing machines,,2019-03-20
10.3724/SP.J.1001.2010.03671,Cryptographic Properties of Several Classes of Rotation Symmetric Boolean Functions: Cryptographic Properties of Several Classes of Rotation Symmetric Boolean Functions,,2015-03-20
10.1145/602220.602223,Cosmological lower bound on the circuit complexity of a small problem in logic,,2012-03-20
10.1038/s41534-019-0156-9,The computational landscape of general physical theories,,2016-03-20
10.1016/J.IC.2014.04.001,Oblivious two-way finite automata: Decidability and complexity,,2012-03-20
10.1145/1283920.1283938,An overview of computational complexity,,2011-03-20
10.1016/j.artint.2004.04.002,On the computational complexity of qualitative coalitional games,,2015-03-20
10.1023/A:1022941621273,Explanation by Computer Simulation in Cognitive Science,,2011-03-20
10.1016/j.tcs.2008.01.031,The complexity of deciding reachability properties of distributed negotiation schemes,,2012-03-20
10.1016/j.tcs.2010.08.024,Complexity of multi-head finite automata: Origins and directions,,2013-03-20
10.1108/03684920810863363,Systemic yoyo structure in human thoughts and the fourth crisis in mathematics,,2017-03-20
10.1016/j.tcs.2008.04.007,On the decidability and complexity of the structural congruence for beta-binders,,2012-03-20
10.1016/j.ic.2008.11.006,Relating state-based and process-based concurrency through linear logic (full-version),,2018-03-20
10.1016/j.entcs.2007.05.014,The Decidability of the Structural Congruence for Beta-binders,,2014-03-20
10.1016/j.entcs.2006.05.043,Relating State-Based and Process-Based Concurrency through Linear Logic,,2011-03-20
10.1016/j.ipl.2006.08.001,An exercise in structural congruence,,2017-03-20
10.4230/LIPIcs.RTA.2013.255,Algorithms for Extended Alpha-Equivalence and Complexity,,2011-03-20
10.4230/OASIcs.WPTE.2015.31,Observing Success in the Pi-Calculus,,2017-03-20
10.1108/03684920810863372,Descriptive definitions of potential and actual infinities,,2016-03-20
10.1016/J.JLAMP.2015.04.002,A calculus of quality for robustness against unreliable communication,,2019-03-20
10.1007/s00037-005-0202-1,Languages to diagonalize against advice classes,,2011-03-20
10.1007/s00037-003-0175-x,Towards proving strong direct product theorems,,2018-03-20
10.1109/IPDPSW.2010.5470754,Virtual area management: Multitasking on dynamically partially reconfigurable devices,,2020-03-20
10.1201/9781420011012,Adversarial Reasoning: Computational Approaches to Reading the Opponent's Mind,,2011-03-20
10.22215/etd/2018-12856,Optimal Scheduling of Random Flexible Demands in Smart Grid,,2013-03-20
10.1109/ICC.2013.6654919,Asymptotic convex optimization for packing random malleable demands in smart grid,,2020-03-20
10.1016/j.cag.2016.05.008,Construction with physical version of quad-edge data structures,,2020-03-20
10.7936/K7V69GMB,Development of Atomistic Potentials for Silicate Materials and Coarse-Grained Simulation of Self-Assembly at Surfaces,,2012-03-20
10.3233/FI-2016-1454,True Concurrent Equivalences in Time Petri Nets,,2017-03-20
10.1142/S0218843012400035,Business Process Model Abstraction Based on Synthesis from Well-Structured Behavioral Profiles,,2016-03-20
10.1007/978-3-319-89366-2_9,Automata for True Concurrency Properties,,2017-03-20
10.1007/978-3-030-51831-8_7,Interleaving vs True Concurrency: Some Instructive Security Examples,,2015-03-20
10.1007/978-3-642-32885-5_26,Isotactics as a Foundation for Alignment and Abstraction of Behavioral Models,,2013-03-20
10.1007/978-3-642-17358-5_15,Aggregate Quality of Service Computation for Composite Services,,2012-03-20
10.1016/j.jlamp.2015.10.004,Reduction of event structures under history preserving bisimulation,,2015-03-20
10.1016/j.entcs.2013.09.012,History-Preserving Bisimilarity for Higher-Dimensional Automata via Open Maps,,2019-03-20
10.7148/2013-0544,Maximality Semantic For Recursive Petri Nets,,2012-03-20
10.1016/j.entcs.2007.04.013,Matching of Bigraphs,,2017-03-20
10.1007/978-3-662-54458-7_24,Local Model Checking in a Logic for True Concurrency,,2014-03-20
10.1016/j.entcs.2007.04.016,Adhesive DPO Parallelism for Monic Matches,,2020-03-20
10.14236/EWIC/VECOS2008.1,Aggregation of transitions in marking graph generation based on maximality semantics for petri nets,,2018-03-20
10.1007/978-3-642-36926-1_19,On Structured Workflow Modelling,,2016-03-20
10.1016/j.tcs.2018.01.005,Interleaving isotactics - An equivalence notion on behaviour abstractions,,2020-03-20
10.1016/j.jlamp.2017.11.005,Verification of finite-state machines: A distributed approach,,2018-03-20
10.1007/978-3-319-96154-5_18,Toward Distributed Computability Theory,,2013-03-20
10.2168/LMCS-9(4:13)2013,Avoiding Shared Clocks in Networks of Timed Automata,,2014-03-20
10.1016/j.ic.2009.10.007,Symmetries  local names and dynamic (de)-allocation of names,,2019-03-20
10.1016/j.ic.2020.104603,Team equivalences for finite-state machines with silent moves,,2016-03-20
10.4018/IJATS.2015040104,Hierarchical Design Method for Multi-Agent Systems,,2016-03-20
10.1016/j.entcs.2004.11.026,On the Expressiveness of Higher Dimensional Automata: (Extended Abstract),,2014-03-20
10.1007/s00236-020-00377-4,Team bisimilarity  and its associated modal logic  for BPP nets,,2011-03-20
10.1023/A:1012758417962,Compositional Petri Net Approach to the Development of Concurrent and Distributed Systems,,2012-03-20
10.1007/978-3-642-32940-1_9,Avoiding Shared Clocks in Networks of Timed Automata,,2013-03-20
10.1109/AICCSA.2007.370867,A Formal Approach for Functional and Structural Test Case Generation in Multi-Agent Systems,,2012-03-20
10.1145/2629638,A Logic for True Concurrency,,2014-03-20
10.1007/BF01178382,S-invariant analysis of general recursive Petri boxex,,2017-03-20
10.1007/978-3-030-31175-9_2,Axiomatizing Team Equivalence for Finite-State Machines,,2019-03-20
10.1007/978-3-642-15618-2_20,Structuring Acyclic Process Models,,2013-03-20
10.1007/978-3-540-73196-2_10,New Bisimulation Semantics for Distributed Systems,,2019-03-20
10.1016/j.jss.2012.03.005,Generalized aggregate Quality of Service computation for composite services,,2018-03-20
10.1016/j.tcs.2006.02.001,Petri net reactive modules,,2020-03-20
10.1007/BF00264471,Iterated deterministic substitution,,2018-03-20
10.3724/SP.J.1001.2009.00193,Research on Materialized View Selection: Research on Materialized View Selection,,2014-03-20
10.1561/1900000020,Materialized Views,,2014-03-20
10.12681/eadd/30321,Query optimization under bag and bag-set semantics for multiple heterogeneous data sources,,2018-03-20
10.14778/2732977.2733003,Optimal Security-Aware Query Processing,,2020-03-20
10.3929/ethz-b-000238984,Formal Foundations for Access and Inference Control in Databases,,2012-03-20
10.1016/j.is.2014.01.002,On solving efficiently the view selection problem under bag and bag-set semantics,,2018-03-20
10.1007/978-3-642-03422-0_2,On Solving Efficiently the View Selection Problem under Bag-Semantics,,2020-03-20
10.1007/978-0-387-39940-9_3026,Materialized Views,,2018-03-20
10.1007/BF00289617,WCS-analysis of the Context-Sensitive,,2012-03-20
10.1017/S0963548302005138,Quickselect and the Dickman Function,,2013-03-20
10.1007/BF02679613,Transitional behaviors of the average cost of quicksort with median-of-(2t + 1),,2017-03-20
10.1007/978-3-540-75101-4_26,Achieving Highly Reliable Embedded Software: An Empirical Evaluation of Different Approaches,,2017-03-20
10.2168/LMCS-3(2:4)2007,Transforming structures by set interpretations,,2020-03-20
10.1007/11560647_26,Revisiting Failure Detection and Consensus in Omission Failure Environments,,2016-03-20
10.1007/978-3-642-03816-7_35,The Longest Path Problem Is Polynomial on Interval Graphs,,2020-03-20
10.1007/978-3-540-73420-8_75,Unranked Tree Automata with Sibling Equalities and Disequalities,,2016-03-20
10.1007/11672142_46,A Faster Algorithm for the Steiner Tree Problem,,2020-03-20
10.1007/978-3-540-71209-1_8,Counterexamples in Probabilistic Model Checking,,2020-03-20
10.1007/11795490_7,Optimal Randomized Fair Exchange with Secret Shared Coins,,2019-03-20
10.1145/1073814.1073868,Adaptive routing with stale information,,2019-03-20
10.1007/11734666_9,Tampering with Motes: Real-World Physical Attacks on Wireless Sensor Networks,,2019-03-20
10.1007/s13218-010-0015-5,Static Termination Analysis for Prolog Using Term Rewriting and SAT Solving,,2011-03-20
10.1007/11577327_9,Code Stabilization,,2017-03-20
10.1016/j.tcs.2007.02.034,Decision-making based on approximate and smoothed Pareto curves,,2017-03-20
10.1007/978-3-540-78929-1_18,Compositional Modeling and Minimization of Time-Inhomogeneous Markov Chains,,2020-03-20
10.1007/978-3-540-71209-1_33,Replaying Play In and Play Out: Synthesis of Design Models from Scenarios by Learning,,2015-03-20
10.1007/978-3-642-04368-0_16,Compositional Abstraction for Stochastic Systems,,2016-03-20
10.1007/11751540_94,Tangent-Linear Models by Augmented LL-Parsers,,2011-03-20
10.1007/11559306_12,Proving and Disproving Termination of Higher-Order Functions,,2019-03-20
10.1007/11506881_4,A Pointillist Approach for Comparing Honeypots,,2017-03-20
10.1109/LICS.2009.21,Quantitative Model Checking of Continuous-Time Markov Chains Against Timed Automata Specifications,,2017-03-20
10.1007/11917496_6,Divide-and-Color,,2017-03-20
10.1007/11555827_19,Botnet Tracking: Exploring a Root-Cause Methodology to Prevent Distributed Denial-of-Service Attacks,,2020-03-20
10.1007/978-3-642-03409-1_17,Parametrized Regular Infinite Games and Higher-Order Pushdown Strategies,,2018-03-20
10.2168/LMCS-7(1:12)2011,Quantitative Model Checking of Continuous-Time Markov Chains Against Timed Automata Specifications,,2014-03-20
10.1109/LICS.2017.8005069,Foundation for a series of efficient simulation algorithms,,2015-03-20
10.1007/978-1-4614-8274-1_2,A Heuristic Framework for Designing and Exploring Deterministic Routing Algorithm for NoCs,,2018-03-20
10.1117/1.JMM.15.4.043506,Design method and algorithms for directed self-assembly aware via layout decomposition in sub-7 nm circuits,,2018-03-20
10.1080/18756891.2012.718157,Evolutionary Swarm based algorithms to minimise the link cost in Communication Networks,,2012-03-20
10.1007/s00521-016-2606-z,A Benders decomposition for the location-allocation and scheduling model in a healthcare system regarding robust optimization,,2012-03-20
10.1007/978-3-319-03780-6,Combinatorial Optimization and Applications,,2012-03-20
10.1007/978-3-319-03780-6_12,Using Basis Dependence Distance Vectors to Calculate the Transitive Closure of Dependence Relations by Means of the Floyd-Warshall Algorithm,,2014-03-20
10.1007/978-3-662-55862-1_7,Stubborn Set Intuition Explained,,2014-03-20
10.1145/1989323.1989419,A memory efficient reachability data structure through bit vector compression,,2012-03-20
10.1145/1328438.1328460,Subcubic algorithms for recursive state machines,,2018-03-20
10.1145/989393.989396,Efficient computation of LALR(1) look-ahead sets,,2013-03-20
10.1007/BF02242140,An improved transitive closure algorithm,,2015-03-20
10.1007/BF02252956,Computing transitive closure on systolic arrays of fixed size,,2013-03-20
10.1109/TSE.2002.1010062,Incremental Integration Testing of Concurrent Programs,,2019-03-20
10.1007/978-3-319-45994-3_7,Safety Property-Driven Stubborn Sets,,2016-03-20
10.1007/978-3-642-00434-6_6,Parse Table Composition,,2017-03-20
10.3233/FI-2016-1319,Constructing Minimal Coverability Sets,,2018-03-20
10.1007/978-3-319-32582-8_16,Fair Testing and Stubborn Sets,,2020-03-20
10.1007/978-3-319-51046-0_13,More Stubborn Set Methods for Process Algebras,,2014-03-20
10.1007/BF00872109,An efficient database transitive closure algorithm,,2015-03-20
10.1109/IV.2003.1217981,A new algorithm for transitive closures and computation of recursion in relational databases,,2013-03-20
10.1145/1141277.1141385,On the transitive closure representation and adjustable compression,,2011-03-20
10.1007/978-3-319-67089-8_12,Stubborn Sets with Frozen Actions,,2016-03-20
10.1007/s10878-014-9740-2,Using basis dependence distance vectors in the modified Floyd–Warshall algorithm,,2011-03-20
10.1109/ACSD.2015.14,Stop It  and Be Stubborn!,,2015-03-20
10.1007/978-3-540-24730-2_18,Tarjan's Algorithm Makes On-the-Fly LTL Verification More Efficient,,2013-03-20
10.1145/3012279,Stop It  and Be Stubborn!,,2017-03-20
10.4204/EPTCS.115.1,On a New Notion of Partial Refinement,,2011-03-20
10.1016/S1571-0661(04)81006-5,Formal Semantics for Program Paths,,2012-03-20
10.1145/1363686.1363930,MDSD light for ERP,,2014-03-20
10.1016/j.datak.2010.03.003,An integer programming based approach for verification and diagnosis of workflows,,2017-03-20
10.22459/isftrr.11.2007.05,Extending the Scope of Representation Theory: A Review and Proposed Research Model,,2015-03-20
10.5220/0001709703510359,Quality Improvement of Workflow Diagrams Based on Passback Flow Consistency,,2011-03-20
10.1016/J.INFSOF.2008.02.006,Semantics and analysis of business process models in BPMN,,2017-03-20
10.11606/T.12.2006.TDE-14032007-172551,Medição de desempenho do gerenciamento de processos de negócio - BPM no PNAFE: uma proposta de modelo,,2016-03-20
10.1007/11841760_24,Experiences in Enhancing Existing BPM Tools with BPEL Import and Export,,2014-03-20
10.1080/17517575.2015.1053415,Enterprise Pattern: integrating the business process into a unified enterprise model of modern service company,,2011-03-20
10.1007/978-3-319-65000-5_8,Optimized Execution of Business Processes on Blockchain,,2015-03-20
10.1007/978-3-642-32524-3_16,Towards Characterizing Distributed Complex Situation Assessment as Workflows in Loosely Coupled Systems,,2012-03-20
10.1007/11799511_24,Towards a Model of Provenance and User Views in Scientific Workflows,,2020-03-20
10.2514/6.2006-5741,Modelling of Automation Service,,2012-03-20
10.1007/S10796-017-9823-6,An Empirical Review of the Connection Between Model Viewer Characteristics and the Comprehension of Conceptual Process Models,,2017-03-20
10.1007/978-3-540-69507-3_48,A Language for Reliable Service Composition,,2018-03-20
10.1109/ICIW.2007.71,Web Service Composition Approaches: From Industrial Standards to Formal Methods,,2017-03-20
10.1007/978-3-540-69534-9_2,Assigning Ontology-Based Semantics to Process Models: The Case of Petri Nets,,2020-03-20
10.1515/sh-2015-0019,The Swarm Computing Approach to Business Intelligence,,2015-03-20
10.1016/j.eswa.2017.03.047,Aligning Real Process Executions and Prescriptive Process Models through Automated Planning,,2017-03-20
10.1109/ECOWS.2009.17,An Analysis of Windows Workflow's Control-Flow Expressiveness,,2017-03-20
10.1007/978-3-642-15865-0_8,Business Process Modelling and Workflow Design,,2018-03-20
10.1007/978-3-642-13675-7_6,Efficient Computation of Causal Behavioural Profiles Using Structural Decomposition,,2013-03-20
10.1007/978-3-642-13051-9_13,An Interperspective-Oriented Business Process Modeling Approach,,2011-03-20
10.1016/j.is.2020.101563,Scenario-based process querying for compliance  reuse  and standardization,,2015-03-20
10.1007/978-3-540-27755-2_1,Business Process Management Demystified: A Tutorial on Models  Systems and Standards for Workflow Management,,2017-03-20
10.1007/978-3-540-75183-0_29,Semantic Analysis of Flow Patterns in Business Process Modeling,,2012-03-20
10.1007/11767138_28,Translating Standard Process Models to BPEL,,2017-03-20
10.3929/ETHZ-A-006050258,Automatic transformation from graphical process models to executable code,,2013-03-20
10.17705/1JAIS.00193,Business Process Modeling- A Comparative Analysis,,2012-03-20
10.1007/11596141_37,WofBPEL: A Tool for Automated Analysis of BPEL Processes,,2017-03-20
10.1007/0-387-23529-9_20,Verification of Business Process Designs Using Maps,,2016-03-20
10.1109/APSEC.2011.49,An Automated Analysis of Errors for BPM Processes Modeled Using an In-house Infosys Tool,,2020-03-20
10.4108/ICST.AUTONOMICS2007.2188,Resource disconnection management in MANET driven by process time plan,,2015-03-20
10.1007/978-3-642-16298-5_1,Unraveling Unstructured Process Models,,2012-03-20
10.1007/978-3-642-17358-5_1,Business Process Model Abstraction Based on Behavioral Profiles,,2017-03-20
10.1007/978-3-319-46295-0_30,A Formal Guidance Approach for Correct Process Configuration,,2020-03-20
10.1007/978-3-030-62522-1_13,A Code-Efficient Process Scripting Language,,2014-03-20
10.1007/978-3-642-15618-2_7,How to Implement a Theory of Correctness in the Area of Business Processes and Services,,2013-03-20
10.1016/j.future.2008.09.002,Towards a general model of the multi-criteria workflow scheduling on the grid,,2012-03-20
10.1111/J.1474-919X.1860.TB06351.X,An Ontology-Based Evaluation of Process Modeling with Petri Nets,,2017-03-20
10.21427/D7DG61,A Generic Approach and Framework for Managing Complex Information,,2016-03-20
10.1007/978-3-319-91268-4_16,Markings in Perpetual Free-Choice Nets Are Fully Characterized by Their Enabled Transitions,,2018-03-20
10.1007/978-3-662-49674-9_27,Diagnostic Information for Control-Flow Analysis of Workflow Graphs (a.k.a. Free-Choice Workflow Nets),,2020-03-20
10.1007/978-3-540-30197-4_40,A Flow-Through Workflow Control Scheme for BGP/MPLS VPN Service Provision,,2020-03-20
10.5220/0004420602580266,Business Process Modeling Languages Supporting Collaborative Networks,,2016-03-20
10.15439/2016F324,Towards rule-based pattern perspective for BPMN 2.0 business process models,,2012-03-20
10.17705/1CAIS.02048,Ontology- Versus Pattern-Based Evaluation of Process Modeling Languages: A Comparison,,2020-03-20
10.1007/978-3-319-08260-8_5,Visualization of Successor Relations in Business Process Models,,2017-03-20
10.4018/978-1-4666-8841-4.CH007,Rediscovering Business Processes: Definitions  Patterns  and Modelling Approaches,,2020-03-20
10.1007/978-3-319-06410-9_47,Diagnosing Industrial Business Processes: Early Experiences,,2011-03-20
10.1109/ICIEEM.2011.6035268,Research of technologies on discreet factory construction general contract project management,,2015-03-20
10.1007/978-3-319-89963-3,Tools and Algorithms for the Construction and Analysis of Systems,,2018-03-20
10.1016/j.jss.2015.11.024,Run-based exception prediction for workflows,,2015-03-20
10.1007/978-3-540-30198-1_55,On the Application of WF-Nets for Checking Hybrid IDEF0-IDEF3 Business Process Models,,2013-03-20
10.3233/FI-2011-614,Causal Behavioural Profiles - Efficient Computation  Applications  and Evaluation,,2013-03-20
10.1109/ICSEA.2008.46,Incremental Verification of Large ScaleWorkflows Based on Extended Correctness,,2016-03-20
10.1007/978-3-642-54807-9_14,A First Step towards a Compiler for Business Processes,,2011-03-20
10.1109/SCC.2016.33,An Empirical Analysis of Diagnosis of Industrial Business Processes at Sub-process Levels,,2013-03-20
10.1145/1377836.1377844,Task-based entailment constraints for basic workflow patterns,,2011-03-20
10.1109/TSC.2010.16,Dependability and Rollback Recovery for Composite Web Services,,2016-03-20
10.1057/ejis.2012.50,Empirical investigation of the usefulness of Gateway constructs in process models,,2014-03-20
10.1007/11560296_15,Design of an Object-Oriented Workflow Management System with Reusable and Fine-Grained Components,,2014-03-20
10.1145/1272996.1273028,Discrete control for safe execution of IT automation workflows,,2013-03-20
10.4236/SN.2014.31004,Simulating the Effect of Social Network Structure on Workflow Efficiency Performance,,2018-03-20
10.1007/978-3-642-12814-1_20,On the Cognitive Effectiveness of Routing Symbols in Process Modeling Languages,,2019-03-20
10.1016/j.entcs.2008.05.017,Merging Hierarchically-Structured Documents in Workflow Systems,,2013-03-20
10.1007/978-3-319-46397-1_24,Annotating and Mining for Effects of Processes,,2011-03-20
10.1007/978-3-642-00328-8_18,Business to IT Transformations Revisited,,2019-03-20
10.1007/978-3-030-27355-2_4,A SAT-Based Formal Approach for Verifying Business Process Configuration,,2018-03-20
10.1515/PIKO.2004.152,Dienstorientierte Kooperationsmuster in servicebasierten Grids,,2014-03-20
10.1145/1035167.1035201,A model for abstract process specification  verification and composition,,2017-03-20
10.20381/RUOR-3950,Integrating Business Process Management To Model Context In Healthcare: A Case Study Using Perioperative Processes,,2018-03-20
10.1007/s10270-013-0389-6,Querying process models by behavior inclusion,,2018-03-20
10.1109/ICWS.2016.66,An Event-B Based Approach for Ensuring Correct Configurable Business Processes,,2014-03-20
10.1007/978-3-642-40919-6_4,Process Prediction in Noisy Data Sets: A Case Study in a Dutch Hospital,,2011-03-20
10.6100/IR557134,Design and control of workflow processes: business process management for the service industry,,2013-03-20
10.1007/978-3-642-03848-8_19,Instantaneous Soundness Checking of Industrial Business Process Models,,2017-03-20
10.5120/1784-2462,A Formal Framework for Business Process Modeling,,2012-03-20
10.6100/IR653896,Configurable process models,,2018-03-20
10.1109/ICECT.2005.33,Cross enterprise business modeling with AC diagrams and workflow patterns,,2015-03-20
10.1016/j.dss.2011.12.013,Factors of process model comprehension - Findings from a series of experiments,,2014-03-20
10.1109/IPDPS.2006.1639510,Workflow fine-grained concurrency with automatic continuation,,2015-03-20
10.1145/1365562.1365594,Resource disconnection management in MANET driven by process time plan,,2015-03-20
10.17705/1CAIS.03409,Process Model Comprehension: The Effects of Cognitive Abilities  Learning Style  and Strategy,,2016-03-20
10.1016/j.scico.2011.12.003,A formal model for service-oriented interactions,,2016-03-20
10.1007/978-3-540-25975-6_12,Design and Implementation of the YAWL System,,2012-03-20
10.1016/j.is.2013.06.002,Configuration vs. adaptation for business process variant maintenance: An empirical study,,2012-03-20
10.1016/j.is.2004.02.002,YAWL: yet another workflow language,,2013-03-20
10.1016/S0169-023X(03)00066-1,Workflow mining: A survey of issues and approaches,,2012-03-20
10.1007/s10723-005-9013-5,Workflow Concepts of the Java CoG Kit,,2016-03-20
10.1007/978-3-540-25975-6_40,Cooperation of Processes through Message Level Agreement,,2015-03-20
10.1007/978-1-84882-691-5_7,Business Process Composition,,2013-03-20
10.20381/RUOR-13301,Aspect Oriented User Requirements Notation,,2016-03-20
10.1109/CEC.2009.32,Realising Dead Path Elimination in BPMN,,2020-03-20
10.4018/jwsr.2012100103,Generic and Specific Compatibility Criteria for Web Service Composition: Formal Abstraction and Modular Verification Approach1,,2016-03-20
10.1504/IJBPIM.2008.020973,On the transformation of control flow between block-oriented and graph-oriented process modelling languages,,2012-03-20
10.1007/978-3-642-00405-6_25,Workflow Modeling Using Stochastic Activity Networks,,2018-03-20
10.1109/ICSEA.2007.81,Using a process modeling language for the design and implementation of process-driven applications,,2013-03-20
10.4018/jdm.2010070101,Assigning Ontological Meaning to Workflow Nets,,2012-03-20
10.1109/SERVICES.2014.26,Towards a Service Pattern Model Supporting Quantitative Economic Analysis,,2011-03-20
10.1016/j.is.2009.03.009,Activity labeling in process modeling: Empirical insights and recommendations,,2014-03-20
10.1016/j.infsof.2008.08.005,Complexity metrics for Workflow nets,,2016-03-20
10.1007/978-3-319-89963-3_1,Computing the concurrency threshold of sound free-choice workflow nets,,2011-03-20
10.1007/978-981-15-1137-0_4,Secure Smart Contract Generation Based on Petri Nets,,2020-03-20
10.1007/b96393,Tools and Algorithms for the Construction and Analysis of Systems,,2011-03-20
10.3217/jucs-012-09-1385,Synthesis of Optimal Workflow Structure,,2014-03-20
10.5220/0001700702660270,Expressing Business Rules in BPMN,,2012-03-20
10.1007/s10618-016-0488-4,Explaining clusterings of process instances,,2020-03-20
10.1016/j.datak.2004.06.007,An integrated and collaborative framework for business design: A knowledge engineering approach,,2015-03-20
10.1007/978-3-642-15618-2_8,Deciding Behaviour Compatibility of Complex Correspondences between Process Models,,2011-03-20
10.1007/978-3-319-59466-8_15,Towards a Decision-Support System for Selecting the Appropriate Business Process Modeling Formalism: A Context-Aware Roadmap,,2016-03-20
10.1109/TSE.2010.96,Efficient Consistency Measurement Based on Behavioral Profiles of Process Models,,
10.1016/j.datak.2011.01.004,Analysis on demand: Instantaneous soundness checking of industrial business process models,,2020-03-20
10.1016/j.is.2013.12.004,The relationship between workflow graphs and free-choice workflow nets,,2014-03-20
10.1145/1555392.1555395,From business process models to process-oriented software systems,,2011-03-20
10.2991/ICEBI.2010.51,Towards approximate equivalences of workflow processes,,2020-03-20
10.1007/978-3-642-32885-5_12,The Difficulty of Replacing an Inclusive OR-Join,,2015-03-20
10.1007/3-540-44895-0_1,Business Process Management: A Survey,,2018-03-20
10.1109/TSC.2016.2594062,Towards Correct Cloud Resource Allocation in Business Processes,,2016-03-20
10.1109/SERVICES.2014.66,Designing a Contractual Choreography Language for Automating Cross-organizational Business Collaboration,,2019-03-20
10.5220/0003498900660075,Approach for Verifying Workflow Validity,,2013-03-20
10.1007/s10796-009-9164-1,Specification and verification of harmonized business-process collaborations,,2015-03-20
10.1007/978-3-540-27793-4_30,Web Supported Enactment of Petri-Net Based Workflows with XRL/Flower,,2012-03-20
10.1007/s00450-009-0059-7,"
 Surmounting BPM challenges: the YAWL story
",,2018-03-20
10.1007/3-540-36615-6,Design and Control of Workflow Processes: Business Process Management for the Service Industry,,2014-03-20
10.1016/j.dss.2012.10.037,A study on the effects of routing symbol design on process model comprehension,,2019-03-20
10.5220/0002438901020109,Key-Problem and Goal Driven Requirements Engineering - Which Complementarities for Manufacturing Information Systems?,,2017-03-20
10.5220/0004773700230032,Analysis and Evaluation of Business Process Modeling Adoption in Collaborative Networks,,2017-03-20
10.1002/0471741442.ch5,Process Modeling Using UML,,2015-03-20
10.3390/su11174738,Science Mapping of Tourist Mobility 1980–2019. Technological Advancements in the Collection of the Data for Tourist Traceability,,2016-03-20
10.1186/s13174-015-0023-7,eContractual choreography-language properties towards cross-organizational business collaboration,,2017-03-20
10.1155/2013/507984,Business Process Management: A Comprehensive Survey,,2020-03-20
10.2478/v10006-010-0044-0,Numbering action vertices in workflow graphs,,2014-03-20
10.1016/J.SCICO.2007.03.002,Formal semantics and analysis of control flow in WS-BPEL,,2020-03-20
10.15373/22501991/FEB2014/9,Enhancing Service Provider's Profitability and Determining the Frequency of Selection of Web Services for Composition Using Dynamic Programming Approach Computer Science,,2014-03-20
10.1016/j.eswa.2010.12.121,Structured design  consistency analysis and failure reasoning of business workflows with activity-control templates and causal ordering,,2015-03-20
10.1007/978-3-642-00899-3_5,newYAWL: Towards Workflow 2.0,,2012-03-20
10.1007/S11423-006-8807-X,E2ML: A Visual Language for the Design of Instruction,,2011-03-20
10.1007/978-3-030-03596-9_12,Explaining Non-compliance of Business Process Models Through Automated Planning,,2013-03-20
10.1007/s10270-018-0689-y,On leveraging the fruits of research efforts in the arena of business process modeling formalisms: a map-driven approach for decision making,,2013-03-20
10.1007/978-3-662-53401-4_11,A Formal Framework for Diagnostic Analysis for Errors of Business Processes,,2015-03-20
10.4018/978-1-60960-126-3.CH003,Ontological Evaluation of Scheer's Reference Model for Production Planning and Control Systems,,2013-03-20
10.1016/j.infsof.2006.11.004,Translating unstructured workflow processes to readable BPEL: Theory and implementation,,2011-03-20
10.1007/S00233-007-0713-Y,Some Decidability and Undecidability Results on Green's Relations for Automatic Monoids,,2020-03-20
10.1007/BF01213858,The problem of deciding confluence on a given congruence class is tractable for finite special string-rewriting systems,,2018-03-20
10.1007/BF01614148,Completing a finite special string-rewriting system on the congruence class of the empty word,,2017-03-20
10.1142/S0218196705002220,Complete Rewriting Systems For Codified Submonoids,,2012-03-20
10.1145/158511.158628,Graph types,,2013-03-20
10.1007/3-540-54572-7_8,Incremental Attribute Evaluation,,2017-03-20
10.7282/T3HT2SXD,Lower and upper bounds for incremental algorithms,,2015-03-20
10.1016/0304-3975(95)00079-8,On the Computational Complexity of Dynamic Graph Problems,,2012-03-20
10.1080/00207160.2012.688820,Globally deterministic CD-systems of stateless R-automata with window size 1,,2016-03-20
10.1007/978-3-642-38771-5_28,One-Way Multi-Head Finite Automata with Pebbles But No States,,2012-03-20
10.1007/978-3-642-31644-9_8,On CD-Systems of Stateless Deterministic Two-Phase RR(1)-Automata,,2013-03-20
10.1007/978-3-642-31623-4_18,An Infinite Hierarchy of Language Families Resulting from Stateless Pushdown Automata with Limited Pushdown Alphabets,,2016-03-20
10.1142/s0129054119500291,New Results on Vector and Homing Vector Automata,,2016-03-20
10.1007/978-3-642-22321-1_14,Δ-Clearing Restarting Automata and CFL \makebox{\sf CFL},,2016-03-20
10.1142/S0129054113500068,A Note on Limited Pushdown Alphabets in Stateless Deterministic Pushdown Automata,,2016-03-20
10.1007/978-3-662-53132-7_22,On Ordered RRWW-Automata,,2019-03-20
10.1142/S0129054113400212,On the Descriptional Complexity of the Window Size for Deleting Restarting Automata,,2013-03-20
10.1142/S0129054114400292,Stateless One-Way Multi-Head Finite Automata with Pebbles,,2015-03-20
10.1007/978-3-540-95891-8_33,On Stateless Deterministic Restarting Automata,,2017-03-20
10.1007/978-3-642-31606-7_22,On the Descriptional Complexity of the Window Size for Deterministic Restarting Automata,,2013-03-20
10.1515/mgr-2016-0022,Population potential within the urban environment and intra-urban railway network opportunities in Bratislava (Slovakia),,2013-03-20
10.1016/J.JLAMP.2020.100604,Relation algebras of Sugihara  Belnap  Meyer  and Church,,2014-03-20
10.2478/s11535-013-0148-7,Morphological and histochemical examination of male and female gonads in Homarus gammarus (L. 1758),,2020-03-20
10.2478/s11687-012-0008-z,Longidoridae and nepoviruses in Bulgaria and Slovenia,,2020-03-20
10.1016/J.FLUID.2009.03.003,UNIQUAC model for wax solution with pour point depressant,,2020-03-20
10.3182/20080706-5-KR-1001.01515,Reachability analysis of uncertain nonlinear systems using guaranteed set integration,,2015-03-20
10.1109/TCAD.2018.2857361,Formal Feature Interpretation of Hybrid Systems,,2015-03-20
10.1007/978-3-642-32759-9_22,Satellite Rendezvous and Conjunction Avoidance: Case Studies in Verification of Nonlinear Hybrid Systems,,2013-03-20
10.1016/J.ACTAASTRO.2009.10.033,A hybrid approach to robustness analyses of flight control laws in re-entry applications,,2011-03-20
10.1007/978-3-030-34968-4_2,Accelerating Parameter Synthesis Using Semi-algebraic Constraints,,2020-03-20
10.1109/RSP.2012.6380694,HySon: Set-based simulation of hybrid systems,,2013-03-20
10.2514/1.43113,Robustness Analysis for Terminal Phases of Reentry Flight,,2012-03-20
10.1002/9781118558188.CH7,Tools for the Analysis of Hybrid Models,,2015-03-20
10.1016/B978-0-12-803801-7.00012-2,Validation  Verification  and Formal Methods for Cyber-Physical Systems,,2013-03-20
10.1007/978-3-642-41010-9_2,HyRev: A Tool for the Automatic Generation of Real-Time Routines for Enabling Fail-Safe Control in a Class of Safety-Critical Embedded Systems Using Backwards Reachability Analysis,,2011-03-20
10.23919/ECC.2013.6669843,Verification of embedded control programs,,2013-03-20
10.4204/EPTCS.331.4,Enclosing the Sliding Surfaces of a Controlled Swing,,2014-03-20
10.20868/upm.thesis.47805,An Algorithmic Approach for Stability Verification of Hybrid Systems,,2019-03-20
10.1007/978-3-642-24372-1_15,A Hierarchical Approach for the Synthesis of Stabilizing Controllers for Hybrid Systems,,2017-03-20
10.29007/S3MQ,Modeling the Wind Turbine Benchmark with PWA Hybrid Automata,,2011-03-20
10.1007/s10796-016-9671-9,Two CEGAR-based approaches for the safety verification of PLC-controlled plants,,2011-03-20
10.1109/IROS.2009.5354467,Synthesis of output feedback control for motion planning based on LTL specifications,,2013-03-20
10.1109/TAC.2009.2028974,A Hybrid Bounding Method for Computing an Over-Approximation for the Reachable Set of Uncertain Nonlinear Systems,,2020-03-20
10.1177/0142331219895117,Hybrid modelling and predictive control of utility-scale variable-speed variable-pitch wind turbines,,2012-03-20
10.1007/978-3-642-02319-4_3,A Framework for Dynamical Intention in Hybrid Navigating Agents,,2013-03-20
10.23919/ACC.2019.8815373,Robust Optimization-Based Affine Abstractions for Uncertain Affine Dynamics,,2019-03-20
10.1007/978-3-642-31424-7_35,A Box-Based Distance between Regions for Guiding the Reachability Analysis of SpaceEx,,2017-03-20
10.1109/PECI.2012.6184587,Design verification methods for switching power converters,,
10.1007/978-3-642-03845-7_9,Computing Reachable States for Nonlinear Biological Models,,2011-03-20
10.3182/20090916-3-ES-3003.00028,Computing reachable sets for uncertain nonlinear hybrid systems using interval constraint propagation techniques,,2019-03-20
10.1007/978-3-642-33386-6_12,Reachability Analysis of Polynomial Systems Using Linear Programming Relaxations,,2013-03-20
10.1016/j.scico.2011.07.006,Exact and fully symbolic verification of linear hybrid automata with large discrete state spaces,,2018-03-20
10.1007/978-3-642-22110-1_30,SpaceEx: Scalable Verification of Hybrid Systems,,2012-03-20
10.14279/depositonce-2564,Analysis of Hierarchical Structures for Hybrid Control Systems,,2019-03-20
10.1109/TrustCom.2011.156,Safety Verification of Non-linear  Planar Proportional Control with Differential Inclusions,,2018-03-20
10.1109/TAC.2015.2422431,Stability Preserving Simulations and Bisimulations for Hybrid Systems,,2015-03-20
10.1007/978-3-642-04617-9_87,HieroMate: A Graphical Tool for Specification and Verification of Hierarchical Hybrid Automata,,2019-03-20
10.1109/TAC.2015.2511722,Automata Theory Meets Barrier Certificates: Temporal Logic Verification of Nonlinear Systems,,2019-03-20
10.1145/2968478.2968483,An algorithmic approach to global asymptotic stability verification of hybrid systems,,2017-03-20
10.1109/CCA.2016.7587948,Tutorial: Software tools for hybrid systems verification  transformation  and synthesis: C2E2  HyST  and TuLiP,,2013-03-20
10.1109/MEMCOD.2016.7797740,Formal feature analysis of hybrid automata,,2019-03-20
10.1109/EMSOFT.2015.7318258,Reachability of hybrid systems in space-time,,2015-03-20
10.1007/978-3-319-96145-3_24,Reachable Set Over-Approximation for Nonlinear Systems Using Piecewise Barrier Tubes,,2018-03-20
10.1007/978-3-642-38088-4_8,Enclosing Temporal Evolution of Dynamical Systems Using Numerical Methods,,2018-03-20
10.1109/TAC.2015.2491740,A Comprehensive Method for Reachability Analysis of Uncertain Nonlinear Hybrid Systems,,2016-03-20
10.1109/CDC.2018.8618714,Mesh-Based Affine Abstraction of Nonlinear Systems with Tighter Bounds,,2020-03-20
10.4233/uuid:47d557ea-9ff9-4851-883a-4ce5e943a8b7,Efficient wireless networked control: Towards practical event-triggered implementations,,2018-03-20
10.1109/CDC.2008.4738758,Motion planning for nonlinear systems using hybridizations and robust controllers on simplices,,2019-03-20
10.1007/978-3-319-67089-8_9,Distributed Control Synthesis Using Euler's Method,,
10.1109/ISORC.2019.00047,Linearization based Safety Verification of a Glucose Control Protocol,,2011-03-20
10.1109/RTSS.2016.011,Decomposed Reachability Analysis for Nonlinear Systems,,2014-03-20
10.1201/9781420067859-c13,Modeling  Verification and Testing using Timed and Hybrid Automata,,2013-03-20
10.1145/1967701.1967721,Hybridization domain construction using curvature estimation,,2014-03-20
10.1145/3302504.3311793,Facetal abstraction for non-linear dynamical systems based on δ-decidable SMT,,2012-03-20
10.14232/actacyb.24.3.2020.9,Characterizing Sliding Surfaces of Cyber-Physical Systems,,2013-03-20
10.1007/978-3-642-35524-0_4,On Approximative Reachability Analysis of Biochemical Dynamical Systems,,2016-03-20
10.1145/2883817.2883840,Hybridization for Stability Analysis of Switched Linear Systems,,2014-03-20
10.14418/wes01.1.593,Dynamical Systems-based Navigation: Modeling and Verification,,2013-03-20
10.14288/1.0052102,Projectagon-based reachability analysis for circuit-level formal verification,,2011-03-20
10.1109/SYNASC.2018.00020,Compositional Taylor Model Based Validated Integration,,2019-03-20
10.4204/EPTCS.140.4,Algorithmic Verification of Continuous and Hybrid Systems,,2020-03-20
10.1016/j.ejcon.2018.10.002,Decentralized Abstractions For Multi-Agent Systems Under Coupled Constraints,,2014-03-20
10.1007/978-3-030-28042-0_2,Reachability Analysis and Hybrid Systems Biology - In Memoriam Oded Maler,,2011-03-20
10.1145/1967701.1967722,A dynamic algorithm for approximate flow computations,,2020-03-20
10.12732/ijam.v28i3.6,Parameter homotopy continuation for feedback linearization of non-regular control-affine nonlinear systems,,2013-03-20
10.1145/3178126.3178127,Accurate reachability analysis of uncertain nonlinear systems,,2015-03-20
10.1007/978-3-540-75596-8_30,Exact State Set Representations in the Verification of Linear Hybrid Systems with Large Discrete State Space,,2013-03-20
10.1007/978-3-642-02658-4_19,Image Computation for Polynomial Dynamical Systems Using the Bernstein Expansion,,2015-03-20
10.1007/978-3-540-78929-1_30,Reachability of Uncertain Nonlinear Systems Using a Nonlinear Hybridization,,2015-03-20
10.1007/978-3-642-39799-8_20,Abstraction Based Model-Checking of Stability of Hybrid Systems,,2016-03-20
10.1002/rnc.4982,Robust constrained control of piecewise affine systems through set‐based reachability computations,,2012-03-20
10.1007/978-3-642-31424-7_27,Timed Relational Abstractions for Sampled Data Control Systems,,2016-03-20
10.1007/978-3-319-10575-8_30,Verification of Hybrid Systems,,2015-03-20
10.1109/TAC.2011.2168874,Synthesis for Constrained Nonlinear Systems Using Hybridization and Robust Controllers on Simplices,,2018-03-20
10.1145/3365365.3382194,Reachability analysis for hybrid systems with nonlinear guard sets,,2017-03-20
10.1007/978-3-662-48288-9_18,Unbounded-Time Analysis of Guarded LTI Systems with Inputs by Abstract Acceleration,,2016-03-20
10.5772/30845,Gain Tuning of Flight Control Laws for Satisfying Trajectory Tracking Requirements,,2011-03-20
10.1007/978-3-658-09994-7_3,An Introduction to Hybrid Automata  Numerical Simulation and Reachability Analysis,,2016-03-20
10.1007/s10817-020-09562-z,Unbounded-Time Safety Verification of Guarded LTI Models with Inputs by Abstract Acceleration,,2015-03-20
10.1109/EMSOFT.2015.7318279,Bounded error flowpipe computation of parameterized linear systems,,2011-03-20
10.1007/978-3-319-63501-9_8,A Study of Model-Order Reduction Techniques for Verification,,2019-03-20
10.1016/J.NAHS.2010.05.010,Computing reachable sets for uncertain nonlinear hybrid systems using interval constraint-propagation techniques,,2011-03-20
10.1007/S11768-011-9157-8,Piecewise output feedback control for affine systems with disturbances based on linear temporal logic specifications,,2018-03-20
10.1109/CDC.2017.8263907,Constructing verification models of nonlinear Simulink systems via syntactic hybridization,,2014-03-20
10.1109/ICPS48405.2020.9274758,Non-linear Analysis for Operational Safety Verification of Cyber Physical Systems,,2018-03-20
10.4204/EPTCS.67.9,Reachability in Biochemical Dynamical Systems by Quantitative Discrete Approximation,,2019-03-20
10.1007/978-3-319-22975-1_15,Hybrid Tools for Hybrid Systems - Proving Stability and Safety at Once,,2017-03-20
10.1007/978-3-030-57628-8_16,Reachability Analysis of Nonlinear Systems Using Hybridization and Dynamics Scaling,,2013-03-20
10.1109/CDC.2015.7402214,Decentralized abstractions for feedback interconnected multi-agent systems,,2012-03-20
10.1016/j.nahs.2020.100856,Abstraction based verification of stability of polyhedral switched systems,,2015-03-20
10.1007/978-3-319-41528-4_25,Under-Approximating Backward Reachable Sets by Polytopes,,2013-03-20
10.1016/j.tcs.2011.01.012,Synthesis and infeasibility analysis for stochastic models of biochemical systems using statistical model checking and abstraction refinement,,2012-03-20
10.29007/GV5Q,Numerical Verification of 10000-dimensional Linear Systems 10000x Faster,,2018-03-20
10.1145/2883817.2883838,Parallelotope Bundles for Polynomial Reachability,,2011-03-20
10.1109/EMSOFT.2015.7318259,Unbounded-time reachability analysis of hybrid systems by abstract acceleration,,2014-03-20
10.1007/978-3-319-19249-9_23,Abstraction of Elementary Hybrid Systems by Variable Transformation,,2014-03-20
10.1109/TCAD.2020.3012240,Mining Shape Expressions From Positive Examples,,2017-03-20
10.1109/RTSS49844.2020.00031,Hybridization for Stability Verification of Nonlinear Switched Systems,,2019-03-20
10.4204/EPTCS.331.1,Interval centred form for proving stability of non-linear discrete-time systems,,2013-03-20
10.1145/2185632.2185640,Transcendental inductive invariants generation for non-linear differential and hybrid systems,,2011-03-20
10.1007/978-3-642-25318-8_6,Template-Based Unbounded Time Verification of Affine Hybrid Automata,,2020-03-20
10.1007/978-3-658-09994-7,Formal Modeling and Verification of Cyber-Physical Systems,,2019-03-20
10.1080/00207179.2019.1643910,Bracketing backward reach sets of a dynamical system,,2015-03-20
10.4204/EPTCS.92.2,Analysis of parametric biological models with non-linear dynamics,,2012-03-20
10.1145/1755952.1755956,Accurate hybridization of nonlinear systems,,2016-03-20
10.1007/978-3-319-18191-2_6,Evidence-Based Development Approach for Safe  Sustainable and Secure Mobile Medical App,,2017-03-20
10.1007/978-3-642-35524-0,Transactions on Computational Systems Biology XIV,,2016-03-20
10.1016/j.nahs.2019.100826,Set-based control for disturbed piecewise affine systems with state and actuation constraints,,2015-03-20
10.1007/978-3-642-39176-7_8,Abstraction-Based Guided Search for Hybrid Systems,,2017-03-20
10.23919/ACC.2018.8430792,A data-driven approach to stochastic constrained control of piecewise affine systems,,2015-03-20
10.1007/S11786-014-0199-4,Determination of Inner and Outer Bounds of Reachable Sets Through Subpavings,,2013-03-20
10.1109/LCSYS.2020.3041312,Mesh-Based Piecewise Affine Abstraction With Polytopic Partitions for Nonlinear Systems,,2020-03-20
10.1145/3359986.3361210,Compositional construction of bounded error over-approximations of acyclic interconnected continuous dynamical systems,,2019-03-20
10.1109/CDC.2016.7799116,Bisimulations for input-output stability of hybrid systems,,2016-03-20
10.1145/1967701.1967723,Automatic abstraction of non-linear systems using change of bases transformations,,2013-03-20
10.1007/978-3-642-22110-1_56,Relational Abstractions for Continuous and Hybrid Systems,,2013-03-20
10.1007/978-3-030-29662-9_8,Piecewise Robust Barrier Tubes for Nonlinear Hybrid Systems with Uncertainty,,2019-03-20
10.1016/j.automatica.2011.09.003,Reachability and stabilization of discrete-time affine systems with disturbances,,2015-03-20
10.1109/MED.2010.5547884,Reachability analysis for nonlinear systems by guaranteed piecewise affine approximation,,2019-03-20
10.1016/j.scico.2013.02.007,Reachability analysis of complex planar hybrid systems,,2020-03-20
10.1145/2461328.2461358,Reachability analysis of nonlinear systems using conservative polynomialization and non-convex sets,,2011-03-20
10.1016/j.tcs.2011.01.014,Computing reachable states for nonlinear biological models,,2012-03-20
10.1109/TAC.2019.2906432,Reachability Analysis of Large Linear Systems With Uncertain Inputs in the Krylov Subspace,,2013-03-20
10.1145/3365365.3382192,Utilizing dependencies to obtain subsets of reachable sets,,2011-03-20
10.1109/LCSYS.2020.3004503,Incremental Affine Abstraction of Nonlinear Systems,,2018-03-20
10.1109/RTSS49844.2020.00028,Real-Time Attack-Recovery for Cyber-Physical Systems Using Linear Approximations,,2016-03-20
10.1007/978-3-319-08867-9_27,Reachability Analysis of Hybrid Systems Using Symbolic Orthogonal Projections,,2018-03-20
10.1007/s10009-015-0393-y,Guided search for hybrid systems based on coarse-grained space abstractions,,2013-03-20
10.1371/journal.pcbi.1004591,Computational Modeling  Formal Analysis  and Tools for Systems Biology,,2012-03-20
10.1007/978-3-030-13050-3_4,Formal Techniques for Verification and Testing of Cyber-Physical Systems,,2020-03-20
10.1016/j.ifacol.2018.08.030,Input Design for Nonlinear Model Discrimination via Affine Abstraction,,2012-03-20
10.1145/2883817.2883837,Scalable Static Hybridization Methods for Analysis of Nonlinear Systems,,2011-03-20
10.1109/JPROC.2017.2779456,Semantics-Preserving Cosynthesis of Cyber-Physical Systems,,2015-03-20
10.1007/978-3-319-65765-3_7,Conic Abstractions for Hybrid Systems,,2020-03-20
10.1016/J.NAHS.2009.10.002,Computing reachable sets for uncertain nonlinear monotone systems,,2018-03-20
10.1109/CDC40024.2019.9029485,Compositional Verification of Large-Scale Stochastic Systems via Relaxed Small-Gain Conditions,,2014-03-20
10.1016/j.automatica.2020.108827,Compositional Abstraction-based Synthesis for Networks of Stochastic Switched Systems,,2013-03-20
10.1145/3313149.3313368,Achievements in correct-by-design control for stochastic systems,,2011-03-20
10.1016/j.ejcon.2020.04.001,Compositional abstraction-based synthesis for continuous-time stochastic hybrid systems,,2014-03-20
10.1016/J.IFACOL.2019.06.006,Compositional Construction of Finite MDPs for Large-Scale Stochastic Switched Systems: A Dissipativity Approach,,2016-03-20
10.1145/3365365.3382214,Symbolic controller synthesis for Büchi specifications on stochastic systems,,2012-03-20
10.1109/LCSYS.2020.3044263,Formal Multi-Objective Synthesis of Continuous-State MDPs,,2016-03-20
10.1016/j.nahs.2020.100880,Compositional Abstraction of Large-Scale Stochastic Systems: A Relaxed Dissipativity Approach.,,2013-03-20
10.1145/3313149.3313347,Compositional finite abstractions for large-scale stochastic switched systems,,2015-03-20
10.15607/RSS.2018.XIV.047,Toward Specification-Guided Active Mars Exploration for Cooperative Robot Teams,,2018-03-20
10.1007/978-3-540-24838-5_17,Fingered Multidimensional Search Trees,,2014-03-20
10.1137/S0097539799358926,Squarish k-d Trees,,2018-03-20
10.1007/b97914,Experimental and Efficient Algorithms,,2019-03-20
10.1137/S0097539703425873,Distributional Results for Costs of Partial Match Queries in Asymmetric K-Dimensional Tries,,2019-03-20
10.1016/j.sigpro.2011.11.027,Approximate all nearest neighbor search for high dimensional entropy estimation for image registration,,2013-03-20
10.1007/978-3-642-14922-1_54,Fast Algorithm for Multisource Image Registration Based on Geometric Feature of Corners,,2018-03-20
10.1137/1.9781611972979.4,On the Average Cost of Insertions on Random Relaxed K-d Trees,,2019-03-20
10.1109/WCICA.2010.5554549,Predictive control for nonlinear systems based on Data-drive,,2013-03-20
10.1145/1064546.1180615,Improving the performance of multidimensional search using fingers,,2013-03-20
10.1145/1644015.1644019,Updating relaxed K-d trees,,2018-03-20
10.2478/jwld-2018-0017,The use of bioretention cell to decreasing outflow from parking lot,,2019-03-20
10.1007/BF00249354,Inductive expansion: A calculus for verifying and synthesizing functional and logic programs,,2015-03-20
10.1201/9781420043839.ch6,Garbage Collection Techniques,,2018-03-20
10.1007/978-3-642-13321-3_7,Abstraction of Object Graphs in Program Verification,,2013-03-20
10.1007/BF01752387,Three write heads are as good ask,,2017-03-20
10.1080/00207160.2013.769526,Binding-blocking automata,,2011-03-20
10.4204/EPTCS.1.9,Multi-Head Finite Automata: Characterizations  Concepts and Open Problems,,2011-03-20
10.1007/BF02090769,One-way multihead finite automata and 2-bounded languages,,2012-03-20
10.1006/jcss.2000.1705,AVL Trees with Relaxed Balance,,2012-03-20
10.4108/sis.1.3.e6,Concurrent Operations of O2-Tree on Shared Memory Multicore Architectures,,2011-03-20
10.1016/j.jpdc.2012.12.010,A concurrent red-black tree,,2016-03-20
10.1145/375551.375566,Relaxed multi-way trees with group updates,,2014-03-20
10.1007/3-540-48318-7_5,Efficient Implementation of Lazy Suffix Trees,,2015-03-20
10.1145/2555243.2555267,A general technique for non-blocking trees,,2014-03-20
10.1007/3-540-46521-9_21,Group Updates for Red-Black Trees,,2011-03-20
10.1007/3-540-44634-6_38,Search Trees with Relaxed Balance and Near-Optimal Height,,2020-03-20
10.1007/3-540-48318-7,Algorithm Engineering: 3rd International Workshop  WAE’99 London  UK  July 19–21  1999 Proceedings,,2018-03-20
10.1007/s00236-019-00335-9,Red–black trees with constant update time,,2017-03-20
10.1142/S012905410100059X,Variants of (A  B)-Trees with Relaxed Balance,,2019-03-20
10.1007/3-540-48318-7_23,The Performance of Concurrent Red-Black Tree Algorithms,,2015-03-20
10.1109/PDGC.2014.7030743,Parallel syntax analysis on multi-core machines,,2018-03-20
10.5120/17616-8235,State Merging in LR Parser under Count based Reduction,,2020-03-20
10.1007/BF00264578,Generalized deterministic left to right parsing,,2019-03-20
10.1007/978-3-319-07001-8_32,Modelling Delay Propagation in Railway Networks,,2013-03-20
10.1109/NETWKS.2006.300367,Flow level performance approximations for elastic traffic integrated with prioritized stream traffic,,2011-03-20
10.1109/INFCOM.2002.1019240,Simple models of network access  with applications to the design of joint rate and admission control,,2019-03-20
10.1109/NGI.2005.1431647,Sojourn times in finite-capacity processor-sharing queues,,2014-03-20
10.4108/eai.14-12-2015.2262692,Integration of streaming and elastic traffic: Modeling and Performance Analysis,,2014-03-20
10.1016/j.peva.2004.11.012,Performance of TCP-friendly streaming sessions in the presence of heavy-tailed elastic flows,,2011-03-20
10.1007/978-3-642-11492-2,Constructive Computation in Stochastic Models with Applications,,2020-03-20
10.1109/HPCC-CSS-ICESS.2015.84,Impact of Signaling Storms on Energy Consumption and Latency of LTE User Equipment,,2015-03-20
10.1007/11814764_26,Performance Modeling of a Bottleneck Node in an IEEE 802.11 Ad-Hoc Network,,2017-03-20
10.1587/TRANSCOM.2015EUI0001,Queuing Systems for the Internet,,2018-03-20
10.1007/978-3-319-21837-3_30,Flow-Level Performance of Device-to-Device Overlaid OFDM Cellular Networks,,2016-03-20
10.1109/T-WC.2008.071376,Flow-level performance of opportunistic OFDM-TDMA and OFDMA networks,,2015-03-20
10.1016/J.AEUE.2005.03.009,A versatile model for TCP bandwidth sharing in networks with heterogeneous users,,2018-03-20
10.1016/J.AEUE.2005.11.007,Exact and approximate analysis of sojourn times in finite discriminatory processor sharing queues,,2015-03-20
10.1023/A:1019173523289,Sojourn times in a processor sharing queue with service interruptions,,2018-03-20
10.1109/NGI.2006.1678221,Performance analysis of admission control for integrated services with minimum rate guarantees,,2015-03-20
10.1007/978-3-540-68982-9_20,Bottleneck Analysis for Two-Hop IEEE 802.11e Ad Hoc Networks,,2013-03-20
10.1109/INFCOM.2010.5462195,Price of Anarchy in Non-Cooperative Load Balancing,,2015-03-20
10.1016/S1389-1286(02)00266-9,Quality of service and flow level admission control in the Internet,,2017-03-20
10.1016/S0166-5316(02)00191-8,Elastic calls in an integrated services network: the greater the call size variability the better the QoS,,2015-03-20
10.1023/B:QUES.0000032802.41986.c6,On Stochastic Bounds for Monotonic Processor Sharing Networks,,2020-03-20
10.1007/s11134-009-9143-8,Resource pooling in congested networks: proportional fairness and product form,,2015-03-20
10.1007/978-981-10-7200-0_12,Clustered Queuing Model for Task Scheduling in Cloud Environment,,2011-03-20
10.1007/s11134-006-7583-y,Insensitive bounds for the moments of the sojourn time distribution in the M/G/1 processor-sharing queue,,2020-03-20
10.1109/TCNS.2019.2915651,A Stochastic Resource-Sharing Network for Electric Vehicle Charging,,2011-03-20
10.1016/S1389-1286(03)00200-7,Congestion at flow level and the impact of user behaviour,,2020-03-20
10.1109/INFCOM.2007.219,Integration of Streaming and Elastic Traffic in Wireless Networks,,2018-03-20
10.1145/1005686.1005729,Insensitive load balancing,,2020-03-20
10.1002/ett.1340,Communication Networks Dimensioning of data networks: a flow-level perspective,,2012-03-20
10.1016/j.peva.2011.08.002,Price of anarchy in non-cooperative load balancing games,,2019-03-20
10.1007/S11134-014-9420-Z,Service-time ages  residuals  and lengths in an $$M/GI/\infty $$M/GI/∞ service system,,2011-03-20
10.1007/s11134-007-9034-9,A fluid system with coupled input and output  and its application to bottlenecks in ad hoc networks,,2017-03-20
10.1109/LCN.2007.27,An AAA Study for Service Provisioning in Vehicular Networks,,2019-03-20
10.1007/978-3-540-72990-7_31,Fluid-Flow Modeling of a Relay Node in an IEEE 802.11 Wireless Ad-Hoc Network,,2020-03-20
10.1016/j.peva.2005.09.004,Design and analysis of a class-aware recursive loop scheduler for class-based scheduling,,2015-03-20
10.1239/aap/1269611152,Insensitive Bounds for the Moments of the Sojourn Times in M/GI Systems Under State-Dependent Processor Sharing,,2017-03-20
10.1109/WCNC.2019.8885491,Analysis of QoE for Adaptive Video Streaming over Wireless Networks with User Abandonment Behavior,,2020-03-20
10.1002/ett.1242,Communication Networks The uniform estimation of the M/G/1 processor sharing response time distribution,,2018-03-20
10.1080/15326340802232327,A Method for Approximating the Variance of the Sojourn Times in Star-Shaped Queueing Networks,,2019-03-20
10.1016/S1388-3437(03)80195-6,Bandwidth sharing with heterogeneous service requirements,,2019-03-20
10.1109/INFCOM.2003.1208684,User-level performance of channel-aware scheduling algorithms in wireless data networks,,2016-03-20
10.1109/NGI.2006.1678261,Flow size-aware proportional fair scheduler,,2011-03-20
10.6100/IR639849,Sojourn time tails in processor-sharing systems,,2016-03-20
10.1007/0-306-47023-3_4,Traffic Management in ATM Networks: An Overview,,2014-03-20
10.1109/COMNET.2009.5373549,Fading effect on the dynamic performance evaluation of OFDMA cellular networks,,2020-03-20
10.1109/LCOMM.2012.020212.112310,Moments of Conditional Sojourn Times in Finite Capacity M/M/1/N-PS Processor Sharing Queues,,2014-03-20
10.1016/j.peva.2007.06.011,On processor sharing and its applications to cellular data network provisioning,,2016-03-20
10.1016/j.comnet.2018.09.023,Queueing model of a multi-service system with elastic and adaptive traffic,,2016-03-20
10.1007/s12243-011-0265-8,Effect of opportunistic scheduling on the quality of service perceived by the users in OFDMA cellular networks,,2020-03-20
10.1081/STM-200056223,An RG-Factorization Approach for a BMAP/M/1 Generalized Processor-Sharing Queue,,2013-03-20
10.1016/j.peva.2007.06.003,A modeling framework to understand the tussle between ISPs and peer-to-peer file-sharing users,,2018-03-20
10.1016/j.peva.2014.07.018,A resource-sharing game with relative priorities,,2016-03-20
10.1145/1185373.1185428,The weighted proportional fair scheduler,,2014-03-20
10.1007/S11134-006-7585-9,Sojourn time asymptotics in processor-sharing queues,,2020-03-20
10.1016/j.peva.2007.05.002,Throughputs in processor sharing models for integrated stream and elastic traffic,,2015-03-20
10.1239/jap/1110381382,Some time-dependent properties of symmetric M/G/1 queues,,2019-03-20
10.1023/A:1025147422141,Models of Network Access Using Feedback Fluid Queues,,2020-03-20
10.1287/opre.1110.0914,Heavy-Traffic Analysis of a Multiple-Phase Network with Discriminatory Processor Sharing,,2016-03-20
10.1109/ISCC.2004.1358688,Implementation of the almost guaranteed dimensioning strategy in integrated IP networks,,2019-03-20
10.1109/lcn.2007.27,Dimensioning methods for data networks with flow-level QoS requirements,,2020-03-20
10.1007/978-3-8348-8111-3,Radio Access Network Dimensioning for 3G UMTS,,2016-03-20
10.1007/978-3-319-22635-4_4,Towards Assessment of Energy Consumption and Latency of LTE UEs During Signaling Storms,,2014-03-20
10.1145/1164717.1164773,Location-based admission control for differentiated services in 3G cellular networks,,2020-03-20
10.5220/0007391001210132,A State Dependent Chat System Model,,2015-03-20
10.1109/VETECF.2010.5594552,Flow-Level Capacity of Fractionally Loaded OFDMA Networks with Proportional Fair Scheduling,,2012-03-20
10.1145/1161089.1161118,Performance analysis of access selection and transmit diversity in multi-access networks,,2016-03-20
10.1007/978-3-642-11492-2_7,Examples of Practical Applications,,2019-03-20
10.1098/rsta.2008.0025,Flow-level performance and user mobility in wireless data networks,,2018-03-20
10.1145/571697.571701,The performance of circuit switching in the internet,,2017-03-20
10.1016/S1388-3437(03)80242-1,Performance analysis of wireless LANs: an integrated packet/flow level approach,,2011-03-20
10.1007/BF03179723,Dimensioning IP access links carrying data traffic,,2016-03-20
10.1007/BF03179722,Bandwidth sharing with heterogeneous flow sizes,,2018-03-20
10.1109/ICWS.2006.94,Modelling End-to-end Quality-of-Service for Transaction-Based Services in Multi-Domain Environments,,2019-03-20
10.1007/11422778_45,A Multiple Time-Scale Model for TCP Bandwidth Sharing Under User Heterogeneity,,2013-03-20
10.1016/S0167-6377(03)00006-3,The equivalence between processor sharing and service in random order,,2011-03-20
10.1007/BF03179728,Analysis of flow transfer times in IEEE 802.11 wireless LANs,,2014-03-20
10.1007/s11134-009-9157-2,On sojourn times in M/GI systems under state-dependent processor sharing,,2017-03-20
10.1007/s11134-012-9282-1,Additive functionals with application to sojourn times in infinite-server and processor sharing systems,,2017-03-20
10.1239/aap/1086957584,Tail asymptotics for processor-sharing queues,,2014-03-20
10.1109/LCN.2007.54,Dimensioning methods for data networks with flow-level QoS requirements,,2011-03-20
10.1016/j.peva.2011.03.008,Sojourn time distributions and time scale separation results for multiclass state-dependent processor sharing systems with a finite service pool and exponential service requirements,,2013-03-20
10.1016/j.peva.2009.03.002,Admission control for differentiated services in future generation CDMA networks,,2013-03-20
10.1155/2016/2185714,Convolution Model of a Queueing System with the cFIFO Service Discipline,,2019-03-20
10.1109/TMM.2005.861288,A paracasting model for concurrent access to replicated Internet content,,2019-03-20
10.1484/j.rm.4.2017019,Habilitation a diriger des recherches,,2020-03-20
10.6100/IR598926,Queues with state-dependent rates,,2012-03-20
10.3990/1.9789085703044,Model checking structured infinite Markov chains,,2017-03-20
10.3990/1.9789036530903,Analysing uplink scheduling in mobile networks a flow level perspective,,2011-03-20
10.1109/TSP.2004.840693,Rate-limited EAFRP-a new improved model for high-speed network traffic,,2016-03-20
10.1007/978-0-387-85573-8_5,Multihop Wireless Networks,,2011-03-20
10.1007/s11134-012-9277-y,Sojourn times in a processor sharing queue with multiple vacations,,2020-03-20
10.1109/INFCOM.2005.1498528,Differentiated bandwidth sharing with disparate flow sizes,,2018-03-20
10.1145/1243401.1243408,Scheduling network traffic,,2013-03-20
10.1016/S1388-3437(03)80214-7,An integrated packet/flow model for TCP performance analysis,,2018-03-20
10.1145/1243401.1243409,Beyond processor sharing,,2018-03-20
10.5281/ZENODO.42351,Analytical assessment of the performance impact of spectrum sharing in cellular networks considering different time scales,,2019-03-20
10.3990/1.9789036527118,Quality of service modeling and analysis for carrier ethernet,,2014-03-20
10.1016/j.comcom.2018.07.009,Fluid flow models in performance analysis,,2012-03-20
10.1007/978-3-642-12104-3_14,Setting the Parameters Right for Two-Hop IEEE 802.11e Ad Hoc Networks,,2014-03-20
10.1007/s11134-007-9022-0,On the stability of the multi-queue multi-server processor sharing with limited service,,2019-03-20
10.1016/j.peva.2005.11.006,On the M(n)/G/infinity steady-state distribution,,2014-03-20
10.1016/S0166-5316(02)00110-4,Insensitivity in processor-sharing networks,,2011-03-20
10.1109/WCNC.2005.1424707,Performance modelling of GSM/GPRS cells with different radio resource allocation strategies,,2018-03-20
10.1145/1035334.1035352,Asymptotic regimes and approximations for discriminatory processor sharing,,2019-03-20
10.1109/PIMRC.2008.4699606,Scheduling gain analysis of opportunistic OFDMA and OFDM-TDMA systems,,2017-03-20
10.1016/S1389-1286(02)00415-2,Simple models of network access  with applications to the design of joint rate and admission control,,2020-03-20
10.1002/nem.1894,Modelling and performance analysis of application-aware resource management,,2018-03-20
10.1016/j.peva.2010.01.005,Performance analysis of differentiated resource-sharing in a wireless ad-hoc network,,2015-03-20
10.1007/s11134-009-9144-7,Flow-level performance and capacity of wireless networks with user mobility,,2014-03-20
10.1007/s00186-017-0583-3,Scheduling for a processor sharing system with linear slowdown,,2015-03-20
10.1016/j.peva.2005.07.009,Decomposing the queue length distribution of processor-sharing models into queue lengths of permanent customer queues,,2012-03-20
10.5220/0006251604640469,Chat Based Contact Center Modeling - System Modeling  Parameter Estimation and Missing Data Sampling,,2017-03-20
10.1007/978-3-642-23795-9_16,LTE Uplink Scheduling - Flow Level Analysis,,2016-03-20
10.1109/QEST.2006.3,A versatile infinite-state Markov reward model to study bottlenecks in 2-hop ad hoc networks,,2012-03-20
10.1016/j.comnet.2004.03.010,A survey on statistical bandwidth sharing,,2014-03-20
10.1007/s11134-008-9086-5,Waiting times for M/M systems under state-dependent processor sharing,,2020-03-20
10.1109/NGI.2010.5534476,Flow-level stability and performance of channel-aware priority-based schedulers,,2019-03-20
10.1016/S0166-5316(03)00094-4,Sojourn-time approximations for a multi-server processor sharing system with priorities,,2020-03-20
10.1109/TNET.2005.850215,User-level performance of channel-aware scheduling algorithms in wireless data networks,,2018-03-20
10.1007/978-3-540-68807-5_3,Flow Level Performance Comparison of Packet Scheduling Schemes for UMTS EUL,,2011-03-20
10.1109/WIOPT.2014.6850337,On the expiration date of spectrum sharing in mobile cellular networks,,2013-03-20
10.1002/bltj.10062,User-level QoS and traffic engineering for 3G wireless 1×EV-DO systems,,2011-03-20
10.1109/TWC.2010.05.091501,Analytical evaluation of QoS in the downlink of OFDMA wireless cellular networks serving streaming and elastic traffic,,2018-03-20
10.1145/1023663.1023713,HSDPA flow level performance: the impact of key system and traffic aspects,,2015-03-20
10.1007/978-3-540-24693-0_5,A Multi-level TCP Model with Heterogeneous RTTs,,2019-03-20
10.1109/COMNET.2010.5699822,Data traffic performance model for cellular networks,,2014-03-20
10.1109/TWC.2019.2940938,Performance Analysis of Cellular Networks With Opportunistic Scheduling Using Queueing Theory and Stochastic Geometry,,2016-03-20
10.1109/NGI.2006.1678248,A hierarchical proportional fair scheduler,,2013-03-20
10.1007/3-540-49727-7_15,Analysis of Imperative Programs through Analysis of Constraint Logic Programs,,2020-03-20
10.1109/LICS.2002.1029816,Semantic minimization of 3-valued propositional formulae,,2017-03-20
10.1007/3-540-45607-4_11,A Framework for Developing Embeddable Customized Logics,,2014-03-20
10.1007/978-3-540-71322-7_1,An Appreciation of the Work of Reinhard Wilhelm,,2012-03-20
10.22201/ICAT.16656423.2011.9.03.424,Digital Implementation of a Logical Functor on a PLD,,2020-03-20
10.1007/3-540-45789-5_16,Compactly Representing First-Order Structures for Static Analysis,,2019-03-20
10.1201/9781420040579.ch5,Shape Analysis and Applications,,2016-03-20
10.1145/1389449.1389465,Macros for context-free grammars,,2018-03-20
10.1109/ICWAPR.2007.4421637,A kind of algorithm of faint object recognition based on higher order cumulant spectrum,,2012-03-20
10.1016/J.PETROL.2016.08.026,Characterization of Paleogene hydrothermal events and their effects on reservoir properties in the Qikou Sag  eastern China,,2014-03-20
10.1007/s10479-015-2005-3,Performance analysis of a multiprogramming–multiprocessor retrial queueing system with orderly reattempts,,2014-03-20
10.1017/CBO9780511974960.002,Automata-based presentations of infinite structures,,2011-03-20
10.1007/978-3-319-74772-9_6,A short overview of Hidden Logic,,2018-03-20
10.1093/comjnl/bxm031,On the Behavioral Equivalence Between k-data Structures,,2013-03-20
10.1051/ita:2001109,A Coalgebraic Semantics of Subtyping,,2020-03-20
10.1016/S1571-0661(05)80352-4,A Coalgebraic Semantics of Subtyping,,2017-03-20
10.1016/S1567-8326(00)00004-7,Inheritance of behavior,,2015-03-20
10.1007/3-540-45499-3_33,Behavioural Subtyping Relations for Object-Oriented Formalisms,,2012-03-20
10.1007/978-3-319-74772-9_1,A Mathematical Life,,2018-03-20
10.1016/S0890-5401(03)00133-0,Secure mechanical verification of mutually recursive procedures,,2015-03-20
10.1007/978-3-540-76550-9_7,Die 90er Jahre,,2012-03-20
10.1109/SP.1984.10006,Ottawa Euclid and EVES: A Status Report,,2015-03-20
10.1145/65293.71204,A first course in program verification and the semantics of programming languages,,2020-03-20
10.1007/BF00288745,The verification and synthesis of data structures,,2015-03-20
10.1023/A:1008762225520,Explanation-Based Scenario Generation for Reactive System Models,,2018-03-20
10.1007/BF00244288,An overview of automated reasoning and related fields,,2019-03-20
10.1016/j.cosrev.2011.02.002,Verification conditions for source-level imperative programs,,2019-03-20
10.1007/11856290_5,Labeled @-Calculus: Formalism for Time-Concerned Human Factors,,2012-03-20
10.1145/981009.981013,A survey of semantic description frameworks for programming languages,,2013-03-20
10.1007/978-3-540-87405-8_51,Model-Driven Development of Model Transformations,,2015-03-20
10.1145/3426428.3426922,Putting the semantics into semantic versioning,,2012-03-20
10.1109/ICST.2011.50,An Empirical Evaluation of Assertions as Oracles,,2015-03-20
10.1007/BF00264535,The logic of aliasing,,2014-03-20
10.1145/1127878.1127900,A historical perspective on runtime assertion checking in software development,,2018-03-20
10.1145/1040305.1040330,A semantics for procedure local heaps and its abstractions,,2019-03-20
10.1007/BF00982291,A pragmatic approach to resolution-based theorem proving,,2015-03-20
10.1007/978-1-84882-912-1_5,Forward with Hoare,,2011-03-20
10.5120/ijca2015906604,An Approach to Process Management using Process Synchronization,,2013-03-20
10.1016/j.tcs.2011.01.030,Logical classification of distributed algorithms (Bakery algorithms as an example),,2013-03-20
10.1109/TAC.2014.2315311,Weak Invariant Simulation and Its Application to Analysis of Parameterized Networks,,2013-03-20
10.1145/2790449.2790523,Jthread  a deadlock-free mutex library,,2017-03-20
10.1016/j.ipl.2020.105998,Optimal-size problem kernels for d-Hitting Set in linear time and space,,2020-03-20
10.1007/s00453-013-9774-3,Towards Optimal and Expressive Kernelization for d-Hitting Set,,2020-03-20
10.1007/BF01744292,Storage representations for tree-like data structures,,2012-03-20
10.1515/AMM-2016-0099,Formation of Transition Phases on Interface between Monocrystalline Fe and Cu Due to Mutual Solid-State Diffusion,,2012-03-20
10.1145/29650.29653,Automatic design and implementation of language data types,,2012-03-20
10.1007/BF00995427,Data schemata based on directed graphs,,2014-03-20
10.1007/BF01776564,Bounds on the costs of data encodings,,2013-03-20
10.1007/978-3-642-32589-2_34,Fast Balanced Partitioning Is Hard Even on Grids and Trees,,2019-03-20
10.1007/978-3-642-25870-1_14,Restricted Cuts for Bisections in Solid Grids: A Proof via Polygons,,2016-03-20
10.1007/978-3-642-17458-2_2,Simple Cuts Are Fast and Good: Optimum Right-Angled Cuts in Solid Grids,,2016-03-20
10.3929/ETHZ-A-006935587,An O(n^4) time algorithm to compute the bisection width of solid grid graphs,,2016-03-20
10.1007/S10878-018-0351-1,Balanced tree partition problems with virtual nodes,,2016-03-20
10.1016/j.tcs.2013.03.014,Fast balanced partitioning is hard even on grids and trees,,2014-03-20
10.1007/s00453-013-9802-3,Balanced Partitions of Trees and Applications,,2020-03-20
10.1007/978-3-642-23719-5_13,An $\mathcal{O}(n^4)$ Time Algorithm to Compute the Bisection Width of Solid Grid Graphs,,2019-03-20
10.1093/comjnl/bxm033,The Bidimensionality Theory and Its Algorithmic Applications,,2017-03-20
10.1515/logos-2016-0005,Peat decomposition – shaping factors  significance in environmental studies and methods of determination; a literature review,,2015-03-20
10.1109/ACSD.2013.17,STG-Based Resynthesis for Balsa Circuits,,2012-03-20
10.1007/s10836-013-5410-z,A Novel Formalism for Partially Defined Asynchronous Feedback Digital Circuits,,2013-03-20
10.1109/ACSD.2011.23,STG Decomposition: Partitioning Heuristics,,2014-03-20
10.1109/DDECS.2012.6219068,Digital-driven formal analog verification for asynchronously feed-backed circuitries,,2019-03-20
10.1109/ACSD.2011.11,Improved Parallel Composition of Labelled Petri Nets,,2012-03-20
10.1007/s10836-016-5600-6,A New Approach for Modeling Inconsistencies in Digital-Assisted Analog Design,,2018-03-20
10.1145/2656215,Factored Planning: From Automata to Petri Nets,,2014-03-20
10.1109/SMACD.2015.7301689,Theoretical framework for asynchronous feedback Network Under Balance (NUB),,2020-03-20
10.1007/s10009-012-0260-z,Compositional performance analysis with improved analysis techniques for obtaining viable end-to-end latencies in distributed embedded systems,,2016-03-20
10.1007/3-540-34774-7_3,A tour of systems with the max-plus flavor,,2018-03-20
10.1109/ECRTS.2004.15,Integrating model-based design and preemptive scheduling in mixed time- and event-triggered systems,,2013-03-20
10.1007/S11786-008-0049-3,Querying Historical Data Over Multiple Time-Lines,,2012-03-20
10.1007/BF01245633,Functional specification and proof of correctness for time dependent behaviour of reactive systems,,2017-03-20
10.1109/MEMCOD.2005.1487884,A synchronous language at work: the story of Lustre,,2012-03-20
10.1145/1289927.1289964,Loosely time-triggered architectures based on communication-by-sampling,,2014-03-20
10.1007/BF01407930,Specification and design of shared resource arbitration,,2016-03-20
10.1002/9781118459898.CH2,A Synchronous Language at Work: The Story of Lustre,,2014-03-20
10.1109/TCAD.2009.2013286,System Level Performance Analysis for Real-Time Automotive Multicore and Network Architectures,,2018-03-20
10.3182/20020721-6-ES-1901.00979,AN ARCHITECTURE FOR A MULTI-AGENT SYSTEM TEST-BED,,2016-03-20
10.1016/j.entcs.2005.05.017,Time-awareness and Proactivity in Models of Interactive Computation,,2013-03-20
10.1016/J.IFACOL.2017.08.163,Max-Plus Algebra and Discrete Event Systems,,2015-03-20
10.1007/3-540-46043-8_15,On Models for Time-Sensitive Interactive Computing,,2017-03-20
10.1007/S11786-008-0048-4,Knowledge Representation  Reasoning and Integration Using Temporal Logic with Clocks,,2020-03-20
10.1016/j.arcontrol.2018.04.004,Max-plus algebra in the history of discrete event systems,,2012-03-20
10.1016/j.tcs.2020.07.007,The amortized analysis of a non-blocking chromatic tree,,2018-03-20
10.1145/2903142,Deletion Without Rebalancing in Binary Search Trees,,2011-03-20
10.14778/3364324.3364334,On Supporting Efficient Snapshot Isolation for Hybrid Workloads with Multi-Versioned Indexes,,2015-03-20
10.1145/1835698.1835736,Non-blocking binary search trees,,2012-03-20
10.1007/11601548_10,Primitive Rewriting,,2011-03-20
10.1007/BF00247435,A note on a canonical theory with undecidable unification and matching problem,,2017-03-20
10.1109/SIMSYM.2003.1192806,One-to-all broadcasting scheme for hypercubes with background traffic,,2017-03-20
10.1080/02533839.2010.9671610,Performance analysis of non‐preemptive hol GE/G/1 queue with two priority classes of sip‐t signaling system in carrier grade VoIP network,,2019-03-20
10.1002/cpe.760,One‐to‐all broadcasting scheme for arbitrary static interconnection networks with bursty background traffic,,2013-03-20
10.1109/AINA.2007.110,Performance Analysis of an Active Flow Control Mechanism with Entry Threshold in InfiniBand Networks,,2013-03-20
10.1016/j.simpat.2005.10.004,Analysis of multiple-threshold queues for congestion control of heterogeneous traffic streams,,2013-03-20
10.1016/S0305-0548(01)00053-3,On the number of customers served in the M/G/1 retrial queue: first moments and maximum entropy approach,,2013-03-20
10.1049/IP-CDT:20030278,Performance modelling of GPRS with bursty multiclass traffic,,2018-03-20
10.1016/S0166-5316(02)00092-5,Entropy maximisation and open queueing networks with priorities and blocking,,2017-03-20
10.1007/978-3-540-31957-3_5,The Performance Analysis of Two-Class Priority Queueing in MPLS-Enabled IP Network,,2017-03-20
10.1016/j.compeleceng.2009.03.001,Performance analysis of non-preemptive GE/G/1 priority queueing of LER system with bulk arrivals,,2011-03-20
10.1109/AINA.2008.138,Performance Analysis of an Efficient Flow Control Mechanism with Job Threshold in InfiniBand Networks,,2013-03-20
10.1109/WMNC.2013.6549030,Performance modelling and analysis of the delay aware routing metric in Cognitive Radio Ad Hoc networks,,2011-03-20
10.1007/s10796-006-9002-7,Mobility management for m-commerce requests in wireless cellular networks,,2012-03-20
10.23638/LMCS-13(4:27)2017,Privacy by typing in the π-calculus,,2011-03-20
10.1007/11562436_25,Proof Methodologies for Behavioural Equivalence in DPI,,2020-03-20
10.1007/978-3-642-01465-9_17,Secure Broadcast Ambients,,2011-03-20
10.1017/S0956796807006442,Acute: High-level programming language design for distributed computation,,2013-03-20
10.1016/j.scico.2007.01.011,Coordinating mobile agents in interaction spaces,,2019-03-20
10.1145/1289971.1289980,Oz/K: a kernel language for component-based open programming,,2015-03-20
10.1007/978-3-319-33612-1,Web Services  Formal Methods  and Behavioral Types,,2013-03-20
10.1007/978-3-540-31794-4_11,A Generic Membrane Model (Note),,2017-03-20
10.1007/978-3-540-31794-4_9,The Kell Calculus: A Family of Higher-Order Distributed Process Calculi,,2019-03-20
10.1007/978-3-540-75292-9_7,Bisimulations for a Distributed Higher Order pi -Calculus,,2020-03-20
10.5220/0007722900680079,A Formal Modeling Scheme for Analyzing a Software System Design against the GDPR,,2013-03-20
10.1007/978-3-540-88313-5_36,Code-Carrying Authorization,,2015-03-20
10.1007/978-3-319-19195-9_12,Type Checking Privacy Policies in the π-calculus,,2013-03-20
10.6092/UNIBO/AMSDOTTORATO/2285,Higher-Order Concurrency: Expressiveness and Decidability Results,,2012-03-20
10.1007/978-3-642-04081-8_30,Howe's Method for Calculi with Passivation,,2019-03-20
10.1007/978-3-319-33612-1_8,Type Checking Purpose-Based Privacy Policies in the π-Calculus,,2012-03-20
10.1016/j.ic.2011.08.002,Characterizing contextual equivalence in calculi with passivation,,2011-03-20
10.1007/978-3-642-02017-9_3,Distributed Systems and Their Environments,,2012-03-20
10.1007/978-3-642-22444-7_4,Rewrite Specifications of Access Control Policies in Distributed Environments,,2015-03-20
10.1007/978-3-642-30065-3_2,Asynchronous Distributed Monitoring for Multiparty Session Enforcement,,2011-03-20
10.1016/j.entcs.2005.12.115,Type-Based Security for Mobile Computing Integrity  Secrecy and Liveness,,2013-03-20
10.1109/lics.2004.1319623,A symmetric modal lambda calculus for distributed computing,,2012-03-20
10.1109/CSFW.2006.31,Types and effects for secure service orchestration,,2020-03-20
10.1007/11768869_8,Static Safety for an Actor Dedicated Process Calculus by Abstract Interpretation,,2015-03-20
10.1016/j.ic.2004.11.005,The Seal Calculus,,2019-03-20
10.1007/978-3-030-40223-5,Evaluation of Novel Approaches to Software Engineering: 14th International Conference  ENASE 2019  Heraklion  Crete  Greece  May 4–5  2019  Revised Selected Papers,,2020-03-20
10.1007/11561347_26,Component-oriented programming with sharing: containment is not ownership,,2011-03-20
10.1145/1086365.1086370,Acute: high-level programming language design for distributed computation,,2015-03-20
10.1016/j.entcs.2005.03.029,Bigraphical Semantics of Higher-Order Mobile Embedded Resources with Local Names,,2018-03-20
10.23919/CNSM46954.2019.9012739,Formal Verification of Orchestration Templates for Reliable Deployment with OpenStack Heat*,,2011-03-20
10.1007/978-3-030-21759-4_14,Encapsulation and Sharing in Dynamic Software Architectures: The Hypercell Framework,,2019-03-20
10.1007/978-3-319-89366-2_7,Depending on Session-Typed Processes,,2014-03-20
10.1007/1-4020-8141-3_41,Behavioural Equivalences for Dynamic Web Data,,2013-03-20
10.1007/978-3-030-40223-5_7,Towards GDPR Compliant Software Design: A Formal Framework for Analyzing System Models,,2011-03-20
10.1016/j.ic.2007.11.011,Mobility control via passports,,2016-03-20
10.1145/1119479.1119482,A bisimulation-based semantic theory of Safe Ambients,,2015-03-20
10.4304/JSW.2.3.87-98,Abstract Interpretation-based Static Safety for Actors,,2017-03-20
10.1007/978-3-540-74407-8_24,Mobility Control Via Passports,,2017-03-20
10.1007/978-3-642-20775-4_1,Types for Role-Based Access Control of Dynamic Web Data,,2019-03-20
10.1007/978-3-642-25575-5_18,AWPS - An Architecture for Pro-active Web Performance Management,,2017-03-20
10.1007/978-3-540-24663-3_12,Performance Management in Dynamic Computing Environments,,2019-03-20
10.1007/b97129,Performance Tools and Applications to Networked Systems,,2011-03-20
10.1007/BF01201811,Probabilistic asynchronous automata,,2018-03-20
10.1007/978-3-662-44522-8_15,Classifying Recognizable Infinitary Trace Languages Using Word Automata,,2013-03-20
10.1007/978-3-642-32621-9_5,On Distributed Monitoring of Asynchronous Systems,,2015-03-20
10.1016/j.ic.2008.03.010,Muller message-passing automata and logics,,2017-03-20
10.1007/s10849-009-9118-5,Automata for Epistemic Temporal Logic with Synchronous Communication,,2018-03-20
10.1016/S0167-6423(00)00013-7,Finite subtype inference with explicit polymorphism,,2014-03-20
10.1088/1742-5468/2010/07/P07009,First-passage properties of the Pólya urn process,,2011-03-20
10.1007/S10463-006-0093-1,Exact and limiting distributions in diagonal Pólya processes,,2012-03-20
10.1016/J.SPL.2005.09.013,Distributions in the Ehrenfest process,,2013-03-20
10.1016/J.AJMSC.2018.12.004,Unbalanced multi-drawing urn with random addition matrix,,2011-03-20
10.1007/978-3-319-73453-8,Space in Weak Propositional Proof Systems,,2016-03-20
10.1145/1374376.1374478,Towards an optimal separation of space and length in resolution,,2011-03-20
10.1007/978-3-319-66263-3_30,CNFgen: A Generator of Crafted Benchmarks,,2017-03-20
10.1016/j.ic.2017.05.005,The treewidth of proofs,,2013-03-20
10.1109/LICS.2008.30,On the Asymptotic Nullstellensatz and Polynomial Calculus Proof Complexity,,2017-03-20
10.1007/978-3-642-39071-5_1,The Proof-Search Problem between Bounded-Width Resolution and Bounded-Degree Semi-algebraic Proofs,,2015-03-20
10.1016/j.apal.2020.102930,Typical forcings  NP search problems and an extension of a theorem of Riis,,2015-03-20
10.14288/1.0043897,Mini-tutorial on weak proof systems and connections to SAT solving,,2020-03-20
10.1016/J.APAL.2020.102930,Typical forcings  NP search problems and an extension of a theorem of Riis,,2019-03-20
10.1016/j.ipl.2009.06.006,A simplified way of proving trade-off results for resolution,,2020-03-20
10.1145/3243126,Some Subsystems of Constant-Depth Frege with Parity,,2019-03-20
10.1016/j.ipl.2018.04.014,A note about k-DNF resolution,,2014-03-20
10.1007/978-3-319-09284-3_1,A (Biased) Proof Complexity Survey for SAT Practitioners,,2014-03-20
10.24963/ijcai.2018/181,Seeking Practical CDCL Insights from Theoretical SAT Benchmarks,,2020-03-20
10.4230/LIPIcs.CCC.2015.467,A Generalized Method for Proving Polynomial Calculus Degree Lower Bounds,,2019-03-20
10.1137/100816833,Exponential Lower Bounds and Integrality Gaps for Tree-Like Lovász-Schrijver Procedures,,2017-03-20
10.1007/978-3-642-21581-0_3,Parameterized Complexity of DPLL Search Procedures,,2020-03-20
10.1145/2499937.2499941,Parameterized Complexity of DPLL Search Procedures,,2012-03-20
10.1007/978-3-642-40313-2_62,Revisiting Space in Proof Complexity: Treewidth and Pathwidth,,2016-03-20
10.1007/3-540-44985-X_16,Scheduling Jobs before Shut-Down,,2013-03-20
10.1007/BF00289516,Comments on “A comparison of two synchronizing concepts by P.B. Hansen”,,2015-03-20
10.1145/1108970.1108975,Implicit-signal monitors,,2013-03-20
10.1007/978-1-4757-3472-0_7,An outline of a course on operating system principles,,2020-03-20
10.1007/978-1-4757-3472-0_1,The invention of concurrent programming,,2019-03-20
10.1007/BF00264031,A reply to comments on “A comparison of two synchronizing concepts”,,2017-03-20
10.1007/3-540-36557-5_25,Advanced Thread Synchronization in Java Using Interaction Expressions,,2015-03-20
10.1007/BF00288744,Proving properties of interacting processes,,2014-03-20
10.1007/BF00977783,On the design and specification of message oriented programs,,2018-03-20
10.1007/978-3-8348-2151-5_2,Rechnerarchitekturen für Parallele und Verteilte Systeme,,2017-03-20
10.1007/BF00264467,Some extended semaphore primitives,,2011-03-20
10.1007/BF00976241,Process synchronization in high-level languages,,2015-03-20
10.1007/978-0-387-30162-4_326,Randomized Parallel Approximations to Max Flow,,2019-03-20
10.4304/JSW.9.1.104-110,Estimation of Distribution Algorithms for Knapsack Problem,,2019-03-20
10.1007/978-3-540-30482-1_38,From Durational Specifications to TLA Designs of Timed Automata,,2014-03-20
10.1007/978-3-642-04368-0_10,Safe Runtime Verification of Real-Time Properties,,2018-03-20
10.1109/APSEC.2001.991504,Automatic synthesis of the DC specifications of lip synchronisation protocol,,2015-03-20
10.1109/JPROC.2004.831197,Formal verification of timed systems: a survey and perspective,,2019-03-20
10.1007/978-3-662-04995-2,Process Algebra with Timing,,2014-03-20
10.1007/S10008-005-0048-0,Einstein and the osmotic theory,,2016-03-20
10.1109/EMWRTS.1998.685130,Formal methods in real-time systems,,2012-03-20
10.1007/3-540-47884-1,Integrated Formal Methods,,2018-03-20
10.1016/S1571-0661(05)82595-2,Moby/RT: A Tool for Specification and Verification of Real-Time Systems,,2013-03-20
10.1007/3-540-49213-5_18,Decomposing Real-Time Specifications,,2014-03-20
10.1007/3-540-47884-1_14,Combining Specification Techniques for Processes  Data and Time,,2019-03-20
10.1007/BF01179371,The relaxed min-max heap,,2017-03-20
10.1007/978-3-642-40273-9,Space-Efficient Data Structures  Streams  and Algorithms,,2019-03-20
10.1016/J.INS.2019.05.055,Efficient privacy-preserving data merging and skyline computation over multi-source encrypted data,,2018-03-20
10.1016/0304-3975(85)90030-1,An Omega(n-4/3) Lower Bound on the Monotone Network Complexity of the n-th Degree Convolution,,2011-03-20
10.1109/SFCS.1981.10,An O(N4/3) lower bound on the mono tone network complexity of N-TH degree convolution,,2018-03-20
10.1515/dma.1994.4.3.229,On the complexity of Boolean matrices  graphs  and the Boolean functions corresponding to them,,2012-03-20
10.1007/BF01157687,Lower bounds on monotone complexity of the logical permanent,,2020-03-20
10.1007/3-540-09526-8_36,Some Remarks on Boolean Sums,,2013-03-20
10.1016/S0020-0190(98)00042-8,A Very Simple Function that Requires Exponential Size Read-Once Branching Programs,,2013-03-20
10.1007/3-540-13331-3_58,Proving lower bounds of the monotone complexity of Boolean functions,,2014-03-20
10.1007/BFb0017292,Boolean Functions Whose Monotone Complexity is of Size n2/log n,,2011-03-20
10.1109/SFCS.1992.267766,Amplification and percolation (probabilistic Boolean functions),,2013-03-20
10.1002/0471654507.EME282,Multiple-Access Schemes,,2019-03-20
10.1109/TASE.2013.2247757,Parallel Machine Selection and Job Scheduling to Minimize Sum of Machine Holding Cost  Total Machine Time Costs  and Total Tardiness Costs,,2020-03-20
10.1007/s10951-011-0231-3,Parallel machine problems with equal processing times: a survey,,2020-03-20
10.1017/S0269964819000251,A RANDOM ACCESS G-NETWORK: STABILITY  STABLE THROUGHPUT  AND QUEUEING ANALYSIS,,2014-03-20
10.2478/aiht-2018-69-3085,Antimycobacterial potential of the juniper berry essential oil in tap water,,2016-03-20
10.1016/j.dam.2018.05.011,Selecting and covering colored points,,2011-03-20
10.1016/j.dam.2007.02.010,Satisfiability of mixed Horn formulas,,2015-03-20
10.23638/DMTCS-21-3-18,Planar 3-SAT with a Clause/Variable Cycle,,2016-03-20
10.3233/978-1-58603-929-5-3,A History of Satisfiability,,2012-03-20
10.1007/978-3-642-02777-2_11,On Some Aspects of Mixed Horn Formulas,,2018-03-20
10.1007/978-3-540-69912-5_11,Finding Models for Blocked 3-SAT Problems in Linear Time by Systematical Refinement of a Sub-model,,2018-03-20
10.1007/978-3-642-30891-8_15,Backdoors to Satisfaction,,2014-03-20
10.1007/978-3-662-48971-0_28,Choice Is Hard,,2017-03-20
10.1007/978-3-540-79719-7_22,A CNF Class Generalizing Exact Linear Formulas,,2013-03-20
10.1109/FOCS.2013.59,Strong Backdoors to Bounded Treewidth SAT,,2016-03-20
10.1007/978-1-4419-7997-1_31,Algorithms for the Satisfiability Problem,,2015-03-20
10.1016/j.amc.2008.12.053,Accurate and efficient lattice algorithms for American-style Asian options with range bounds,,2013-03-20
10.1109/HPCS.2005.38,Parallel algorithm for pricing American Asian options with multi-dimensional assets,,2018-03-20
10.1016/j.amc.2010.08.050,An efficient and accurate lattice for pricing derivatives under a jump-diffusion process,,2015-03-20
10.1016/j.amc.2014.12.002,Pricing Asian option by the FFT with higher-order error convergence rate under Lévy processes,,2016-03-20
10.1145/1529282.1529494,An efficient and accurate lattice for pricing derivatives under a jump-diffusion process,,2018-03-20
10.1080/14697680500040157,On accurate and provably efficient GARCH option pricing algorithms,,2017-03-20
10.1016/j.amc.2004.10.085,An efficient convergent lattice algorithm for European Asian options,,2013-03-20
10.1109/MCI.2018.2866728,An Accurate Lattice Model for Pricing Catastrophe Equity Put Under the Jump-Diffusion Process,,2019-03-20
10.1007/978-3-540-72870-2_25,An Ingenious  Piecewise Linear Interpolation Algorithm for Pricing Arithmetic Average Options,,2011-03-20
10.1007/3-540-32391-0_115,Pricing Asian Options with an Efficient Convergent Approximation Algorithm,,2013-03-20
10.1007/978-3-319-06653-0_20,Asian Options  Jump-Diffusion Processes On A Lattice And Vandermonde Matrices,,2015-03-20
10.1007/978-3-319-46376-6_8,Emergence in Context-Free Parallel Communicating Grammar Systems: What Does and Does not Make a Grammar System More Expressive Than Its Parts,,2019-03-20
10.1109/ISPDC.2013.30,Not Seeing the Parse Trees from the Parse Forest of a Context-Free Parallel Communicating Grammar System,,2018-03-20
10.1007/3-540-45627-9_19,Approximative Learning of Regular Languages,,2018-03-20
10.1007/3-540-70659-3_6,Algorithms for Learning Function Distinguishable Regular Languages,,2019-03-20
10.1016/S0304-3975(02)00075-0,Identification of function distinguishable languages,,2018-03-20
10.1007/978-3-662-46078-8_32,On Visibly Pushdown Trace Languages,,2018-03-20
10.1007/978-3-642-21254-3_31,Globally Deterministic CD-Systems of Stateless R(1)-Automata,,2020-03-20
10.1145/1373476.1373503,An Holistic Framework for Regular Virtual Topology Design,,2011-03-20
10.1007/978-0-387-35670-9_22,A Study on the Efficacy of Regular Virtual Topology Design Heuristics for Optical Packet Switching,,2019-03-20
10.1007/BF01752396,Relative complexity of algebras,,2012-03-20
10.1109/JLT.2002.800258,Impact of non-uniform traffic on the design of multi-hop regular virtual topologies for optical packet switching over arbitrary physical topologies,,2020-03-20
10.1109/ICC.2002.997358,Impact of graph theoretic network parameters on the design of regular virtual topologies for optical packet switching,,2019-03-20
10.1007/b115747,Graph Separators  with Applications,,2012-03-20
10.1007/BF01940646,Blocking for external graph searching,,2019-03-20
10.1109/TNET.2007.899067,An holistic framework for regular virtual topology design,,2014-03-20
10.1007/BF02259908,Bandwidth and pebbling,,2011-03-20
10.1515/PJST-2016-0011,Sensation Seeking as one of the Motivating Factors for Performing Skydiving,,2014-03-20
10.1145/3397472,The Complexity of Approximately Counting Retractions,,2012-03-20
10.3233/COM-180084,Surjective H-colouring: New hardness results,,2016-03-20
10.1007/s11590-017-1126-9,On retracts  absolute retracts  and foldings in cographs,,2011-03-20
10.1145/3282429,The Complexity of Boolean Surjective General-Valued CSPs,,2012-03-20
10.1137/1.9781611975482.133,The Complexity of Approximately Counting Retractions,,2011-03-20
10.4230/LIPIcs.MFCS.2017.4,The Complexity of Boolean Surjective General-Valued CSPs,,2017-03-20
10.26493/1855-3974.335.d57,Relations between graphs,,2019-03-20
10.1007/978-3-642-45043-3_28,On Retracts  Absolute Retracts  and Folds in Cographs,,2012-03-20
10.1016/j.dam.2012.03.029,The complexity of surjective homomorphism problems - a survey,,2017-03-20
10.1137/17M1153182,The Complexity of Counting Surjective Homomorphisms and Compactions,,2018-03-20
10.1007/978-3-319-58741-7_26,Surjective H-Colouring: New Hardness Results,,2017-03-20
10.1007/978-3-642-33558-7_6,Max-Sur-CSP on Two Elements,,2019-03-20
10.1016/j.tcs.2012.06.039,Computing vertex-surjective homomorphisms to partially reflexive trees,,
10.1016/j.ipl.2007.05.011,On the lexicographical generation of compressed codes,,2014-03-20
10.1002/rsa.20027,The distribution of the size of the ancestor-tree and of the induced spanning subtree for random trees,,2011-03-20
10.1007/BF02253615,Additive weights under the Balanced Probability Model,,2018-03-20
10.1016/J.CL.2015.12.001,Language components for modular DSLs using traits,,2020-03-20
10.22364/BJMC.2017.5.1.09,Critical Analysis of Extensible Parsing Tools and Techniques,,2017-03-20
10.1145/3336294.3336301,Piggyback IDE Support for Language Product Lines,,2018-03-20
10.1016/j.cl.2017.07.003,μ-DSU: A Micro-Language Based Approach to Dynamic Software Updating,,2013-03-20
10.1016/J.CL.2015.02.001,Neverlang: A framework for feature-oriented language development,,2017-03-20
10.1016/j.cl.2018.05.004,Concern-oriented language development (COLD): Fostering reuse in language engineering,,2015-03-20
10.1145/2791060.2791092,Choosy and picky: configuration of language product lines,,2020-03-20
10.13130/VACCHI-EDOARDO_PHD2015-03-13,PROGRAMMING LANGUAGES À LA CARTE,,2019-03-20
10.1109/LICS.2017.8005096,On delay and regret determinization of max-plus automata,,2019-03-20
10.1007/978-3-030-17127-8_8,The Impatient May Use Limited Optimism to Minimize Regret,,2012-03-20
10.4230/LIPIcs.CSL.2016.30,Minimizing Regret in Discounted-Sum Games,,2012-03-20
10.1145/2789149.2789158,Technical Report Column,,2014-03-20
10.1016/S0304-3975(99)00330-8,Structural inclusion in the pi-calculus with replication,,2018-03-20
10.1007/978-3-319-13350-8_2,Systolic Automata and P Systems,,2014-03-20
10.1007/BF00990900,Syntactic monoids in the construction of systolic tree automata,,2019-03-20
10.1007/978-3-540-74510-5_34,A Padding Technique on Cellular Automata to Transfer Inclusions of Complexity Classes,,2011-03-20
10.1007/BF00976218,A note on Lindenmayer systems  Szilard languages  spectra  and equivalence,,2020-03-20
10.1007/BF00263589,Nonterminals  homomorphisms and codings in different variations of OL-systems,,2012-03-20
10.1007/978-3-642-10619-4_18,Abstracting Models from Execution Traces for Performing Formal Verification,,2018-03-20
10.1145/982158.982160,An unfold/fold transformation framework for definite logic programs,,2013-03-20
10.1007/10704567_24,A Parameterized Unfold/Fold Transformation Framework for Definite Logic Programs,,2020-03-20
10.1016/j.tcs.2013.01.003,Four one-shot learners for regular tree languages and their polynomial characterizability,,2016-03-20
10.1007/978-3-319-60134-2_3,On the Regularity and Learnability of Ordered DAG Languages,,2013-03-20
10.23638/LMCS-14(1:5)2018,Pushing for weighted tree automata,,2017-03-20
10.1007/978-3-642-22993-0_42,Pushing for Weighted Tree Automata,,2018-03-20
10.1007/978-3-662-44522-8_35,Complexity of equivalence and learning for multiplicity tree automata,,2012-03-20
10.1177/1729881419846739,Intruder capture algorithms considering visible intruders,,2017-03-20
10.1016/S1571-0653(04)00056-3,No Cycling in the Graphs!,,2014-03-20
10.1016/S0020-0190(02)00266-1,New bounds on the size of the minimum feedback vertex set in meshes and butterflies,,2019-03-20
10.1007/978-3-642-31770-5_9,Feedback Vertex Sets on Tree Convex Bipartite Graphs,,2019-03-20
10.1007/978-1-4757-3023-4_4,Feedback Set Problems,,2017-03-20
10.1007/s11227-014-1152-7,The decycling problem in hierarchical cubic networks,,2013-03-20
10.1007/s10878-015-9917-3,Complexity of domination  hamiltonicity and treewidth for tree convex bipartite graphs,,2012-03-20
10.1007/s00453-010-9486-x,Finding Maximum Edge Bicliques in Convex Bipartite Graphs,,2011-03-20
10.1016/j.ipl.2004.12.008,A linear time algorithm for the minimum Weighted Feedback Vertex Set on diamonds,,2018-03-20
10.1016/S0020-0190(98)00039-8,Almost Exact Minimum Feedback Vertex Set in Meshes and Butterflies,,2016-03-20
10.1109/ISPAN-FCST-ISCC.2017.45,A Study of the Decycling Problem for the Generalized Exchanged Hypercube,,2015-03-20
10.1007/978-3-642-21527-8_66,A Tabu Search Heuristic Based on k-Diamonds for the Weighted Feedback Vertex Set Problem,,2018-03-20
10.1016/j.tcs.2014.05.001,Circular convex bipartite graphs: Feedback vertex sets,,2015-03-20
10.1016/J.DAM.2018.11.017,Polynomial-time algorithms for the subset feedback vertex set problem on interval graphs and permutation graphs,,2012-03-20
10.1016/j.endm.2004.09.001,Minimum Weighted Feedback Vertex Set on Diamonds,,2020-03-20
10.1002/rsa.10069,Decycling numbers of random regular graphs,,2019-03-20
10.1007/978-3-662-55751-8_30,Polynomial-Time Algorithms for the Subset Feedback Vertex Set Problem on Interval Graphs and Permutation Graphs,,2013-03-20
10.1016/S0020-0190(00)00127-7,Feedback vertex set in hypercubes,,2015-03-20
10.1142/S0219265913500060,On the Decycling Problem in Hierarchical Hypercubes,,2012-03-20
10.1016/j.dam.2018.01.002,Degenerate matchings and edge colorings,,2014-03-20
10.1016/S0020-0190(02)00504-5,Minimum Feedback Vertex Sets in Shuffle-based Interconnection Networks,,2015-03-20
10.1016/j.tcs.2012.12.021,Feedback vertex sets on restricted bipartite graphs,,2020-03-20
10.1007/978-3-319-03780-6_24,Circular Convex Bipartite Graphs: Feedback Vertex Set,,2019-03-20
10.1007/s00224-011-9378-8,Linear-Time Algorithm for the Paired-Domination Problem in Convex Bipartite Graphs,,2017-03-20
10.1016/j.ipl.2004.03.005,New upper bounds on feedback vertex numbers in butterflies,,2019-03-20
10.4230/LIPIcs.IPEC.2018.20,Subset Feedback Vertex Set on Graphs of Bounded Independent Set Size,,2014-03-20
10.1002/net.21577,A memetic algorithm for the weighted feedback vertex set problem,,2018-03-20
10.1109/ISPAN.2004.1300477,A distributed algorithm for finding minimal feedback vertex sets in directed split-stars,,2015-03-20
10.1016/j.dam.2003.07.002,The integrity of a cubic graph,,2019-03-20
10.1007/978-3-642-22616-8_33,Tractable Feedback Vertex Sets in Restricted Bipartite Graphs,,2018-03-20
10.1007/978-3-642-14031-0_17,Finding Maximum Edge Bicliques in Convex Bipartite Graphs,,2016-03-20
10.1137/S0895480197322154,Convex-Round and Concave-Round Graphs,,2016-03-20
10.1016/j.tcs.2020.01.029,Subset feedback vertex set on graphs of bounded independent set size,,2017-03-20
10.1007/978-3-540-39890-5_27,Feedback Vertex Set and Longest Induced Path on AT-Free Graphs,,
10.23638/DMTCS-22-4-13,The LexCycle on $\overline{P_{2}\cup P_{3}}$-free Cocomparability Graphs,,2017-03-20
10.1016/j.ipl.2015.12.001,A linear time algorithm to compute a maximum weighted independent set on cocomparability graphs,,2020-03-20
10.1007/978-3-642-21204-8_26,Two Hardness Results on Feedback Vertex Sets,,2017-03-20
10.1016/j.ipl.2003.11.001,Feedback vertex sets in star graphs,,2019-03-20
10.1137/17M1120920,Linear-Time Algorithm for Maximum-Cardinality Matching on Cocomparability Graphs,,2014-03-20
10.1007/978-0-387-74759-0_178,Feedback Set Problems,,2011-03-20
10.1002/NET.V45:4,Minimal feedback vertex sets in directed split-stars,,2018-03-20
10.1109/ICNC.2012.81,On Minimum Feedback Vertex Sets in Graphs,,2018-03-20
10.1016/j.dam.2007.10.006,Feedback vertex set on AT-free graphs,,2019-03-20
10.1016/J.TCS.2007.03.051,Feedback vertex sets in mesh-based networks,,2018-03-20
10.1587/TRANSINF.E96.D.2327,On Minimum Feedback Vertex Sets in Bipartite Graphs and Degree-Constraint Graphs,,2019-03-20
10.1007/978-3-030-48966-3_18,On the Complexity of Singly Connected Vertex Deletion,,2016-03-20
10.1007/978-3-030-39881-1_14,Maximum Bipartite Subgraph of Geometric Intersection Graphs,,2015-03-20
10.1103/PhysRevE.94.022146,Spin-glass phase transitions and minimum energy of the random feedback vertex set problem.,,2014-03-20
10.1007/978-3-319-08016-1_23,Tree Convex Bipartite Graphs: NP -Complete Domination  Hamiltonicity and Treewidth,,2013-03-20
10.1007/978-3-030-48966-3,Combinatorial Algorithms: 31st International Workshop  IWOCA 2020  Bordeaux  France  June 8–10  2020  Proceedings,,2013-03-20
10.1017/S0963548307008905,Induced Forests in Regular Graphs with Large Girth,,2018-03-20
10.1007/BF01368781,Constructing sets of functions which have a givenF-cardinality,,2018-03-20
10.1007/978-3-662-05324-9,Petri Nets for Systems Engineering,,2014-03-20
10.1002/rsa.10005,Phase changes in random m-ary search trees and generalized quicksort,,2017-03-20
10.1214/10-AAP696,Limit distributions for large P\'{o}lya urns,,2017-03-20
10.37236/6374,Multivariate Normal Limit Laws for the Numbers of Fringe Subtrees in m-ary Search Trees and Preferential Attachment Trees,,2019-03-20
10.30757/ALEA.V15-16,Balanced multicolour Pólya urns via smoothing systems analysis,,2016-03-20
10.1002/rsa.20046,Asymptotic degree distribution in random recursive trees,,2015-03-20
10.1016/S0196-6774(02)00208-0,An asymptotic theory for Cauchy-Euler differential equations with applications to the analysis of algorithms,,2014-03-20
10.1239/JAP/1165505199,Central limit theorems for generalized Pólya urn models,,2015-03-20
10.1016/J.SPA.2003.12.002,Functional limit theorems for multitype branching processes and generalized Pólya urns,,2015-03-20
10.1016/S0304-3975(01)00312-7,Public data structures: counters as a special case,,2019-03-20
10.1006/JCPH.2002.7073,A multiple-heaps algorithm for parallel simulation of collision systems,,2011-03-20
10.1007/BF01407909,Algorithms for parallel memory allocation,,2011-03-20
10.1109/GCC.2007.105,Research and Realization of Transaction Concurrency Control in Grid Database,,2011-03-20
10.1016/j.procs.2015.08.409,Real-Time Languages  Timed Alternating Automata  and Timed Temporal Logics: Relationships and Specifications,,2011-03-20
10.3217/jucs-008-02-0243,Word Operation Closure and Primitivity of Languages,,2015-03-20
10.1007/978-3-642-14521-6_5,Reasoning about Loops in Total and General Correctness,,2019-03-20
10.1007/978-3-540-70594-9_14,Probabilistic Choice in Refinement Algebra,,2017-03-20
10.1007/978-3-642-16690-7_13,Probabilistic Choice  Reversibility  Loops  and Miracles,,2020-03-20
10.3233/FI-2011-589,Survey: Weighted Extended Top-down Tree Transducers Part II - Application in Machine Translation,,2017-03-20
10.1016/j.jcss.2016.05.003,Linking theorems for tree transducers,,2013-03-20
10.1007/978-3-642-31585-5_8,Streaming Tree Transducers,,2015-03-20
10.3233/FI-2011-559,Weighted Extended Tree Transducers,,2015-03-20
10.1007/978-3-642-23211-4_1,Tree Transformations and Dependencies,,2014-03-20
10.1007/978-3-642-40663-8_22,Synchronous Forest Substitution Grammars,,2019-03-20
10.1007/978-3-642-14455-4_29,Input Products for Weighted Extended Top-Down Tree Transducers,,2011-03-20
10.1142/S0129054115400109,The Power of Weighted Regularity-Preserving Multi Bottom-Up Tree Transducers,,2013-03-20
10.1137/070699160,The Power of Extended Top-Down Tree Transducers,,2014-03-20
10.1016/j.jcss.2016.11.001,Determinacy and rewriting of functional top-down and MSO tree transformations,,2017-03-20
10.1162/coli.2008.07-051-R2-03-57,Training Tree Transducers,,2014-03-20
10.1093/JIGPAL/JZZ022,A proof-search system for the logic of likelihood,,2020-03-20
10.1007/s10849-009-9101-1,Dynamic Non-Commutative Logic,,2016-03-20
10.1007/978-3-540-76837-1_65,Parallel First-Order Dynamic Logic and Its Expressiveness and Axiomatization,,2017-03-20
10.4216/JPSSJ.45.17,Formalization of Counterfactual Inference by Dynamic Logic,,2019-03-20
10.1007/s11225-010-9224-z,A Contraction-free and Cut-free Sequent Calculus for Propositional Dynamic Logic,,2011-03-20
10.1007/s10817-020-09544-1,Loop-Type Sequent Calculi for Temporal Logic,,2012-03-20
10.1007/978-3-030-65840-3,Dynamic Logic. New Trends and Applications: Third International Workshop  DaLí 2020  Prague  Czech Republic  October 9–10  2020  Revised Selected Papers,,2016-03-20
10.1007/S10986-006-0033-Z,A sequent calculus for logic of knowledge and past time: Completeness and decidability,,2011-03-20
10.3166/jancl.14.55-104,A Hierarchical Completeness Proof for Propositional Interval Temporal Logic with Finite Time,,2014-03-20
10.1007/978-3-319-96145-3_38,Safety-Aware Apprenticeship Learning,,2016-03-20
10.24963/ijcai.2018/286,Counterexample-Guided Data Augmentation,,2013-03-20
10.1049/TRIT.2018.1008,Artificial intelligence in Internet of things,,2018-03-20
10.1007/s10817-018-9499-8,Explaining AI Decisions Using Efficient Methods for Learning Sparse Boolean Formulae,,2017-03-20
10.1007/978-3-030-24258-9_25,Verifying Binarized Neural Networks by Angluin-Style Learning,,2014-03-20
10.1145/2228360.2228425,Combining Induction  Deduction  and Structure for Verification and Synthesis,,2012-03-20
10.1109/ICRA.2019.8793828,Formal Policy Learning from Demonstrations for Reachability Properties,,2011-03-20
10.1109/TCAD.2016.2633961,Design Automation of Cyber-Physical Systems: Challenges  Advances  and Opportunities,,2013-03-20
10.1007/978-3-319-49025-0_13,Verifying Security Properties in Modern SoCs Using Instruction-Level Abstractions,,2015-03-20
10.1007/978-3-319-73721-8_18,Abstraction-Based Interaction Model for Synthesis,,2011-03-20
10.1109/ICCABS.2015.7344720,SANJAY: Automatically synthesizing visualizations of flow cytometry data using decision procedures,,2012-03-20
10.1145/3083157.3083159,Turning coders into makers: the promise of embedded design generation,,2015-03-20
10.1109/DSN.2018.00027,Algorithmic Attack Synthesis Using Hybrid Dynamics of Power Grid Critical Infrastructures,,2015-03-20
10.1007/978-3-319-57666-4_7,Constrained Synthesis from Component Libraries,,2017-03-20
10.1145/3425898.3426952,Modeling black-box components with probabilistic synthesis,,2019-03-20
10.17706/JSW.14.6.227-246,Program Synthesis and Vulnerability Injection Using a Grammar VAE,,2017-03-20
10.1007/978-3-030-53291-8_32,Decidable Synthesis of Programs with Uninterpreted Functions,,2018-03-20
10.1016/j.scico.2018.10.003,Constrained synthesis from component libraries,,2014-03-20
10.1049/IET-CPS.2018.5006,Survey on automated symbolic verification and its application for synthesising cyber-physical systems,,2017-03-20
10.1007/s00236-019-00340-y,Programming by predicates: a formal model for interactive synthesis,,2013-03-20
10.1016/j.ifacol.2018.08.002,Generating Dominant Strategies for Continuous Two-Player Zero-Sum Games,,2012-03-20
10.1007/978-3-030-25543-5_23,Inferring Inductive Invariants from Phase Structures,,2017-03-20
10.1007/S10703-019-00332-1,TeLEx: learning signal temporal logic from positive examples using tightness metric,,2017-03-20
10.1109/MEMCOD.2018.8556946,UCLID5: Integrating Modeling  Verification  Synthesis and Learning,,2017-03-20
10.1109/FMCAD.2016.7886664,On ∃ ∀ ∃! solving: A case study on automated synthesis of magic card tricks,,2012-03-20
10.1007/978-3-319-96142-2_17,Understanding and Extending Incremental Determinization for 2QBF,,2014-03-20
10.1007/978-3-030-28423-7_1,Trust  Resilience and Interpretability of AI Models,,2012-03-20
10.1145/3371073,Complexity and information in invariant inference,,2018-03-20
10.1145/3385412.3386025,Question selection for interactive program synthesis,,2011-03-20
10.3390/computers9020027,Cognification of Program Synthesis - A Systematic Feature-Oriented Analysis and Future Direction,,2014-03-20
10.1007/978-3-662-54577-5_16,Interpolation-Based GR(1) Assumptions Refinement,,2015-03-20
10.1007/978-3-319-67531-2_13,TeLEx: Passive STL Learning Using Only Positive Examples,,2017-03-20
10.1007/978-3-030-25540-4_17,Overfitting in Synthesis: Theory and Practice,,2011-03-20
10.1145/3388218.3388222,Analyzing Cyber-Physical Systems from the Perspective of Artificial Intelligence,,2012-03-20
10.1007/978-3-319-57288-8_7,On Learning Sparse Boolean Formulae for Explaining AI Decisions,,2013-03-20
10.15607/RSS.2017.XIII.049,Learning Lyapunov (Potential) Functions from Counterexamples and Demonstrations,,2012-03-20
10.1109/PACT.2019.00013,Type-Directed Program Synthesis and Constraint Generation for Library Portability,,2015-03-20
10.1186/s12859-017-1662-4,A theorem proving approach for automatically synthesizing visualizations of flow cytometry data,,2020-03-20
10.1007/s10514-018-9791-9,Learning control lyapunov functions from counterexamples and demonstrations,,2019-03-20
10.1007/978-3-319-95246-8_24,Cyber-Physical Systems Education: Explorations and Dreams,,2013-03-20
10.1109/TCAD.2017.2764482,Template-Based Parameterized Synthesis of Uniform Instruction-Level Abstractions for SoC Verification,,2014-03-20
10.1515/geoca-2018-0013,Garavellite and associated sulphosalts from the Strieborná vein in the Rožňava ore field (Western Carpathians),,2013-03-20
10.1515/10.15/QUAGEO–2017–0020,Differences in the rural structure of Slovakia in the context of socio-spatial polarisation,,2017-03-20
10.1177/0954008310364423,Thermo-oxidative Degradation of Polymers Containing Phosphorus in the Main Chain,,2014-03-20
10.1201/B15664-63,Thermal Composition Measurement,,2013-03-20
10.1007/978-3-540-70881-0_12,Chase of Recursive Queries,,2012-03-20
10.1007/BF00268842,Termination conventions and comparative semantics,,2016-03-20
10.1007/978-3-030-31038-7,Unifying Theories of Programming: 7th International Symposium  UTP 2019  Dedicated to Tony Hoare on the Occasion of His 85th Birthday  Porto  Portugal  October 8  2019  Proceedings,,2016-03-20
10.1007/978-3-030-31038-7_5,Probabilistic Semantics for RoboChart - A Weakest Completion Approach,,2018-03-20
10.1007/s00236-006-0029-5,Verification conditions are code,,2013-03-20
10.1109/CDC.2008.4738754,On the analysis of G-queues under heavy traffic,,2019-03-20
10.21936/SI2006_V27.N4.564,Simulation of a multi-server queue with negative arrivals,,2018-03-20
10.1007/s10586-007-0016-9,Mean-variance performance optimization of response time in a tandem router network with batch arrivals,,2019-03-20
10.1007/S12351-017-0369-7,Equilibrium customer behavior in the M/M/1 retrial queue with working vacations and a constant retrial rate,,2015-03-20
10.1142/9781860948923_0010,Quantiles of Sojourn Times,,2012-03-20
10.1109/IPDPS.2005.312,Optimization of a tandem M/GI/1 router network with batch arrivals,,2014-03-20
10.1109/LCN.2002.1181854,The MM /spl Sigma//sub k=1//sup K/ CPP/sub k//GE/c/L G-queue and its application to the analysis of the load balancing in MPLS networks,,2014-03-20
10.1016/j.peva.2004.07.019,A single-server G-queue in discrete-time with geometrical arrival and service process,,2018-03-20
10.1016/j.peva.2010.12.005,A new solution for a queueing model of a manufacturing cell with negative customers under a rotation rule,,2013-03-20
10.1109/QEST.2004.10045,Sojourn time distributions in modulated G-queues with batch processing,,2020-03-20
10.1016/j.compeleceng.2012.04.002,An efficient model for dimensioning an ATA-based virtual storage system,,2012-03-20
10.1023/A:1015842221910,The MM CPP/GE/c G-Queue: Sojourn Time Distribution,,2018-03-20
10.1109/NOMS.2006.1687629,Performance Optimization of Mean Response Time in a Tandem Router Network with Batch Arrivals,,2012-03-20
10.1109/MASCOT.2004.1348192,An optimisation model for a two-node router network,,2014-03-20
10.3934/JIMO.2015.11.779,On a discrete-time GI$^X$/Geo/1/N-G queue with randomizedworking vacations and at most $J$ vacations,,2019-03-20
10.1080/15326340903291347,The Geo/G/1 Queue with Negative Customers and Disasters,,2014-03-20
10.1016/j.mcm.2010.08.006,Bibliography on G-networks  negative customers and applications,,2019-03-20
10.1016/j.peva.2006.05.001,The MM sum(k=1 to K of CPPk/GE/c/L) G-queue with heterogeneous servers: Steady state solution and an application to performance evaluation,,2013-03-20
10.1016/J.APM.2009.09.015,A GI/Geo/1 queue with negative and positive customers,,2013-03-20
10.1007/978-3-642-02742-0_19,Spectral Expansion Solutions for Markov-Modulated Queues,,2015-03-20
10.1007/978-3-642-02742-0_26,Generalized QBD Processes  Spectral Expansion and Performance Modeling Applications,,2018-03-20
10.1109/QEST.2004.41,Sojourn time distributions in modulated G-queues with batch processing,,2020-03-20
10.1016/J.APM.2009.10.025,An efficient computation algorithm for a multiserver feedback retrial queue with a large queueing capacity,,2019-03-20
10.1016/J.JKSS.2013.03.002,Discrete-time GIX/Geo/1/N queue with negative customers and multiple working vacations,,2014-03-20
10.18280/jesa.530110,A Model for Compound Poisson Process Queuing System with Batch Arrivals and Services,,2012-03-20
10.1023/A:1023606704003,G-Networks: Development of the Theory of Multiplicative Networks,,2013-03-20
10.1007/978-3-319-47166-2_40,A Calculus for Open Ensembles and Their Composition,,2014-03-20
10.4230/LIPIcs.CSL.2017.25,Precongruence Formats with Lookahead through Modal Decomposition,,2011-03-20
10.1007/978-3-540-48654-1_20,Weak Sequential Composition in Process Algebras,,2014-03-20
10.1007/978-3-319-27810-0_16,Rule Formats for Bounded Nondeterminism in Structural Operational Semantics,,2019-03-20
10.4204/EPTCS.18.1,A Bisimulation-based Method for Proving the Validity of Equations in GSOS Languages,,2011-03-20
10.1007/s00224-018-9873-2,Process Algebra with Strategic Interleaving,,2015-03-20
10.1017/S0960129511000417,Proving the validity of equations in GSOS languages using rule-matching bisimilarity,,2019-03-20
10.7561/SACS.2020.2.205,Probabilistic process algebra and strategic interleaving,,2011-03-20
10.1109/SCIS-ISIS.2014.7044708,Enzymatic numerical P systems for basic operations and sorting,,2013-03-20
10.1109/BICTA.2008.4656718,A method to encrypt information with DNA computing,,2018-03-20
10.1007/978-3-030-15127-0_14,A New Communication P System Model Based on Hypergraph,,2011-03-20
10.1142/S012905411240062X,A Tissue P System Based solution to quadratic Assignment Problem,,2017-03-20
10.1142/S0129054111008222,Logic and Arithmetic Operations with a Constant Number of Steps in Membrane Computing,,2015-03-20
10.12733/JICS20101975,A Variant of P System with a Chain Structure,,2018-03-20
10.1109/BICTA.2009.5338159,Solving satisfiability problems with membrane algorithms,,2015-03-20
10.1016/J.IJLEO.2013.08.032,A hybrid membrane evolutionary algorithm for solving constrained optimization problems,,2011-03-20
10.1109/BICTA.2010.5645276,P systems with shuffle operation,,2016-03-20
10.1016/j.tcs.2014.05.004,Accelerated execution of P systems with active membranes to solve the N-queens problem,,2020-03-20
10.3217/jucs-018-13-1782,P Systems with Shuffle Operation and Catalytic-Like Rules,,2014-03-20
10.1007/978-3-642-05253-8_7,A Uniform Solution to HPP in Terms of Membrane Computing,,2015-03-20
10.1109/ICNC.2012.46,Asynchronous P Systems for Graph Coloring Problems,,2019-03-20
10.1007/978-3-642-37015-1_60,Solving Directed Hamilton Path Problem in Parallel by Improved SN P System,,2011-03-20
10.1109/SCIS-ISIS.2016.0192,Solving Subset Sum Problem Using EN P System with Active Membranes,,2013-03-20
10.14569/IJACSA.2017.080949,A P System for Solving All-Solutions of TSP,,2018-03-20
10.15803/IJNC.8.2_141,An asynchronous P system with branch and bound for solving the satisfiability problem,,2015-03-20
10.1587/TRANSINF.E95.D.746,Solving SAT and Hamiltonian Cycle Problem Using Asynchronous P Systems,,2019-03-20
10.15803/IJNC.4.1_2,Asynchronous P systems for hard graph problems,,2012-03-20
10.1109/IPDPSW.2013.16,Asynchronous P Systems for the Maximum Independent Set and Related Graph Problems,,2013-03-20
10.1007/978-3-642-36751-9_20,On Efficient Algorithms for SAT,,2011-03-20
10.1007/978-3-319-28475-0_14,On the Communication Complexity of the Vertex Cover Problem and 3-Satisfiability Problem in ECP Systems,,2020-03-20
10.1016/j.tcs.2017.12.013,Solving the N-Queens problem using dP systems with active membranes,,2017-03-20
10.1007/S11434-011-4928-7,A membrane evolutionary algorithm for DNA sequence design in DNA computing,,2013-03-20
10.1016/J.IJLEO.2016.06.016,A P system for Hamiltonian cycle problem,,2019-03-20
10.15803/ijnc.10.2_159,P systems with branch and bound for solving two hard graph problems,,2019-03-20
10.1109/NABIC.2010.5716305,Asynchronous P systems for SAT and Hamiltonian cycle problem,,2012-03-20
10.1109/CANDAR.2016.0104,An Asynchronous P System for MAX-SAT,,2011-03-20
10.1007/978-94-007-4516-2_8,Arithmetic P System Without Priority Rules,,2015-03-20
10.33969/eecs.v2.016,Research of Improved Tissue-like P System for Solving Satisfiability Problem,,2015-03-20
10.1109/IPDPS.2009.5160884,Computation with a constant number of steps in membrane computing.,,2015-03-20
10.1007/978-981-10-3611-8_16,A Family P System of Realizing RSA Algorithm,,2019-03-20
10.1109/CANDARW.2019.00051,An Asynchronous P System with Branch and Bound for Solving Hamiltonian Cycle Problem,,2011-03-20
10.1155/2012/415242,Communication P Systems on Simplicial Complexes with Applications in Cluster Analysis,,2014-03-20
10.3390/computation5030032,Anomalous Diffusion within the Transcriptome as a Bio-Inspired Computing Framework for Resilience,,2015-03-20
10.15837/IJCCC.2010.4.2512,Solving Vertex Cover Problem by Means of Tissue P Systems with Cell Separation,,2011-03-20
10.3233/FI-2019-1760,The Hamiltonian Cycle and Travelling Salesman Problems in cP Systems,,2012-03-20
10.1007/978-3-319-11104-9_42,Membrane System for Decision-Making Problems,,2013-03-20
10.1109/BICTA.2009.5338106,Solving multidimensional 0–1 knapsack problem by tissue P systems with cell division,,2013-03-20
10.12733/JICS20104502,P Systems Based on the MapReduce for the Most Value Problem,,2012-03-20
10.1109/CANDARW.2019.00049,An Asynchronous P System Using Branch and Bound for Minimum Graph Coloring,,2019-03-20
10.1109/CANDAR.2017.71,An Asynchronous P System Using Branch and Bound for the Satisfiability Problem,,2019-03-20
10.1007/978-3-642-36751-9,Membrane Computing,,2012-03-20
10.1007/11494669_19,Modeling Neural Processes in Lindenmayer Systems,,2020-03-20
10.1109/CANDAR.2014.38,Reaction Systems for Logical Operations and Sorting,,2014-03-20
10.1109/CANDARW51189.2020.00088,An asynchronous P system for counting sort,,2017-03-20
10.1007/978-3-319-03756-1_23,Accelerated Simulation of Membrane Computing to Solve the N-queens Problem on Multi-core,,2019-03-20
10.1109/BICTA.2009.5338122,Solving 3-coloring problem by tissue P systems with cell separation,,2017-03-20
10.1109/BIC-TA.2011.41,P Systems with 2D Picture Grammars,,2014-03-20
10.1155/2013/424108,A Linear Time Complexity of Breadth-First Search Using P System with Membrane Division,,2017-03-20
10.1109/CANDAR.2015.21,Asynchronous P Systems for a Compare-and-Exchange Operation and Sorting,,2017-03-20
10.1007/s41965-020-00037-z,Tissue P systems with promoter simulation with MeCoSim and P-Lingua framework,,2013-03-20
10.1109/FOCS.2014.71,The Dyck Language Edit Distance Problem in Near-Linear Time,,2018-03-20
10.1109/FOCS.2015.17,Language Edit Distance and Maximum Likelihood Parsing of Stochastic Grammars: Faster Algorithms and Connection to Fundamental Graph Problems,,2015-03-20
10.1051/ita/2017012,Non-primitive words of the form pqm,,2018-03-20
10.1016/j.jlamp.2015.10.009,Extensions of Configuration Structures,,2020-03-20
10.1109/SOSE.2014.12,Correct-by-Construction Web Service Architecture,,2019-03-20
10.4230/LIPIcs.FSCD.2019.23,The Sub-Additives: A Proof Theory for Probabilistic Choice extending Linear Logic,,2018-03-20
10.4230/LIPIcs.FSTTCS.2019.30,Minimisation of Event Structures,,2016-03-20
10.1007/3-540-45605-8,Process Algebra and Probabilistic Methods: Performance Modeling and Verification,,2017-03-20
10.1017/S0960129518000452,Constructing weak simulations from linear implications for processes with private names,,2013-03-20
10.1007/978-3-319-51963-0_11,Configuration- and Residual-Based Transition Systems for Event Structures with Asymmetric Conflict,,2019-03-20
10.1109/TASE.2007.5,A Semantic Preorder on Refinement and Fairness,,2014-03-20
10.1145/3387909,Monotone Precision and Recall Measures for Comparing Executions and Specifications of Dynamic Systems,,2011-03-20
10.1016/j.is.2011.04.002,Process compliance analysis based on behavioural profiles,,2019-03-20
10.1016/j.jlamp.2015.12.007,Declarative event based models of concurrency and refinement in psi-calculi,,2011-03-20
10.1007/978-3-642-30409-5_7,Ad hoc Changes of Process Instances,,2013-03-20
10.1007/978-3-540-75227-1_10,Maintaining Information Flow Security Under Refinement and Transformation,,2016-03-20
10.1007/978-3-319-91268-4_7,From Event-Oriented Models to Transition Systems,,2016-03-20
10.1007/3-540-48340-3,Mathematical Foundations of Computer Science 1999,,2014-03-20
10.47893/ijcct.2015.1269,A Structural and Behavioral Analysis Approach for Process Model Evaluation.,,2020-03-20
10.1016/j.is.2010.12.004,Perceived consistency between process models,,2016-03-20
10.1109/ISISE.2008.15,Event Structure Model for Interactive Markov Chains,,2014-03-20
10.1016/j.ic.2010.12.002,Model-checking games for fixpoint logics with partial order models,,2013-03-20
10.1007/978-3-642-30409-5_12,Constraint-Based Process Models,,2013-03-20
10.1109/ICECCS.2005.79,The preservation of interleaving equivalences,,2019-03-20
10.1016/j.entcs.2005.04.013,Truly Concurrent Logic via In-Between Specification,,2012-03-20
10.3233/FI-2015-1243,A Causal View on Non-Interference,,2019-03-20
10.1007/978-3-642-30409-5_9,Process Evolution and Instance Migration,,2014-03-20
10.1006/inco.2001.2967,Vertical Implementation,,2017-03-20
10.3233/FI-2017-1531,Semantics for Specialising Attack Trees based on Linear Logic,,2013-03-20
10.1007/978-3-540-71316-6_23,The Java Memory Model: Operationally  Denotationally  Axiomatically,,2017-03-20
10.1007/3-540-44988-4_7,Executing Transactions in Zero-Safe Nets,,2019-03-20
10.1007/978-3-540-30468-5_9,Disjoint and Overlapping Process Changes: Challenges  Solutions  Applications,,2018-03-20
10.1007/978-3-642-31131-4_11,Maximal Confluent Processes,,2016-03-20
10.1016/j.ipl.2003.11.008,A completed hierarchy of true concurrent equivalences,,2019-03-20
10.1016/j.jlap.2006.11.002,Reversing algebraic process calculi,,2014-03-20
10.1109/SEFM.2005.30,On compatibility and behavioural substitutability of component protocols,,2019-03-20
10.1007/978-3-642-15375-4_11,A Logic for True Concurrency,,2019-03-20
10.4230/LIPIcs.CONCUR.2016.31,Private Names in Non-Commutative Logic,,2015-03-20
10.1016/j.tcs.2017.10.004,Multilevel transitive and intransitive non-interference  causally,,2018-03-20
10.1007/978-3-642-30409-5_13,User- and Data-Driven Processes,,2018-03-20
10.1007/978-3-642-45005-1_41,Process Refinement Validation and Explanation with Ontology Reasoning,,2019-03-20
10.4204/EPTCS.300.6,Conflict vs Causality in Event Structures,,2014-03-20
10.1016/B978-044482830-9/50033-3,Process Algebras with Localities,,2014-03-20
10.1145/3167132.3167141,Conceptual modeling of inter-dependencies between processes and data,,2018-03-20
10.4204/EPTCS.166.3,Concurrency Models with Causality and Events as Psi-calculi,,2017-03-20
10.6100/IR644335,Process mining in flexible environments,,2018-03-20
10.1109/SAMOS.2014.6893194,On tokens and signals: Bridging the semantic gap between dataflow models and hardware implementations,,2013-03-20
10.1007/978-3-642-19589-1_7,Generalised Computation of Behavioural Profiles Based on Petri-Net Unfoldings,,2017-03-20
10.31144/bncc.cs.2542-1972.2019.n43.p21-38,Transition system semantics for flow event structures,,2017-03-20
10.1016/j.entcs.2007.08.018,Reversibility and Models for Concurrency,,2019-03-20
10.1007/978-3-319-12736-1_25,Hereditary History-Preserving Bisimilarity: Logics and Automata,,2013-03-20
10.1007/978-3-319-08494-7_1,Concurrency and Reversibility,,2011-03-20
10.1016/B978-044482830-9/50034-5,Action Refinement,,2011-03-20
10.4230/LIPIcs.CALCO.2015.101,Partial Higher-dimensional Automata,,2014-03-20
10.1109/EDOC.2006.71,Towards Advanced Interaction Design Concepts,,2014-03-20
10.1007/s00354-018-0040-8,Reversing Event Structures,,2019-03-20
10.1561/1000000034,Rigorous System Design,,2014-03-20
10.1007/978-3-540-78769-3_14,Action Refinement in Process Algebra and Security Issues,,2019-03-20
10.1007/978-3-642-30409-5_16,Alaska Simulator Toolset,,2016-03-20
10.4204/EPTCS.64.9,Synchrony vs. Causality in Asynchronous Petri Nets,,2018-03-20
10.1016/j.ipl.2007.03.008,Generating non-conspiratorial executions,,2013-03-20
10.1007/978-3-642-13094-6_37,The ICoP Framework: Identification of Correspondences between Process Models,,2017-03-20
10.1145/1141277.1141712,Symmetry in event structures,,2011-03-20
10.1016/j.entcs.2005.12.063,Interface Automata with Complex Actions,,2017-03-20
10.3929/ETHZ-A-010892776,Formal Verification of Fault-Tolerant Systems,,2020-03-20
10.1007/3-540-45541-8,Unifying Petri Nets,,2017-03-20
10.4204/EPTCS.209.4,A logic for n-dimensional hierarchical refinement,,2016-03-20
10.1007/978-3-319-07734-5_11,Non-interference by Unfolding,,2017-03-20
10.1007/11766155_19,Possibilistic Information Flow Control in MAKS and Action Refinement,,2012-03-20
10.1007/3-540-36206-1_26,Hereditary History Preserving Bisimulation Is Decidable for Trace-Labelled Systems,,2016-03-20
10.1007/978-3-642-30409-5_2,Process-Aware Information Systems,,2014-03-20
10.1007/978-3-642-30409-5_8,Monitoring and Mining Flexible Processes,,2018-03-20
10.1155/2014/352152,Unified Mathematical Framework for Slicing and Symmetry Reduction over Event Structures,,2017-03-20
10.1007/978-3-642-00596-1_5,Logics and Bisimulation Games for Concurrency  Causality and Conflict,,2020-03-20
10.1109/PDCAT.2005.231,Symmetry and Autobisimulation,,2012-03-20
10.1007/s11219-011-9165-4,Model-based pairwise testing for feature interaction coverage in software product line engineering,,2011-03-20
10.1007/3-540-46541-3_30,Hereditary History Preserving Bisimilarity Is Undecidable,,2012-03-20
10.1007/3-540-45541-8_12,Transactions and Zero-Safe Nets,,2020-03-20
10.1007/978-3-642-13094-6_38,Process Compliance Measurement Based on Behavioural Profiles,,2012-03-20
10.4230/LIPIcs.CONCUR.2020.7,How Reversibility Can Solve Traditional Questions: The Example of Hereditary History-Preserving Bisimulation,,2011-03-20
10.1007/978-3-642-30409-5_5,Process Configuration Support,,2012-03-20
10.1109/TASE.2007.49,Symmetry in Process Algebra,,2017-03-20
10.1006/inco.1999.2819,Zero-Safe Nets: Comparing the Collective and Individual Token Approaches,,2013-03-20
10.1007/978-3-319-39519-7_1,Multilevel Transitive and Intransitive Non-interference  Causally,,2016-03-20
10.1007/978-3-642-30409-5_11,Concretizing Loosely Specified Processes,,2020-03-20
10.29007/KLCL,The Glory of the Past and Geometrical Concurrency.,,2017-03-20
10.1007/978-3-642-21640-4_21,A Foundational Approach for Managing Process Variability,,2018-03-20
10.1016/S1571-0661(05)80495-5,Taking decisions late: end-based choice combined with action refinement,,2013-03-20
10.1007/978-3-540-87877-3_21,On the Formal Semantics of Change Patterns in Process-Aware Information Systems,,2019-03-20
10.1093/logcom/exv032,On fixpoint logics and equivalences for processes with restricted nondeterminism,,2015-03-20
10.1007/978-3-319-94634-4,Comparing and Aligning Process Representations,,2013-03-20
10.4018/978-1-4666-4301-7.CH022,A Method for Model-Driven Information Flow Security,,2016-03-20
10.4204/EPTCS.120.3,Adding Priority to Event Structures,,2016-03-20
10.11648/J.AJOMIS.20190402.11,Detecting FNE in Sound Free-choice Petri Net with Data,,2020-03-20
10.1007/s00236-019-00356-4,Coupled similarity: the first 32 years,,2017-03-20
10.18452/2477,Entwurf und Verifikation nachrichtenbasierter verteilter Algorithmen durch verteilende Verfeinerung,,2016-03-20
10.18452/15643,Entwurf und Verifikation von Petrinetzmodellen verteilter Algorithmen durch Verfeinerung unverteilter Algorithmen,,2016-03-20
10.1109/ICECCS.2001.930164,Action refinement for true concurrent real time,,2020-03-20
10.1007/978-3-642-30409-5_15,AristaFlow BPM Suite,,2011-03-20
10.1007/978-3-642-30409-5,Enabling Flexibility in Process-Aware Information Systems,,2019-03-20
10.1007/978-3-319-40578-0_1,Rigid Families for the Reversible π-Calculus,,2012-03-20
10.1007/978-3-642-30409-5_3,Flexibility Issues in Process-Aware Information Systems,,2012-03-20
10.1007/978-3-642-21834-7_14,On the Origin of Events: Branching Cells as Stubborn Sets,,2017-03-20
10.1007/978-3-540-78163-9_13,Model Checking for Action Abstraction,,2012-03-20
10.1007/978-3-319-15317-9_17,Intransitive Non-Interference by Unfolding,,2014-03-20
10.18725/OPARU-3244,Abstraction  visualization  and evolution of process models,,2017-03-20
10.1007/978-3-642-31131-4_10,Data and Abstraction for Scenario-Based Modeling with Petri Nets,,2017-03-20
10.1007/978-3-319-44960-9,Behavioural Models,,2020-03-20
10.1587/TRANSINF.E94.D.1321,Comparing Process Behaviors with Finite Chu Spaces,,2012-03-20
10.1007/s10796-007-9040-9,The adequacy of languages for representing interaction mechanisms,,2013-03-20
10.1017/S0960129511000429,A hierarchy of reverse bisimulations on stable configuration structures,,2014-03-20
10.1017/S0960129513000510,Event Identifier Logic,,2020-03-20
10.1007/11914853_19,Change Mining in Adaptive Process Management Systems,,2011-03-20
10.1007/978-0-387-39940-9_3527,Schema Evolution in Process Management Systems,,2019-03-20
10.1109/SCC.2009.58,Change Propagation in Process Models Using Behavioural Profiles,,2011-03-20
10.1016/j.tcs.2003.10.031,Well-behaved flow event structures for parallel composition and action refinement,,2016-03-20
10.1007/978-3-642-30409-5_17,Existing Tool Support for Flexible Processes,,2016-03-20
10.18725/OPARU-2462,A formal semantics of time patterns for process-aware information systems,,2020-03-20
10.1109/LICS.2006.30,Independence and Concurrent Separation Logic,,2017-03-20
10.1504/IJBPIM.2008.019348,Using process mining to learn from process changes in evolutionary systems,,2012-03-20
10.1109/ACCESS.2019.2933247,Behavior Analysis for Electronic Commerce Trading Systems: A Survey,,2011-03-20
10.1007/978-3-540-45187-7_4,Bundle Event Structures and CCSP,,2020-03-20
10.1016/j.jlamp.2016.08.004,Contextual equivalences in configuration structures and reversibility,,2019-03-20
10.4204/EPTCS.148.5,Actor Network Procedures as Psi-calculi for Security Ceremonies,,2019-03-20
10.1016/j.jlamp.2015.07.004,Reversibility and asymmetric conflict in event structures,,2011-03-20
10.1007/978-3-319-08494-7,Reversible Computation,,2012-03-20
10.1145/2611462.2611517,Rigorous system design,,2017-03-20
10.12785/AMIS/080454,Approximate Bisimulation Equivalence and Variable Refinement,,2015-03-20
10.1007/3-540-45605-8_6,Action Refinement for Probabilistic Processes with True Concurrency Models,,2019-03-20
10.1007/11690634_17,Reversing Algebraic Process Calculi,,2018-03-20
10.1007/3-540-48340-3_32,On Plain and Hereditary History-Preserving Bisimulation,,2016-03-20
10.1007/978-3-642-30409-5_4,Process Modeling and Flexibility-by-Design,,2015-03-20
10.1007/978-3-642-30409-5_10,Business Process Compliance,,2014-03-20
10.1007/s00165-006-0088-y,Action Refinement Applied to Late Decisions,,2011-03-20
10.1007/978-3-642-40184-8_22,Reversibility and Asymmetric Conflict in Event Structures,,2014-03-20
10.29007/kkds,Unifying Equivalences for Timed Transition Systems,,2011-03-20
10.1007/978-3-030-39322-9_15,Language Inclusion for Finite Prime Event Structures,,2012-03-20
10.1007/s11265-015-0971-y,Tokens vs. Signals: On Conformance between Formal Models of Dataflow and Hardware,,2019-03-20
10.1016/j.scico.2017.06.001,Simulation-based matching of cloud applications,,2019-03-20
10.1007/978-3-540-73770-4_8,Symbolic Execution Techniques for Refinement Testing,,2019-03-20
10.1016/j.tcs.2013.01.002,Information flow in systems with schedulers  Part II: Refinement,,2012-03-20
10.4204/EPTCS.189.7,Reversible Barbed Congruence on Configuration Structures,,2012-03-20
10.1007/3-540-45793-3_14,Configuration Theories,,2016-03-20
10.4204/EPTCS.18.5,Reverse Bisimulations on Stable Configuration Structures,,2011-03-20
10.1007/978-3-540-30206-3_17,The Influence of Durational Actions on Time Equivalences,,2015-03-20
10.1109/ICSESS.2017.8342914,Variable refinement on semi-algebraic flow event structure,,2019-03-20
10.1007/978-3-642-28729-9_22,On Distributability of Petri Nets,,2018-03-20
10.4204/EPTCS.64.8,A Logic with Reverse Modalities for History-preserving Bisimulations,,
10.1007/978-3-642-30409-5_14,A Framework for Object-Aware Processes,,2015-03-20
10.1016/S1571-0661(05)80496-7,Refinement of actions in a real-time process algebra with a true concurrency model,,2019-03-20
10.1007/3-540-45694-5_36,Refinement-Robust Fairness,,2012-03-20
10.2168/LMCS-9(3:17)2013,On Characterising Distributability,,2014-03-20
10.1007/b100824,Formal Techniques  Modelling and Analysis of Timed and Fault-Tolerant Systems,,2013-03-20
10.1109/HASE.2000.895442,A stochastic extension of a behavioural subset of UML statechart diagrams,,2014-03-20
10.1016/J.IS.2010.09.006,Similarity of business process models: Metrics and evaluation,,2019-03-20
10.1016/j.is.2015.10.002,Process time patterns: A formal foundation,,2011-03-20
10.1016/J.MECHRESCOM.2012.03.008,Random walk on graphs: An application to the double diffusivity model,,2017-03-20
10.3233/FI-2011-505,Multiplicative Transition Systems,,2018-03-20
10.4204/EPTCS.324.7,On the Parameterized Complexity of Synthesizing Boolean Petri Nets With Restricted Dependency (Technical Report),,2014-03-20
10.1007/978-3-540-27793-4_1,Positive Non-interference in Elementary and Trace Nets,,
10.1017/S0960129509990120,Structural non-interference in elementary and trace nets,,2019-03-20
10.1109/TSMCA.2008.923043,Extending WebDAV With Multiple-Granularity Locking,,2016-03-20
10.1007/978-3-319-07151-0_13,POSIX Regular Expression Parsing with Derivatives,,2011-03-20
10.4230/LIPIcs.MFCS.2019.71,From Regular Expression Matching to Parsing,,2018-03-20
10.1007/978-3-642-39274-0_7,Two-Pass Greedy Regular Expression Parsing,,2014-03-20
10.1007/978-3-642-21254-3_32,Bit-coded Regular Expression Parsing,,2020-03-20
10.1109/WCRE.2003.1287251,RegReg: a lightweight generator of robust parsers for irregular languages,,2015-03-20
10.7287/PEERJ.PREPRINTS.1248V1,Efficiently extracting full parse trees using regular expressions with capture groups,,2019-03-20
10.1007/978-3-540-27836-8_53,Greedy Regular Expression Matching,,2020-03-20
10.1007/978-3-642-18098-9_25,Disambiguation in Regular Expression Matching via Position Automata with Augmented Transitions,,2013-03-20
10.1007/978-3-319-10882-7_14,Optimally Streaming Greedy Regular Expression Parsing,,2018-03-20
10.1007/s00236-020-00366-7,A deterministic parsing algorithm for ambiguous regular expressions,,2015-03-20
10.1109/CIT.2017.34,Predicting Student Performance in an ITS Using Task-Driven Features,,2020-03-20
10.1007/978-3-319-22360-5_4,From Ambiguous Regular Expressions to Deterministic Parsing Automata,,2016-03-20
10.7892/BORIS.67052,Scaleable Code Clone Detection,,2011-03-20
10.3233/FI-2017-1599,On Determining the AND-OR Hierarchy in Workflow Nets,,2018-03-20
10.1007/978-3-642-31875-7_3,Strategic Alignment of Business Processes,,2015-03-20
10.1007/s00236-018-0328-7,Associative composition of components with double-sided interfaces,,2012-03-20
10.1016/j.infsof.2016.01.001,Specification of behavioral anti-patterns for the verification of block-structured Collaborative Business Processes,,2015-03-20
10.1007/978-3-319-49055-7_10,Improved Prototype Embedding Based Generalized Median Computation by Means of Refined Reconstruction Methods,,2014-03-20
10.4000/MSH.11746,UN PANORAMA DES APPROXIMATIONS EN NORME DU SUPREMUM POUR LA CLASSIFICATION,,2020-03-20
10.1101/2020.09.14.296418,TIMEOR: a web-based tool to uncover temporal regulatory mechanisms from multi-omics data,,2017-03-20
10.1007/978-3-540-74240-1_27,Efficient Parameterized Preprocessing for Cluster Editing,,2019-03-20
10.1145/1719272.1719287,Exploratory Consensus of Hierarchical Clusterings for Melanoma and Breast Cancer,,2019-03-20
10.1007/978-3-540-24745-6_8,Heterogeneous Data Integration with the Consensus Clustering Formalism,,2020-03-20
10.1007/11533719_77,Bounded Degree Closest k-Tree Power Is NP-Complete,,2016-03-20
10.1007/978-1-4939-0808-0_26,A Review on Consensus Clustering Methods,,2012-03-20
10.1016/j.ipl.2015.07.009,A faster algorithm for the cluster editing problem on proper interval graphs,,2016-03-20
10.1051/RO/2018048,"Application of the ""descent with mutations"" metaheuristic to a clique partitioning problem",,2014-03-20
10.1007/s00453-004-1090-5,"Automated Generation of Search Tree Algorithms for Hard Graph
Modification Problems",,2017-03-20
10.1016/j.jda.2017.07.003,On the complexity of multi-parameterized cluster editing,,2011-03-20
10.1109/ICCCN.2002.1043107,Multi-layer optical network design based on clustering method,,2014-03-20
10.3929/ethz-a-007562769,Exploring Structural Diversity in Evolutionary Algorithms,,2012-03-20
10.1007/s00224-008-9130-1,Fixed-Parameter Enumerability of Cluster Editing and Related Problems,,2012-03-20
10.1016/j.tcs.2014.05.002,On the parameterized complexity of consensus clustering,,2013-03-20
10.1016/j.dam.2012.05.019,Cluster editing with locally bounded modifications,,2011-03-20
10.14279/DEPOSITONCE-7123,Fine-grained complexity analysis of some combinatorial data science problems,,2011-03-20
10.1007/s00453-011-9595-1,Cluster Editing: Kernelization Based on Edge Cuts,,2019-03-20
10.1109/RIVF.2007.369132,"Application of the ""descent with mutations"" metaheuristic to a clique partitioning problem",,2015-03-20
10.1016/j.tcs.2006.06.016,Computing phylogenetic roots with bounded degrees and errors is NP-complete,,2016-03-20
10.1007/s00453-005-1180-z,Error Compensation in Leaf Power Problems,,2019-03-20
10.1007/s10618-012-0266-x,Projective clustering ensembles,,2015-03-20
10.1007/978-3-540-68552-4_22,Exact Algorithms for Cluster Editing: Evaluation and Experiments,,2017-03-20
10.1007/978-3-319-07593-8_59,A Constraint Programming Approach to the Zahn’s Decision Problem,,2020-03-20
10.1007/978-3-030-33394-2_20,Polyhedral Attack on the Graph Approximation Problem,,2017-03-20
10.1007/978-3-540-30551-4_35,Error Compensation in Leaf Root Problems,,2014-03-20
10.1016/J.DAM.2003.01.003,Delta additive and Delta ultra-additive maps  Gromov's trees  and the Farris transform,,2020-03-20
10.1016/j.cosrev.2007.05.001,Graph clustering,,2018-03-20
10.1007/978-3-642-25011-8_7,A Golden Ratio Parameterized Algorithm for Cluster Editing,,2018-03-20
10.1007/978-3-319-96151-4_1,Cluster Editing with Vertex Splitting,,2014-03-20
10.1007/978-3-642-18381-2_29,Alternative Parameterizations for Cluster Editing,,2012-03-20
10.1016/J.ESWA.2019.01.074,Estimating the number of clusters in a dataset via consensus clustering,,2016-03-20
10.1007/s11634-011-0087-6,Consensus of partitions : a constructive approach,,2016-03-20
10.1145/2484838.2484865,Sharing confidential data for algorithm development by multiple imputation,,2016-03-20
10.1016/j.dam.2020.01.029,Parameterized algorithms for Module Map problems,,2019-03-20
10.1007/978-3-642-38236-9_29,On Parameterized and Kernelization Algorithms for the Hierarchical Clustering Problem,,2014-03-20
10.1007/11604686_35,Extending the Tractability Border for Closest Leaf Powers,,2014-03-20
10.1007/s00371-016-1241-0,Parallel BVH construction using k-means clustering,,2017-03-20
10.1016/j.dam.2014.07.023,Finding the closest ultrametric,,2013-03-20
10.1007/3-540-44849-7_17,Graph-Modeled Data Clustering: Fixed-Parameter Algorithms for Clique Generation,,2014-03-20
10.1142/S0218213004001867,Integrating Microarray Data By Consensus Clustering,,2014-03-20
10.1109/TCSS.2019.2931721,Analysis of Adapted Films and Stories Based on Social Network,,2012-03-20
10.1142/S0218001411008683,A Survey of Clustering Ensemble Algorithms,,2020-03-20
10.1134/S1990478917040147,On facet-inducing inequalities for combinatorial polytopes,,2012-03-20
10.1007/11602613_24,Correlation Clustering and Consensus Clustering,,2017-03-20
10.1287/moor.1090.0385,Deterministic pivoting algorithms for constrained ranking and clustering problems,,2019-03-20
10.1109/TCBB.2008.33,Exploratory Consensus of Hierarchical Clusterings for Melanoma and Breast Cancer,,2015-03-20
10.1186/s13015-015-0043-7,A graph modification approach for finding core–periphery structures in protein interaction networks,,2012-03-20
10.1007/978-3-642-12200-2_7,Average Parameterization and Partial Kernelization for Computing Medians,,2013-03-20
10.1007/978-3-319-44914-2_3,Short Survey on Graph Correlation Clustering with Minimization Criteria,,2020-03-20
10.1007/978-3-540-85238-4_11,Clustering with partial information,,2012-03-20
10.1016/j.dam.2007.05.033,Optimal clustering of multipartite graphs,,2013-03-20
10.1007/s00224-004-1178-y,Graph-Modeled Data Clustering: Exact Algorithms for Clique Generation,,2019-03-20
10.1007/s10479-008-0353-y,NP-hardness results for the aggregation of linear orders into median orders,,2014-03-20
10.1016/j.jcss.2011.07.001,On making directed graphs transitive,,2020-03-20
10.1016/J.EJOR.2020.09.010,A dual reformulation and solution framework for regularized convex clustering problems,,2020-03-20
10.1007/s11634-008-0025-4,Fitting semiparametric clustering models to dissimilarity data,,2017-03-20
10.4000/MSH.12209,NP-hardness of the computation of a median equivalence relation in classification (Régnier problem),,2011-03-20
10.1137/090767285,A More Relaxed Model for Graph-Based Data Clustering: s-Plex Cluster Editing,,2018-03-20
10.1016/j.asoc.2013.04.018,Predicting algorithmic complexity through structure analysis and compression,,2016-03-20
10.1007/s00224-016-9746-5,Parameterizing Edge Modification Problems Above Lower Bounds,,2012-03-20
10.1007/s10479-017-2716-8,A weighted framework for unsupervised ensemble learning based on internal quality measures,,2012-03-20
10.1007/s10479-007-0174-4,Combinatorial optimisation and hierarchical classifications,,2016-03-20
10.1134/S1990478919030153,The Branch and Cut Method for the Clique Partitioning Problem,,2015-03-20
10.1007/978-3-540-74450-4_4,A More Effective Linear Kernelization for Cluster Editing,,2020-03-20
10.1134/S1990478916030042,Graph clustering with a constraint on cluster sizes,,2019-03-20
10.1007/978-3-540-79228-4_39,Improved Algorithms for Bicluster Editing,,2015-03-20
10.1016/j.tcs.2011.12.022,A randomized PTAS for the minimum Consensus Clustering with a fixed number of clusters,,2012-03-20
10.1016/j.artint.2015.07.001,Cost-optimal constrained correlation clustering via weighted partial Maximum Satisfiability,,2015-03-20
10.1145/1389095.1389236,Pattern identification in pareto-set approximations,,2013-03-20
10.1198/tech.2007.s462,The Structural Representation of Proximity Matrices With MATLAB,,2017-03-20
10.1007/978-3-642-03367-4_47,On Making Directed Graphs Transitive,,2011-03-20
10.1016/J.DISOPT.2010.09.006,Graph-based data clustering with overlaps,,2014-03-20
10.1007/978-3-319-34171-2_5,Parameterizing Edge Modification Problems Above Lower Bounds,,2017-03-20
10.1007/978-3-319-03780-6_25,The Multi-parameterized Cluster Editing Problem,,2015-03-20
10.1109/ICDM.2009.131,Projective Clustering Ensembles,,2019-03-20
10.1063/1.4965325,A local search for a graph clustering problem,,2020-03-20
10.1109/GC46384.2019.00013,Combinatorial Text Classification: the Effect of Multi-Parameterized Correlation Clustering,,2016-03-20
10.1007/978-3-540-85097-7_1,Going Weighted: Parameterized Algorithms for Cluster Editing,,2014-03-20
10.1007/b96666,Data Integration in the Life Sciences,,2013-03-20
10.1201/B11429-19,Clustering Trajectories of a Three-Way Longitudinal Data Set,,2015-03-20
10.1109/ICC.2014.6883961,Graph clustering based on mixing time of random walks,,2015-03-20
10.1016/j.patcog.2013.08.019,Ensemble clustering by means of clustering embedding in vector spaces,,2020-03-20
10.1016/j.tcs.2008.10.021,A more effective linear kernelization for cluster editing,,2019-03-20
10.1007/978-3-319-09259-1_9,On Semi-Supervised Clustering,,2015-03-20
10.1016/j.dam.2004.06.017,From hypertrees to arboreal quasi-ultrametrics,,2011-03-20
10.1007/s00453-009-9339-7,Exact Algorithms for Cluster Editing: Evaluation and Experiments,,2019-03-20
10.4230/OASIcs.GCB.2012.57,Online Transitivity Clustering of Biological Data with Missing Values,,2020-03-20
10.1007/978-3-642-02882-3_51,Graph-Based Data Clustering with Overlaps,,2017-03-20
10.18637/JSS.V014.I12,A CLUE for CLUster Ensembles,,2017-03-20
10.1007/978-3-319-96151-4_32,Parameterized Algorithms for Module Map Problems,,2016-03-20
10.1016/j.dam.2008.01.007,Closest 4-leaf power is fixed-parameter tractable,,2016-03-20
10.1016/j.dam.2005.09.011,Sub-dominant theory in numerical taxonomy,,2014-03-20
10.1007/s00453-011-9487-4,Editing Graphs into Disjoint Unions of Dense Clusters,,2012-03-20
10.1088/1742-6596/1441/1/012167,On generic NP-completeness of the graph clustering problem,,2019-03-20
10.1007/s00357-004-0015-y,On Ultrametricity  Data Coding  and Computation,,2017-03-20
10.1109/TSMC.2019.2896657,Distance-Preserving Vector Space Embedding for Consensus Learning,,2020-03-20
10.1080/15427951.2011.604559,Extension and Robustness of Transitivity Clustering for Protein–Protein Interaction Network Analysis,,2017-03-20
10.1016/j.jcss.2010.07.005,Average parameterization and partial kernelization for computing medians,,2011-03-20
10.1109/ICDM.2011.130,Semi-supervised Hierarchical Clustering,,2018-03-20
10.1016/j.tcs.2009.05.006,Going weighted: Parameterized algorithms for cluster editing,,2020-03-20
10.1007/978-3-0348-8201-9_27,Graphs  L1-Metrics and Clustering,,2018-03-20
10.1016/j.dam.2005.05.029,Noising methods for a clique partitioning problem,,2017-03-20
10.1016/j.neucom.2014.09.041,On pruning the search space for clustering ensemble problems,,2018-03-20
10.1016/j.jda.2012.04.005,A golden ratio parameterized algorithm for Cluster Editing,,2017-03-20
10.1142/9789812771667_0001,Fixed-Parameter Algorithms for Graph-Modeled Data Clustering,,2013-03-20
10.1109/TAI.2003.1250220,Integrating microarray data by consensus clustering,,2016-03-20
10.1007/978-3-642-25591-5_64,On the Parameterized Complexity of Consensus Clustering,,2020-03-20
10.1016/J.JCSS.2007.06.024,On the Approximation of Correlation Clustering and Consensus Clustering,,2015-03-20
10.3722/CADAPS.2012.215-226,A Hybrid Hierarchical Procedure for Composing Trivariate NURBS Solids,,2012-03-20
10.1111/j.1467-9671.2005.00210.x,An Experimental Performance Evaluation of Spatio-Temporal Join Strategies,,2018-03-20
10.1007/s10703-012-0175-z,An approximation algorithm for box abstraction of transition systems on real state spaces,,2011-03-20
10.1145/1653771.1653795,Data structures and intersection algorithms for 3D spatial data types,,2016-03-20
10.1108/RPJ-07-2015-0091,Models partition for 3D printing objects using skeleton,,2014-03-20
10.1016/j.procs.2013.05.209,Algorithm for Finding the Domain Intersection of a Set of Polytopes,,2018-03-20
10.1137/19m1281812,An Efficient Implementation of Mass Conserving Characteristic-Based Schemes in Two and Three Dimensions,,2019-03-20
10.1016/j.jvcir.2011.07.008,Voxel-based shape decomposition for feature-preserving 3D thumbnail creation,,2011-03-20
10.12737/ARTICLE_5A3D0376D9D021.80176334,Automation of the data processing procedure on the basis of a strong semantic connection,,2013-03-20
10.1080/13658810802687327,Theoretical analytics of stereographic projection on 3D objects' intersection predicate,,2016-03-20
10.1007/978-3-540-71027-1_11,A Geometrical Approach to Multiresolution Management in the Fusion of Digital Images,,2020-03-20
10.1142/S021819670800438X,Rational Subsets in HNN-Extensions and Amalgamated Products,,2018-03-20
10.1142/S0218196708004366,Algorithmic Problems on Inverse Monoids over Virtually Free Groups,,2018-03-20
10.1142/S0218196709005111,Infinite Words and Confluent Rewriting Systems: Endomorphism Extensions,,2011-03-20
10.4230/LIPIcs.ICALP.2020.116,Rational subsets of Baumslag-Solitar groups,,2013-03-20
10.5802/AIF.2447,Infinite periodic points of endomorphisms over special confluent rewriting systems,,2016-03-20
10.1016/j.tcs.2008.09.031,Rational subsets of partially reversible monoids,,2017-03-20
10.1007/978-3-642-31623-4_4,Groups and Automata: A Perfect Match,,2011-03-20
10.1142/s0218196720500198,Solutions to twisted word equations and equations in virtually free groups,,2017-03-20
10.1145/3373207.3404038,Decidability of membership problems for flat rational subsets of GL(2  Q) and singular matrices,,2013-03-20
10.1007/978-3-030-31517-7_10,Logics for Petri Nets with Propagating Failures,,2013-03-20
10.1016/j.jlamp.2015.09.012,Developments in concurrent Kleene algebra,,2014-03-20
10.1016/j.datak.2018.04.005,Cardinality constraints and functional dependencies over possibilistic data,,2016-03-20
10.1016/j.jal.2013.05.004,Sound approximate reasoning about saturated conditional probabilistic independence under controlled uncertainty,,2019-03-20
10.1145/1516360.1516402,Expressive  yet tractable XML keys,,2011-03-20
10.1007/978-3-319-46397-1_13,Keys with Probabilistic Intervals,,2018-03-20
10.1145/2661829.2662058,On Independence Atoms and Keys,,2011-03-20
10.3233/FI-2009-0067,On Inferences ofWeak Multivalued Dependencies,,2019-03-20
10.1016/j.is.2009.11.002,Empirical evidence for the usefulness of Armstrong relations in the acquisition of meaningful functional dependencies,,2014-03-20
10.1007/978-3-319-11558-0_16,Logics for Approximating Implication Problems of Saturated Conditional Independence,,2016-03-20
10.1007/978-3-319-46397-1_11,Possibilistic Cardinality Constraints and Functional Dependencies,,2019-03-20
10.1007/978-3-642-33362-0_28,Probabilistic Conditional Independence under Schema Certainty and Uncertainty,,2020-03-20
10.1007/978-3-642-13824-9_12,On the Role of the Complementation Rule for Data Dependencies over Incomplete Relations,,2013-03-20
10.1007/978-3-642-32621-9_19,Propositional Reasoning about Saturated Conditional Probabilistic Independence,,2011-03-20
10.1109/CDC.2013.6761042,Reinforcement learning for sequential composition control,,2014-03-20
10.1109/TAC.2008.923658,A Framework for Robust Stability of Systems Over Finite Alphabets,,2019-03-20
10.1007/978-3-540-71493-4_41,Approximate Simulation Relations and Finite Abstractions of Quantized Control Systems,,2018-03-20
10.1109/CDC.2007.4434911,Symbolic models for nonlinear control systems using approximate bisimulation,,2013-03-20
10.1007/S10626-007-0029-9,Approximate Simulation Relations for Hybrid Systems,,2016-03-20
10.1137/070698580,Symbolic Models for Nonlinear Control Systems: Alternating Approximate Bisimulations,,2020-03-20
10.1109/CDC.2015.7403294,Comparing asynchronous l-complete approximations and quotient based abstractions,,2019-03-20
10.3182/20120620-3-DK-2025.00037,Satisfaction of Temporal Logic by Control Systems and Finite Abstractions,,2019-03-20
10.1016/j.automatica.2008.02.021,Approximately bisimilar symbolic models for nonlinear control systems,,2015-03-20
10.1109/TAC.2009.2034922,Approximately Bisimilar Symbolic Models for Incrementally Stable Switched Systems,,2013-03-20
10.1016/j.sysconle.2014.08.005,Asynchronous I-complete approximations,,2011-03-20
10.18178/wcse.2019.06.145,A control strategy algorithm for finite alternating transition systems,,2015-03-20
10.1109/TAC.2008.925824,An Approximate Simulation Approach to Symbolic Control,,2017-03-20
10.1007/s001650200032,A Refinement Calculus for Shared-Variable Parallel and Distributed Programming,,2013-03-20
10.1142/S0129054113500123,Assume-Guarantee Reasoning with Local Specifications,,2020-03-20
10.1007/978-3-540-32008-1_18,A. Common Notation,,2014-03-20
10.1109/CCA.2016.7587949,Control design for hybrid systems with TuLiP: The Temporal Logic Planning toolbox,,2019-03-20
10.1007/BF01667079,Time-dependent distributed systems: proving safety  liveness and real-time properties,,2019-03-20
10.5075/EPFL-THESIS-2588,Specifying reactive system behavior,,2012-03-20
10.1007/978-3-540-88194-0_9,Decomposition for Compositional Verification,,2017-03-20
10.1145/1016850.1016875,Verification of safety properties for concurrent assembly code,,2012-03-20
10.1007/978-0-387-21798-7_1,Wanted: a compositional approach to concurrency,,2018-03-20
10.3990/1.9789036544399,Specification and verification of synchronisation classes in Java : A practical approach,,2014-03-20
10.1109/RELDIS.2003.1238069,A systematic approach to the development of event based applications,,2012-03-20
10.1007/978-3-642-16901-4_15,Assume-Guarantee Reasoning with Local Specifications,,2019-03-20
10.1145/1297846.1297852,Elephant 2000: a programming language based on speech acts,,2012-03-20
10.1145/1067915.1067917,Verification of safety properties for parameterized regular systems,,2011-03-20
10.1109/MEMCOD.2003.1210111,Verification of control properties in the polyhedral model,,2012-03-20
10.1016/j.tcs.2020.01.005,A novel approach to verifying context free properties of programs,,2016-03-20
10.1016/j.cl.2004.02.006,Model checking and abstraction to the aid of parameterized systems (a survey),,2012-03-20
10.1007/BF01407814,A parallel sorting algorithm for a novel model of computation,,2019-03-20
10.1007/978-3-662-43951-7_13,Unary Pushdown Automata and Straight-Line Programs,,2020-03-20
10.1007/BF01275489,The complexity of computing maximal word functions,,2017-03-20
10.1109/IMCSIT.2009.5352769,Subtree matching by deterministic pushdown automata,,2019-03-20
10.2298/CSIS1002331F,Subtree matching by pushdown automata,,2020-03-20
10.1007/978-3-642-22256-6_25,Tree Template Matching in Ranked Ordered Trees by Pushdown Automata,,2012-03-20
10.2298/CSIS111220024T,Indexing ordered trees for (nonlinear) tree pattern matching by pushdown automata,,2020-03-20
10.4230/OASIcs.SLATE.2018.6,Construction of a Pushdown Automaton Accepting a Postfix Notation of a Tree Language Given by a Regular Tree Expression,,2017-03-20
10.1016/j.jda.2013.02.001,Tree template matching in unranked ordered trees,,2020-03-20
10.1007/978-3-642-13089-2_3,Arbology: Trees and pushdown automata,,2012-03-20
10.1016/j.jda.2012.10.003,Tree template matching in ranked ordered trees by pushdown automata,,2019-03-20
10.4230/DagRep.3.5.1,Tree Transducers and Formal Methods (Dagstuhl Seminar 13192),,2019-03-20
10.1016/j.dam.2013.07.018,Simple tree pattern matching for trees in the prefix bar notation,,2019-03-20
10.1007/978-3-642-02777-2_36,Resolution and Expressiveness of Subclasses of Quantified Boolean Formulas and Circuits,,2019-03-20
10.1007/978-3-642-21581-0_20,Transformations into Normal Forms for Quantified Circuits,,2019-03-20
10.1016/B978-044450944-4/50010-4,Modeling Complexity for Interactive Art Works on the Internet,,2012-03-20
10.1162/00240940252940531,Modeling the Emergence of Complexity: Complex Systems  the Origin of Life and Interactive On-Line Art,,2019-03-20
10.1016/j.artint.2015.09.003,Learning Boolean specifications,,2018-03-20
10.1145/800225.806839,An environment for logic programming,,2017-03-20
10.1201/9781420040579.ch2,Automatic Generation of Code Optimizers from Formal Specifications,,2011-03-20
10.4230/LIPIcs.MFCS.2017.31,Weighted Operator Precedence Languages,,2017-03-20
10.3233/FI-2015-1198,Semilinear Sets and Counter Machines: a Brief Survey,,2014-03-20
10.1016/j.tcs.2016.07.006,Characterization and complexity results on jumping finite automata,,2020-03-20
10.1137/140978818,Operator Precedence Languages: Their Automata-Theoretic and Logic Characterization,,2016-03-20
10.1016/j.jda.2012.04.014,A priority queue with the time-finger property,,2011-03-20
10.1145/3379486,On the Complexity of Traffic Traces and Implications,,2015-03-20
10.1007/978-3-030-19955-5_9,Belga B-trees,,2020-03-20
10.1007/s11581-014-1363-1,Optimization of ionic conductivity of electrospun polyacrylonitrile/poly (vinylidene fluoride) (PAN/PVdF) electrolyte using the response surface method (RSM),,2018-03-20
10.1007/s00224-020-09991-8,Belga B-Trees,,2016-03-20
10.1145/3393691.3394205,On the Complexity of Traffic Traces and Implications,,2020-03-20
10.1145/3210377.3210390,Parallel Working-Set Search Structures,,2015-03-20
10.35537/10915/27887,Computabilidad  complejidad computacional y verificación de programas,,2011-03-20
10.1007/978-3-030-61470-6_7,Thirty-seven years of relational Hoare logic: remarks on its principles and history,,2018-03-20
10.1007/978-3-030-26619-6_17,Approximate Computation of Alignments of Business Processes Through Relaxation Labelling,,2016-03-20
10.1007/11494744_13,Modeling Multi-valued Genetic Regulatory Networks Using High-Level Petri Nets,,2012-03-20
10.3233/KES-2010-0191,Diagnosability verification with Petri net unfoldings,,2015-03-20
10.1007/978-3-540-27755-2_5,Process Algebra: A Petri-Net-Oriented Tutorial,,2019-03-20
10.1016/j.is.2020.101703,Computation of alignments of business processes through relaxation labelling and local optimal search,,2017-03-20
10.1007/978-3-319-59746-1_9,Many-to-Many Information Flow Policies,,2018-03-20
10.1016/j.scico.2018.08.003,Many-to-many information flow policies,,2015-03-20
10.1109/ACSD.2019.00012,Structural Computation of Alignments of Business Processes Over Partial Orders,,2011-03-20
10.1145/2559627.2559632,ArchOn: Architecture-open Resource-driven Cross-layer Modelling Framework,,2014-03-20
10.1007/978-3-540-40903-8_21,Causal Time Calculus,,2014-03-20
10.1111/j.1475-3995.2009.00674.x,Planning without state space explosion: Petri net to Markov decision process,,2016-03-20
10.1007/978-3-540-27755-2_9,Synthesis of Asynchronous Hardware from Petri Nets,,2015-03-20
10.1007/978-3-319-98648-7_15,Online Conformance Checking Using Behavioural Patterns,,2011-03-20
10.3182/20120829-3-MX-2028.00083,Effective Verification of Weak Diagnosability,,2011-03-20
10.1007/11916246_9,On Specification and Verification of Location-Based Fault Tolerant Mobile Systems,,2015-03-20
10.1007/978-3-540-89287-8_11,Directed Unfolding of Petri Nets,,2016-03-20
10.1007/978-3-319-12982-2_10,Characterization of Reachable Attractors Using Petri Net Unfoldings,,2016-03-20
10.1007/11885191_9,Modelling and Analysing Genetic Networks: From Boolean Networks to Petri Nets,,2012-03-20
10.1007/3-540-45657-0_49,Canonical Prefixes of Petri Net Unfoldings,,2020-03-20
10.1007/3-540-46002-0_26,Parallelisation of the Petri Net Unfolding Algorithm,,2016-03-20
10.1145/3290420.3290430,An introduction and review of petri net unfolding technology,,2011-03-20
10.1007/978-3-319-11439-2_18,Compositional Reachability in Petri Nets,,2020-03-20
10.1007/978-3-540-27813-9_9,Parallel LTL-X Model Checking of High-Level Petri Nets Based on Unfoldings,,2016-03-20
10.1007/978-3-030-31784-3_22,Efficient Trace Encodings of Bounded Synthesis for Asynchronous Distributed Systems,,2019-03-20
10.1109/ASYNC.2003.1199176,Low-latency control structures with slack,,2011-03-20
10.4230/LIPIcs.CONCUR.2017.18,Goal-Driven Unfolding of Petri Nets,,2018-03-20
10.1007/978-3-540-31862-0_32,An Algebra of Petri Nets with Arc-Based Time Restrictions,,2016-03-20
10.1007/S11432-008-0021-5,An algebraic approach to revising propositional rule-based knowledge bases,,2019-03-20
10.1007/s11432-008-0021-5,An algebraic approach to revising propositional rule-based knowledge bases,,2020-03-20
10.4230/LIPIcs.FSTTCS.2013.225,Computation of Summaries Using Net Unfoldings,,2013-03-20
10.1007/11603047_20,Towards a Petri Net Semantics for Membrane Systems,,2017-03-20
10.1049/iet-cdt:2006015,Comparative analysis of GALS clocking schemes,,2011-03-20
10.1007/s10009-007-0030-5,A negative result on depth-first net unfoldings,,2011-03-20
10.4230/OASIcs.FSFMA.2013.47,An Improved Construction of Petri Net Unfoldings,,2012-03-20
10.1016/j.jlap.2011.04.004,Fixpoints for general correctness,,2014-03-20
10.1016/j.entcs.2009.12.016,Of wlp and CSP,,2014-03-20
10.1007/978-3-642-04639-1_11,General Correctness Algebra,,2018-03-20
10.1007/BF01530788,Towards reasoning about Hoare relations,,2014-03-20
10.1109/TPDS.2005.58,A theory for deadlock-free dynamic network reconfiguration. Part I,,2015-03-20
10.1007/978-3-540-73210-5_12,Lifting General Correctness into Partial Correctness is ok,,2015-03-20
10.1007/978-3-642-16690-7_10,Unifying Recursion in Partial  Total and General Correctness,,2020-03-20
10.1007/978-3-642-13321-3_12,Unifying Theories of Programming That Distinguish Nontermination and Abort,,2011-03-20
10.1007/978-3-642-31113-0_11,Unifying Correctness Statements,,2016-03-20
10.1016/j.scico.2012.07.010,Linking Unifying Theories of Program refinement,,2013-03-20
10.1016/j.entcs.2003.12.004,Formalising General Correctness,,2016-03-20
10.1007/978-3-030-02149-8_16,False Failure: Creating Failure Models for Separation Logic,,2017-03-20
10.1145/1292597.1292600,Compound monads in specification languages,,2017-03-20
10.1007/978-3-642-13321-3_11,Partial  Total and General Correctness,,2019-03-20
10.1016/S1571-0661(05)80480-3,Junctive Compositions of specifications in total  general correctness,,2011-03-20
10.1016/j.jlap.2014.02.008,Multirelations with infinite computations,,2016-03-20
10.1016/j.scico.2012.07.009,Extended designs algebraically,,2011-03-20
10.1007/978-3-319-30734-3_10,Modeling Role-Based Systems with Exogenous Coordination,,2014-03-20
10.1109/TSE.2016.2564959,Interaction Models and Automated Control under Partial Observable Environments,,2018-03-20
10.1007/978-3-642-39274-0_10,A Uniformization Theorem for Nested Word to Word Transductions,,2018-03-20
10.1007/978-3-662-44602-7_12,Not All Multi-Valued Partial CFL Functions Are Refined by Single-Valued Functions,,2016-03-20
10.1007/978-3-319-04298-5_45,Oracle Pushdown Automata  Nondeterministic Reducibilities  and the Hierarchy over the Family of Context-Free Languages,,2018-03-20
10.1007/978-3-662-44602-7,Theoretical Computer Science,,2015-03-20
10.1007/978-3-642-54341-8_47,An Intelligent Ammonia Sensor for Livestock Breeding Monitoring,,2015-03-20
10.1016/S0020-0190(00)00167-8,A note on synchronized extension systems,,2015-03-20
10.25596/jalc-2002-599,On the Complexity of a Problem on Monadic String Rewriting Systems,,2017-03-20
10.1080/00207160212709,SE-SYSTEMS  TIMING MECHANISMS  AND TIME-VARYING CODES,,2013-03-20
10.1016/S0306-4379(96)00031-2,Queries = Examples + Counterexamples,,2013-03-20
10.1016/S0306-4379(98)00020-9,Storage and Retrieval of Database Constraints,,2011-03-20
10.1109/69.683760,Differential Relational Calculus for Integrity Maintenance,,2017-03-20
10.1109/69.971192,Transaction Repair for Integrity Enforcement,,2019-03-20
10.1016/S0890-5401(03)00008-7,An upper bound on the derivational complexity of Knuth-Bendix orderings,,2016-03-20
10.1007/978-3-540-75560-9_26,An Extension of the Knuth-Bendix Ordering with LPO-Like Properties,,2017-03-20
10.1007/978-3-642-18275-4_26,Decision Procedures for Automating Termination Proofs,,2020-03-20
10.1007/978-3-540-45085-6_5,An AC-Compatible Knuth-Bendix Order,,2019-03-20
10.1109/ICIECS.2009.5365416,A New Order Which Proved the Termination of Term Rewriting System,,2018-03-20
10.1016/j.entcs.2009.07.023,Transforming SAT into Termination of Rewriting,,2011-03-20
10.4230/LIPIcs.RTA.2013.287,Formalizing Knuth-Bendix Orders and Knuth-Bendix Completion,,2012-03-20
10.1007/978-3-642-28717-6_33,Ordinals and Knuth-Bendix Orders,,2014-03-20
10.1007/978-3-540-73449-9_29,Satisfying KBO Constraints,,2019-03-20
10.3233/AIC-2010-0457,Implementing a fair monodic temporal logic prover,,2011-03-20
10.1007/s10817-009-9131-z,KBO Orientability,,2016-03-20
10.1007/978-3-540-25979-4_15,Automated Termination Proofs with AProVE,,2018-03-20
10.1109/LICS.2003.1210047,Orienting equalities with the Knuth-Bendix order,,2013-03-20
10.5075/EPFL-THESIS-5220,DECISION PROCEDURES FOR PROGRAM SYNTHESIS AND VERIFICATION,,2015-03-20
10.1145/1055686.1055692,Knuth--bendix constraint solving is NP-complete,,2014-03-20
10.1007/978-3-540-32033-3_14,Tyrolean Termination Tool,,2020-03-20
10.1016/S0890-5401(03)00021-X,Orienting rewrite rules with the Knuth-Bendix order,,2018-03-20
10.1016/j.ic.2006.08.010,Tyrolean termination tool: Techniques and features,,2017-03-20
10.1093/acprof:oso/9780195395518.003.0060,On look-ahead in language: navigating a multitude of familiar paths∗,,2018-03-20
10.1145/1656250.1656252,Synthesizing hierarchical state machines from expressive scenario descriptions,,2017-03-20
10.1109/ICECCS.2016.021,Improving Quality of Use Case Documents through Learning and User Interaction,,2011-03-20
10.1109/TSE.2005.137,From live sequence charts to state machines and back: a guided tour,,2013-03-20
10.1109/RE.2006.25,Generating Hierarchical State Machines from Use Case Charts,,2015-03-20
10.1016/S0950-5849(02)00077-0,Automated compression of state machines using UML statechart diagram notation,,2015-03-20
10.1007/978-3-319-12027-0,Advances in Artificial Intelligence -- IBERAMIA 2014,,2014-03-20
10.1007/978-3-319-71734-0_3,Extended Context-Free Grammars Parsing with Generalized LL,,2013-03-20
10.1007/978-3-319-12027-0_1,A Parsing Approach to SAT,,2012-03-20
10.1007/BF00289494,An efficient ELL(1)-parser generator,,2012-03-20
10.1007/BF02278854,Stabilization and pseudo-stabilization,,2013-03-20
10.1109/RTAS48715.2020.00-13,Bounded-time recovery for distributed real-time systems,,2016-03-20
10.1007/BF01178259,Bounded self-stabilizing Petri nets,,2020-03-20
10.1145/1552309.1552312,Self-stabilization preserving compiler,,2013-03-20
10.1007/978-3-642-28332-1_9,Reversible Multi-head Finite Automata Characterize Reversible Logarithmic Space,,2019-03-20
10.1016/j.irfa.2020.101631,Does economic policy uncertainty affect cross-border M&As? —— A data analysis based on Chinese multinational enterprises,,2013-03-20
10.1007/978-3-642-36315-3,Reversible Computation,,2015-03-20
10.1007/978-3-642-36315-3_2,One-Way Reversible Multi-head Finite Automata,,2015-03-20
10.1007/978-3-642-33293-7_20,On the Space Complexity of Parameterized Problems,,2013-03-20
10.1007/BF01692057,On two-way weak counter machines,,2012-03-20
10.1007/BF00289080,A note on multihead automata and context-sensitive languages,,2020-03-20
10.3233/FI-2015-1149,Asynchronous Systems of Parallel Communicating Finite Automata,,2018-03-20
10.1007/978-3-030-12797-8_8,APCol Systems with Verifier Agents,,2019-03-20
10.1007/BF01683260,Relativization of questions about log space computability,,2014-03-20
10.1007/978-3-319-08918-8_6,Unification and Logarithmic Space,,2012-03-20
10.1007/978-3-319-03898-8_28,Completeness Results for Parameterized Space Classes,,2013-03-20
10.1016/j.entcs.2011.09.025,Ramified Corecurrence and Logspace,,2019-03-20
10.1007/s10015-005-0373-5,Some properties of four-dimensional multicounter automata,,2019-03-20
10.1007/s00224-014-9547-7,The Complexity of Debate Checking,,2012-03-20
10.1145/977091.977113,Watson-Crick automata and PCFAS with two components: a computational power analogy,,2017-03-20
10.4230/LIPIcs.FSCD.2018.13,Term Rewriting Characterisation of LOGSPACE for Finite and Infinite Data,,2011-03-20
10.1016/j.jcss.2020.06.005,Tight hierarchy of data-independent multi-head automata,,2012-03-20
10.1007/978-3-642-31653-1_2,P and dP Automata: Unconventional versus Classical Automata,,2016-03-20
10.1051/ita/2018009,Diving into the queue,,2014-03-20
10.1007/978-3-030-12797-8,Membrane Computing,,2018-03-20
10.1051/ita/2013048,Bidirectional string assembling systems,,2014-03-20
10.1142/S0129054102001424,Parallel Finite Automata Systems Communicating by States,,2019-03-20
10.1051/ita:2007014,Returning and non-returning parallel communicating finite automata are equivalent,,2015-03-20
10.1007/978-3-642-28024-5_10,Finite dP Automata versus Multi-head Finite Automata,,2019-03-20
10.1017/s0960129519000112,Primitive recursion in the abstract,,2019-03-20
10.1007/3-540-45687-2_19,Two-Way Finite State Transducers with Nested Pebbles,,2019-03-20
10.1007/978-3-662-46678-0_27,The Computational Contents of Ramified Corecurrence,,2020-03-20
10.2168/LMCS-10(3:6)2014,Finite state verifiers with constant randomness,,2013-03-20
10.1007/BF01683283,Rudimentary relations and stack languages,,2013-03-20
10.1007/978-3-642-30870-3_65,Finite State Verifiers with Constant Randomness,,2016-03-20
10.1007/s00453-014-9944-y,On the Space and Circuit Complexity of Parameterized Problems: Classes and Completeness,,2020-03-20
10.1051/ita/2012020,String Assembling Systems,,2012-03-20
10.1007/978-3-030-10801-4_23,Multi-stranded String Assembling Systems,,2013-03-20
10.1016/j.ic.2014.01.018,Logarithmic space and permutations,,2020-03-20
10.1007/BF01683273,Some open problems in the theory of computation as questions about two-way deterministic pushdown automaton languages,,2016-03-20
10.1051/ita/2013046,Systems of parallel communicating restarting automata,,2015-03-20
10.1007/978-3-319-41579-6_21,Equivalence of Finite-Valued Symbolic Finite Transducers,,2014-03-20
10.17863/CAM.21221,Formal verification-driven parallelisation synthesis,,2020-03-20
10.1145/2429069.2429123,Sigma*: symbolic learning of input-output specifications,,2019-03-20
10.1145/2103656.2103674,Symbolic finite state transducers: algorithms and applications,,2012-03-20
10.1007/978-3-540-69824-1_12,Object Incompleteness and Dynamic Composition in Java-Like Languages,,2011-03-20
10.1007/978-3-540-24639-8_2,A Java Package for Class and Mixin Mobility in a Distributed Setting,,2017-03-20
10.1007/978-3-540-75336-0_20,A Framework for Type Safe Exchange of Mobile Code,,2019-03-20
10.1016/j.entcs.2006.09.032,A Calculus of Components with Dynamic Type-Checking,,2012-03-20
10.1145/2093157.2093173,Object reuse and behavior adaptation in Java-like languages,,2016-03-20
10.1016/j.scico.2019.03.008,A Type System for First-Class Layers with Inheritance  Subtyping  and Swapping,,2012-03-20
10.5381/jot.2005.4.10.a1,Safe and Flexible Objects with Subtyping,,2015-03-20
10.1007/s10009-012-0253-y,Software diversity: state of the art and perspectives,,2015-03-20
10.1017/S0960129507006238,A calculus of open modules: call-by-need strategy and confluence,,2011-03-20
10.1007/978-3-540-24634-3_5,O'Klaim: A Coordination Language with Mobile Mixins,,2018-03-20
10.1007/978-3-540-40042-4_4,The Klaim Project: Theory and Practice,,2018-03-20
10.1007/b95352,Scientific Engineering of Distributed Java Applications,,2015-03-20
10.1016/j.entcs.2008.10.024,A Parametric Calculus for Mobile Open Code,,2017-03-20
10.1063/1.4757512,Nondeterministic Fuzzy Operators,,2017-03-20
10.1007/978-3-540-39737-3_22,Demonic I/O of Compound Diagrams Monotype/Residual Style,,2011-03-20
10.1109/ICC.2009.15,Demonic Semantics and Fixed Points,,2017-03-20
10.4018/978-1-4666-4229-4.CH012,Demonic Fuzzy Relational Calculus,,2018-03-20
10.1109/ICST.2016.12,Debugging without Testing,,2013-03-20
10.1016/j.jlap.2005.04.006,Kleene under a modal demonic star,,2011-03-20
10.3934/DCDSS.2015.8.1357,Nondeterministic semantics of compound diagrams,,2019-03-20
10.1016/j.scico.2015.05.007,Implementability of requirements in the four-variable model,,2014-03-20
10.1155/S016117120420415X,Demonic semantics: using monotypes and residuals,,2017-03-20
10.1109/ACSSC.2005.1599743,New Fast Fourier Transform with Linear Multiplicative Complexity,,2020-03-20
10.1117/12.643648,Super fast Fourier transform,,2012-03-20
10.1016/j.tcs.2017.05.041,Recognition of poly-slender context-free languages by trellis automata,,2020-03-20
10.1142/S0129054103002205,Efficient Automaton-Based Recognition For Linear Conjunctive Languages,,2015-03-20
10.4204/EPTCS.3.15,Bounded Languages Meet Cellular Automata with Sparse Communication,,2019-03-20
10.1007/978-3-319-62809-7_14,Differences Between 2D Neighborhoods According to Real Time Computation,,2019-03-20
10.1109/LICS.2019.8785666,Descriptive complexity for minimal time of cellular automata,,2015-03-20
10.7148/2011-0299-0303,Game-Logic Simulation Based On Cellular Automata And Flocking Techniques,,2016-03-20
10.1007/978-3-319-18812-6_5,Real-Time Reversible One-Way Cellular Automata,,2017-03-20
10.1007/3-540-45007-6_32,Boolean Grammars,,2013-03-20
10.1051/ita:2006002,Different time solutions for the firing squad synchronization problem on basic grid networks,,2011-03-20
10.1007/978-3-662-47221-7_19,Recognition of Linear-Slender Context-Free Languages by Real Time One-Way Cellular Automata,,2017-03-20
10.1007/s00224-006-1315-x,Cellular Automata: Real-Time Equivalence between One-Dimensional Neighborhoods,,2012-03-20
10.3233/FI-2013-878,One-Dimensional Cellular Automaton Transducers,,2016-03-20
10.1093/IETISY/E88-D.1.65,Real-Time Recognition of Cyclic Strings by One-Way and Two-Way Cellular Automata,,2011-03-20
10.1016/S0167-739X(02)00070-5,Massively parallel fault tolerant computations on syntactical patterns,,2020-03-20
10.1016/J.IC.2004.03.006,Boolean grammars,,2015-03-20
10.1007/s11047-019-09773-3,Hierarchies and undecidability results for iterative arrays with sparse communication,,2019-03-20
10.1007/978-1-4471-0129-1_9,Signals on Cellular Automata,,2016-03-20
10.1016/J.TCS.2004.11.021,Theory of cellular automata: A survey,,2016-03-20
10.1016/j.tcs.2005.10.039,Closure properties of cellular automata,,2016-03-20
10.1142/9789812562494_0064,An overview of conjunctive grammars,,2014-03-20
10.1016/S0304-3975(02)00575-3,Two-dimensional cellular automata and deterministic on-line tessalation automata,,2011-03-20
10.1016/j.jcss.2007.06.023,Languages not recognizable in real time by one-dimensional cellular automata,,2016-03-20
10.1016/j.tcs.2006.07.061,Low complexity classes of multidimensional cellular automata,,2011-03-20
10.1007/3-540-45995-2_40,Signals for Cellular Automata in Dimension 2 or Higher,,2011-03-20
10.1007/978-3-642-16184-1_9,Incremental Learning of Cellular Automata for Parallel Recognition of Formal Languages,,2015-03-20
10.1016/j.tcs.2004.03.002,On the number of nonterminals in linear conjunctive grammars,,2011-03-20
10.1007/3-540-45005-X_35,Automaton Representation of Linear Conjunctive Languages,,2019-03-20
10.1007/978-3-642-15979-4_74,Achieving Universal Computations on One-Dimensional Cellular Automata,,2015-03-20
10.1007/978-3-540-31856-9_11,Cellular Automata: Real-Time Equivalence Between One-Dimensional Neighborhoods,,2015-03-20
10.1016/S0020-0190(02)00511-2,The hardest linear conjunctive language,,2015-03-20
10.1007/978-3-030-61588-8_5,Cellular String Generators,,2017-03-20
10.1007/s11047-012-9312-2,Grids and universal computations on one-dimensional cellular automata,,2018-03-20
10.1051/ita:2004004,On the equivalence of linear conjunctive grammars and trellis automata,,2019-03-20
10.1007/978-3-319-18812-6,Cellular Automata and Discrete Complex Systems,,2016-03-20
10.25596/jalc-2004-365,State complexity of linear conjunctive languages,,2018-03-20
10.1016/j.tcs.2011.02.023,Bulking I: An abstract theory of bulking,,2018-03-20
10.1007/978-3-030-61588-8,Cellular Automata and Discrete Complex Systems: 26th IFIP WG 1.5 International Workshop  AUTOMATA 2020  Stockholm  Sweden  August 10–12  2020  Proceedings,,2016-03-20
10.1007/BF02127801,Computations on one-dimensional cellular automata,,2014-03-20
10.25596/jalc-2008-299,Homomorphisms Preserving Linear Conjunctive Languages,,2018-03-20
10.1007/978-3-319-43862-7_1,On Monotonic Deductive Database Updating Under the Open World Assumption,,2017-03-20
10.1007/978-3-642-04474-8_10,Combining Consistency and Confidentiality Requirements in First-Order Databases,,2018-03-20
10.1016/j.tcs.2011.04.026,A sound and complete model-generation procedure for consistent and confidentiality-preserving databases,,2016-03-20
10.1007/978-3-642-16961-8_72,Mapping ORM to Datalog: An Overview,,2018-03-20
10.1007/s11390-019-1943-7,On the Expressive Power of Logics on Constraint Databases with Complex Objects,,2020-03-20
10.1007/978-3-662-07003-1_13,Embedded Finite Models,,2016-03-20
10.1007/3-540-68804-8_5,Embedded Finite Models and Constraint Databases,,2020-03-20
10.1007/3-540-68804-8,Finite Model Theory and Its Applications,,2016-03-20
10.1007/978-3-662-58387-6_18,On the Computational Complexity of Minimal Cumulative Cost Graph Pebbling,,2013-03-20
10.1145/2422436.2422479,Publicly verifiable proofs of sequential work,,2015-03-20
10.1145/1073970.1073995,Parallelizing time with polynomial circuits,,2014-03-20
10.1007/s00037-013-0069-5,Amplifying circuit lower bounds against polynomial time  with applications,,2013-03-20
10.1007/978-3-319-56617-7_1,Depth-Robust Graphs and Their Cumulative Memory Complexity,,2012-03-20
10.1109/CCC.2012.44,Amplifying Circuit Lower Bounds against Polynomial Time with Applications,,2020-03-20
10.1007/BF01744432,Towards separating nondeterminism from determinism,,2017-03-20
10.1145/2559903,Nonuniform ACC Circuit Lower Bounds,,2015-03-20
10.1007/978-3-319-70500-2_15,On the Depth-Robustness and Cumulative Pebbling Cost of Argon2i,,2019-03-20
10.4230/LIPIcs.ITCS.2021.71,Block Rigidity: Strong Multiplayer Parallel Repetition implies Super-Linear Lower Bounds for Turing Machines,,2014-03-20
10.1007/s00224-009-9237-z,Parallelizing Time with Polynomial Circuits,,2014-03-20
10.1016/j.ipl.2010.03.008,Two-way deterministic automata with two reversals are exponentially more succinct than with one reversal,,2013-03-20
10.1016/j.dam.2017.01.033,A note on the multiple-recursive matrix method for generating pseudorandom vectors,,2012-03-20
10.1090/S0025-5718-2011-02461-0,Irregular primes to 163 million,,
10.1145/2930889.2930897,Computation of the Similarity Class of the p-Curvature,,2011-03-20
10.1016/j.jsc.2012.06.004,On the bit-complexity of sparse polynomial and series multiplication,,2015-03-20
10.1007/s00200-015-0269-0,On the complexity of skew arithmetic,,2012-03-20
10.1134/S0001434615030256,Arithmetic complexity of certain linear transformations,,2020-03-20
10.1137/16M1062855,On Matrices With Displacement Structure: Generalized Operators and Faster Algorithms,,2016-03-20
10.1007/978-3-540-25937-4_5,Improving Fast Algebraic Attacks,,2013-03-20
10.1109/TC.2002.1017695,Bit-Parallel Finite Field Multiplier and Squarer Using Polynomial Basis,,2020-03-20
10.4213/DM1224,О реализации умножения полиномиальных матриц над полем $GF(2)$ с помощью быстрого преобразования Фурье@@@,,2011-03-20
10.1145/2608628.2608665,On isomorphisms of modules over non-commutative PID,,2012-03-20
10.1109/TIT.2016.2608892,Novel Polynomial Basis With Fast Fourier Transform and Its Application to Reed–Solomon Erasure Codes,,2016-03-20
10.1007/978-3-540-85855-3_17,A New Analysis of the McEliece Cryptosystem Based on QC-LDPC Codes,,2012-03-20
10.1016/J.JSC.2019.07.014,Fast Hermite interpolation and evaluation over finite fields of characteristic two,,2012-03-20
10.1515/dma-2015-0008,Arithmetic complexity of the Stirling transforms,,2019-03-20
10.1007/978-1-4020-6629-0,Fast Fourier Transform - Algorithms and Applications,,2013-03-20
10.1145/1823931.1823956,Toward high-performance polynomial system solvers based on triangular decompositions,,2015-03-20
10.1038/nature01289,Quantum key distribution using gaussian-modulated coherent states,,2016-03-20
10.4213/DM1301,Арифметическая сложностьпреобразований Стирлинга,,2016-03-20
10.1016/j.jsc.2008.04.019,Fast arithmetic for triangular sets: From theory to practice,,2018-03-20
10.1137/S0097539705446810,Robust PCPs of Proximity  Shorter PCPs  and Applications to Coding,,2011-03-20
10.1007/978-3-642-20712-9_8,Faster Polynomial Multiplication via Discrete Fourier Transforms,,2012-03-20
10.1016/J.JNT.2012.07.007,Elliptic periods and primality proving,,2017-03-20
10.13154/tches.v2019.i1.169-208,Implementing RLWE-based Schemes Using an RSA Co-Processor,,2017-03-20
10.1007/11554868_3,Introducing a New Variant of Fast Algebraic Attacks and Minimizing Their Successive Data Complexity,,2011-03-20
10.1145/3005344,Faster Polynomial Multiplication over Finite Fields,,2018-03-20
10.1007/978-3-540-24633-6_4,Linear Recurrences with Polynomial Coefficients and Computation of the Cartier-Manin Operator on Hyperelliptic Curves,,2016-03-20
10.1007/BF01178683,On fast multiplication of polynomials over arbitrary algebras,,2013-03-20
10.1137/1.9781611973068.85,From coding theory to efficient pattern matching,,2020-03-20
10.4230/LIPIcs.ITCS.2018.43,Differential Privacy on Finite Computers,,2013-03-20
10.1145/1007352.1007361,Robust pcps of proximity  shorter pcps and applications to coding,,2015-03-20
10.1017/CBO9780511617744,Quantum cryptography and secret-key distillation,,2012-03-20
10.1109/TIT.2010.2079016,Additive Fast Fourier Transforms Over Finite Fields,,2017-03-20
10.1145/2755996.2756674,A Fast Algorithm for Computing the P-curvature,,2013-03-20
10.13154/tosc.v2018.i1.5-28,Key-Recovery Attacks on Full Kravatte,,2018-03-20
10.1007/978-3-319-72453-9_9,Implementing Fast Carryless Multiplication,,2013-03-20
10.1007/978-3-540-73074-3_10,Towards Optimal Toom-Cook Multiplication for Univariate and Multivariate Polynomials in Characteristic 2 and 0,,2014-03-20
10.1007/978-3-319-02556-8_3,Quasi-Cyclic Codes,,2016-03-20
10.1016/j.jsc.2015.11.012,An isomorphism test for modules over a non-commutative PID. Applications to similarity of Ore polynomials,,2013-03-20
10.1007/978-3-642-05445-7_23,An Efficient Residue Group Multiplication for the etaT Pairing over F3m,,2018-03-20
10.1016/S0747-7171(03)00071-3,Efficient decomposition of separable algebras,,2015-03-20
10.1007/978-3-030-57808-4_21,Saber on ESP32,,2015-03-20
10.1109/TIT.2016.2600417,FFT Algorithm for Binary Extension Finite Fields and Its Application to Reed–Solomon Codes,,2017-03-20
10.1007/s00200-019-00389-9,Fast Gröbner basis computation and polynomial reduction for generic bivariate ideals,,2016-03-20
10.1016/j.jsc.2018.04.018,Computing the bound of an Ore polynomial. Applications to factorization,,2016-03-20
10.1109/TC.2010.141,Subquadratic Space Complexity Binary Field Multiplier Using Double Polynomial Representation,,2014-03-20
10.1007/978-3-030-17656-3_15,Quantum circuits for the CSIDH: optimizing quantum evaluation of isogenies,,2012-03-20
10.1007/978-3-319-16715-2_17,Efficient Leakage Resilient Circuit Compilers,,2012-03-20
10.1109/FOCS.2014.41,Novel Polynomial Basis and Its Application to Reed-Solomon Erasure Codes,,2020-03-20
10.1090/S0025-5718-02-01421-7,Polynomial factorization over F2,,2018-03-20
10.1007/978-3-540-79456-1_10,Faster Multiplication in GF(2)[x],,2011-03-20
10.1145/3373207.3404060,Computing the N-th term of a q-holonomic sequence,,2016-03-20
10.1007/978-3-642-31662-3_16,Improving the Berlekamp Algorithm for Binomials x n - a,,2017-03-20
10.1007/s00145-004-0221-0,Polynomial and Normal Bases for Finite Fields,,2017-03-20
10.1016/j.jco.2004.09.009,Polynomial evaluation and interpolation on special sets of points,,2014-03-20
10.1016/j.jsc.2005.07.001,Fast computation of special resultants,,2017-03-20
10.1145/1277548.1277585,Fast arithmetic for triangular sets: from theory to practice,,2018-03-20
10.1016/J.JSC.2019.07.002,Normal bases from 1-dimensional algebraic groups,,2017-03-20
10.1016/j.jsc.2018.08.005,Fast systematic encoding of multiplicity codes,,2019-03-20
10.1016/j.jsc.2009.05.004,Faster polynomial multiplication via multipoint Kronecker substitution,,2016-03-20
10.1007/978-3-319-16715-2,Topics in Cryptology –- CT-RSA 2015,,2017-03-20
10.1007/s00200-002-0109-x,Computing Parametric Geometric Resolutions,,2016-03-20
10.1007/BF01272074,Computing Frobenius maps and factoring polynomials,,2018-03-20
10.5220/0002126102290236,Subquadratic Binary Field Multiplier in Double Polynomial System,,2014-03-20
10.1007/978-3-030-57808-4,Applied Cryptography and Network Security: 18th International Conference  ACNS 2020  Rome  Italy  October 19–22  2020  Proceedings  Part I,,2012-03-20
10.4213/MZM10176,Арифметическая сложность некоторых линейных преобразований@@@Arithmetic Complexity of Certain Linear Transformations,,2011-03-20
10.1145/2930889.2930904,Fast Computation of the Nth Term of an Algebraic Series over a Finite Prime Field,,2020-03-20
10.1016/j.tcs.2010.11.048,A note on Gao's algorithm for polynomial factorization,,2016-03-20
10.1109/TC.2018.2874662,Better Circuits for Binary Polynomial Multiplication,,2012-03-20
10.1016/J.JCO.2019.03.004,Faster polynomial multiplication over finite fields using cyclotomic coefficient rings,,2016-03-20
10.1007/978-3-642-33027-8_21,Solving Quadratic Equations with XL on Parallel Architectures,,2013-03-20
10.1007/978-3-642-03356-8_19,Batch Binary Edwards,,2017-03-20
10.1016/j.tcs.2004.01.012,Fast arithmetic with general Gauß periods,,2020-03-20
10.1016/J.TCS.2019.04.029,Improved method for finding optimal formulas for bilinear maps in a finite field,,2020-03-20
10.1145/2930889.2930920,Fast Polynomial Multiplication over F260,,2014-03-20
10.1145/1993886.1993930,Fast fourier transforms over poor fields,,2013-03-20
10.1007/978-3-642-00468-1_4,Subset-Restricted Random Walks for Pollard rho Method on Fpm,,2016-03-20
10.1007/978-3-319-42634-1_22,Homomorphic Evaluation of Lattice-Based Symmetric Encryption Schemes,,2012-03-20
10.1007/978-3-319-19216-1_15,Arithmetic in the Finite Fields Using Optimal Normal and Polynomial Bases in Combination,,2017-03-20
10.3103/S0027132214060047,The arithmetic computational complexity of linear transforms,,2012-03-20
10.1016/j.ffa.2008.07.004,Elliptic periods for finite fields,,2019-03-20
10.1016/j.tcs.2009.03.014,A cache-friendly truncated FFT,,2017-03-20
10.1007/978-3-540-30140-0_49,Fast Multipoint Evaluation of Bivariate Polynomials,,2013-03-20
10.4213/DM1023,О построении схем логарифмической глубины для инвертирования в конечных полях@@@On design of circuits of logarithmic depth for inversion in finite fields,,2018-03-20
10.1007/978-3-642-04159-4_23,Subquadratic Polynomial Multiplication over GF(2m) Using Trinomial Bases and Chinese Remaindering,,2012-03-20
10.1090/conm/461/08982,A Multi-level Blocking Distinct Degree Factorization Algorithm,,2013-03-20
10.1145/3208976.3209003,Fast Reduction of Bivariate Polynomials with Respect to Sufficiently Regular Gröbner Bases,,2013-03-20
10.1007/s11704-011-9336-2,A metric normalization of tree edit distance,,2014-03-20
10.5220/0002238801910198,Unordered Tree Matching and Tree Pattern Queries in XML Databases,,2017-03-20
10.1016/j.tcs.2006.10.028,Finding maximal leaf-agreement isomorphic descendent subtrees from phylogenetic trees with different species,,2016-03-20
10.5220/0002356300440051,A new algorithm for twig pattern matching,,2011-03-20
10.1016/j.amc.2007.03.077,An efficient strategy for generating all descendant subtree patterns from phylogenetic trees with its implementation,,2012-03-20
10.1007/BF00264496,Black-white pebbles and graph separation,,2019-03-20
10.2168/LMCS-2(2:6)2006,Context-Sensitive Languages  Rational Graphs and Determinism,,2020-03-20
10.1007/978-3-540-87531-4_5,An Infinite Automaton Characterization of Double Exponential Time,,2018-03-20
10.1109/ACCESS.2019.2909642,A Thread-Oriented Memory Resource Management Framework for Mobile Edge Computing,,2013-03-20
10.1109/ICECCS.2014.21,A Thread Behavior-Based Memory Management Framework on Multi-core Smartphone,,2013-03-20
10.1109/DDECS.2019.8724659,Low Latency Hardware-Accelerated Dynamic Memory Manager for Hard Real-Time and Mixed-Criticality Systems,,2018-03-20
10.1080/00207169108803964,Worst case performance analysis of the two dimensional binary buddy system,,2019-03-20
10.1109/EURMIC.1994.390408,Efficient storage management for large dynamic objects,,2013-03-20
10.1007/s00236-004-0159-6,Fast allocation and deallocation with an improved buddy system,,2016-03-20
10.1007/3-540-46691-6_7,Fast Allocation and Deallocation with an Improved Buddy System,,2012-03-20
10.1515/esrp-2015-0021,Using Critical Path Analysis (Cpa) in Place Marketing Process: a Methodological Approach in the Case of Rostock  Germany,,2018-03-20
10.1017/S0963548316000018,Shape Measures of Random Increasing k-trees †,,2018-03-20
10.4197/Islec.24-1.7,Preliminaries to an Investigation of Reduced Product Set Finance,,2020-03-20
10.15308/SINTEZA-2019-162-167,Information Fusion by Extended Power-Based Aggregation in Image Segmentation,,2011-03-20
10.1007/BFb0027331,A Framework for Defining Distances Between First-Order Logic Objects,,2018-03-20
10.5441/002/edbt.2016.31,Similarity Search on Spatio-Textual Point Sets,,2020-03-20
10.1007/1-84628-284-5_4,Predictive Graph Mining with Kernel Methods,,2014-03-20
10.1007/s10472-012-9278-x,Information-based distance measures and the canonical reflection of view updates,,2018-03-20
10.1109/ICCES.2016.7821993,Sequential-based action recognition technique based on homography of interested SIFT keypoints,,2015-03-20
10.1109/ICPR.2010.213,Outlier-Resistant Dissimilarity Measure for Feature-based Image Matching,,2014-03-20
10.1007/s00373-014-1467-4,Minimum Many-to-Many Matchings for Computing the Distance Between Two Sequences,,2017-03-20
10.1109/TCSVT.2015.2409632,Monitoring Thermal Stress in Wafer-Scale Integrated Circuits by the Attentive Vision Method Using an Infrared Camera,,2015-03-20
10.1109/ICDE.2006.160,Threshold Similarity Queries in Large Time Series Databases,,2014-03-20
10.1007/978-3-642-21073-0_34,Distance Measures between Digital Fuzzy Objects and Their Applicability in Image Processing,,2012-03-20
10.1016/j.fss.2015.06.007,A graded approach to database repair by context-aware distance semantics,,2014-03-20
10.1016/j.comgeo.2007.01.003,Computational geometric aspects of rhythm  melody  and voice-leading,,2014-03-20
10.1109/ICCVW.2015.67,Visual Attention-Guided Approach to Monitoring of Medication Dispensing Using Multi-location Feature Saliency Patterns,,2013-03-20
10.4114/IA.V10I29.883,Similarity Functions for Structured Data. An Application to Decision Trees,,2013-03-20
10.1007/978-3-319-08855-6_20,Context-Aware Distance Semantics for Inconsistent Database Systems,,2014-03-20
10.1145/2816795.2818094,Data-driven structural priors for shape completion,,2017-03-20
10.1515/auto-2015-0005,Optimal Reduction of Multivariate Dirac Mixture Densities,,2012-03-20
10.1109/teramir.2009.5379661,Workshop Co-chairs,,2020-03-20
10.1016/j.comgeo.2014.09.005,Curvature based shape detection,,2019-03-20
10.1109/TIP.2013.2286904,Linear Time Distances Between Fuzzy Sets With Applications to Pattern Matching and Classification,,2019-03-20
10.3390/e22020150,Dynamics and Complexity of Computrons,,2011-03-20
10.1007/s10044-012-0290-x,A new set distance and its application to shape registration,,2019-03-20
10.1016/j.camwa.2010.04.048,Polychotomous kernel Fisher discriminant via top-down induction of binary tree,,2014-03-20
10.1007/978-3-540-73540-3_17,Querying Objects Modeled by Arbitrary Probability Distributions,,2017-03-20
10.1109/TGRS.2010.2043677,Automatic Extraction of Control Points for the Registration of Optical Satellite and LiDAR Images,,2018-03-20
10.5121/IJWEST.2012.3403,A New Similarity Measure for Taxonomy Based on Edge Counting,,2018-03-20
10.1145/265563.265570,In search of information in visual media,,2016-03-20
10.1007/3-540-45372-5_20,Context-Based Similarity Measures for Categorical Databases,,2014-03-20
10.1109/ISPA.2009.5297672,On set distances and their application to image registration,,2014-03-20
10.1016/j.physd.2020.132636,Novel semi-metrics for multivariate change point analysis and anomaly detection,,2018-03-20
10.5281/ZENODO.1075130,A New Similarity Measure Based On Edge Counting,,2018-03-20
10.1016/j.ipl.2005.05.007,An algorithm for computing the restriction scaffold assignment problem in computational biology,,2019-03-20
10.1007/978-3-642-15705-9_5,Image Dissimilarity-Based Quantification of Lung Disease from CT,,2019-03-20
10.1016/j.patrec.2016.01.022,Graph-based semi-supervised learning for spectral-spatial hyperspectral image classification,,2017-03-20
10.3233/SW-170285,A systematic survey of point set distance measures for link discovery,,2020-03-20
10.1007/978-3-642-22922-0_37,TiP: Analyzing Periodic Time Series Patterns,,2020-03-20
10.3115/1220175.1220321,Optimal Constituent Alignment with Edge Covers for Semantic Projection,,2011-03-20
10.1214/EJP.V19-3491,Belief propagation for minimum weight many-to-one matchings in the random complete graph,,2013-03-20
10.1007/978-1-4939-7131-2_110183,Paths in Complex Networks,,2016-03-20
10.1109/TIP.2019.2899947,Fast and Robust Symmetric Image Registration Based on Distances Combining Intensity and Spatial Information,,2014-03-20
10.1145/1341012.1341027,Dynamics-aware similarity of moving objects trajectories,,2015-03-20
10.1109/ACVMOT.2005.77,Multi-Layer Hierarchical Clustering of Pedestrian Trajectories for Automatic Counting of People in Video Sequences,,2018-03-20
10.1142/9781860947292_0034,Semi-Supervised Threshold Queries on Pharmacogenomics Time Sequences,,2011-03-20
10.1109/MULMM.2004.1264991,Content-based comparison of image collections via distance measuring of self-organised maps,,2016-03-20
10.1109/PacificVis.2018.00026,A Visual Analytics Approach for Equipment Condition Monitoring in Smart Factories of Process Industry,,2012-03-20
10.1109/IAEAC.2017.8054138,A multi-resolution medical image registration method based on intensity and point features,,2012-03-20
10.1007/11731139_18,An EM-Approach for Clustering Multi-Instance Objects,,2012-03-20
10.1007/s00778-003-0100-6,THESUS: Organizing Web document collections based on link semantics,,2019-03-20
10.1007/978-3-642-32498-7_26,Similarity of Transactions for Customer Segmentation,,2016-03-20
10.1109/ICDM.2010.45,Adaptive Distances on Sets of Vectors,,2019-03-20
10.15388/INFORMATICA.2015.47,A Normalized Parameter for Similarity/Dissimilarity Characterization of Sequences,,2014-03-20
10.1006/cviu.1998.0697,Image Analysis and Computer Vision: 1997,,2020-03-20
10.1145/3054951,Location-Based Distance Measures for Geosocial Similarity,,
10.1145/872757.872828,Using sets of feature vectors for similarity search on voxelized CAD objects,,2016-03-20
10.1007/s10115-005-0217-6,Multi-step density-based clustering,,2017-03-20
10.1016/J.COMPFLUID.2018.03.070,Exploration of digital-filter and forward-stepwise synthetic turbulence generators and an improvement for their skewness-kurtosis,,2014-03-20
10.5220/0003965902410246,Semantic Similarity between Queries in QA System using a Domain-specific Taxonomy,,2020-03-20
10.1007/s10472-007-9074-1,Distance semantics for database repair,,2017-03-20
10.1109/ICDM.2006.60,Distances and (Indefinite) Kernels for Sets of Objects,,2014-03-20
10.1145/2247596.2247664,Similarity in (spatial  temporal and) spatio-temporal datasets,,2020-03-20
10.1080/08839510290030525,Multi-Dimensional Matchmaking for Electronic Markets,,2012-03-20
10.1007/11687238_19,Similarity Search on Time Series Based on Threshold Queries,,2012-03-20
10.1080/0952813X.2014.977829,A multi-scale non-parametric and parametric hybrid multi-category recognition algorithm with probabilistic outputs,,2016-03-20
10.4000/CYBERGEO.27810,Misunderstanding geographical distances: two errors and an issue in the interpretation of violations of triangle inequality,,2019-03-20
10.14778/1920841.1920857,MapMerge: Correlating Independent Schema Mappings,,2017-03-20
10.1007/s00453-015-0044-4,An $$O(n^2)$$O(n2) Algorithm for the Limited-Capacity Many-to-Many Point Matching in One Dimension,,2017-03-20
10.1007/978-3-540-88873-4_23,Ontology-Based Relevance Assessment: An Evaluation of Different Semantic Similarity Measures,,2020-03-20
10.1007/978-3-540-76848-7_76,Semantic Matching Based on Enterprise Ontologies,,2019-03-20
10.1007/s00778-012-0264-z,MapMerge: correlating independent schema mappings,,2014-03-20
10.1006/cviu.1996.0041,Image Analysis and Computer Vision: 1995,,2011-03-20
10.5220/0006530900170028,A Logical Approach to Extreme Opinion Diffusion,,2020-03-20
10.1007/978-3-319-10061-6_2,Semantic Similarity: Foundations,,2014-03-20
10.1007/978-3-319-59108-7_19,Distance Between Vector-Valued Representations of Objects in Images with Application in Object Detection and Classification,,2020-03-20
10.5220/0005291203860393,A Dissimilarity Measure for Comparing Origami Crease Patterns,,2020-03-20
10.5220/0002396201370144,Similarity Assessment in a CBR Application for Clickstream Data Mining Plans Selection,,2013-03-20
10.1109/CVPR.2014.25,Measuring Distance between Unordered Sets of Different Sizes,,2013-03-20
10.1098/rspa.2018.0897,Quantitative classification of vortical flows based on topological features using graph matching,,2020-03-20
10.1007/978-3-030-00305-0_30,Probabilistic Metric Spaces for Privacy by Design Machine Learning Algorithms: Modeling Database Changes,,2013-03-20
10.1007/3-540-44801-2_19,Matchmaking for Structured Objects,,2017-03-20
10.1007/978-3-319-32034-2_50,Fisher Score-Based Feature Selection for Ordinal Classification: A Social Survey on Subjective Well-Being,,2015-03-20
10.1016/j.neuroimage.2013.02.043,Group analysis of self-organizing maps based on functional MRI using restricted Frechet means,,2014-03-20
10.5075/EPFL-THESIS-3382,A discrete choice modeling framework for pedestrian walking behavior with application to human tracking in video sequences,,2020-03-20
10.13097/archive-ouverte/unige:2323,Dynamiques des composantes visuelles pour la gestion des documents vidéo par le contenu,,2017-03-20
10.3233/FI-2019-1753,Advanced Morphological Distances Based on Dilation and Erosion,,2011-03-20
10.1016/j.patcog.2006.05.022,Content-based image collection summarization and comparison using self-organizing maps,,2017-03-20
10.5815/IJITCS.2015.07.06,A New Measure of the Calculation of Semantic Distance between Ontology Concepts,,2013-03-20
10.1109/ICDE.2008.4497636,T-Time: Threshold-Based Data Mining on Time Series,,2012-03-20
10.1111/coin.12004,BRIDGING THE GAP BETWEEN DISTANCE AND GENERALIZATION,,2019-03-20
10.1109/TCSVT.2006.879118,Counting Pedestrians in Video Sequences Using Trajectory Clustering,,2020-03-20
10.1109/ICDM.2006.46,COSMIC: Conceptually Specified Multi-Instance Clusters,,2011-03-20
10.1007/s10618-007-0067-9,Future trends in data mining,,2020-03-20
10.1007/s10844-006-9951-9,Mining changing regions from access-constrained snapshots: a cluster-embedded decision tree approach,,2017-03-20
10.1016/j.knosys.2006.07.001,The development of an online knowledge-based videotheodolite measurement system,,2018-03-20
10.1109/TMAG.2007.916350,Generating Parametric Design Models Using Information From Topology Optimization,,2016-03-20
10.1109/ICDM.2014.85,Mining Query-Based Subnetwork Outliers in Heterogeneous Information Networks,,2019-03-20
10.1145/2723372.2749442,Optimal Spatial Dominance: An Effective Search of Nearest Neighbor Candidates,,2013-03-20
10.1007/978-3-030-14085-4_7,Stochastic Distance Transform,,2018-03-20
10.1007/978-1-4471-4594-3_37,Clustering Frequent Navigation Patterns from Website Logs by Using Ontology and Temporal Information,,2016-03-20
10.1109/ICSC.2016.46,Object Recognition by Distortion-Free Graph Embedding and Random Forest,,2011-03-20
10.1109/IIAI-AAI.2012.62,A Framework for Segmenting Customers Based on Probability Density of Transaction Data,,2012-03-20
10.1007/978-3-030-20528-7_15,Repair-Based Degrees of Database Inconsistency,,2015-03-20
10.1007/S00365-006-0649-0,Perturbations of Roots under Linear Transformations of Polynomials,,2020-03-20
10.22028/D291-22541,Exploring rich evidence for maximum entropy-based question answering,,2020-03-20
10.1613/jair.2863,Cross-lingual Annotation Projection for Semantic Roles,,2014-03-20
10.1007/3-540-45452-7_11,Local Similarity Based Point-Pattern Matching,,2018-03-20
10.1007/978-3-030-00461-3_26,Measuring and Computing Database Inconsistency via Repairs,,2020-03-20
10.1007/3-540-45452-7,Combinatorial Pattern Matching,,2011-03-20
10.1089/cmb.2006.13.979,An O(n log n)-Time Algorithm for the Restriction Scaffold Assignment Problem,,2018-03-20
10.1109/ICIP.2006.313115,A Distance-Based Method for the Evaluation of Interest point Detection Algorithms,,2019-03-20
10.21203/rs.3.rs-19322/v1,An O(n^3) time algorithm for the maximum weight b-matching problem on bipartite graphs,,2014-03-20
10.1007/978-3-319-57240-6_32,Distance Between Vector-Valued Fuzzy Sets Based on Intersection Decomposition with Applications in Object Detection,,2013-03-20
10.1007/b97430,Introduction to Constraint Databases,,2020-03-20
10.1080/01969720601139058,DESIGN OF DECISION TREE VIA KERNELIZED HIERARCHICAL CLUSTERING FOR MULTICLASS SUPPORT VECTOR MACHINES,,2016-03-20
10.1023/A:1007668716498,Relational Instance-Based Learning with Lists and Terms,,2014-03-20
10.1007/s00373-007-0714-3,Efficient Many-To-Many Point Matching in One Dimension,,2018-03-20
10.1007/978-3-030-05453-3_5,Modelling and Simulating Extreme Opinion Diffusion,,2013-03-20
10.1007/11853886_6,Distance-Based Repairs of Databases,,2019-03-20
10.1109/TKDE.2004.16,THESUS  a closer view on Web content management enhanced with link semantics,,2012-03-20
10.1007/978-3-642-00887-0_32,Periodic Pattern Analysis in Time Series Databases,,2017-03-20
10.1007/978-3-540-28631-8_31,Case-Based Relational Learning of Expressive Phrasing in Classical Music,,2015-03-20
10.1016/j.patrec.2008.09.007,Deriving distance metrics from generality relations,,2020-03-20
10.7287/peerj.preprints.1479v3,Identifying frequent patterns in biochemical reaction networks - a workflow,,2016-03-20
10.1007/s10472-005-9012-z,Computational methods for database repair by signed formulae*,,2014-03-20
10.1007/11595014_27,Hierarchical Multi-classification with Predictive Clustering Trees in Functional Genomics,,2012-03-20
10.1007/978-3-540-87481-2_48,SINDBAD and SiQL: An Inductive Database and Query Language in the Relational Model,,2011-03-20
10.1007/978-3-642-13672-6_37,Adaptive Matching Based Kernels for Labelled Graphs,,2013-03-20
10.1007/978-3-540-78469-2_1,Learning with Kernels and Logical Representations,,2013-03-20
10.1023/B:MACH.0000039779.47329.3a,Integrating Guidance into Relational Reinforcement Learning,,2016-03-20
10.1093/database/bay051,Identifying frequent patterns in biochemical reaction networks: a workflow,,2019-03-20
10.1007/978-3-642-31951-8_23,Integrating Relational Reinforcement Learning with Reasoning about Actions and Change,,2017-03-20
10.1007/11733492_8,Inductive Databases in the Relational Model: The Data as the Bridge,,2017-03-20
10.1109/ICDE.2017.75,Joint Gaussian Based Measures for Multiple-Instance Learning,,2020-03-20
10.1007/978-3-540-39917-9_24,Relational IBL in Music with a New Structural Similarity Measure,,2017-03-20
10.1007/s10044-010-0194-6,A prototype-based method for classification with time constraints: a case study on automated planning,,2014-03-20
10.1145/1353343.1353440,An inductive database and query language in the relational model,,2012-03-20
10.1007/s10994-006-8260-4,Relational IBL in classical music,,2019-03-20
10.1023/B:MACH.0000039777.23772.30,Kernels and Distances for Structured Data,,2019-03-20
10.1007/978-3-319-64471-4_13,Indexing Multiple-Instance Objects,,2017-03-20
10.1007/978-3-540-75549-4_16,Towards a General Framework for Data Mining,,2018-03-20
10.1007/11430919_68,Kernels over Relational Algebra Structures,,2015-03-20
10.1145/1102351.1102376,Combining model-based and instance-based learning for first order regression,,2020-03-20
10.1145/959242.959245,Multi-relational data mining: an introduction,,2013-03-20
10.1109/TCYB.2017.2761798,On the Definiteness of Earth Mover’s Distance and Its Relation to Set Intersection,,2011-03-20
10.1007/3-540-36468-4_5,Kernels for structured data,,2019-03-20
10.3233/FI-2010-284,Similarity-Based Classification in Relational Databases,,2011-03-20
10.1007/springerreference_179433,Relational Reinforcement Learning,,2017-03-20
10.1007/978-0-387-39940-9_3133,Music Retrieval,,2015-03-20
10.1007/s41109-019-0195-3,A survey on graph kernels,,2014-03-20
10.1007/978-3-540-85776-1_12,Prototypes Based Relational Learning,,2016-03-20
10.1145/1082473.1082490,Acquiring and adapting probabilistic models of agent conversation,,2019-03-20
10.1016/j.ijar.2010.07.006,A framework for reasoning under uncertainty based on non-deterministic distance semantics,,2014-03-20
10.4018/978-1-60960-818-7.CH510,Improving Automated Planning with Machine Learning,,2018-03-20
10.1007/978-3-540-68143-4_15,Adaptiveness in Agent Communication: Application and Adaptation of Conversation Patterns,,2018-03-20
10.7287/peerj.preprints.1479v2,Finding patterns in biochemical reaction networks,,2011-03-20
10.1007/BF01193576,Communication for alternating machines,,2014-03-20
10.1007/11537311_27,Shrinking Multi-pushdown Automata,,2017-03-20
10.1007/BFb0015931,Some Properties of Space-Bounded Synchronized Alternating Turing Machines with Only Universal States,,2017-03-20
10.1016/0020-0190(88)90179-2,Alternating Real-Time Computations,,2016-03-20
10.1016/0304-3975(89)90025-X,A Leaf-Size Hierarchy of Two-Dimensional Alternating Turing Machines,,2018-03-20
10.1016/0022-0000(85)90011-X,Speedups of Deterministic Machines by Synchronous Parallel Machines,,2016-03-20
10.2307/421141,1998 European Summer Meeting of the Association for Symbolic Logic,,2012-03-20
10.1016/0304-3975(91)90378-F,A Note on Real-Time One-Way Alternating Multicounter Machines,,2016-03-20
10.1016/j.tcs.2009.08.031,Theory of one-tape linear-time Turing machines,,2015-03-20
10.1007/3-540-57785-8_149,A New Parallel Vector Model  with Exact Characterization of NC^k,,2014-03-20
10.1007/978-3-540-24618-3_29,Theory of One Tape Linear Time Turing Machines,,2018-03-20
10.1016/0304-3975(85)90048-9,Alternating Simple Multihead Finite Automata,,2013-03-20
10.1016/S0019-9958(82)90572-1,Two-Dimensional Alternating Turing Machines with Only Universal States,,2014-03-20
10.1145/65780.65782,Figures of merit,,2019-03-20
10.37236/22,Combinatorial Games: selected Bibliography with a Succinct Gourmet Introduction,,2015-03-20
10.1016/0304-3975(85)90165-3,On the structure of one-tape nondeterministic turing machine time hierarchy,,2013-03-20
10.1016/S0898-1221(00)00333-3,Lower bounds for multiplayer noncooperative games of incomplete information,,2020-03-20
10.1007/BF02122692,On the power of interaction,,2015-03-20
10.1007/978-3-540-72504-6_46,A Time Hierarchy Theorem for Nondeterministic Cellular Automata,,2015-03-20
10.1145/800070.802175,Two-dimensional alternating Turing machines,,2018-03-20
10.1007/BFb0017167,Two Applications of Fürer's Counter to One-Tape Nondeterministic TMs,,2020-03-20
10.1016/S0049-237X(09)70690-1,Are Recursion Theoretic Arguments Useful in Complexity Theory,,2017-03-20
10.1016/B978-0-12-386870-1.50027-7,A Leaf-Size Hierarchy of Three-Dimensional Alternating Turing Machines,,2017-03-20
10.1007/3-540-55210-3_194,New Time Hierarchy Results for Deterministic TMs,,2015-03-20
10.1007/978-3-642-75357-2,Structural Complexity II,,2019-03-20
10.1016/0304-3975(83)90093-2,Two-Dimensional Alternating Turing Machines,,2016-03-20
10.1007/BFb0020804,Interactive Proof Systems and Alternating Time-Space Complexity,,2012-03-20
10.1007/BFb0055811,Speeding-Up Nondeterministic Single-Tape Off-Line Computations by One Alternation,,2018-03-20
10.1016/S0020-0255(96)00124-7,Three-Dimensional Alternating Turing Machines with Only Universal States,,2015-03-20
10.1007/BFb0029642,ATIME(N) is Closed Under Counting,,2020-03-20
10.1016/S0019-9958(84)80042-X,Fast Probabilistic RAM Simulation of Single Tape Turing Machine Computations,,2019-03-20
10.1007/BFb0045109,Tally Languages Accepted by Alternating Multitape Finite Automata,,2012-03-20
10.1109/SFCS.1989.63544,On reversal complexity for alternating Turing machines,,2012-03-20
10.1007/3-540-45132-3_16,Speeding-Up Cellular Automata by Alternations,,2019-03-20
10.1016/S0049-237X(08)70471-3,Bounded Arithmetic Formulas and Turing Machines of Constant Alternation,,2020-03-20
10.1016/0304-3975(94)90105-8,On 1-inkdot Alternating Turing Machines with Small Space,,2013-03-20
10.1109/SFCS.1979.25,Multiple-person alternation,,2016-03-20
10.1016/0304-3975(93)90210-K,Interactive Proof Systems and Alternating Time-Space Complexity,,2019-03-20
10.1007/978-3-642-59136-5_2,Regular Languages,,2020-03-20
10.1016/0304-3975(91)90054-6,An NP-Complete Language Accepted in Linear Time by a One-Tape Turing Machine,,2015-03-20
10.1080/00207169008803893,Constructions for alternating finite automata,,2014-03-20
10.1016/0020-0190(82)90098-9,A Note on Alternating On-Line Turing Machines,,2019-03-20
10.1109/SCT.1993.336520,Alternating time versus deterministic time: a separation,,2011-03-20
10.1007/3-540-09118-1_24,A Graph Theoretic Approach to Determinism versus Non-Determinism,,2017-03-20
10.14411/FP.2002.036,Survey of actinosporean types (Myxozoa) belonging to seven collective groups found in a freshwater salmon farm in Northern Scotland.,,2020-03-20
10.1109/CCC.2000.856730,Time-space tradeoffs for nondeterministic computation,,2012-03-20
10.1007/BFb0017175,On the Power of Communication in Alternating Machines,,2015-03-20
10.1016/S0019-9958(83)80043-6,Complexity of the First-Order Theory of Almost All Finite Structures,,2015-03-20
10.1007/3-540-16486-3_104,Separation Results for Bounded Alternation,,2018-03-20
10.1007/3-540-61440-0_144,Speeding-up Single-Tape Nondeterministic Computations by Single Alternation  with Separation Results,,2014-03-20
10.1016/0304-3975(85)90080-5,Alternating On-Line Turing Machines with Only Universal States and Small Space Bounds,,2012-03-20
10.1109/SFCS.1983.39,On determinism versus non-determinism and related problems,,2011-03-20
10.1016/0304-3975(87)90138-1,On Reversal Bounded Alternating Turing Machines,,2012-03-20
10.1109/CCC.2001.933895,On separators  segregators and time versus space,,2019-03-20
10.1145/1101821.1101822,Time-space lower bounds for satisfiability,,2012-03-20
10.1017/apr.2019.61,The existence of a giant cluster for percolation on large Crump-Mode-Jagers trees,,2017-03-20
10.1007/978-3-030-40608-0_9,Ordered Semiautomatic Rings with Applications to Geometry,,2015-03-20
10.5614/ITBJ.VAD.2013.4.1.9,Batik Fractal: Marriage of Art and Science,,2014-03-20
10.1007/978-3-540-85780-8_4,Selected Ideas Used for Decidability and Undecidability of Bisimilarity,,2011-03-20
10.1007/3-540-63141-0_21,How to Parallelize Sequential Processes,,2020-03-20
10.1142/9789812562494_0054,Roadmap of Infinite Results,,2017-03-20
10.1007/978-3-540-45187-7_10,Deciding Bisimilarity between BPA and BPP Processes,,2017-03-20
10.1016/j.ic.2009.10.012,Complexity of deciding bisimilarity between normed BPA and normed BPP,,2016-03-20
10.1007/978-3-540-85361-9_34,Normed BPA vs. Normed BPP Revisited,,2019-03-20
10.1016/j.dam.2019.10.013,On non-repetitive sequences of arithmetic progressions: The cases k∈{4  5  6  7  8},,2014-03-20
10.1016/j.disc.2007.08.039,Thue type problems for graphs  points  and numbers,,2011-03-20
10.37236/4817,On a Generalization of Thue Sequences,,2016-03-20
10.1007/BF01784023,Step semantics for “true” concurrency with recursion,,2014-03-20
10.1023/A:1022902408130,True Concurrency in Models of Asynchronous Circuit Behavior,,2014-03-20
10.1145/2514.2515,Parallel graph algorithms,,2020-03-20
10.1016/0022-0000(87)90005-5,An Analysis of the Nonemptiness Problem for Classes of Reversal-Bounded Multicounter Machines,,2018-03-20
10.1007/BFb0016267,An Analysis of the Nonemptiness Problem for Classes of Reversal-Bounded Multicounter Machines,,2015-03-20
10.1016/0304-3975(82)90092-5,The Maximum Flow Problem is Log Space Complete for P,,2015-03-20
10.1007/978-3-319-40946-7_8,Problems on Finite Automata and the Exponential Time Hypothesis,,2013-03-20
10.1109/SFCS.1976.35,Variations of a New Machine Model,,2012-03-20
10.1007/3-540-10843-2_39,The Complexity of Decision Problems for Finite-Turn Multicounter Machines,,2012-03-20
10.2478/atd-2019-0013,Teaching Cultural Differences through Korean Canadians: Teaching Material Development for English as a Foreign Language Classes,,2011-03-20
10.4230/LIPIcs.ICDT.2017.13,A Logic for Document Spanners,,2017-03-20
10.1007/978-3-642-30642-6_4,The Complexity of Intersecting Finite Automata Having Few Final States,,2014-03-20
10.4230/LIPIcs.CONCUR.2017.33,The Complexity of Flat Freeze LTL,,2011-03-20
10.3103/S0146411614070165,A formal model and verification problems for software defined networks,,2016-03-20
10.1007/3-540-08353-7_136,Properties of Complexity Classes: A Short Survey,,2015-03-20
10.1007/978-3-030-23679-3_18,Decision Problems for Restricted Variants of Two-Dimensional Automata,,2017-03-20
10.1016/J.TCS.2002.11.002,Assembling molecules in ATOMIX is hard,,2018-03-20
10.1016/b978-0-12-708240-0.50011-3,Automata Theory for Database Theoreticans,,2015-03-20
10.3390/a10010024,Problems on Finite Automata and the Exponential Time Hypothesis,,2015-03-20
10.23638/LMCS-15(3:33)2019,On Parameterized One-Counter Automata,,2014-03-20
10.4230/LIPIcs.ICDT.2016.14,Dynamic Graph Queries,,2014-03-20
10.1016/0022-0000(81)90028-3,The Complexity of Decision Problems for Finite-Turn Multicounter Machines,,2019-03-20
10.1016/S0304-3975(81)80003-5,The Complexity of the Equivalence Problem for two Characterizations of Presburger Sets,,2017-03-20
10.1007/s00224-018-9874-1,A Logic for Document Spanners,,2012-03-20
10.1007/s00037-014-0089-9,The complexity of intersecting finite automata having few final states,,2018-03-20
10.1016/0890-5401(91)90015-T,Iterated Stack Automata and Complexity Classes,,2020-03-20
10.1007/3-540-55808-X_33,The Emptiness Problem for Intersections of Regular Languages,,2013-03-20
10.1016/0020-0190(90)90063-4,Endmarkers can Make a Difference,,2016-03-20
10.1016/J.JSPI.2013.07.011,The height of two types of generalised Motzkin paths,,2014-03-20
10.1016/J.TCS.2013.01.006,Non-redundant random generation algorithms for weighted context-free grammars,,2016-03-20
10.1016/j.tcs.2010.05.010,Controlled non uniform random generation of decomposable structures,,2020-03-20
10.1016/J.TCS.2009.09.021,The relevant prefixes of coloured Motzkin walks: An average case analysis,,2019-03-20
10.1109/ICDEW.2006.102,On Potential Validity of Document-Centric XML Documents,,2018-03-20
10.1016/j.ipl.2014.07.010,Undecidability of accordance for open systems with unbounded message queues,,2017-03-20
10.1016/j.scico.2016.11.003,Deciding conformance for bounded responsiveness,,2011-03-20
10.17960/ELL.2015.21.2.005,Lonely Negative Words in English and Korean,,2011-03-20
10.2478/s11535-012-0008-5,Species diversity of keratinophilic fungi in various soil types,,2016-03-20
10.1515/congeo-2017-0002,The resistivity image of the Upper Cretaceous Horné Belice Group: a case study from the Hranty section (Považský Inovec Mts.  Western Carpathians),,2012-03-20
10.1007/BF00008580,Meiobenthic distribution and nematode community structure in five European estuaries,,2016-03-20
10.4230/LIPIcs.TIME.2019.20,On Verifying Timed Hyperproperties,,2014-03-20
10.4230/LIPIcs.ICALP.2016.98,Computation Tree Logic for Synchronization Properties,,2016-03-20
10.22028/D291-26025,Model checking finite paths and trees,,2017-03-20
10.1007/978-3-030-57628-8_2,On the Semantics of Polychronous Polytimed Specifications,,2015-03-20
10.1007/978-3-540-75454-1_13,On the Expressiveness of MTL Variants over Dense Time,,2018-03-20
10.1007/978-3-642-23217-6_28,Weak Kripke Structures and LTL,,2015-03-20
10.1109/TIME.2012.13,Automata-based Verification of Linear Temporal Logic Models with Bounded Variability,,2015-03-20
10.1016/j.ic.2015.03.007,Taming past LTL and flat counter systems,,2013-03-20
10.1007/11605157_20,Deeper Connections Between LTL and Alternating Automata,,2011-03-20
10.1145/1838552.1838560,A theory of sampling for continuous-time metric temporal logic,,2012-03-20
10.1145/1877714.1877719,The tractability of model checking for LTL: The good  the bad  and the ugly fragments,,2016-03-20
10.1051/ita:2008020,On Varieties of Literally Idempotent Languages,,2017-03-20
10.1109/TIME.2011.9,On Relaxing Metric Information in Linear Temporal Logic,,2015-03-20
10.1007/978-3-642-31365-3_16,Taming Past LTL and Flat Counter Systems,,2018-03-20
10.1016/j.tcs.2015.05.013,Next-preserving branching bisimulation,,2016-03-20
10.1145/3086512.3086518,Performance improvement on legal model checking,,2011-03-20
10.1007/978-3-642-39212-2_17,On the Complexity of Verifying Regular Properties on Flat Counter Systems ,,2015-03-20
10.1016/j.ic.2020.104555,Multi-Player Games with LDL Goals over Finite Traces,,2019-03-20
10.1007/978-3-319-48758-8_11,On the Expressiveness of Temporal Equilibrium Logic,,2011-03-20
10.1093/logcom/exw004,Partial order reduction for checking LTL formulae with the next-time operator,,2012-03-20
10.1007/978-3-642-32332-4_3,Dimensions of the Time Modeling Problem,,2016-03-20
10.1007/BF01261657,Approximating queue lengths inM(t)/G/1 queue using the maximum entropy principle,,2019-03-20
10.1007/978-3-540-36212-8_8,Minimum Mean Deviation from the Steady-State Condition in Queueing Theory,,2014-03-20
10.1109/JIOT.2019.2947419,Optimizing Information Freshness in Computing-Enabled IoT Networks,,2013-03-20
10.1007/s11235-015-0104-8,A methodology for information and capacity analysis of broadband wireless access systems,,2012-03-20
10.1007/s10479-006-5302-z,A maximum entropy approach for the busy period of the M/G/1 retrial queue,,2013-03-20
10.1016/J.PHYSA.2014.08.031,A general methodology for population analysis,,2017-03-20
10.4236/IB.2010.24047,The System Size Distribution for M/G/1 Queueing System under N-Policy with Startup/Closedown,,2017-03-20
10.1007/s11518-020-5460-6,Risk Assessment of a Stochastic Service System,,2011-03-20
10.1080/03081079.2017.1323892,Information analysis of queueing systems,,2011-03-20
10.1109/JSYST.2015.2456941,Entropy Analysis of Broadband Wireless Access Systems,,2015-03-20
10.1109/IHMSC.2009.197,Steady-State Queue-Length Distribution for Mx/G/1 Queue under N-policy,,2018-03-20
10.1007/S12190-009-0231-Z,Steady-state probability of the randomized server control system with second optional service  server breakdowns and startup,,2020-03-20
10.1016/j.cie.2006.11.005,Maximum entropy analysis of the M[x]/M/1 queueing system with multiple vacations and server breakdowns,,2018-03-20
10.4236/iim.2010.26044,Steady-State Queue Length Analysis of a Batch Arrival Queue under N-Policy with Single Vacation and Setup Times,,2018-03-20
10.1007/11561163_9,rCOS: Refinement of Component and Object Systems,,2013-03-20
10.1016/j.ipl.2017.02.004,Finite-state concurrent programs can be expressed succinctly in triple normal form,,2017-03-20
10.1145/1412228.1455262,Multiword atomic read/write registers on multiprocessor systems,,2012-03-20
10.1007/3-540-36108-1,Distributed Computing,,2013-03-20
10.1016/j.tcs.2015.11.032,Finite-state concurrent programs can be expressed in pairwise normal form,,2017-03-20
10.1145/1314690.1314695,On specification of Read/Write shared variables,,2013-03-20
10.1007/978-3-030-31784-3_28,Are Parametric Markov Chains Monotonic?,,2018-03-20
10.3233/JIFS-179181,Time-satisfaction of data series based on computer original genetic algorithm gradually covers the location and algorithm of electric vehicle charging station,,2018-03-20
10.4230/OASIcs.SynCoP.2015.63,Parameter and Controller Synthesis for Markov Chains with Actions and State Labels,,2018-03-20
10.1007/978-3-319-57685-5,Formal System Verification,,2017-03-20
10.1007/978-3-030-28042-0_10,Data-Informed Parameter Synthesis for Population Markov Chains,,2016-03-20
10.1007/978-3-030-02227-3_6,Formal Parameter Synthesis for Energy-Utility-Optimal Fault Tolerance,,2020-03-20
10.3389/fgene.2019.00549,Comprehensive Review of Models and Methods for Inferences in Bio-Chemical Reaction Networks,,2011-03-20
10.1007/978-3-030-54997-8_29,Bayesian Verification of Chemical Reaction Networks,,2019-03-20
10.3390/microorganisms7110553,Computational Modelling of Metabolic Burden and Substrate Toxicity in Escherichia coli Carrying a Synthetic Metabolic Pathway,,2014-03-20
10.1007/978-3-319-23820-3_23,Machine Learning Methods in Statistical Model Checking and System Design - Tutorial,,2011-03-20
10.4230/LIPIcs.CONCUR.2019.14,On the Complexity of Reachability in Parametric Markov Decision Processes,,2014-03-20
10.1186/s12859-019-3229-z,PCA via joint graph Laplacian and sparse constraint: Identification of differentially expressed genes and sample clustering on gene expression data,,2015-03-20
10.1007/978-3-030-60327-4_14,ABC(SMC)2: Simultaneous Inference and Model Checking of Chemical Reaction Networks,,2016-03-20
10.1007/978-3-662-49674-9_21,PRISM-PSY: Precise GPU-Accelerated Parameter Synthesis for Stochastic Systems,,2020-03-20
10.1007/978-3-030-31304-3_11,Reachability Design Through Approximate Bayesian Computation,,2015-03-20
10.1007/978-3-030-61470-6_29,A Case Study of Policy Synthesis for Swarm Robotics,,2011-03-20
10.1109/SOSCYPS.2016.7579999,Advances and challenges of quantitative verification and synthesis for cyber-physical systems,,2014-03-20
10.1007/978-3-319-74727-9_5,Precise Parameter Synthesis for Generalised Stochastic Petri Nets with Interval Parameters,,2014-03-20
10.1007/978-3-030-04771-9_15,FormalMiner: A Formal Framework for Refinement Mining,,2020-03-20
10.1007/978-3-319-19249-9_14,Parameter Synthesis Through Temporal Logic Specifications,,2020-03-20
10.1145/3310225,Mean-payoff Optimization in Continuous-time Markov Chains with Parametric Alarms,,2019-03-20
10.1007/978-3-319-21690-4_13,PROPhESY: A PRObabilistic ParamEter SYnthesis Tool,,2014-03-20
10.1016/j.ic.2016.01.004,Smoothed model checking for uncertain Continuous-Time Markov Chains,,2016-03-20
10.1145/3150928.3150947,Perturbation of CTMC Trapping Probabilities with Application to Model Repair,,2015-03-20
10.1007/978-3-319-21999-8_2,Synthesizing and Tuning Chemical Reaction Networks with Specified Behaviours,,2018-03-20
10.1007/s10270-020-00787-5,Automated synthesis of local time requirement for service composition,,2011-03-20
10.1007/978-3-030-17465-1_10,Shepherding Hordes of Markov Chains,,2014-03-20
10.29007/37lf,Parameter Synthesis for Probabilistic Hyperproperties,,2011-03-20
10.1109/MASCOTS.2016.34,Efficient Timeout Synthesis in Fixed-Delay CTMC Using Policy Iteration,,2018-03-20
10.1016/j.measurement.2019.107417,A reinforcement neural architecture search method for rolling bearing fault diagnosis,,2019-03-20
10.1007/978-3-030-31304-3_9,Transient Memory in Gene Regulation,,2014-03-20
10.1007/978-3-319-89963-3_23,Bayesian Statistical Parameter Synthesis for Linear Temporal Properties of Stochastic Models,,2015-03-20
10.1016/j.scico.2007.01.016,Proofs and pedagogy; science and systems: The grammar tool box,,2011-03-20
10.1016/j.entcs.2004.06.008,The Grammar Tool Box: A Case Study Comparing GLR Parsing Algorithms,,2016-03-20
10.1145/1146809.1146810,Right nulled GLR parsers,,2018-03-20
10.1145/3385412.3386032,Faster general parsing through context-free memoization,,2018-03-20
10.1098/rsta.2004.1448,Raman spectroscopy of polyconjugated molecules and materials: confinement effect in one and two dimensions,,2019-03-20
10.1016/j.bbalip.2010.12.003,Effect of ceramide acyl chain length on skin permeability and thermotropic phase behavior of model stratum corneum lipid membranes.,,2019-03-20
10.13053/CYS-21-4-2857,Proving Distributed Coloring of Forests in Dynamic Networks,,2018-03-20
10.1109/WETICE.2013.67,Towards Proved Distributed Algorithms through Refinement  Composition and Local Computations,,2012-03-20
10.1007/BF01214623,Exits in the refinement calculus,,2012-03-20
10.1007/978-3-540-73031-6_28,Towards Feature-Oriented Specification and Development with Event-B,,2015-03-20
10.1007/978-3-540-30482-1_17,Deriving Probabilistic Semantics Via the 'Weakest Completion',,2016-03-20
10.1109/TSE.2010.13,Deriving a Slicing Algorithm via FermaT Transformations,,2020-03-20
10.1007/978-3-540-71316-6_34,Type Reconstruction for General Refinement Types,,2015-03-20
10.1007/BF01214918,Superposition refinement of reactive systems,,2020-03-20
10.1007/978-3-540-70594-9_16,Safe Modification of Pointer Programs in Refinement Calculus,,2011-03-20
10.1007/978-3-642-32096-5_1,A Programming Tutor for Haskell,,2018-03-20
10.1007/978-3-030-61362-4_1,Who Carries the Burden of Modularity? - Introduction to ISoLA 2020 Track on Modularity and (De-)composition in Verification,,2017-03-20
10.1016/S1571-0661(04)80405-5,A methodological process for the design of a large system: two industrial case-studies,,2013-03-20
10.1007/978-3-319-60170-0_9,A Formal Approach for Maintaining Forest Topologies in Dynamic Networks,,2020-03-20
10.1109/WETICE.2018.00049,Proving Distributed Algorithms for Wireless Sensor Networks by Combining Refinement and Local Computations,,2015-03-20
10.1007/3-540-45685-6_22,Weakest Precondition for General Recursive Programs Formalized in Coq,,2013-03-20
10.1007/11813040_10,Quantitative Refinement and Model Checking for the Analysis of Probabilistic Systems,,2011-03-20
10.1007/978-3-030-03418-4_24,Modelling by Patterns for Correct-by-Construction Process,,2019-03-20
10.1145/2351676.2351756,Formal verification techniques for model transformations specified by-demonstration,,2017-03-20
10.1007/3-540-36103-0_35,Towards a Refinement Calculus for Concurrent Real-Time Programs,,2012-03-20
10.1007/978-3-319-41480-5_4,Verification of Vertical Refinement,,2012-03-20
10.1007/978-3-540-25951-0_3,Developing Logic Programs from Specifications Using Stepwise Refinement,,2011-03-20
10.12694/SCPE.V8I1.397,A Top Down Approach for Describing the Acquaintace Organisation of Multiagent Systems,,2020-03-20
10.1007/BF01888227,Refinement concepts formalised in higher order logic,,2011-03-20
10.5220/0001900402460251,Rigorous Communication Modelling at Transaction Level With Systemc,,2017-03-20
10.1007/978-3-030-32505-3_2,Verification by Construction of Distributed Algorithms,,2016-03-20
10.1007/1-4020-7836-6_12,Formal Communication Modeling and Refinement,,2020-03-20
10.1007/s00236-002-0103-6,Stepwise development of fair distributed systems,,2011-03-20
10.1145/587051.587070,Deriving operational software specifications from system goals,,2017-03-20
10.1007/s00165-009-0136-5,Structured derivations: a unified proof style for teaching mathematics,,2020-03-20
10.1109/ICIS.2017.8332403,A correct-by-construction approach for proving distributed algorithms in spanning trees,,2017-03-20
10.1007/978-1-84882-912-1_12,The Thousand-and-One Cryptographers,,2015-03-20
10.1007/978-3-030-25540-4_12,Automated Synthesis of Secure Platform Mappings,,2011-03-20
10.1561/2500000045,QED at Large: A Survey of Engineering of Formally Verified Software,,2019-03-20
10.1145/1216374.1216375,Slicing as a program transformation,,2015-03-20
10.1016/S0167-739X(01)00072-3,KELPIO a telescope-ready domain-specific I/O library for irregular block-structured applications,,2019-03-20
10.1007/s001650050037,The Least Conjunctive Refinement and Promotion in the Refinement Calculus,,2018-03-20
10.1016/j.infsof.2007.10.010,Rigorous engineering of product-line requirements: A case study in failure management,,2016-03-20
10.1109/WETICE.2016.19,A Refinement-Based Approach for Proving Distributed Algorithms on Evolving Graphs,,2012-03-20
10.1007/978-3-540-74591-4_4,Formalising Java's Data Race Free Guarantee,,2012-03-20
10.1109/PDP.2016.113,Towards a General Framework for Ensuring and Reusing Proofs of Termination Detection in Distributed Computing,,2017-03-20
10.1007/BF01213532,Real-time refinement in Manna and Pnueli's temporal logic,,2015-03-20
10.1145/2594291.2594305,Consolidation of queries with user-defined functions,,2017-03-20
10.1007/3-540-45648-1_9,Software Construction by Stepwise Feature Introduction,,2014-03-20
10.1109/QRS-C.2016.36,A UTP Refinement Model of the STeC Language,,2020-03-20
10.29007/8n75,Formal Development of Distributed Enumeration Algorithms By Refinement-Based Techniques,,2013-03-20
10.1007/978-3-030-30446-1_25,Using Threat Analysis Techniques to Guide Formal Verification: A Case Study of Cooperative Awareness Messages,,2014-03-20
10.1007/11784180_1,Incremental Software Construction with Refinement Diagrams,,2013-03-20
10.1007/978-3-540-75292-9_2,Linking semantic models,,2015-03-20
10.1145/1363686.1363869,An approach for specification construction using property-preserving refinement patterns,,2012-03-20
10.1007/11808107_1,Dependable Software,,2017-03-20
10.1007/978-3-642-33263-0_42,Ask-Elle: A Haskell Tutor - Demonstration,,2016-03-20
10.1007/978-3-642-55569-5_11,Durchgängige Entwicklung großer verteilter Systeme - Die SILICON-Fallstudie,,2018-03-20
10.1007/978-3-319-23509-7_16,Towards a Formal Model for Dynamic Networks Through Refinement and Evolving Graphs,,2015-03-20
10.1007/11921240_4,Quantitative µ-Calculus Analysis of Power Management in Wireless Networks,,2018-03-20
10.1109/AICCSA.2015.7507191,A formal pattern for dynamic networks through evolving graphs,,2012-03-20
10.1109/ISoLA.2006.51,Formal Techniques for the Analysis of Wireless Networks,,2019-03-20
10.1016/j.future.2020.03.003,Modeling and Proving Distributed Algorithms for Dynamic Graphs,,2011-03-20
10.1109/CMPSAC.2002.1045029,Program slicing via FermaT transformations,,2018-03-20
10.1007/3-540-45648-1_14,A Theory of Generalised Substitutions,,2011-03-20
10.1109/ICSM.2007.4362672,Refactoring via Program Slicing and Sliding,,2011-03-20
10.14279/tuj.eceasst.35.442,Proving Distributed Algorithms by Combining Refinement and Local Computations,,2014-03-20
10.1007/s00165-012-0250-7,Using refinement calculus techniques to prove linearizability,,2016-03-20
10.1007/s10270-014-0440-2,Systematic approach for constructing an understandable state machine from a contract-based specification: controlled experiments,,2012-03-20
10.1007/978-3-642-38613-8_1,From Z to B and then Event-B: Assigning Proofs to Meaningful Programs,,2012-03-20
10.4230/OASICS.TRUSTWORTHYSW.2006.695,An Operator-based Approach to Incremental Development of Conform Protocol State Machines,,2018-03-20
10.1007/11889229_5,Real-Time and Fault-Tolerant Systems,,2018-03-20
10.1007/978-3-642-36089-3_20,Modular Well-Definedness Analysis for Attribute Grammars,,2017-03-20
10.1145/2804295.2804296,Attribute grammars in Erlang,,2016-03-20
10.1007/978-3-540-76786-2,Datatype-Generic Programming,,2012-03-20
10.1145/1159842.1159845,A generic recursion toolbox for Haskell or: scrap your boilerplate systematically,,2013-03-20
10.1007/11737414_4,Ruler: Programming Type Rules,,2013-03-20
10.1016/j.scico.2016.03.006,Generalising tree traversals and tree transformations to DAGs: Exploiting sharing without the pain,,2014-03-20
10.1016/j.entcs.2011.02.015,Attribute Grammars as Recursion Schemes over Cyclic Representations of Zippers,,2014-03-20
10.1007/978-3-642-40922-6_10,Zipper-Based Attribute Grammars and Their Extensions,,2017-03-20
10.1007/978-3-319-45279-1_4,Memoized Zipper-Based Attribute Grammars,,2018-03-20
10.1051/ita:2003020,Traced Premonoidal Categories,,2016-03-20
10.1007/978-3-540-76786-2_1,Datatype-Generic Programming,,2020-03-20
10.1109/FORMSERA.2012.6229782,Making sense of recursion patterns,,2015-03-20
10.1145/1014007.1014018,Fusion with stacks and accumulating parameters,,2015-03-20
10.1007/978-3-319-15940-9_10,Zipper-Based Modular and Deforested Computations,,2014-03-20
10.1007/3-540-46002-0_11,A Functional Semantics of Attribute Grammars,,2019-03-20
10.4204/EPTCS.129.7,Abstract Interpretation as a Programming Language,,2018-03-20
10.1007/11575467_19,Termination Analysis of Higher-Order Functional Programs,,2013-03-20
10.14738/TMLAI.53.3397,Functional Implementation of Multiple Traversals Program with Attribute Grammars in Scala,,2016-03-20
10.1145/568173.568187,Using circular programs to deforest in accumulating parameters,,2019-03-20
10.1145/2636228.2636234,Lazy data-oriented evaluation strategies,,2015-03-20
10.1145/1596638.1596650,The architecture of the Utrecht Haskell compiler,,2019-03-20
10.1007/s10990-011-9076-x,Shortcut fusion rules for the derivation of circular and higher-order programs,,2011-03-20
10.1007/11783596_22,Swapping Arguments and Results of Recursive Functions,,2015-03-20
10.1007/11546382_1,Typing Haskell with an Attribute Grammar,,2020-03-20
10.1145/1480945.1480958,Shortcut fusion rules for the derivation of circular and higher-order monadic programs,,2020-03-20
10.1016/S1571-0661(04)80698-4,A narrowing-based instantiation rule for rewriting-based fold/unfold transformations,,2013-03-20
10.1145/2500365.2500597,Productive coprogramming with guarded recursion,,2011-03-20
10.1016/J.ENTCS.2010.08.043,A Pure Object-Oriented Embedding of Attribute Grammars,,2017-03-20
10.1145/3341718,Call-by-need is clairvoyant call-by-value,,2016-03-20
10.1007/978-3-642-41582-1_2,Iterating Skeletons - Structured Parallelism by Composition,,2019-03-20
10.1145/1291201.1291216,A shortcut fusion rule for circular program calculation,,2011-03-20
10.1017/S0956796804005209,Pickler combinators,,2016-03-20
10.1016/j.tcs.2013.02.007,Attribute grammars as tree transducers over cyclic representations of infinite trees and their descriptional composition,,2011-03-20
10.1145/115865.376287,Dynamic Specialization in Extended Functional Language with Monotone Objects,,2012-03-20
10.1017/S0956796812000111,Manipulating accumulative functions by swapping call-time and return-time computations,,2018-03-20
10.1016/j.entcs.2009.09.044,Abstract Interpretation of Functional Programs using an Attribute Grammar System,,2014-03-20
10.1016/J.SCICO.2018.10.006,Memoized zipper-based attribute grammars and their higher order extension,,2015-03-20
10.1145/581478.581500,There and back again,,2020-03-20
10.1145/1375634.1375645,A reference-counting garbage collection algorithmfor cyclical functional programming,,2016-03-20
10.1007/978-3-642-16478-1_10,Pull-Ups  Push-Downs  and Passing It Around - Exercises in Functional Incrementalization,,2012-03-20
10.1145/3428248,Knowing when to ask: sound scheduling of name resolution in type checkers derived from declarative specifications,,2017-03-20
10.1007/978-3-642-35182-2_14,Lazy v. Yield: Incremental  Linear Pretty-Printing,,2014-03-20
10.1145/3314221.3314631,LoCal: a language for programs operating on serialized data,,2013-03-20
10.1017/S0956796808006990,Linear  bounded  functional pretty-printing,,2015-03-20
10.1145/581690.581693,A recursive do for Haskell,,2015-03-20
10.1007/978-3-030-28346-9_1,Watch Out for that Tree! A Tutorial on Shortcut Deforestation,,2019-03-20
10.1145/2678015.2682539,Generalising Tree Traversals to DAGs: Exploiting Sharing without the Pain,,2017-03-20
10.1145/3136014.3136023,Ensuring non-interference of composable language extensions,,2019-03-20
10.1007/978-3-030-57663-9_16,Teaching Efficient Recursive Programming and Recursion Elimination Using Olympiads and Contests Problems,,2012-03-20
10.1023/B:LISP.0000029450.36668.cb,Using Circular Programs to Deforest in Accumulating Parameters,,2012-03-20
10.1145/2500365.2500614,Using circular programs for higher-order syntax: functional pearl,,2012-03-20
10.1017/S0956796809007291,The essence of the Iterator pattern,,2020-03-20
10.1145/2804302.2804311,The remote monad design pattern,,2012-03-20
10.1145/1053468.1053473,Pretty printing with lazy dequeues,,2014-03-20
10.1007/BF01212526,A strict functional language with cyclic recursive data,,2018-03-20
10.1007/978-3-642-40922-6_9,Multiple Intermediate Structure Deforestation by Shortcut Fusion,,2018-03-20
10.1017/S0956796802004574,Compiling embedded languages,,2018-03-20
10.1515/jpem-2013-0431,Rare case of homozygous epimerase deficiency and heterozygous of duarte 2 variant,,2017-03-20
10.1007/978-3-642-21464-6_5,CSP as a Coordination Language,,2011-03-20
10.1007/978-3-642-19829-8_9,Simulating Truly Concurrent CSP,,2015-03-20
10.1007/978-3-030-12988-0_10,Model Transformation with Triple Graph Grammars and Non-terminal Symbols,,2018-03-20
10.1016/S0304-3975(99)00138-3,Double Greibach operator grammars,,2020-03-20
10.1109/AICT47866.2019.8981776,Neural Spelling Correction for Azerbaijani Language,,2019-03-20
10.1109/FUZZY.2010.5584364,Knowledge extraction of the behaviour of software developers by the analysis of time recording logs,,2017-03-20
10.1007/BF02238238,Fast approximate matching of words against a dictionary,,2012-03-20
10.1016/j.jda.2004.08.006,Bit-parallel approximate string matching algorithms with transposition,,2012-03-20
10.1007/3-540-45071-8_10,On All-Substrings Alignment Problems,,2015-03-20
10.1007/b101638,Advances in Natural Language Processing: 4th International Conference  EsTAL 2004  Alicante  Spain  October 20-22  2004. Proceedings,,2013-03-20
10.1093/comjnl/bxt006,On Correcting XML Documents with Respect to a Schema,,2016-03-20
10.1007/11605157_27,Robust Spelling Correction,,2015-03-20
10.1007/978-3-540-30228-5_5,Automatic Spelling Correction in Galician,,2017-03-20
10.1007/978-3-540-39984-1_8,Bit-Parallel Approximate String Matching Algorithms with Transposition,,2014-03-20
10.1007/s10951-013-0355-8,How small are shifts required in optimal preemptive schedules?,,2014-03-20
10.1201/9780203489802.ch3,Some Basic Scheduling Algorithms,,2020-03-20
10.1007/978-3-642-11811-1_14,Supporting Reuse in Event B Development: Modularisation Approach,,2015-03-20
10.1007/BF00289144,A sharp proof rule for procedures in wp semantics,,2015-03-20
10.1007/BF00267863,Equivalence of the Gries and Martin proof rules for procedure calls,,2017-03-20
10.1007/978-1-4939-0369-6_8,Chapter 8 Extension of Languages Resulting from Regulated Grammars,,2016-03-20
10.1142/S012905419900006X,On the Leftmost Derivation in Matrix Grammars,,2018-03-20
10.1109/TPDS.2018.2869736,Portable Programming with RAPID,,2014-03-20
10.1016/j.ic.2016.06.005,Two double-exponential gaps for automata with a limited pushdown,,2013-03-20
10.1007/978-3-030-38919-2_12,Kernels of Sub-classes of Context-Free Languages,,2017-03-20
10.1007/978-3-319-04921-2_9,Two Double-Exponential Gaps for Automata with a Limited Pushdown,,2020-03-20
10.1016/j.tcs.2012.05.009,The size-cost of Boolean operations on constant height deterministic pushdown automata,,2015-03-20
10.1007/978-3-642-38536-0_9,Boolean Language Operations on Nondeterministic Automata with a Pushdown of Constant Height,,2016-03-20
10.1007/978-3-642-22600-7_7,The Size-Cost of Boolean Operations on Constant Height Deterministic Pushdown Automata,,2014-03-20
10.1134/S0032946009020082,On complete one-way functions,,2017-03-20
10.1515/zkri-2015-1853,X-ray topographic study of the antiferroelectric phase transition and antiphase boundaries in copper formate tetrahydrate,,2015-03-20
10.1007/978-3-642-40579-2_3,Deterministic Semi-Thue Systems and Variants of Post Correspondence Problem,,2017-03-20
10.1007/s00224-003-1061-2,"Undecidable Problems for Probabilistic Automata of Fixed Dimension
",,2012-03-20
10.1007/978-3-540-77050-3_22,Post Embedding Problem Is Not Primitive Recursive  with Applications to Channel Systems,,2011-03-20
10.1109/SCAM.2003.1238026,Online cycle detection and difference propagation for pointer analysis,,2019-03-20
10.1007/11575467_7,The Parallel Implementation of the Astrée Static Analyzer,,2019-03-20
10.1016/j.entcs.2005.01.018,Combined Static and Dynamic Analysis,,2012-03-20
10.1145/996821.996835,Efficient field-sensitive pointer analysis for C,,2013-03-20
10.3929/ETHZ-A-005005473,Combining static and dynamic analysis to find multi-threading faults beyond data races,,2018-03-20
10.1145/1290520.1290524,Efficient field-sensitive pointer analysis of C,,2014-03-20
10.1007/978-3-540-78791-4_16,Java Bytecode Verification for @NonNull Types,,2013-03-20
10.4204/EPTCS.129.11,Modular Construction of Shape-Numeric Analyzers,,2017-03-20
10.1007/978-3-540-30579-8_22,Verification of an Error Correcting Code by Abstract Interpretation,,2011-03-20
10.1007/11513988_45,Incremental Algorithms for Inter-procedural Analysis of Safety Properties,,2016-03-20
10.1023/B:SQJO.0000039791.93071.a2,Online Cycle Detection and Difference Propagation: Applications to Pointer Analysis,,2013-03-20
10.1007/3-540-45789-5_31,Checking Safety Properties of Behavioral VHDL Descriptions by Abstract Interpretation,,2013-03-20
10.1145/945885.945886,Escape analysis for JavaTM: Theory and practice,,2015-03-20
10.1145/2489804.2489810,A calculus for constraint-based flow typing,,2018-03-20
10.1016/j.scico.2010.10.004,Formalisation and implementation of an algorithm for bytecode verification of @NonNull types,,2014-03-20
10.1631/jzus.C1200135,Optimizing checkpoint for scientific simulations,,2016-03-20
10.1016/j.peva.2011.01.005,Theoretical and experimental evaluation of communication-induced checkpointing protocols in FE and FLazy-E families,,2011-03-20
10.1109/QSIC.2007.4385492,A Reinforcement-Learning Approach to Failure-Detection Scheduling,,2018-03-20
10.1080/00207170701771893,Stability of digital control systems implemented in error-recoverable computers,,2019-03-20
10.15803/IJNC.6.1_2,Checkpointing Strategies for Scheduling Computational Workflows,,2018-03-20
10.3390/EN7085151,Shadow Replication: An Energy-Aware  Fault-Tolerant Computational Model for Green Cloud Computing,,2015-03-20
10.1051/ro:2003007,On the M/G/1 retrial queue subjected to breakdowns,,2014-03-20
10.1109/ANSS.2005.15,Autonomic Web-based simulation,,2016-03-20
10.7282/T3SX6DPR,Just-in-time and just-in-place deadlock resolution,,2012-03-20
10.1109/DELTA.2010.25,Estimating Error-probability and its Application for Optimizing Roll-back Recovery with Checkpointing,,2015-03-20
10.1007/s10479-014-1662-y,Queueing analysis of the DRX power saving mechanism in fault-tolerant 3GPP LTE wireless networks,,2013-03-20
10.1109/CLUSTER.2017.24,Assuming Failure Independence: Are We Right to be Wrong?,,2017-03-20
10.1109/CSCloud/EdgeCom.2019.000-4,Optimum Interval for Application-level Checkpoints,,2018-03-20
10.1109/IPDPSW.2015.33,Scheduling Computational Workflows on Failure-Prone Platforms,,2011-03-20
10.1109/MASCOTS.2015.31,A Product-Form Model for the Analysis of Systems with Aging Objects,,2017-03-20
10.1016/J.SIMPAT.2019.101951,Optimum checkpoints for programs with loops,,2011-03-20
10.1007/s11227-018-2621-1,On the modelling of optimal coordinated checkpoint period in supercomputers,,2018-03-20
10.1007/11569596_98,Erol Gelenbe's Career and Contributions,,2014-03-20
10.1109/MASCOTS50786.2020.9285959,Optimum Checkpoints for Time and Energy,,2017-03-20
10.1007/978-3-319-95189-8_13,Static Analysis-Based Approaches for Secure Software Development,,2017-03-20
10.1051/ITA/2019002,On the length of uncompletable words in unambiguous automata,,2017-03-20
10.1016/j.tcs.2015.08.042,On incomplete and synchronizing finite sets,,2013-03-20
10.1007/978-3-642-14455-4_8,On a Conjecture by Carpi and D'Alessandro,,2014-03-20
10.1142/S0129054111008039,A Quadratic Upper Bound on the Size of a Synchronizing Word in One-Cluster Automata,,2019-03-20
10.13140/RG.2.2.12464.66566,Matrix approach to synchronizing automata,,2020-03-20
10.1007/978-3-642-14455-4_36,Automata with Extremal Minimality Conditions,,2017-03-20
10.1142/S012905411100888X,On a Conjecture by carpi and d'alessandro,,2020-03-20
10.1016/J.AAM.2012.07.003,Independent sets of words and the synchronization problem,,2017-03-20
10.13140/RG.2.2.20208.66561,The length of a minimal synchronizing word and the Černy conjecture,,2014-03-20
10.1007/978-3-642-02737-6_6,A Quadratic Upper Bound on the Size of a Synchronizing Word in One-Cluster Automata,,2018-03-20
10.1007/978-3-662-53132-7_31,An Extremal Series of Eulerian Synchronizing Automata,,2014-03-20
10.1007/978-3-030-24886-4_5,Words of Minimum Rank in Deterministic Finite Automata,,2017-03-20
10.1007/978-3-642-14455-4_13,On the Hybrid Cerný-Road Coloring Problem and Hamiltonian Paths,,2012-03-20
10.1007/978-3-319-98654-8_31,Dynamics of the Independence Number and Automata Synchronization,,2018-03-20
10.1007/3-540-47813-2_17,Weak Muller Acceptance Conditions for Tree Automata,,2015-03-20
10.1016/S1571-0661(04)80884-3,A Model of Finite Automata on Timed omega-Trees,,2015-03-20
10.1016/j.tcs.2014.11.019,Parametric metric interval temporal logic,,2011-03-20
10.1007/978-3-540-31982-5_16,Alternating Timed Automata,,2016-03-20
10.1007/3-540-45610-4_9,Decidability and Closure Properties of Equational Tree Languages,,2012-03-20
10.1016/S0304-3975(02)00611-4,Finite automata on timed omega-trees,,2020-03-20
10.1145/1342991.1342994,Alternating timed automata,,2019-03-20
10.1109/LICS.2002.1029826,Dense Real-Time Games,,2017-03-20
10.1007/3-540-44450-5_11,A Decidable Dense Branching-Time Temporal Logic,,2017-03-20
10.1007/978-3-319-10575-8_29,Model Checking Real-Time Systems,,2017-03-20
10.1007/978-3-642-02930-1_23,Weak Alternating Timed Automata,,2012-03-20
10.1016/j.tcs.2013.08.021,Automata-theoretic decision of timed games,,2018-03-20
10.14232/actacyb.22.2.2015.8,A Novel Cryptosystem Based on Gluskov Product of Automata,,2016-03-20
10.1142/S0219878910002051,Local Descriptor Matching with Support Vector Machines,,2020-03-20
10.1109/PacificVis.2012.6183557,Topological analysis and visualization of cyclical behavior in memory reference traces,,2012-03-20
10.1016/J.OCEANENG.2009.01.019,Second-order wave maker theory using force-feedback control. Part I: A new theory for regular wave generation,,2016-03-20
10.1145/778553.778554,Flexible reference trace reduction for VM simulations,,2017-03-20
10.2991/AMEII-15.2015.163,An improved adaptive policy Based on Recency and Frequecy,,2019-03-20
10.1145/1029873.1029887,General adaptive replacement policies,,2013-03-20
10.1016/j.peva.2005.01.007,A page fault equation for modeling the effect of memory size,,2012-03-20
10.1016/S0166-5316(02)00226-2,The EELRU adaptive replacement algorithm,,2015-03-20
10.1017/cbo9781139939690,Workload Modeling for Computer Systems Performance Evaluation,,2011-03-20
10.1109/ICCACS.2015.7361347,An improved cluster protocol design method for low energy uneven wireless sensor network,,2016-03-20
10.12677/SA.2017.62026,基于二维Markov链和中继聚合方法的多跳ARQ系统吞吐量的分析 Throughput Analysis of Multi-Hop ARQ System Based on Two-Dimensional Markov Chain and Relay Aggregation,,2015-03-20
10.1109/ESTC.2012.6485705,An improved cluster protocol design method for low energy uneven wireless sensor network,,2014-03-20
10.1002/9781118867464.CH4,Cooperation for Next Generation Wireless Networks,,2020-03-20
10.2991/ICMRA-15.2015.127,Performance Analysis of Double Channel SW-ARQ System,,2019-03-20
10.12677/CSA.2017.712133,无线传感器网络中基于簇间切换的CARQ协议中断概率及能效分析Outage Probability and Energy Efficiency Analyses of Cooperative ARQ Protocol Based on Inter-Cluster Switching in Wireless Sensor Networks,,2014-03-20
10.1109/IAEAC.2018.8577810,Energy Efficiency of CARQ Broadcast Protocol,,2011-03-20
10.1007/s11042-016-3598-5,Delay analysis of MSW-ARQ system based on wireless multimedia services,,2017-03-20
10.1177/0954405415619871,Tool condition monitoring system based on support vector machine and differential evolution optimization,,2016-03-20
10.1109/ITAIC.2019.8785539,Performance Comparison and Analysis of Wireless Communication Network based on MAC Protocols,,2018-03-20
10.1109/ICET.2016.7813214,Formalizing the resurrecting duckling into hierarchical coloured Petri nets,,2015-03-20
10.2200/S00710ED2V01Y201603DTM044,Instant Recovery with Write-Ahead Logging: Page Repair  System Restart  Media Restore  and System Failover  Second Edition,,2020-03-20
10.1145/301970.301973,The string B-tree: a new data structure for string search in external memory and its applications,,2015-03-20
10.1007/978-3-540-24571-1_3,Index Clustering for High-Performance Sequential Index Access,,2017-03-20
10.1007/s13222-015-0204-3,Instant recovery with write-ahead logging,,2015-03-20
10.1007/978-981-10-3023-9_16,The SP-tree: A Clustered Index Structure for Efficient Sequential Access,,2018-03-20
10.1145/1099554.1099699,Kalchas: a dynamic XML search engine,,2017-03-20
10.1007/s00778-005-0171-7,The partitioned exponential file for database storage management,,2011-03-20
10.1109/TKDE.2005.126,Finding patterns on protein surfaces: algorithms and applications to protein classification,,2020-03-20
10.1145/1538788.1538805,The five-minute rule 20 years later (and how flash memory changes the rules),,2015-03-20
10.2200/S00617ED1V01Y201411DTM039,Instant Recovery with Write-Ahead Logging: Page Repair  System Restart  and Media Restore,,2019-03-20
10.1145/1276301.1276302,Efficient columnar storage in B-trees,,2019-03-20
10.1007/978-3-642-15364-8_31,Optimization of Disk Accesses for Multidimensional Range Queries,,2019-03-20
10.1007/11602613_33,ISB-Tree: A New Indexing Scheme with Efficient Expected Behaviour,,2013-03-20
10.14778/2733085.2733094,BF-Tree: Approximate Tree Indexing,,2017-03-20
10.1016/B978-012088469-8.50060-7,Write-Optimized B-Trees,,2018-03-20
10.1145/2513591.2513656,On the efficiency of multiple range query processing in multidimensional data structures,,2013-03-20
10.1007/978-3-030-26636-3_4,Graph Pattern Index for Neo4j Graph Databases,,2012-03-20
10.5441/002/edbt.2017.80,Multi-model Data Management: What's New and What's Next?,,2013-03-20
10.1145/1413254.1413264,The Five-Minute Rule 20 Years Later: and How Flash Memory Changes the Rules,,2017-03-20
10.1145/1363189.1363198,The five-minute rule twenty years later  and how flash memory changes the rules,,2016-03-20
10.1145/3323214,Multi-model Databases,,2018-03-20
10.5220/0006826903130321,Indexing Patterns in Graph Databases,,2018-03-20
10.1145/3282373.3282374,Graph Patterns Indexes: their Storage and Retrieval,,2013-03-20
10.1145/1140402.1140409,B-tree indexes  interpolation search  and skew,,2017-03-20
10.1109/ICDEW.2011.5767655,‘Pause and resume’ functionality for index operations,,2013-03-20
10.1016/j.jda.2010.08.001,ISB-tree: A new indexing scheme with efficient expected behaviour,,2013-03-20
10.1145/2566620,Specialization Slicing,,2013-03-20
10.1145/1953355.1953369,Effective false positive filtering for evolving software,,2016-03-20
10.1145/1050849.1050865,A brief survey of program slicing,,2013-03-20
10.1145/1107656.1107659,Textual and behavioral views of function changes,,2020-03-20
10.32614/rj-2020-017,SimilaR: R Code Clone and Plagiarism Detection,,2012-03-20
10.1016/S0950-5849(98)00084-6,Program slicing,,2015-03-20
10.1016/B978-0-12-408094-2.00002-3,Regression Testing of Evolving Programs,,2013-03-20
10.1137/1.9781611976489.9,Parallel In-Place Algorithms: Theory and Practice,,2020-03-20
10.1007/s00165-009-0130-y,Proving linearizability with temporal logic,,2012-03-20
10.1109/ACSD.2009.10,Formal Verification of Lock-Free Algorithms,,2012-03-20
10.1007/BF00290731,A maximum entropy analysis of the M/G/1 and G/M/1 queueing systems at equilibrium,,2016-03-20
10.1007/978-3-642-39998-5_13,On the Complexity of Free Word Orders,,2012-03-20
10.1007/978-3-642-23740-9_8,A Secured Collaborative Model for Data Integration in Life Sciences,,2018-03-20
10.1016/j.datak.2004.08.002,Checking query containment with the CQC method,,2011-03-20
10.1109/GCIS.2009.289,Multi-Relational Data Mining Based on Higher-Order Inductive Logic Programming,,2020-03-20
10.17077/ETD.57XKY8I6,Beyond relational: a database architecture and federated query optimization in a multi-modal healthcare environment,,2019-03-20
10.1117/12.243204,Very fast SAR detection,,2011-03-20
10.1109/SEFM.2005.1,A case study of C source code verification: the Schorr-Waite algorithm,,2016-03-20
10.1007/978-3-642-20551-4_5,Verification of the Schorr-Waite Algorithm - From Trees to Graphs,,2018-03-20
10.1007/11823230_17,Automated Verification of the Deutsch-Schorr-Waite Tree-Traversal Algorithm,,2013-03-20
10.1007/s11704-008-0033-8,Automated verification of pointer programs in pointer logic,,2016-03-20
10.1007/978-3-319-11737-9_10,Pointer Program Derivation Using Coq: Graphs and Schorr-Waite Algorithm,,2013-03-20
